rule_files:
- "/etc/prometheus/rules-cm/*.yml"
- "/etc/prometheus/rules-init/*.yml"
global:
  scrape_interval: 15s

alerting:
  alertmanagers:
  - scheme: http
    static_configs:
    - targets: ["alertmanager"]

scrape_configs:
- job_name: 'kube-apiserver'
  scheme: https
  kubernetes_sd_configs:
  - role: pod
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

  relabel_configs:
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_label_component]
    action: keep
    regex: kube-system;kube-apiserver
  - source_labels: [__address__]
    regex: '(.*)'
    replacement: '${1}:6443'
    target_label: __address__

- job_name: 'kube-controller-manager'
  scheme: https
  kubernetes_sd_configs:
  - role: pod
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    # certificates from components aren't valid
    insecure_skip_verify: true

  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

  relabel_configs:
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_label_component]
    action: keep
    regex: kube-system;kube-controller-manager
  - source_labels: [__address__]
    regex: '(.*)'
    replacement: '${1}:10257'
    target_label: __address__

- job_name: 'kube-scheduler'
  scheme: https
  kubernetes_sd_configs:
  - role: pod
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    # certificates from components aren't valid
    insecure_skip_verify: true
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

  relabel_configs:
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_label_component]
    action: keep
    regex: kube-system;kube-scheduler
  - source_labels: [__address__]
    regex: '(.*)'
    replacement: '${1}:10259'
    target_label: __address__


# Kubelet metrics
- job_name: 'kubelet'
  scheme: https
  kubernetes_sd_configs:
  - role: node

  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

  relabel_configs:
  - action: labeldrop
    regex: "__meta_kubernetes_node_label_6shore_net(.*)"
  - action: labelmap
    regex: __meta_kubernetes_node_label_(.+)
  - target_label: __address__
    replacement: kubernetes.default.svc:443
  - source_labels: [__meta_kubernetes_node_name]
    regex: (.+)
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}/proxy/metrics

# Cadvisor metrics via Kubelet
- job_name: 'cadvisor'
  scheme: https
  kubernetes_sd_configs:
  - role: node

  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

  relabel_configs:
  - action: labeldrop
    regex: "__meta_kubernetes_node_label_6shore_net(.*)"
  - action: labelmap
    regex: __meta_kubernetes_node_label_(.+)
  - target_label: __address__
    replacement: kubernetes.default.svc:443
  - source_labels: [__meta_kubernetes_node_name]
    regex: (.+)
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

# Node exporters
- job_name: 'node-exporter'
  scheme: http
  kubernetes_sd_configs:
  - role: node

  relabel_configs:
  - action: labeldrop
    regex: "__meta_kubernetes_node_label_6shore_net(.*)"
  - action: labelmap
    regex: __meta_kubernetes_node_label_(.+)
  - source_labels: [__meta_kubernetes_role]
    action: replace
    target_label: kubernetes_role
  - source_labels: [__address__]
    regex: '(.*):10250'
    replacement: '${1}:9100'
    target_label: __address__
  - source_labels: [__meta_kubernetes_node_label_kubernetes_io_hostname]
    regex: '(.*)'
    replacement: '${1}:9100'
    target_label: instance
  # set "name" value to "job"
  #- source_labels: [job]
  #  regex: 'kubernetes-(.*)'
  #  replacement: '${1}'
  #  target_label: name

# Pod are scraped directly only when prometheus.io/scrape: "pod"
- job_name: 'pod'
  kubernetes_sd_configs:
  - role: pod
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
    action: keep
    regex: pod
  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
    action: replace
    target_label: __metrics_path__
    regex: (.+)
  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
    action: replace
    regex: ([^:]+)(?::\d+)?;(\d+)
    replacement: $1:$2
    target_label: __address__
  - action: labelmap
    regex: __meta_kubernetes_pod_label_(.+)
  - source_labels: [__meta_kubernetes_namespace]
    action: replace
    target_label: kubernetes_namespace
  - source_labels: [__meta_kubernetes_pod_name]
    action: replace
    target_label: kubernetes_pod_name


- job_name: 'endpoint'
  kubernetes_sd_configs:
  - role: endpoints
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    action: keep
    regex: pod
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    action: replace
    target_label: __scheme__
    regex: (https?)
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    action: replace
    target_label: __metrics_path__
    regex: (.+)
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    action: replace
    target_label: __address__
    regex: ([^:]+)(?::\d+)?;(\d+)
    replacement: $1:$2
  - action: labelmap
    regex: __meta_kubernetes_service_label_(.+)
  - source_labels: [__meta_kubernetes_namespace]
    action: replace
    target_label: kubernetes_namespace
  - source_labels: [__meta_kubernetes_service_name]
    action: replace
    target_label: kubernetes_name

- job_name: 'service'
  kubernetes_sd_configs:
  - role: service
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    action: keep
    regex: "true"
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    action: replace
    target_label: __scheme__
    regex: (https?)
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    action: replace
    target_label: __metrics_path__
    regex: (.+)
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    action: replace
    target_label: __address__
    regex: ([^:]+)(?::\d+)?;(\d+)
    replacement: $1:$2
  - action: labelmap
    regex: __meta_kubernetes_service_label_(.+)
  - source_labels: [__meta_kubernetes_namespace]
    action: replace
    target_label: kubernetes_namespace
  - source_labels: [__meta_kubernetes_service_name]
    action: replace
    target_label: kubernetes_name


- job_name: 'service-probe'
  params:
    module: [http_2xx]

  kubernetes_sd_configs:
  - role: service

  relabel_configs:
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]
    action: keep
    regex: "true"
  - source_labels: [__address__]
    target_label: __param_target
  - target_label: __address__
    replacement: blackbox-exporter.prometheus.svc:9115
  - source_labels: [__param_target]
    target_label: instance
  - action: labelmap
    regex: __meta_kubernetes_service_label_(.+)
  - source_labels: [__meta_kubernetes_namespace]
    target_label: kubernetes_namespace
  - source_labels: [__meta_kubernetes_service_name]
    target_label: kubernetes_name

- job_name: 'kube-state-metrics'
  kubernetes_sd_configs:
  - role: service
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
    action: keep
    regex: kube-state-metrics
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    action: replace
    target_label: __address__
    regex: ([^:]+)(?::\d+)?;(\d+)
    replacement: $1:$2
  - action: labelmap
    regex: __meta_kubernetes_service_label_(.+)
  - source_labels: [__meta_kubernetes_namespace]
    action: replace
    target_label: kubernetes_namespace
  - source_labels: [__meta_kubernetes_service_name]
    action: replace
    target_label: kubernetes_name


#- job_name: blackbox-http
#  params:
#    module:
#    - http_2xx
#  metrics_path: /probe
#  scrape_timeout: 5s
#  static_configs:
#  - targets:
#    - https://www.datascript.cz
#    - https://www.kubernetes.io
#
#  relabel_configs:
#  - source_labels: [__address__]
#    target_label: __param_target
#    action: replace
#  - source_labels: [__param_target]
#    target_label: instance
#    action: replace
#  - source_labels: [__param_module]
#    target_label: module
#    action: replace
#  - target_label: __address__
#    replacement: blackbox-exporter
#    action: replace


#- job_name: blackbox-icmp
#  params:
#    module:
#    - icmp
#  metrics_path: /probe
#  scrape_timeout: 5s
#  static_configs:
#  - targets:
#    - seznam.cz
#
#  relabel_configs:
#  - source_labels: [__address__]
#    target_label: __param_target
#    action: replace
#  - source_labels: [__param_target]
#    target_label: instance
#    action: replace
#  - source_labels: [__param_module]
#    target_label: module
#    action: replace
#  - target_label: __address__
#    replacement: blackbox-exporter
#    action: replace
