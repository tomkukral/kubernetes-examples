apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: scripts-bash-
spec:
  serviceAccountName: argo
  entrypoint: bash-script-example
  templates:
  - name: bash-script-example
    steps:
    - - name: generate-bash
        template: gen-random-int-bash
      - name: generate-python
        template: gen-random-int-python
      - name: generate-javascript
        template: gen-random-int-javascript

    - - name: delay
        template: delay
        arguments:
          parameters:
          - name: delay
            value: "5"

    - - name: print
        template: print-message
        arguments:
          parameters:
          - name: message
            value: |
              Bash {{steps.generate-bash.outputs.result}}
              Python {{steps.generate-python.outputs.result}}
              Javascript {{steps.generate-javascript.outputs.result}}

  - name: gen-random-int-bash
    script:
      image: docker.io/debian:9.4
      command: [bash]
      source: |
        cat /dev/urandom | od -N2 -An -i | awk -v f=1 -v r=100 '{printf "%i\n", f + r * $1 / 65536}'

  - name: gen-random-int-python
    script:
      image: docker.io/python:alpine3.6
      command: [python]
      source: |
        import random
        i = random.randint(1, 100)
        print(i)

  - name: gen-random-int-javascript
    script:
      image: docker.io/node:9.1-alpine
      command: [node]
      source: |
        var rand = Math.floor(Math.random() * 100);
        console.log(rand);

  - name: print-message
    inputs:
      parameters:
      - name: message
    container:
      image: docker.io/alpine:latest
      command: [sh, -c]
      args: ["echo result was: \"{{inputs.parameters.message}}\""]

  - name: delay
    inputs:
      parameters:
      - name: delay
    suspend:
      duration: "{{ inputs.parameters.delay }}"
