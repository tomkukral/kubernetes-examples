#---
#apiVersion: policy/v1beta1
#kind: PodSecurityPolicy
#metadata:
#  name: promtail
#  labels:
#    app: promtail
#spec:
#  allowPrivilegeEscalation: false
#  fsGroup:
#    rule: RunAsAny
#  hostIPC: false
#  hostNetwork: false
#  hostPID: false
#  privileged: false
#  readOnlyRootFilesystem: true
#  requiredDropCapabilities:
#  - ALL
#  runAsUser:
#    rule: RunAsAny
#  seLinux:
#    rule: RunAsAny
#  supplementalGroups:
#    rule: RunAsAny
#  volumes:
#  - secret
#  - configMap
#  - hostPath
#  - projected
#  - downwardAPI
#  - emptyDir
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: promtail
  name: promtail
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app: promtail
  name: promtail-clusterrole
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "watch", "list"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: promtail-clusterrolebinding
  labels:
    app: promtail
subjects:
- kind: ServiceAccount
  name: promtail
roleRef:
  kind: ClusterRole
  name: promtail-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
#apiVersion: rbac.authorization.k8s.io/v1
#kind: Role
#metadata:
#  name: promtail
#  labels:
#    app: promtail
#rules:
#- apiGroups:      ['extensions']
#  resources:      ['podsecuritypolicies']
#  verbs:          ['use']
#  resourceNames:  [promtail]
#---
#apiVersion: rbac.authorization.k8s.io/v1
#kind: RoleBinding
#metadata:
#  name: promtail
#  labels:
#    app: promtail
#roleRef:
#  apiGroup: rbac.authorization.k8s.io
#  kind: Role
#  name: promtail
#subjects:
#- kind: ServiceAccount
#  name: promtail
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: promtail
  labels:
    app: promtail
  annotations: {}
spec:
  selector:
    matchLabels:
      app: promtail
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 100%
  template:
    metadata:
      labels:
        app: promtail
      annotations:
        prometheus.io/port: "3101"
        prometheus.io/scrape: "pod"
    spec:
      serviceAccountName: promtail
      containers:
        - name: promtail
          image: docker.io/grafana/promtail:2.1.0
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/promtail/config.yml
            - -client.url=http://loki:3100/loki/api/v1/push
            - -config.expand-env
          volumeMounts:
            - name: config
              mountPath: /etc/promtail
            - name: run
              mountPath: /run/promtail
            - mountPath: /var/log/pods
              name: pods
              readOnly: true
            - mountPath: /var/log/journal
              name: log-journal
              readOnly: true
            - mountPath: /run/log/journal
              name: run-journal
              readOnly: true
            - mountPath: /etc/machine-id
              name: machine-id
              readOnly: true
            - mountPath: /var/log/kubernetes-audit/
              name: kubernetes-audit
              readOnly: true
          env:
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          ports:
            - containerPort: 3101
              name: http-metrics
          securityContext:
            readOnlyRootFilesystem: true
            runAsGroup: 0
            runAsUser: 0
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
      nodeSelector: {}
      affinity: {}
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
      volumes:
        - name: config
          configMap:
            name: promtail
        - name: run
          hostPath:
            path: /run/promtail
        - hostPath:
            path: /var/log/pods
          name: pods
        - hostPath:
            path: /var/log/journal
          name: log-journal
        - hostPath:
            path: /run/log/journal
          name: run-journal
        - hostPath:
            path: /etc/machine-id
          name: machine-id
        - hostPath:
            path: /var/log/kubernetes-audit/
          name: kubernetes-audit
