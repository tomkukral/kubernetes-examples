---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: loki
  annotations: {}
  name: loki
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: loki
  labels:
    app: loki
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: loki
subjects:
- kind: ServiceAccount
  name: loki
---
apiVersion: v1
kind: Service
metadata:
  name: loki-headless
  labels:
    app: loki
spec:
  clusterIP: None
  ports:
    - port: 3100
      protocol: TCP
      name: http-metrics
      targetPort: http-metrics
  selector:
    app: loki
---
apiVersion: v1
kind: Service
metadata:
  name: loki
  labels:
    app: loki
  annotations:
    prometheus.io/scrape: "pod"
spec:
  type: ClusterIP
  ports:
    - port: 3100
      protocol: TCP
      name: http-metrics
      targetPort: http-metrics
  selector:
    app: loki
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: loki
  labels:
    app: loki
  annotations: {}
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app: loki
  serviceName: loki-headless
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: loki
        name: loki
        release: loki
    spec:
      serviceAccountName: loki
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      initContainers: []
      containers:
        - name: loki
          image: docker.io/grafana/loki:3.3.0
          imagePullPolicy: IfNotPresent
          args:
            - "-config.file=/etc/loki/config.yml"
          volumeMounts:
            - name: config
              mountPath: /etc/loki
            - name: storage
              mountPath: "/data"
          ports:
            - name: http-metrics
              containerPort: 3100
              protocol: TCP
          startupProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 30
          livenessProbe:
            httpGet:
              path: /ready
              port: http-metrics
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
          resources: {}
          securityContext:
            readOnlyRootFilesystem: true
      nodeSelector: {}
      affinity: {}
      tolerations: []
      terminationGracePeriodSeconds: 4800
      volumes:
        - name: config
          configMap:
            name: loki
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations: {}
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: "20Gi"
