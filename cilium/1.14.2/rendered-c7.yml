---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9XcVFRMzFBZGRSZkpmSE95WTZXdnd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3T1ZvWERUSTJNVEV5TVRJeApOVFV3T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFueXFhZVlPbWhSa1RJTUdER3ZRanl1VGRrcUgxaFRmRXlZb2I1U2p2MS94L2NCazEKM3lncGxZQUZLSGhsU0R2YWtwL2xCT0ZtM0dQVDU3MStHdjlkeGtvcHRzUjRXbzRsTlZDRlE0RXJlVDBYYUM0QgpoZTVYL3pVc3haVkxMeGJJbSs0bVFENGxVZGJaRDZmRHBCQ2c2UDVUd3hhbDI4S1N1TEhubEVxMThuenlrMjV4CkdZa0lWYm90eTNmUWdCUE05QlBBc1ZqRjArQ0NheU5ONlNkSHRvOTg4cEUwR2xOZ0ZpTU5HZEZ6Q3VXem5uVjYKMHZPYmxhcHBoeHBxaTk2aGZVcTVKelJhVC9acEFpcU5qQ0FTdmpqYUROVUpLeUxIemJ1VEZXT1Vib1YzZzgvegpPeUFCbFlPcjJjaHVXQmJ1d2U4RFpmWTV5NkhkaU9KZmNLMHkvd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRm1CdHZOaE1tM0FBRzFGd1JqNXI5bjNkSVltTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQi9CWjVZcUwzbXRsRUVjNlJSOEkrcEo1VXcvRFI1OUpCTkpjY24xNW9mMjBTa0ZBeG9PU1JRCklhNUg2eUhwY1BLLzFjSFA5Z2g2TisySExpb21sT2pmZnhHNUQzdHJFZTlYZWg5eHgvK1ZZUk5OeW5HS3RMVXUKdDRCVWt5WFk1TFp6OCtjNEliNTE0SVZiR3RFT001MTk5VkR0ZUEyUnViZnEzZWtnYjVHdUdrRFplUUZVNjZLMQoreFBmTFVJeHVSd1NpdGtYMnErSWJXVkVQYWREMXZrYVA0REJNSHV4WGZZTWY0em5wcmZET1VjY2puN1hYNENUCkMxeStBNGdzV1ZuUmNpV1pKOUxOWlplNWgvT0QwV2QyTmhoL2Q1bDVGSCtnVzVOaWU5Mng2d1hzK3RhVlpyZGcKRXZjWmR0Zlpyclc1c1dEbm9zZVpKQ1pNakQzRFE3UGEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBbnlxYWVZT21oUmtUSU1HREd2UWp5dVRka3FIMWhUZkV5WW9iNVNqdjEveC9jQmsxCjN5Z3BsWUFGS0hobFNEdmFrcC9sQk9GbTNHUFQ1NzErR3Y5ZHhrb3B0c1I0V280bE5WQ0ZRNEVyZVQwWGFDNEIKaGU1WC96VXN4WlZMTHhiSW0rNG1RRDRsVWRiWkQ2ZkRwQkNnNlA1VHd4YWwyOEtTdUxIbmxFcTE4bnp5azI1eApHWWtJVmJvdHkzZlFnQlBNOUJQQXNWakYwK0NDYXlOTjZTZEh0bzk4OHBFMEdsTmdGaU1OR2RGekN1V3publY2CjB2T2JsYXBwaHhwcWk5NmhmVXE1SnpSYVQvWnBBaXFOakNBU3ZqamFETlVKS3lMSHpidVRGV09VYm9WM2c4L3oKT3lBQmxZT3IyY2h1V0JidXdlOERaZlk1eTZIZGlPSmZjSzB5L3dJREFRQUJBb0lCQUVQRmZ5cllYSkgxb0VobApQUzYvMzNHbnk1U0E4NnE2bVViN1VHOWQ0K29DY0R6Sjd6OUt1WklYaFpxNjBOMVY1dlpoc01GSVBHVUErSnlHCitlZ0M3ZW5kY0MrTExuZllhSTF2OEo1U3BMRWx5dzZuOEN3WDFVNHNWUmo0UGFBYVFtYnFtMHpsYVR5VWo2M3oKMEFET3Q4VWRiWXIyM0w1YTllQkFtQXR6V0UrY0tqZnpYc2kvdGJ1V2QyL3NmOVhpamd2NGF6bnlyYVRIOERMUQo1cnJHZjlvN1ZCc2VIWW13MFdRVFNwdkpIeVMrWjlEaGs1SkhFdHdyOTJldyt1cDFjeTZEanNlcnFRb2huSzU1Ck43ZTVOUHpOVlovU09vQUEvL2FXTUlWakx4ZUcwTDNhd1JnNzlrV1Y1dGVrS3dJZTQzdHBldGdzMGdmdnpSS20KUVd1dmsxRUNnWUVBeFdSOXNOMS9ZaDkrUThTT092MGlleWIvN0pGb1FyTndHbUpISWx1NUQxNW5VYUJnUy9YMQpQSTlub2hIZ25wMERES1FtMWt1RTNtTFJyL0tFZkVNY0dyTHYxajZoR3gxcUwvZC94aWtNalJUcm8zMmlmeEx0ClNwSkY3ZktxMUhrOGptSkJCNzlJVkZDVDhlRnIzSk9OVjJBbjFrNGRZUE01VjB3OWxGNGFRRGNDZ1lFQXpteWEKUUhuK2hxYU85MHhWSWdIczQ1M2gyTkdIeEhXbytTMnUrVjFVU2VXTGNCTnl1Vi8zdy9yeEhjYTAvMnQxV1NsUgovSzdrcEU2dW1oU0JFRWRxeDlwSWtDOUJ0ZzYzcFI2Y3Zhd2NiR3h5bDl0eG1UTzFQTGwvMzRFZjZvSjkyZXgwCmFGTE1MVnhQWmVLNFZ3aUNLZjl1NjRuK0tqaUdrYTZRTUJaN2Iza0NnWUFTT0JsRjF0dm9FYUlVM1RLSGpVKysKY0RZVS9zTFJ6VUFlbjAyVGhVWEtmbHNvOUpXT3pVL3FYQTRqcm1TK0h4M2w3OHpKNE1TTnhpODJmenJ0UVVCNQowbVJDc1JzcnBvWmprUU9SSmI3TDBzK0JFcHFLQWhRMjJ0TnJpQWR1ZnhZd3lpN1lhVFppMmVFZDVVR1FaV29aClUzMjUwUkh6SGVBQUI4QnpUbEE3OXdLQmdBUEYvSFBkUndmVEY1M3hxVVM3NEVhdzVpWCtmb3JhMDhIcVVkNkIKRkQ5ZGtOVDFwZzA1Y2VBRlFFOFpDTW42ZnVTb1dyVlJ4U0F6eUFGTkNxYnZoMFlyK1ZPWmFZd1liTWI1N2tlUgpVOXV2aDlDNjFETEd2VE5rK0s5dlB0UWNtb3hYUkRGOEFmdDZTb0ZFU2JaZGszT05GY3Y4YzhiMXpZL3dMdmFTCkVxT1JBb0dBZVZ1ZktaMUc3eXlpVHJpbWdPSE0yNmU0SSsvVW4rWFNQSTZ6ejVMd2Fvdlpmc3RVTjF0S3UybDMKYVFQN3QxZ2xtMWFoejF1ditqNkpTMy9nVTlDZkwrZGQ4K3Z5bGllV2xWMWk5amtZRk5CYUIwdTR3SE9FWit1ZQo3Y1pOZU5YTTdDd1FsRHArRUlCQ3hiOFI5MkNUN3U1OExkL21UYmZXOGYzNHU0c29zM1E9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/admin-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9XcVFRMzFBZGRSZkpmSE95WTZXdnd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3T1ZvWERUSTJNVEV5TVRJeApOVFV3T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFueXFhZVlPbWhSa1RJTUdER3ZRanl1VGRrcUgxaFRmRXlZb2I1U2p2MS94L2NCazEKM3lncGxZQUZLSGhsU0R2YWtwL2xCT0ZtM0dQVDU3MStHdjlkeGtvcHRzUjRXbzRsTlZDRlE0RXJlVDBYYUM0QgpoZTVYL3pVc3haVkxMeGJJbSs0bVFENGxVZGJaRDZmRHBCQ2c2UDVUd3hhbDI4S1N1TEhubEVxMThuenlrMjV4CkdZa0lWYm90eTNmUWdCUE05QlBBc1ZqRjArQ0NheU5ONlNkSHRvOTg4cEUwR2xOZ0ZpTU5HZEZ6Q3VXem5uVjYKMHZPYmxhcHBoeHBxaTk2aGZVcTVKelJhVC9acEFpcU5qQ0FTdmpqYUROVUpLeUxIemJ1VEZXT1Vib1YzZzgvegpPeUFCbFlPcjJjaHVXQmJ1d2U4RFpmWTV5NkhkaU9KZmNLMHkvd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRm1CdHZOaE1tM0FBRzFGd1JqNXI5bjNkSVltTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQi9CWjVZcUwzbXRsRUVjNlJSOEkrcEo1VXcvRFI1OUpCTkpjY24xNW9mMjBTa0ZBeG9PU1JRCklhNUg2eUhwY1BLLzFjSFA5Z2g2TisySExpb21sT2pmZnhHNUQzdHJFZTlYZWg5eHgvK1ZZUk5OeW5HS3RMVXUKdDRCVWt5WFk1TFp6OCtjNEliNTE0SVZiR3RFT001MTk5VkR0ZUEyUnViZnEzZWtnYjVHdUdrRFplUUZVNjZLMQoreFBmTFVJeHVSd1NpdGtYMnErSWJXVkVQYWREMXZrYVA0REJNSHV4WGZZTWY0em5wcmZET1VjY2puN1hYNENUCkMxeStBNGdzV1ZuUmNpV1pKOUxOWlplNWgvT0QwV2QyTmhoL2Q1bDVGSCtnVzVOaWU5Mng2d1hzK3RhVlpyZGcKRXZjWmR0Zlpyclc1c1dEbm9zZVpKQ1pNakQzRFE3UGEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lSQUtKM1NLVnhPcFZYYU5BeVhQd1Ezbll3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4TUZvWERUSTJNVEV5TVRJeApOVFV4TUZvd0V6RVJNQThHQTFVRUF4TUlZV1J0YVc0dFl6Y3dnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2FPeCtiSi8vVXUzSExVbDdwVWhoMkVkeXJIS3ZnV0tlN1oySXV5ekFmZThydTNhTDAKSVduY2dZekZxTVFYbHlhak9zOHdPSThOZHZoc2s4UThDdVIvNjV3ME5BL0s1Lyt4NFJNNUhpcEhVTXlUdDRWRApJU0h5S3FEVkhDN3VkWFdXaUZpdi8xSzFsVG50cC9tYWh0eGxFcW9yZjF2bUVWM2VMMGwwVndhNlRubjlFWFlFCldmYWE1R0dXalBlZ1VoYUNDOXlTR0xKOUtJck8yMU12TDRsSXRxTU1KWld1aHZwZ3puSlNtb1pOM3c1UERWUkgKZDRxTUprRkdlaXg4NFEzcEFoSTM1WGFXVHh0cG4ydW54L3huRndYVmQ2UHFWaVVQMG9XZGd2ck56NkhXOERPOQowdnVqWU1mMW15MWxYMVlaS0YwZTY5SURyRUwzbENvR2xFUlBBZ01CQUFHamRqQjBNQTRHQTFVZER3RUIvd1FFCkF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXcKQURBZkJnTlZIU01FR0RBV2dCUlpnYmJ6WVRKdHdBQnRSY0VZK2EvWjkzU0dKakFVQmdOVkhSRUVEVEFMZ2dscwpiMk5oYkdodmMzUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBR3lOOUFxL2NlWm9sbXBUYmFQaXpIRGczZktLCmRQaTA1MXIzaHFEeGQ1MjBXS2lZU1I0MEVKWmlMa2ROWE1mQWFDak5PUmh2eFNjMngrQ1N0Z3A0QzFPbTJ2UnUKcDVLZW9NdDFsdWhLdlhld3lpUzJGbm1oVmxMWUZMc29UNHVaVXJkdktxZndBdStkbENEY2hiQlh4R3NuRVZkUQpLSUhqVHdQNEE1QzgvQTRieEVlVG5mNDhQWk5WSFJUWnc3M0MwSHRiQXJqNXlXWTJoS1B0M1E1YzlMSUcreTVLCmNrYVZRK0lrVVk3bmw0azlDQkl0TVM4cDgzbUZQRUYxY0J3R1hoZU9oZDVud2NWamZRK2puUDlocnpVMlpDSmYKdTBQRDJ6MEVKVUZPdzdjK2NZYTdVd0RLK3hHNUJxZkh1blkva0N2WWdLMDBMOEJ4ckI4MXRjUUpqcGc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBbWpzZm15Zi8xTHR4eTFKZTZWSVlkaEhjcXh5cjRGaW51MmRpTHNzd0gzdks3dDJpCjlDRnAzSUdNeGFqRUY1Y21venJQTURpUERYYjRiSlBFUEFya2YrdWNORFFQeXVmL3NlRVRPUjRxUjFETWs3ZUYKUXlFaDhpcWcxUnd1N25WMWxvaFlyLzlTdFpVNTdhZjVtb2JjWlJLcUszOWI1aEZkM2k5SmRGY0d1azU1L1JGMgpCRm4ybXVSaGxvejNvRklXZ2d2Y2toaXlmU2lLenR0VEx5K0pTTGFqRENXVnJvYjZZTTV5VXBxR1RkOE9UdzFVClIzZUtqQ1pCUm5vc2ZPRU42UUlTTitWMmxrOGJhWjlycDhmOFp4Y0YxWGVqNmxZbEQ5S0ZuWUw2emMraDF2QXoKdmRMN28yREg5WnN0WlY5V0dTaGRIdXZTQTZ4Qzk1UXFCcFJFVHdJREFRQUJBb0lCQVFDR0VVajdMYjBVcGxCWAo1dVY4T3BIcTZNSUN1R3lzRzBUTEFpWjErTWgvUmJQMUNoTGgxcjNZSVlGR1BOc2dpcExhcDM5OU1sMGYza0E2CjJnUm1FUzNxQ055REFKS04xamdOMzFJL2YzcE8vZXlucDRzZS9Ja3VvbUdtZnRaSkVTL0RTQWlZRFFGUHVVVmUKMG5xR0doOHhlUlVWdEtNbERnbWozMFVoN1poNmorMnlmcjU4c1BXSHJFVGN5SnNhRElaL2QzRTF1MDFMbmZWTQpIM1dmM2JqaTBFYWhPdHRYNVNObkhKblA5YjMyN0VtL21ra1FXT3l4UGV0TVhtSWtSdHpidlNyakhCNi9zT3V0ClhISkZpMHhlYXhGMXZRNlovSVZCbWdVa2hGNllkaHhSQjArbTNSelplTy96UjV6WjdwcHY0cTJIMUhKUVFlMVMKTDY5b3BEU2hBb0dCQU1xcWc1UHI5RktwLzlDaFBOUm1tSExaRDJ2ZXJTbHlwQzlzUVc3UEJmbW0rMlF4MTlYWgpPa2V0T0NzcGlQODhxWlpBd2dDL2FBOWdIRkV3WlhQWS9zU2ROdDNZWEtuN0R2WUJGaFovTVFjUTRjSUhkQWJXCm5BK2JVTTVCQVY5ajhiSHBBTE9Sa1k2M2tBdit2M0tTa3AwTmFva0s2MmQvbncyMEl2Y2RiaVIvQW9HQkFNTFIKa04zMzJPeXZxd2dHMzBpMmw2MmI3ODQwVStZQzBwMWFGak9oQ2xsZ2s3TC9tREdGREtoTEJPNDBwcEhQQUtFZApjVGZyWmN1Z1FGemVKazZqOWRaeHNGUmhYMHZiN2ZJN3J6OVdXdXhjRXlpUGUzc1N3RSthU0tTdHdqQ0x1VDBICi92dVppdkJSWjU3d1RkUDQyWjQyUXBlVDJlZVlFZC9Ydk9JVHZMZ3hBb0dCQUxaaFJuRjZtRzgvbnYrLzZmNzIKcU9CSnA5QWFIdGk2MnpmMkF0aFdJM2xzSkxVaENhdmZoY3YwL1NRU2g3K3hkcWZKZFF5NU0wc0s0ZERLYmJJWQpLQVVGdWRkZ210czVIRmlUMTYyOUhvRE9WMnVGeTR0UDNEZExQU2V2WmkzU3dqR3Bqa0VLa2VQT0d5cEFRVWM0CjBnblZoZmIzeGFwcE5kaGVNRTBUeGdlL0FvR0JBTDdHbTVkUjZ1STBVRWJHL0FabmovYlpXaWJTaFVvYmY0WEoKUHk2RngrMm9MbHErQXBxVGtNYUkyQ1l2OXVHWUZTU3hBVHJpVUVmc0FMc3dhOURjckpPM3R4V2FXTWlmY002aAo5Y1lQV1hCVjVnajFJTlZ2a2xVaFgzdXNFQnFiNk9URUhNVGpJZlNkc3R3b3MvNGNsWFpoNmlvbkJkN053c3N4CnAyeTRLVGt4QW9HQkFMd0pKK0gxRHhQakF4N1UvUDUzM3d3THFFdlowUEFlTzN1R3BkcEJ2TktSN2h5b2R0S1EKK0NZOEFFRkcwTHNnK3FJZHlwanJGVS9QQU1NZXB6dUozKzBETDgxRC96alNnc3EyVWxuditaeXQ4ZkVCMWNZVwphdCtqZFZLaVZaUzlxNDN2VXFDRlM3YXBIcnhTVkFxSytCV3F0U1NlUnpKSUJac3BhNUNJOFBhTgotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-ca-cert
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9XcVFRMzFBZGRSZkpmSE95WTZXdnd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3T1ZvWERUSTJNVEV5TVRJeApOVFV3T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFueXFhZVlPbWhSa1RJTUdER3ZRanl1VGRrcUgxaFRmRXlZb2I1U2p2MS94L2NCazEKM3lncGxZQUZLSGhsU0R2YWtwL2xCT0ZtM0dQVDU3MStHdjlkeGtvcHRzUjRXbzRsTlZDRlE0RXJlVDBYYUM0QgpoZTVYL3pVc3haVkxMeGJJbSs0bVFENGxVZGJaRDZmRHBCQ2c2UDVUd3hhbDI4S1N1TEhubEVxMThuenlrMjV4CkdZa0lWYm90eTNmUWdCUE05QlBBc1ZqRjArQ0NheU5ONlNkSHRvOTg4cEUwR2xOZ0ZpTU5HZEZ6Q3VXem5uVjYKMHZPYmxhcHBoeHBxaTk2aGZVcTVKelJhVC9acEFpcU5qQ0FTdmpqYUROVUpLeUxIemJ1VEZXT1Vib1YzZzgvegpPeUFCbFlPcjJjaHVXQmJ1d2U4RFpmWTV5NkhkaU9KZmNLMHkvd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRm1CdHZOaE1tM0FBRzFGd1JqNXI5bjNkSVltTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQi9CWjVZcUwzbXRsRUVjNlJSOEkrcEo1VXcvRFI1OUpCTkpjY24xNW9mMjBTa0ZBeG9PU1JRCklhNUg2eUhwY1BLLzFjSFA5Z2g2TisySExpb21sT2pmZnhHNUQzdHJFZTlYZWg5eHgvK1ZZUk5OeW5HS3RMVXUKdDRCVWt5WFk1TFp6OCtjNEliNTE0SVZiR3RFT001MTk5VkR0ZUEyUnViZnEzZWtnYjVHdUdrRFplUUZVNjZLMQoreFBmTFVJeHVSd1NpdGtYMnErSWJXVkVQYWREMXZrYVA0REJNSHV4WGZZTWY0em5wcmZET1VjY2puN1hYNENUCkMxeStBNGdzV1ZuUmNpV1pKOUxOWlplNWgvT0QwV2QyTmhoL2Q1bDVGSCtnVzVOaWU5Mng2d1hzK3RhVlpyZGcKRXZjWmR0Zlpyclc1c1dEbm9zZVpKQ1pNakQzRFE3UGEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBbnlxYWVZT21oUmtUSU1HREd2UWp5dVRka3FIMWhUZkV5WW9iNVNqdjEveC9jQmsxCjN5Z3BsWUFGS0hobFNEdmFrcC9sQk9GbTNHUFQ1NzErR3Y5ZHhrb3B0c1I0V280bE5WQ0ZRNEVyZVQwWGFDNEIKaGU1WC96VXN4WlZMTHhiSW0rNG1RRDRsVWRiWkQ2ZkRwQkNnNlA1VHd4YWwyOEtTdUxIbmxFcTE4bnp5azI1eApHWWtJVmJvdHkzZlFnQlBNOUJQQXNWakYwK0NDYXlOTjZTZEh0bzk4OHBFMEdsTmdGaU1OR2RGekN1V3publY2CjB2T2JsYXBwaHhwcWk5NmhmVXE1SnpSYVQvWnBBaXFOakNBU3ZqamFETlVKS3lMSHpidVRGV09VYm9WM2c4L3oKT3lBQmxZT3IyY2h1V0JidXdlOERaZlk1eTZIZGlPSmZjSzB5L3dJREFRQUJBb0lCQUVQRmZ5cllYSkgxb0VobApQUzYvMzNHbnk1U0E4NnE2bVViN1VHOWQ0K29DY0R6Sjd6OUt1WklYaFpxNjBOMVY1dlpoc01GSVBHVUErSnlHCitlZ0M3ZW5kY0MrTExuZllhSTF2OEo1U3BMRWx5dzZuOEN3WDFVNHNWUmo0UGFBYVFtYnFtMHpsYVR5VWo2M3oKMEFET3Q4VWRiWXIyM0w1YTllQkFtQXR6V0UrY0tqZnpYc2kvdGJ1V2QyL3NmOVhpamd2NGF6bnlyYVRIOERMUQo1cnJHZjlvN1ZCc2VIWW13MFdRVFNwdkpIeVMrWjlEaGs1SkhFdHdyOTJldyt1cDFjeTZEanNlcnFRb2huSzU1Ck43ZTVOUHpOVlovU09vQUEvL2FXTUlWakx4ZUcwTDNhd1JnNzlrV1Y1dGVrS3dJZTQzdHBldGdzMGdmdnpSS20KUVd1dmsxRUNnWUVBeFdSOXNOMS9ZaDkrUThTT092MGlleWIvN0pGb1FyTndHbUpISWx1NUQxNW5VYUJnUy9YMQpQSTlub2hIZ25wMERES1FtMWt1RTNtTFJyL0tFZkVNY0dyTHYxajZoR3gxcUwvZC94aWtNalJUcm8zMmlmeEx0ClNwSkY3ZktxMUhrOGptSkJCNzlJVkZDVDhlRnIzSk9OVjJBbjFrNGRZUE01VjB3OWxGNGFRRGNDZ1lFQXpteWEKUUhuK2hxYU85MHhWSWdIczQ1M2gyTkdIeEhXbytTMnUrVjFVU2VXTGNCTnl1Vi8zdy9yeEhjYTAvMnQxV1NsUgovSzdrcEU2dW1oU0JFRWRxeDlwSWtDOUJ0ZzYzcFI2Y3Zhd2NiR3h5bDl0eG1UTzFQTGwvMzRFZjZvSjkyZXgwCmFGTE1MVnhQWmVLNFZ3aUNLZjl1NjRuK0tqaUdrYTZRTUJaN2Iza0NnWUFTT0JsRjF0dm9FYUlVM1RLSGpVKysKY0RZVS9zTFJ6VUFlbjAyVGhVWEtmbHNvOUpXT3pVL3FYQTRqcm1TK0h4M2w3OHpKNE1TTnhpODJmenJ0UVVCNQowbVJDc1JzcnBvWmprUU9SSmI3TDBzK0JFcHFLQWhRMjJ0TnJpQWR1ZnhZd3lpN1lhVFppMmVFZDVVR1FaV29aClUzMjUwUkh6SGVBQUI4QnpUbEE3OXdLQmdBUEYvSFBkUndmVEY1M3hxVVM3NEVhdzVpWCtmb3JhMDhIcVVkNkIKRkQ5ZGtOVDFwZzA1Y2VBRlFFOFpDTW42ZnVTb1dyVlJ4U0F6eUFGTkNxYnZoMFlyK1ZPWmFZd1liTWI1N2tlUgpVOXV2aDlDNjFETEd2VE5rK0s5dlB0UWNtb3hYUkRGOEFmdDZTb0ZFU2JaZGszT05GY3Y4YzhiMXpZL3dMdmFTCkVxT1JBb0dBZVZ1ZktaMUc3eXlpVHJpbWdPSE0yNmU0SSsvVW4rWFNQSTZ6ejVMd2Fvdlpmc3RVTjF0S3UybDMKYVFQN3QxZ2xtMWFoejF1ditqNkpTMy9nVTlDZkwrZGQ4K3Z5bGllV2xWMWk5amtZRk5CYUIwdTR3SE9FWit1ZQo3Y1pOZU5YTTdDd1FsRHArRUlCQ3hiOFI5MkNUN3U1OExkL21UYmZXOGYzNHU0c29zM1E9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/remote-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9XcVFRMzFBZGRSZkpmSE95WTZXdnd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3T1ZvWERUSTJNVEV5TVRJeApOVFV3T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFueXFhZVlPbWhSa1RJTUdER3ZRanl1VGRrcUgxaFRmRXlZb2I1U2p2MS94L2NCazEKM3lncGxZQUZLSGhsU0R2YWtwL2xCT0ZtM0dQVDU3MStHdjlkeGtvcHRzUjRXbzRsTlZDRlE0RXJlVDBYYUM0QgpoZTVYL3pVc3haVkxMeGJJbSs0bVFENGxVZGJaRDZmRHBCQ2c2UDVUd3hhbDI4S1N1TEhubEVxMThuenlrMjV4CkdZa0lWYm90eTNmUWdCUE05QlBBc1ZqRjArQ0NheU5ONlNkSHRvOTg4cEUwR2xOZ0ZpTU5HZEZ6Q3VXem5uVjYKMHZPYmxhcHBoeHBxaTk2aGZVcTVKelJhVC9acEFpcU5qQ0FTdmpqYUROVUpLeUxIemJ1VEZXT1Vib1YzZzgvegpPeUFCbFlPcjJjaHVXQmJ1d2U4RFpmWTV5NkhkaU9KZmNLMHkvd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRm1CdHZOaE1tM0FBRzFGd1JqNXI5bjNkSVltTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQi9CWjVZcUwzbXRsRUVjNlJSOEkrcEo1VXcvRFI1OUpCTkpjY24xNW9mMjBTa0ZBeG9PU1JRCklhNUg2eUhwY1BLLzFjSFA5Z2g2TisySExpb21sT2pmZnhHNUQzdHJFZTlYZWg5eHgvK1ZZUk5OeW5HS3RMVXUKdDRCVWt5WFk1TFp6OCtjNEliNTE0SVZiR3RFT001MTk5VkR0ZUEyUnViZnEzZWtnYjVHdUdrRFplUUZVNjZLMQoreFBmTFVJeHVSd1NpdGtYMnErSWJXVkVQYWREMXZrYVA0REJNSHV4WGZZTWY0em5wcmZET1VjY2puN1hYNENUCkMxeStBNGdzV1ZuUmNpV1pKOUxOWlplNWgvT0QwV2QyTmhoL2Q1bDVGSCtnVzVOaWU5Mng2d1hzK3RhVlpyZGcKRXZjWmR0Zlpyclc1c1dEbm9zZVpKQ1pNakQzRFE3UGEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUxFYVM0dUFiQ1BodHh4cjlPa1VsMDh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4TUZvWERUSTJNVEV5TVRJeApOVFV4TUZvd0VURVBNQTBHQTFVRUF4TUdjbVZ0YjNSbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBCk1JSUJDZ0tDQVFFQTFvcElrYzhJVGIwdzJBNSszTmtuZkZqT28vZVVrSkhVNU8yaWcybHZpcE9XeWZnSzhsd3EKYzU4VWttRGcraWl5ZkR5ZW14czBpREcyaW1SZ3B6YlVSbzM5eWFJMFVUK2pLYzlFSENGaXV4a2x2LzNRQlR5TApuckZ3VExuT0tHSHhrSSs3bHRWb01LODFmVzBneG9WOGpWbUlwVm42Q2hDV202Zld1Z0o3UkYwcU9HbXBNMDZJCnFsT3NOWGc1TGRIOW5LZVlabDY4Y2phQmFiQm9sblF5b09WaWkrZjZxZlV6ZnMzeStPcVhEUXUyV0J1L2NTYlgKWkFmY1EvM1ZpbkN4TTdUTDIzcEhvM3BrMGphdldoNUFZQ1BaT2lCbm9pR25ka0JVT3FXeElqeTBrWXQwMnJtUgpRMFdwd081RXZ6RFg2b0FXWTVGanplVWhLdTk5SVNCYnlRSURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DCkJhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXcKSHdZRFZSMGpCQmd3Rm9BVVdZRzI4MkV5YmNBQWJVWEJHUG12MmZkMGhpWXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUdnYnlsQWlBbWJsSWwvNmtyNXdtKzUwU1JxT3NqM1lzZHdOSTZxT2dHQ1BwbFFOTGJDM0hEeTFnRjA4CkM2ZVJnQ2d5NUk3T1dFc01tRldkNGdHaExnMHF3UjFWWVh4d3JsNFY1Y0l0SGpFR3lEaC8vRENSb09IQmc3Z0EKTUk1VmVnR2ZaNlMxaWZ2bnhwaHhhaDQxbGdjTk5zV1pmMmNrazlDRlQyblZPam1xK3QzeXh0cFZ1RnN5NXlmYgpyUVhOSWpmblFvWFNNUytzc1FBOURrR0JmRmhvbU1KNDJkcnozTmJmRDU3WjFIMkM5cjNpL1hGZFM3YXRFeU1FCmZOb0FFRTJGUEIwWk1rc244WlBwSDRNcU13MU1YS3NNNS8vdXdkNUliSEFkNGpyTkpoVk9FRHFOTjlCQlpMUUsKWU1QMzk4SVhwWUxoSHE2M28yK0FsbjA4Z2RVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMW9wSWtjOElUYjB3MkE1KzNOa25mRmpPby9lVWtKSFU1TzJpZzJsdmlwT1d5ZmdLCjhsd3FjNThVa21EZytpaXlmRHllbXhzMGlERzJpbVJncHpiVVJvMzl5YUkwVVQraktjOUVIQ0ZpdXhrbHYvM1EKQlR5TG5yRndUTG5PS0dIeGtJKzdsdFZvTUs4MWZXMGd4b1Y4alZtSXBWbjZDaENXbTZmV3VnSjdSRjBxT0dtcApNMDZJcWxPc05YZzVMZEg5bktlWVpsNjhjamFCYWJCb2xuUXlvT1ZpaStmNnFmVXpmczN5K09xWERRdTJXQnUvCmNTYlhaQWZjUS8zVmluQ3hNN1RMMjNwSG8zcGswamF2V2g1QVlDUFpPaUJub2lHbmRrQlVPcVd4SWp5MGtZdDAKMnJtUlEwV3B3TzVFdnpEWDZvQVdZNUZqemVVaEt1OTlJU0JieVFJREFRQUJBb0lCQURhckxpclprc2djZWFIVQpyOGNmSHN5MDVKTXJ0NVBQVld5d2tVVGpUU1VHenRuUWR4bWpHcjR6djA0OW1aYWxZRFlBVEhwQnlIVWNGZVBXCkNEc1Q0YXZJNnU3Q2dvcGhxUFl5ZHF5a1pVQS8vRHFjTnJIZTU4VWNlZjFUSzVGbXcrT09mTUxHeHJJQk02UXUKZHJlZnRFbGdrMDF2VENQY2JrUmoxSGU1d2lkOURtejVnUDEwQ0NKZkV6TGNVYk1lOGtlZXlYMzVVeGh6dG9IdgpUYlRBZ2VpcWJFVlJxalY0QndWT3VaNlp2bEZURWhVWmpmcU9PWjh2MlBieG91WUU2Rk9DcUdOdTI5Wlk1Zk5jCmxPeVI2cXB1TzFJZjk5RUtoTGdPSGlFVzg1YUtPSWtzYXVJNmpwR2ljQzMrODFIelNZb1VCcW54dlBTeEdyYTcKbGJldEk4RUNnWUVBM1E3SUhYMmpBUG5kUDhtV1Vpc3U3ZjNpNWpvOWRqMEVMMm1RM0JNWktvL3ZCRXB3cG1vegpsWFk1allqVDlqMVliNXZ2Qk1WbHVkdDh4cmhjOWNJNG5kZDhhVnNNckp2dFhsRWVLb3lBdjJvQjNacmRUbklFClA4RGNQWUlheXZ1UVRyTCtqT2xXUWNVYUxtbXJFY1VRM082SGxBMTNiTWhHbWVzbnN1Z3hEZzBDZ1lFQStIUEQKeXNLSDhRNll6R29zUlpIOHIzOGN1dzArZ1pqYkJUUzByWittZU83OHlzcWFlSitmVlZvYTRiVXo3SDNDVHVNOQpUSXNScndTUTJIM3FMblVqRWJMQkwzUWRhZVZURTNBeDFxVHJGUG5yc0svVUpVQ0RHb2dvRmo0VFFpcGkxTTArCmlxTitKOEdhZis3YU5DRFdhRXJOQmhPLzk4Z2x6YlNPQmFaM0VhMENnWUFFa0U2UFZVMnRNbnRmMnNDUXQ3V0QKVWsrQjQwZnJqZnp0SWFmTTgxUDhyZllJUjZVbHVtR1FQMTJXejNGWXp4RnBWSFhOeW1sOE9jek1xWGU1MXlXbQpGSkhMOXdZKzlnVWpnbGMyRjZwOHlTcDZzYnpKNXM2eHBrQ2x3RzdmSyt4aHc0NC95SDF3WkNwVE5QbEVKNlplCmVVb3hRMG5vNUFXWkhlSzI3ZFk5YlFLQmdRRFRyZVlwOFhYYk51R09nQU02UHZoNEdhZkQ0clBYdlFFV1BXS1cKN3dmcHoweUlCdmgzUHlDRW11RitYbUZmNDRIU3JwOUNnTlpQTkdlb1hCZFMvN0FpV3hkbk05bi9xRWdRcnExMwp3RWtlTlJUUEUrOSswYWtoeU5IR3FackU2OUlLbHRmclRRS21JcmhjdVljbGxMaTRZTXF2bTlJWjdXZndEQjVZCnlBeDRmUUtCZ0hGNEw0THArdGliU3YrcWJSY3RpOUw0aEpab1FGNlhjaHlOTXN1dkE3YmxmbmxRN3hJZXRaYWMKYVpHbWMyTC84dHIwdUtWSDA0NWQ4NDlrdlZMUFVXQWk0V0JyclY4cDRINFdEbzhwdGFsSFpkTFpLTW9jUXRkcQpOdytLUGF3MkkyMjdpSW10elg4V0VtNDR5T3ArK2FlK3VTcmphV1FNWWRUend4RkJwMThyCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9XcVFRMzFBZGRSZkpmSE95WTZXdnd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3T1ZvWERUSTJNVEV5TVRJeApOVFV3T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFueXFhZVlPbWhSa1RJTUdER3ZRanl1VGRrcUgxaFRmRXlZb2I1U2p2MS94L2NCazEKM3lncGxZQUZLSGhsU0R2YWtwL2xCT0ZtM0dQVDU3MStHdjlkeGtvcHRzUjRXbzRsTlZDRlE0RXJlVDBYYUM0QgpoZTVYL3pVc3haVkxMeGJJbSs0bVFENGxVZGJaRDZmRHBCQ2c2UDVUd3hhbDI4S1N1TEhubEVxMThuenlrMjV4CkdZa0lWYm90eTNmUWdCUE05QlBBc1ZqRjArQ0NheU5ONlNkSHRvOTg4cEUwR2xOZ0ZpTU5HZEZ6Q3VXem5uVjYKMHZPYmxhcHBoeHBxaTk2aGZVcTVKelJhVC9acEFpcU5qQ0FTdmpqYUROVUpLeUxIemJ1VEZXT1Vib1YzZzgvegpPeUFCbFlPcjJjaHVXQmJ1d2U4RFpmWTV5NkhkaU9KZmNLMHkvd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRm1CdHZOaE1tM0FBRzFGd1JqNXI5bjNkSVltTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQi9CWjVZcUwzbXRsRUVjNlJSOEkrcEo1VXcvRFI1OUpCTkpjY24xNW9mMjBTa0ZBeG9PU1JRCklhNUg2eUhwY1BLLzFjSFA5Z2g2TisySExpb21sT2pmZnhHNUQzdHJFZTlYZWg5eHgvK1ZZUk5OeW5HS3RMVXUKdDRCVWt5WFk1TFp6OCtjNEliNTE0SVZiR3RFT001MTk5VkR0ZUEyUnViZnEzZWtnYjVHdUdrRFplUUZVNjZLMQoreFBmTFVJeHVSd1NpdGtYMnErSWJXVkVQYWREMXZrYVA0REJNSHV4WGZZTWY0em5wcmZET1VjY2puN1hYNENUCkMxeStBNGdzV1ZuUmNpV1pKOUxOWlplNWgvT0QwV2QyTmhoL2Q1bDVGSCtnVzVOaWU5Mng2d1hzK3RhVlpyZGcKRXZjWmR0Zlpyclc1c1dEbm9zZVpKQ1pNakQzRFE3UGEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURxRENDQXBDZ0F3SUJBZ0lSQUxtb1pvT05VTzRmRjZiN01qeTRwWWN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3T1ZvWERUSTJNVEV5TVRJeApOVFV3T1Zvd0tqRW9NQ1lHQTFVRUF4TWZZMngxYzNSbGNtMWxjMmd0WVhCcGMyVnlkbVZ5TG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU12c2hXMWUrZGtBNTVrM2p5dTEKZ1JpTUJDRFNaZ0dIQldqNFBtSFYzWmFZNHl5Y2FHN2dSUXNnbTJZREJDRFh2S0VocHN5ZjlPSHFCV3JzMUx2ZAo3RFBWeUh4TE9NM0hKUEUwZ3lySllCVVdYUnVWc05aUjkvWHBGZmREQ2F0WjlJSWxCelBBOEh5ai90ODRhbjZoCldubGFFT0pJR3FIcVdid2dQZmpVenR2YmNsN1ExMnNIZFFSaWdZRzBiTFN1UHc3bzJVaE9WYzAxV3Qzb2R5RTAKR0Z5MTd3amZoRXM5TWVYVGFkUTJJVnB1NytDUWIzdGh3T0Jhb3BSS1R0SWhuTVBRUkVjMGtGcmxjS2RiYzhxRwpSNlRMcVdpUnRVSDAzSk1DY3FTcVJOUHpQMWZUcm5uTWl1SGJtNXo3ZXhYbDJCbHp4Q3owSzczTXo4UXB3S3o4ClFYTUNBd0VBQWFPQjNqQ0IyekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVVdZRzI4MkV5YmNBQQpiVVhCR1BtdjJmZDBoaVl3ZXdZRFZSMFJCSFF3Y29JZlkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnlMbU5wCmJHbDFiUzVwYjRJUUtpNXRaWE5vTG1OcGJHbDFiUzVwYjRJbFkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnkKTG10MVltVXRjM2x6ZEdWdExuTjJZNGNFZndBQUFZY1FBQUFBQUFBQUFBQUFBQUFBQUFBQUFUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBWTN4UmZQY0k0cUVNTWFIREJVZkhXei81dnppUGEyY0NMdWVud3ZqeE5tbXBwQVZnClRDMUxZL2s4QjNHRGNSTmpuSENtTDNsQjFDM3VETUtFcGx4M0w2Z2V0SnF0dTAxWXBkaGVzbnlHcXkzazcxdkYKMXN4ZFdxOU8raVJBMnlSa2c0TDU5aHh0STlsNytqNE5velMyZVh3SkkzSGxEd2F0Q2ZwVWE0S0hMN29tN3lTeQpKTmQrYXJHenhIN0xQdFM4RURDWFZxOHM4S1hZelZFc3RuRk5EQU04Z0ZOKzAyMDVnUkZrLzBaMWRPUU1BNEN4CmJLZExGdW5DWDdQTHVqSnBTUHJLRVFmS0R5SlRLT1U0WnpnV1V4QlpVeThXTkZIbnppREpMWEtHRE1aVVdmZGYKVVhNeEpuazlZWnkwTDNPa2lDNFg5ai9xYnJqVDdlTS81V3pMTXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBeSt5RmJWNzUyUURubVRlUEs3V0JHSXdFSU5KbUFZY0ZhUGcrWWRYZGxwampMSnhvCmJ1QkZDeUNiWmdNRUlOZThvU0dtekovMDRlb0ZhdXpVdTkzc005WElmRXM0emNjazhUU0RLc2xnRlJaZEc1V3cKMWxIMzlla1Y5ME1KcTFuMGdpVUhNOER3ZktQKzN6aHFmcUZhZVZvUTRrZ2FvZXBadkNBOStOVE8yOXR5WHREWAphd2QxQkdLQmdiUnN0SzQvRHVqWlNFNVZ6VFZhM2VoM0lUUVlYTFh2Q04rRVN6MHg1ZE5wMURZaFdtN3Y0SkJ2CmUySEE0RnFpbEVwTzBpR2N3OUJFUnpTUVd1VndwMXR6eW9aSHBNdXBhSkcxUWZUY2t3SnlwS3BFMC9NL1Y5T3UKZWN5SzRkdWJuUHQ3RmVYWUdYUEVMUFFydmN6UHhDbkFyUHhCY3dJREFRQUJBb0lCQVFDdDdBa1VjZmVYdSt6TApRWmFMU2Q5VDV6OHlHeUJDMXp5bS9XcC9HTjlIclJlOEdaMzhTcXk0UTlRbDJoYXdTQytxSWNCWUwyaTFNVm56Cml4QVpOcnBZcjFHeHFKcEc3ejB6dDN6VGhqSzdhWHA1cDE3T085VEcyRWdTdmd0R0tJK2dYQ0piWW9mNVZnbHYKcW5jeGp6NVIxNTRrMENoZXhqaEllaHRBMlllZi9IQkczWkV2TXJJVmw1WUd5REZjTXltMVZzR0tUVGRrUWNBagpCSWVrRVcyVlFTZ0cyKy9WSGR2dHBrN2FTYzkxa09LMEdnN2N1cGxMbVN6Z2lsVUo3OHh6TmxxUXRvTXMvcWU3CmI1SGNWNWxla3hhT250b1g1SzZJTDNhQm1iejVWdGdoRjZCdXVOaEg5dUxvNEdacy84WXV0VVg2TzZzZnRYWXgKeGU5UHVVekpBb0dCQVBVbUx0bmdQdkljME9mVmFsbHJXWXJpdUdDb2JYR2MzRXg1M3M3c1VyR1dZbDJVK1JxdQpDNE5MakhTaXk4Q0RrTTN4RzVxbVR4dzB6Tzl3OVJWeXdkelluNnlwWjJZWkxzcG1XWGx2YnhEbmdrNzFZbEg3CmEvZnFsK1FmcGJiN3EzZGVJdkd5VG5nTmcyNlVvVE5FUXA0amFxTVZQVXpmUnNwbnFEb2tPWm1uQW9HQkFOVHoKTmFpM2V1eXhSUVBYTmxiaXZISTMxR0dneEtOK2RHOEtFY1VUaFBJL0wySi9reDRCdzNNenUrOEZZVmFtMGw2dQpJTXdpeG5maXhjbitYSy9YdEoyWWxMbmx4RkVsMnFCdjJKNTUvV3pSeG9MRTU0cmFSTTRDbzFQU1l3cXc3eTdrCnA4M1I1YUhkUDBubXpFeDA1VnhyUGFMUnU3cDAxUmM5bTh2TnozdFZBb0dCQUw3R2hTVkdycFdKdVVVQlB5N3gKTEpDNW1SU1hYZnhSUHR0QTZCU05zbGpER0MrTmRFRy8rZk9tQWxydUtiUGFid0RsUmo4V2QzQVM0dnpmSWNzYwpNQ09tYkxSWWJMLzJqd1F4bkNXMWczQmJTWHdhMS9YR3ZDSUZiVWk1SENRSFBFdTdkV1EwQjM3RHZXbDd2dXIvCmp2d3p3WlBDUHA4cERwVUxEODZYVEQvM0FvR0FCajBaMVZlS3dtUnZJUzJzNmQ2NnBwMzhHdUFhNHE5UnVlOFIKbGpSOE1KeXBScmwyRmVyM1R1aTFHTXVQam5wVXIzRnFoSkNBUUFMa3lJWXJNUHVnenYwcFhramM5NE9rWkE3aQp5Y0hKS3ViNmFkcGE3aloyelpKR05xNXpPRnoycE9rT0FYbWt3Sms2d1crQmpMdmYvRlVuK1IwcjRzcUpjNlRhCmE1NGI5Z0VDZ1lFQTVWOHhCeTRVZlNmSTBhT3dxTnA4L3JUcXVJOVdaNU9ZK1JCTEExelI0R2dYbERONkpRYlIKQlU0YWZ3SGVJaDlNa1BsRDBjVHEwck1sNkxWMUZtUkxBNW1WREYrbVF1UVFTMzVSU1lpaXB2VU5GcDVKMEdZbgowZ0V1MnRHcC9yNG56c0ZZQTN6K1lFTVNqakpEclZUaWRVeVRkNUx6Tm9GTmtGNWR6TjJiNjZrPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9XcVFRMzFBZGRSZkpmSE95WTZXdnd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3T1ZvWERUSTJNVEV5TVRJeApOVFV3T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFueXFhZVlPbWhSa1RJTUdER3ZRanl1VGRrcUgxaFRmRXlZb2I1U2p2MS94L2NCazEKM3lncGxZQUZLSGhsU0R2YWtwL2xCT0ZtM0dQVDU3MStHdjlkeGtvcHRzUjRXbzRsTlZDRlE0RXJlVDBYYUM0QgpoZTVYL3pVc3haVkxMeGJJbSs0bVFENGxVZGJaRDZmRHBCQ2c2UDVUd3hhbDI4S1N1TEhubEVxMThuenlrMjV4CkdZa0lWYm90eTNmUWdCUE05QlBBc1ZqRjArQ0NheU5ONlNkSHRvOTg4cEUwR2xOZ0ZpTU5HZEZ6Q3VXem5uVjYKMHZPYmxhcHBoeHBxaTk2aGZVcTVKelJhVC9acEFpcU5qQ0FTdmpqYUROVUpLeUxIemJ1VEZXT1Vib1YzZzgvegpPeUFCbFlPcjJjaHVXQmJ1d2U4RFpmWTV5NkhkaU9KZmNLMHkvd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRm1CdHZOaE1tM0FBRzFGd1JqNXI5bjNkSVltTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQi9CWjVZcUwzbXRsRUVjNlJSOEkrcEo1VXcvRFI1OUpCTkpjY24xNW9mMjBTa0ZBeG9PU1JRCklhNUg2eUhwY1BLLzFjSFA5Z2g2TisySExpb21sT2pmZnhHNUQzdHJFZTlYZWg5eHgvK1ZZUk5OeW5HS3RMVXUKdDRCVWt5WFk1TFp6OCtjNEliNTE0SVZiR3RFT001MTk5VkR0ZUEyUnViZnEzZWtnYjVHdUdrRFplUUZVNjZLMQoreFBmTFVJeHVSd1NpdGtYMnErSWJXVkVQYWREMXZrYVA0REJNSHV4WGZZTWY0em5wcmZET1VjY2puN1hYNENUCkMxeStBNGdzV1ZuUmNpV1pKOUxOWlplNWgvT0QwV2QyTmhoL2Q1bDVGSCtnVzVOaWU5Mng2d1hzK3RhVlpyZGcKRXZjWmR0Zlpyclc1c1dEbm9zZVpKQ1pNakQzRFE3UGEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQVBwcit6dHBvNWlHN0ZYemUwWWcvZzB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3T1ZvWERUSTJNVEV5TVRJeApOVFV3T1Zvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXRjWUZ2VHhKMzZkSVJZbmlWbE90MUwydVFaYlcKVm1PQVdCU3p0QkY4ckNjSTZrMUJZRDVMSFh4a2VwZW5pbnFhdnFudDc0UDk5NFpDeWgwY2lzR1JLNkd4aGJwcQpNNEZmSHd5VVkrS0JXc2NKSUZaM0RtejhpankrdE91TnZMajJqdW5xY3o3QzZMLzg5TG9oNEJWRkFvUjdPejhVCm9oeFQ3TDl3V2ZmWXlPQXFjbjZCL3JFSU9vMU1jdEZXRUQzWmxJa010T3VldDJuaWVJY3RxcERFR1RpdTFXcDIKMnp6SElIM1pGeFlWYUtHWkhJK1J6bUhrZUpyaUs3Q2hTTzNRN0RYbG0xMHl1eHRHZkRtVTAyemRucmpWcnRodApPRm4xQzc5a2NLZmJrUTUvZExRMWJzT28ydGsvVFFjblYzTC9Ib0J5c3JvdC93dU4zdDdZTnNYZ25RSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUlpnYmJ6WVRKdHdBQnRSY0VZK2EvWgo5M1NHSmpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBQllnZEdieUcyUXN6T3FxaUQ1Ykp2emlxMHZybkRuNTk3SjFPZXRKMGxISEU1ekUKWllYQjd1NEs2bVlXQldoOHJQWDZqQVd1ZDdKdzArVUltU29rMjg5eERrNkdqSmpFbCs2TjVPU3lBNDlGWHdzbQpRYTk5ZWF3QVZCRG1ZYlFnY1JQaENGRHVTZUl6OUZKVGZsUWI1ZmtMMGhXY2F5Z2hTdjdSd0FoSjQ4b0tGaW9mCkVVYmpkazc0OXVubDNsUXlJc2hHL3BwYkh0M1R5V1BHTkY5YndNVUtGdDMycFhVa3g2YVdRVUhLYlJoclFjaloKMXRxWVhxRUFoR0pjTWJKdUNKOVJtdVZYK0I2eWUxNmVuNmlsaXJneW5mOHhSMCtoTXRjTnhNR01XT3RieFo2UQp0U0lGQXdvWVorZG1qd2RicU81OEljdkxFb0syYkJXNDNnQ2FPR2c9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdGNZRnZUeEozNmRJUlluaVZsT3QxTDJ1UVpiV1ZtT0FXQlN6dEJGOHJDY0k2azFCCllENUxIWHhrZXBlbmlucWF2cW50NzRQOTk0WkN5aDBjaXNHUks2R3hoYnBxTTRGZkh3eVVZK0tCV3NjSklGWjMKRG16OGlqeSt0T3VOdkxqMmp1bnFjejdDNkwvODlMb2g0QlZGQW9SN096OFVvaHhUN0w5d1dmZll5T0FxY242QgovckVJT28xTWN0RldFRDNabElrTXRPdWV0Mm5pZUljdHFwREVHVGl1MVdwMjJ6ekhJSDNaRnhZVmFLR1pISStSCnptSGtlSnJpSzdDaFNPM1E3RFhsbTEweXV4dEdmRG1VMDJ6ZG5yalZydGh0T0ZuMUM3OWtjS2Zia1E1L2RMUTEKYnNPbzJ0ay9UUWNuVjNML0hvQnlzcm90L3d1TjN0N1lOc1hnblFJREFRQUJBb0lCQUZFaUpnV2xGMFFnb24ySApZZU11VG5TYWhXRDVOb293dDJTWk9PeXlzWGNWcFVFUFlwTFd1eWhhRVc4MnFhMkJzL2hPV01tRG5LUVM1VlRaClVaZ05kZ0tIbFhrZkQ3QVZtcU45TmU2dmR4VlJxWjBwZXRLUml0Y1k3ZlpLL1dTekdqb0g1b0d5RGNWZGpFYWYKbmVjckZ6WmNjN1NxSDBlTVpWbFN5WThldFVCVExYcmtNUFZxV0JlVmwwRVVwekxyOHlOTE0yMVZ0NkIwY3ZVUApDOHphTjF6NDVuN0R2YU0wZXZTbVdSQjRjd0p6eTZ0S0RjYmJMTzM4SnlSbGp1MGVqZmhHSDhiNy85dTVXUEpJClpkeS8rbnpiTy84WkJ1bk5tTUJxYndhaXF0Q2ZsRXV1LzB4enMxVXExNUlFSEc3U0UxaGo4d3oyaE1MR01XUzUKcWsyM1h3RUNnWUVBM2FEQkptL2dqdTUrRy9uZzVDbTdwTUVDSWpGeldzVnk3WHcxSGtvMTMwamhDT01BU2lycwp5alRSL051UjdFMkhwOFpnQTU1czZDb2IybWd0S25yeThTbktRZWorcCtQdTA0U05jWnAwTHdweWh5aXBRckVVClR2UU5oWDAyZmF6aVJiNGxyTXpQUURXU3htVGVWVjlnMURGY0RsRnNKQTlSS2lObzBqUlh2RkVDZ1lFQTBmYnYKeEkvd3ptcEtPRXBZeTdyZEIzLzdXNVFvWDNuYm4wLzN2SlowK0xSVnpDMDBuSlBlY2JEMFlNYXYvaW0xbUxXSApCc2FMaklXV0grRE91N1ZTbTRINUt6c2E5S0dzZGZJOEZPVWRsY21iNDZvN1M3Q0JQZTUvN0FpdFArV3hLN2VVCkFPc3BUaEYreW0yKzU3ZWFTYVBoWlMxZ2djbEQ5bGoyUW05K3FJMENnWUVBMUZyeWwyeTlRdGJidU55ZGtxRTIKTFcvT0pvc3hWM2szWEx3VmZYZG4xUkZVcGhvenJkMGhVOEoycmd5STdsMS9MTS9VTWNONzRKeHdZYjVPQUpVYgo4TjIwOGFCWldPNzZhR3RxeDc1UnNyMFU3ZEtWRTlUdWU1UTIzSUFVVlNqeENoaGVxd3IzVGpQRzloZXlQU1VOCmQyUHdLN3Z5blQ2YjYzOVFNWkY3dTNFQ2dZQnhxMVl5L0JwS0paRDQySWNxQklnVXYxeTlQNEI3NytUT1l1U2oKM0hDSEZGbytwMXFNU2lGck8zbVJ5djhNZ2xnbHpHREZja2VxVThmcWlqSmh2TkIwRC9GdFRocFJ4aFV2NVd4UgpnNWg0dHlVR0krcm1GekJnN3ZXaU96QlFIM0hEVVNkM045aXN3eHY1UzJERzRjZE5oc05IbTBGY0FqSWc5QmlkCjd1NkxJUUtCZ1FDYTVST2Q2cnJjclcrYkJKTnJjT3VoY1ZRb2hCelhpQ0FCSU5KZW11Nnl0V3ZacEorK20wc2IKS2hkSlBCYTdaNkZYbDF3N2JoTEhNbmtjcnQ2eVVDMkF5Nlp4cmhTdlh0YWV2Q1N5aThEcDQxVC9xbUJMdjVPTApRVS9zLzZYZkhqMjNpUTV4VW5tUk93UXdMVXZtdDRpZWhjd2Rod2dPT3EwTk5CQ2l0VXFlRmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9XcVFRMzFBZGRSZkpmSE95WTZXdnd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3T1ZvWERUSTJNVEV5TVRJeApOVFV3T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFueXFhZVlPbWhSa1RJTUdER3ZRanl1VGRrcUgxaFRmRXlZb2I1U2p2MS94L2NCazEKM3lncGxZQUZLSGhsU0R2YWtwL2xCT0ZtM0dQVDU3MStHdjlkeGtvcHRzUjRXbzRsTlZDRlE0RXJlVDBYYUM0QgpoZTVYL3pVc3haVkxMeGJJbSs0bVFENGxVZGJaRDZmRHBCQ2c2UDVUd3hhbDI4S1N1TEhubEVxMThuenlrMjV4CkdZa0lWYm90eTNmUWdCUE05QlBBc1ZqRjArQ0NheU5ONlNkSHRvOTg4cEUwR2xOZ0ZpTU5HZEZ6Q3VXem5uVjYKMHZPYmxhcHBoeHBxaTk2aGZVcTVKelJhVC9acEFpcU5qQ0FTdmpqYUROVUpLeUxIemJ1VEZXT1Vib1YzZzgvegpPeUFCbFlPcjJjaHVXQmJ1d2U4RFpmWTV5NkhkaU9KZmNLMHkvd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRm1CdHZOaE1tM0FBRzFGd1JqNXI5bjNkSVltTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQi9CWjVZcUwzbXRsRUVjNlJSOEkrcEo1VXcvRFI1OUpCTkpjY24xNW9mMjBTa0ZBeG9PU1JRCklhNUg2eUhwY1BLLzFjSFA5Z2g2TisySExpb21sT2pmZnhHNUQzdHJFZTlYZWg5eHgvK1ZZUk5OeW5HS3RMVXUKdDRCVWt5WFk1TFp6OCtjNEliNTE0SVZiR3RFT001MTk5VkR0ZUEyUnViZnEzZWtnYjVHdUdrRFplUUZVNjZLMQoreFBmTFVJeHVSd1NpdGtYMnErSWJXVkVQYWREMXZrYVA0REJNSHV4WGZZTWY0em5wcmZET1VjY2puN1hYNENUCkMxeStBNGdzV1ZuUmNpV1pKOUxOWlplNWgvT0QwV2QyTmhoL2Q1bDVGSCtnVzVOaWU5Mng2d1hzK3RhVlpyZGcKRXZjWmR0Zlpyclc1c1dEbm9zZVpKQ1pNakQzRFE3UGEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQVBlSjJzandkeDJLQkh5UHorc2FQemN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3T1ZvWERUSTJNVEV5TVRJeApOVFV3T1Zvd0pURWpNQ0VHQTFVRUF3d2FLaTVqTnk1b2RXSmliR1V0WjNKd1l5NWphV3hwZFcwdWFXOHdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRHlZSDluU3Ywc2xDM1o0cTFnSllabUF6Y2sKNUVVeXltR2lFNnpmeHQrTFN3Z1gvRkZnWUdCTFZXVWxwR1NSWHB6UW16Vk52M2UreHJkS285NWs5Tkl5bzV3bApXaUwvY3VDeHAvenV3QklWVEpHYTRRbmZSQkpDcWhSekpGbzBwZm9qc0xCTSszQjRPbTBiTlBMemNzMUM1Ni9KCkV2WFo3d0xuRVVBQjZITlZ2Y04xYkVlRHF5OW1GU1RNWkdJWXgzMjFNZTRNdzB1U1psblFBaUVSNStaUVQxajEKOWFNMzI1dGVYSUhPUmVaWEZPaW94dDJYWjJBQ2dJRDFnbzl4STNIMy9XdURaanpsakN5ZlBCYjFTdXpBM3k4UQpubzQrT1NBQnRMVzRTV1QzV0diZk5jL08zRldwZnJZZStFVmExaEJoa2I5bHF3NXJHRDUyTGJYUVFWMXpBZ01CCkFBR2pnWWd3Z1lVd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGRm1CdHZOaE1tM0FBRzFGd1JqNQpyOW4zZElZbU1DVUdBMVVkRVFRZU1CeUNHaW91WXpjdWFIVmlZbXhsTFdkeWNHTXVZMmxzYVhWdExtbHZNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFCZ0JLVFNqQktXZVJPOEZLb0Y4OFhTWEwvOW9BTCs1YXhPV3JaeFhyRTcKWHpDeWhHQm1hNCswNHB1ekg5N01qSGpIUk1UR2cxdytLMm9IN2Z1TFhSZnNJQWRZMUNWS2JzL0Fuci92MXhoYQpBM0JkbHhWYVcrdm1OemhiamhFMiszRHVWQzZNUEc2UllLaVlSRmpTYll2NkEveWx2d3UyMjFmS3ZYRmJScVBBCk1TNWtDbUNNQXRLaTFua0tMbW52UWVQTnBqRjlsV0FuTEpKOXMvN0pPOFd2Ui9aa3pTTUozQTZTNUFpMkxUc3cKKzBLN3FaaTBvVHVTL0ZCSVl0UWdMYXQxbXFHMmFGOHFXK055d0cvT25oT3lsMWhYWGorSHBhV0pockp3RFV6Wgo3WUtabGVrNmtOdTlaWW5pSXBLcW9uSTRTQkN5Z2tEUTZjOTBpYTA0YUNxaAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBOG1CL1owcjlMSlF0MmVLdFlDV0daZ00zSk9SRk1zcGhvaE9zMzhiZmkwc0lGL3hSCllHQmdTMVZsSmFSa2tWNmMwSnMxVGI5M3ZzYTNTcVBlWlBUU01xT2NKVm9pLzNMZ3NhZjg3c0FTRlV5Um11RUoKMzBRU1Fxb1VjeVJhTktYNkk3Q3dUUHR3ZURwdEd6VHk4M0xOUXVldnlSTDEyZThDNXhGQUFlaHpWYjNEZFd4SApnNnN2WmhVa3pHUmlHTWQ5dFRIdURNTkxrbVpaMEFJaEVlZm1VRTlZOWZXak45dWJYbHlCemtYbVZ4VG9xTWJkCmwyZGdBb0NBOVlLUGNTTng5LzFyZzJZODVZd3NuendXOVVyc3dOOHZFSjZPUGprZ0FiUzF1RWxrOTFobTN6WFAKenR4VnFYNjJIdmhGV3RZUVlaRy9aYXNPYXhnK2RpMjEwRUZkY3dJREFRQUJBb0lCQVFDdWcwSllTZ3IrRlBicQpnYWFacW9zWldrbFRHN1NqUEVxTjJ5TEd3TGRsNExGRUs5MGZ5bVNxK1NKcHR2TGVKRVErZ3ZJZk43UHRQY0R0ClVnMm5uUXJYZ1N2RlRTQVQwMC9yT213SUwyMFZ2dHE3ckRwaWNlMi82QnZ2UjRaWGtBWUp1b2RGOW1obGVKUGsKV2Z4dnd3SDlvVG5WU2Z5UVhPSTNJeGwyQmpzOHlJMTI1bXd2N3I3cWdPOTkycitMNjBKMEpNK1Z3QTg2ZTNidAoxREl1aHJLTFdLNDJkMWwyV2g3UExiRk9lMUt6Vjd1a3VVQUpSaXN2VUhuZEFwa2lmYUUrcTA5eGtHektLTW9NCmNsUGVrSVZsVWVoMWNuTk5nTTBGK28yeXUvdjdpRzloQWpJbEc3T2tpTEVJVzVNZUdRN2t3SS9GY1A4TFNpVVEKTGdhckg4dGhBb0dCQVAyWHZzb2VWQk50RkdPWlRIbEhYaXNSbXhoRGhEV3l4S0pnczBITy9MTTErNU84R0E3TQp0YWFoK0xhdHdNbytLblZmNkpjRVFVWkU2cEVqQUZnc2FsVyt3VEFmdE9NcFZac2NDSUxLeTlqVzhIYndyUGNVCkhxcWpnMzFReDh2a3Z2R3hCOE5zVysrNmVNaDc3UDliL3dxazdiTjdtT2hWRFhvK2pvR3hLbWVSQW9HQkFQU3QKZnpUdlJZRlhjNUw2VXBOY21MaVE0RXl0UlQ1QmlCRzhiVTFZbXFFV2tQcnNrY0IyVGdhY1FramZOU3hzYzNoSApYeGxSOXJLb29VQzdQNHRtL3RqMXhRWGdMaitERGllZ2pNWHRQbGE4dE1qVHZkUnRKR3YzbStpNldlTUlLMzZPCjVjdGZaNUxlbVdURGYvWkRRd3RJVU8zbGhUaDF0RGl0eERpQkU5ckRBb0dBUGp5RG9tOFhDejEyQjR1VDdSL0sKeUo4bGhTcnN3NUVBR1NuS1ZKaE1CRjkzUXFhaThON2twZVNTZWFMaThiK1lBLzVwd3NaVWpyNVRJeE9IL2h2SQpiUXJIdHR2Uk5QN3I5NGxGdlhPdjI2UEVtQ3d4QnVKMU5FTzAvWWhad0h4L01DbldVZXZDRkcrYlBQak5EVTZ5CnBSWWRFRE9CTDJQUVR2UVRYVmp4bzBFQ2dZQTIrM0hWYkZzN0dITEJPWDBxM2lqM2VKN2V2Q1VPTzEyZlZxOWQKTFNiNlFmN3NWQkxnby9VZXFTaUFCYUNHVGd5WW43a3dFR29XZGF4ZXhuVWVGMVAzWHlzYUNlbDZuakdsRi8vcQpUa2l1NXhMYytpL3pOMTl5MzU1cWFzM2VKYXpZY0xZVXdHaWU2V1NnN3dtblJqQWZyZTE1dUJUNnZnQjBxQitxCjd0Nk9Ud0tCZ0Nlc0Z5a1UySW4ya3Ivdm15bUlBcnR4azF6bE1vbjlaUktWamliaHkwbnVRb0ZsK25UUmVzTkcKV0dqWmdoUmltaUFqMWhZdnpleHBKR2V6YU5pajI2Qm1vRGJkVTMvMng3ei9na2hPWHFTWlBDbDRrTFN4eUxlcAp1ZU9RRlJFeWpDOTl5MnBkZjQ5bElVZXorcFIzTnFFc1hPeVVMbXJYMHVCbUlxVmowVHQ5Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: c7
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "17"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-wireguard: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "false"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  ipam-cilium-node-update-rate: "15s"
  cluster-pool-ipv4-cidr: "10.7.0.0/17"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  cnp-node-status-gc-interval: "0s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "true"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"

  external-envoy-proxy: "false"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: c7
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/clustermesh-apiserver/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumexternalworkloads/status
  - ciliumnodes
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumendpoints/status
  verbs:
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumexternalworkloads
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver-metrics
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/component: metrics
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: kvmesh-metrics
    port: 9964
    protocol: TCP
    targetPort: kvmesh-metrics
  selector:
    k8s-app: clustermesh-apiserver
---
# Source: cilium/templates/clustermesh-apiserver/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  type: NodePort
  selector:
    k8s-app: clustermesh-apiserver
  ports:
  - port: 2379
    nodePort: 32379
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.14.2@sha256:52f70250dea22e506959439a7c4ea31b10fe8375db62f5c27ab746e3a2af866d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/clustermesh-apiserver/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: clustermesh-apiserver
        k8s-app: clustermesh-apiserver
    spec:
      initContainers:
      - name: etcd-init
        image: "quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args:
        - |
          rm -rf /var/run/etcd/*;
          /usr/local/bin/etcd --data-dir=/var/run/etcd --name=clustermesh-apiserver --listen-client-urls=http://127.0.0.1:2379 --advertise-client-urls=http://127.0.0.1:2379 --initial-cluster-token=clustermesh-apiserver --initial-cluster-state=new --auto-compaction-retention=1 &

          # The following key needs to be created before that the cilium agents
          # have the possibility of connecting to etcd.
          etcdctl put cilium/.has-cluster-config true

          etcdctl user add root --no-password;
          etcdctl user grant-role root root;
          etcdctl user add admin-c7 --no-password;
          etcdctl user grant-role admin-c7 root;
          etcdctl user add externalworkload --no-password;
          etcdctl role add externalworkload;
          etcdctl role grant-permission externalworkload --from-key read '';
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/state/noderegister/v1/;
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/.initlock/;
          etcdctl user grant-role externalworkload externalworkload;
          etcdctl user add remote --no-password;
          etcdctl role add remote;
          etcdctl role grant-permission remote --from-key read '';
          etcdctl user grant-role remote remote;
          etcdctl auth enable;
          exit
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      containers:
      - name: etcd
        image: "quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/local/bin/etcd
        args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        # Surrounding the IPv4 address with brackets works in this case, since etcd
        # uses net.SplitHostPort() internally and it accepts the that format.
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=clustermesh-apiserver
        - --auto-compaction-retention=1
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - name: etcd
          containerPort: 2379
          protocol: TCP
        volumeMounts:
        - name: etcd-server-secrets
          mountPath: /var/lib/etcd-secrets
          readOnly: true
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      - name: apiserver
        image: "quay.io/cilium/clustermesh-apiserver:v1.14.2@sha256:0650beac6633a483261640b6539c9609f5a761f4ab4504fd1e6ffe7f2bb82e9a"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt
        - etcd.config=/var/lib/cilium/etcd-config.yaml
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: identity-allocation-mode
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: enable-k8s-endpoint-slice
              optional: true
        ports:
        - name: apiserv-metrics
          containerPort: 9962
          protocol: TCP
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: etcd-server-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-server-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-admin-client
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-admin-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-data-dir
        emptyDir: {}
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "clustermesh-apiserver"
      serviceAccountName: "clustermesh-apiserver"
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: clustermesh-apiserver
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.14.2@sha256:a89030b31f333e8fb1c10d2473250399a1a537c27d022cd8becc1a65d1bef1d6"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.12.0@sha256:1c876cfa1d5e35bc91e1025c9314f922041592a88b03313c22c1f97a5d2ba88f"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.12.0@sha256:8a79a1aad4fc9c2aa2b3e4379af0af872a89fcec9d99e117188190671c66fc2e"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.

# Only create the namespace if it's different from Ingress and Gateway API secret namespaces (if enabled).
