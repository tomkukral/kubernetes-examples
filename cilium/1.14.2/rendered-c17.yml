---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5zZGpKbWc3TTM0a1Z3dE9kTnZKY0l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV5TVZvWERUSTJNVEV5TVRJeApOVFV5TVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFzZ0JlUHhONVVZdWFWS0dpTWNleUYydi94MlRpbnEvL0s3THhYSDZDeFJDelFDMlgKL1FvREx5aVZIWjBKMks5QXVmbzRFdkJmNC84a0R2NGtMOEY1NmRxcHp5ZVVtNmg4aWhNYnQ3blJvYit4Vnhwbgo4M20yeXAvUURub2NGYnlCcFllUURhNjR6MSt4Nk9LU2RMR0NaWmkyU0h3ZVNsbDJRTnEzRXArUEVKc0FIV3RYCmduS003OElTblQyR0RKNjdlRndraE1YVVVwMUVIMkU3WkswaG9FRzczUE5mRkdUdGN1SXk0b3VyN296Q0Y4cm0KUzVYbEpqQlpRUERDelJOS2lCbVppd1hQcU9iNzFiK1VHMmZOanNBU2QwZElNL2xKWDg3Y0tvNnpZNEFuSVMxago1YWxZc1ZzblE3aXMzalllTTZ3UFRSSkRxSDRFaUxwRFdiQmRDd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSHlxcGpvWUNZM2NYbjhxTGZYSWp4S3ZvZTc3TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQkp3b3EyMkc0R2pBY3crTlo4M2p1MzZrd1NZelF5b2g0M01pYTd5UUN5V0YxMHZnM2VRVHpJCldBSWV0STlVUUtDVVU3d0UrcFowUnB5cy9xRDJDYlJpV05EdTBERWE4U2xBM0Fxb1hhM0VDdjgwNEtwNE8zVGIKTzJWejAvdzVWL1owME9EZXRORnBHTjJTcmpxRWxYWjdYRVFYNUZKN3c0RHJ1VWNNS2pjNk0xbE5tWjhaWXpIegpsL0htUllDM1BhdHIwK2dxMTRmbkx3a0o3bldjRW5uN0FTVlRNbm9kZE5wMWRMQlVMdjluYXVyWERBSjdlRlJYCk5mTzE2aDk3V2dIUkhmcjJJNFN6aERjTGtsVkVmelNiS29JWkFja0pEWnJBTEMwT2I3OCtycHBnSElnR1E0ZDMKNkFjOVhGZSt1YVJxOU1tYzUrN21hWjVsaFhqTEpoaGwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc2dCZVB4TjVVWXVhVktHaU1jZXlGMnYveDJUaW5xLy9LN0x4WEg2Q3hSQ3pRQzJYCi9Rb0RMeWlWSFowSjJLOUF1Zm80RXZCZjQvOGtEdjRrTDhGNTZkcXB6eWVVbTZoOGloTWJ0N25Sb2IreFZ4cG4KODNtMnlwL1FEbm9jRmJ5QnBZZVFEYTY0ejEreDZPS1NkTEdDWlppMlNId2VTbGwyUU5xM0VwK1BFSnNBSFd0WApnbktNNzhJU25UMkdESjY3ZUZ3a2hNWFVVcDFFSDJFN1pLMGhvRUc3M1BOZkZHVHRjdUl5NG91cjdvekNGOHJtClM1WGxKakJaUVBEQ3pSTktpQm1aaXdYUHFPYjcxYitVRzJmTmpzQVNkMGRJTS9sSlg4N2NLbzZ6WTRBbklTMWoKNWFsWXNWc25RN2lzM2pZZU02d1BUUkpEcUg0RWlMcERXYkJkQ3dJREFRQUJBb0lCQUFiL3pyVHFQaDMvd0V6Tgpva1FVMXlMbW8wTWk2MnBULzFPbmtLZ1RiVzcwVGlnYTR0d1hWYks0Qk0wS1RNWFJkbGtaeHJTdjhRVlZGZ1RrCjUyVmRWVDdsMDBHTEMrUG5CeWFpdzdkQXZrWis5Q2s1cDViQ1ZYYTRQQVVsdGc4QXY1UlR0VTFrYm0zeEZGelUKOCs5VXY0emhLV0hHUjZhaXgreWE3UkgxWmptLzNiRkNZQXltZWtZYUcvR0IyMUlyS0JXQzJ3RlNNaWlJMHJlcApNUEI1YkhraFRZRDhzbFgrUWpNaWxrc1lXaGRvLzIzUEJYUWt1YTNHWmNhTlJnNlhwRGY1d05VVVlUV25rZVZ3Clg3dGttL3NiSmdzUFVXQVp6NzRaenB5dVJRS2ljYVNhOWpXdnVQZldLSWNRZFI0VnZ1SVNYWDNHMElZc29aNWoKTllPS3YwRUNnWUVBd3lOcjRXcUhubEV6ZC8zZXd1ekgzQ0RzYUdMMkFLNkFURHArdW9YcGExOXgwaisyOTBmegpBZFV0MDdLVG9zbTJneHpOZWhzd1FwbnlvaUo2cDgvRFZMYzhNeC8rSFBENnZ3ZWZvMS9neTlQdDdXQVlFZXVZCnNEQmFOS0dyMXp5TjZVZ2RWR1BZQUNKZTlzT1Q2V25YVHNBUnBuc3dETE52ZU1jeHRBQm5JcXNDZ1lFQTZZU3IKbG1CaVAxTlJnVlF3ZkpjWmdUTXU2ZWtSaXRuMUc1dkhoY1ZsaXVMQ1Z0d1pOUGVaVnQxTnRmRnJjMXpCc3RTWgpqejFrajFOUHZaVEZVWXBuMGhkbU5mVGtzNXZ1Uk5uUjhQUlE3YkQ1SzduRXhudTN2RUxmTFAvb1dyaWlKVTVTCjFleTI5S3A5WlNENklPRkN6TEF0RkVSa2hQREZEZjFCQzNNV3J5RUNnWUJrNVlXOFVmYTVkMGJqZmhLV094UEQKMEFvc2x5NlhmNks2eDJ3TFNYNDlsR1luemVYdXlmYnVOYW15VWgxZ0NHZ2tOdHBQam90UGhJWWVLekc4WHdLaQpaUFB0ZzFkQzQ1N2k4ekFwcTBOeVlLd2ZGcGFiZlhPL2RlRE9ZZUdXTXFzMXVhSGdwcGRpeW1MTHVLaGNBZXZmCnZoUGlQc1BEYld2dnlSNzc4VkZpYlFLQmdHSnFDM2Fnd0VjMzhnMnpVWXZ3a2tzbEt3eGhzWWIzUEptYUdZaUQKSEx4ZnZNK21pdWtMd0pBZlRIVDFmZmRzakNXMSs5R21hZzhOYVhuWWpTQkVXR1R1ZjZFVnlKejVobjExMzBqUgpicG4rRDhVaDBaQms2NVpvQ0c2S20zNUFlZldIQU5vdm5SdVlEcWprTVFaU2FUaWl0eHpuaGdXUkF6dFdGR2VpCjVWaUJBb0dCQUxMamNoSUxIQThFdjIxeE5zbmpQRFJyNmFKejdGTFRLYU5XaFplZFpRWkZjREFTSEd6TUpGV04KRWJoZjRhak9NblhmbHFoVzNzWEd3ZWlBbEYwNnNWdmZjbkNJalhoRzZpNlVLRHRSWHZBMnkzTHZ4VnpOTnFNSApvRGpXanlmb3Uyb0NweGVpUEt1TENVS0VjZ0tWVFcvN3c1UHJNWktzL25POUpMVEZXd080Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/admin-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5zZGpKbWc3TTM0a1Z3dE9kTnZKY0l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV5TVZvWERUSTJNVEV5TVRJeApOVFV5TVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFzZ0JlUHhONVVZdWFWS0dpTWNleUYydi94MlRpbnEvL0s3THhYSDZDeFJDelFDMlgKL1FvREx5aVZIWjBKMks5QXVmbzRFdkJmNC84a0R2NGtMOEY1NmRxcHp5ZVVtNmg4aWhNYnQ3blJvYit4Vnhwbgo4M20yeXAvUURub2NGYnlCcFllUURhNjR6MSt4Nk9LU2RMR0NaWmkyU0h3ZVNsbDJRTnEzRXArUEVKc0FIV3RYCmduS003OElTblQyR0RKNjdlRndraE1YVVVwMUVIMkU3WkswaG9FRzczUE5mRkdUdGN1SXk0b3VyN296Q0Y4cm0KUzVYbEpqQlpRUERDelJOS2lCbVppd1hQcU9iNzFiK1VHMmZOanNBU2QwZElNL2xKWDg3Y0tvNnpZNEFuSVMxago1YWxZc1ZzblE3aXMzalllTTZ3UFRSSkRxSDRFaUxwRFdiQmRDd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSHlxcGpvWUNZM2NYbjhxTGZYSWp4S3ZvZTc3TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQkp3b3EyMkc0R2pBY3crTlo4M2p1MzZrd1NZelF5b2g0M01pYTd5UUN5V0YxMHZnM2VRVHpJCldBSWV0STlVUUtDVVU3d0UrcFowUnB5cy9xRDJDYlJpV05EdTBERWE4U2xBM0Fxb1hhM0VDdjgwNEtwNE8zVGIKTzJWejAvdzVWL1owME9EZXRORnBHTjJTcmpxRWxYWjdYRVFYNUZKN3c0RHJ1VWNNS2pjNk0xbE5tWjhaWXpIegpsL0htUllDM1BhdHIwK2dxMTRmbkx3a0o3bldjRW5uN0FTVlRNbm9kZE5wMWRMQlVMdjluYXVyWERBSjdlRlJYCk5mTzE2aDk3V2dIUkhmcjJJNFN6aERjTGtsVkVmelNiS29JWkFja0pEWnJBTEMwT2I3OCtycHBnSElnR1E0ZDMKNkFjOVhGZSt1YVJxOU1tYzUrN21hWjVsaFhqTEpoaGwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lRZGpqL2V4c3RWRkNodEF3azduM0tMVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEl5V2hjTk1qWXhNVEl4TWpFMQpOVEl5V2pBVU1SSXdFQVlEVlFRREV3bGhaRzFwYmkxak1UY3dnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRFZtYWhSd2VESXNrZW90YkpNWWlFcUhYNlRxT1MzVzc4OGZhL01odVQrT0IvNjl6N3YKVHlrM25WcTMwRDlEcUFaSFJIbjdsanFGVVd3NHpZampvU2g4dnp5TFZjNEVWaW83Ti9kMFcrTTRmdjlNYmt3eQpGckc3VDUxb0dnSk1vTzRnMEN3MG5BbHNmV01QRVcrK0x1WTlhSkJPZjNSZzROYVIzTXpVaTlWV1dkSHA3THhxCmI3eVJyQmdCVjNCamV0UjJSSnpmbTFqWEIyVzZzazRaaWpKY3hBYWJsYzBuTHlLUFlMZlhsVWFVMHFaa2wxYlIKbzJhOStQZml5bjlJQUpuZjI2KzdObis0dk51dklicUFFVTRRR0x6ZWdzTWs3ZmpMcjJaR1hMTXMxM25WUVpXLwptb0tlaXBGQWFKV09vd2xLekt1T0VSVlNka0w4WkI2NU1MRkhBZ01CQUFHamRqQjBNQTRHQTFVZER3RUIvd1FFCkF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXcKQURBZkJnTlZIU01FR0RBV2dCUjhxcVk2R0FtTjNGNS9LaTMxeUk4U3I2SHUrekFVQmdOVkhSRUVEVEFMZ2dscwpiMk5oYkdodmMzUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQzNPa1NwYUhlY2JyUjhyZTMrNW5CbWd0VHB5Cm8vbXRCek9pb1hBY1NDcDZ2Ty9IbFdUQTRFaDZyV1pQQUtXTnRDd3kxVDA2ZEFYQmpscjlldXJLeXlBZEhLeXkKeGpZR0srSkJwYUpyZUZkM1Z5Y3FJNENKMFZ0a1g4NGhlZ0RyODRvK0FIbmJNU09NLzcrNnAvVWlsa1Bmc3pqNwpnY1BGR25KWWpKWGtyckh0SlFHZVBCSUlFZFJaTUliMHZKY2VqNTFsZXJBTlQ4QkpiaUo0WDlwYk5sVUxNWitICjc5VEZMVk9YbG80RVlidVBSTGtBNDFWb1QvYVNNaURPVjVCb1RFdE11WVRGK2F5WU1DbCtaT1ZqdFF0a2xDQ2IKd2dUZTBLRG1ZYWxRaCtGRjVYQ2I0Yi9vcEFEVmJ5QU5Edlh2ZlVlWjJOTHZlWmdpQ3lwNHliZVQvMWc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMVptb1VjSGd5TEpIcUxXeVRHSWhLaDErazZqa3QxdS9QSDJ2ekliay9qZ2YrdmMrCjcwOHBONTFhdDlBL1E2Z0dSMFI1KzVZNmhWRnNPTTJJNDZFb2ZMODhpMVhPQkZZcU96ZjNkRnZqT0g3L1RHNU0KTWhheHUwK2RhQm9DVEtEdUlOQXNOSndKYkgxakR4RnZ2aTdtUFdpUVRuOTBZT0RXa2R6TTFJdlZWbG5SNmV5OAphbSs4a2F3WUFWZHdZM3JVZGtTYzM1dFkxd2RsdXJKT0dZb3lYTVFHbTVYTkp5OGlqMkMzMTVWR2xOS21aSmRXCjBhTm12ZmozNHNwL1NBQ1ozOXV2dXpaL3VMemJyeUc2Z0JGT0VCaTgzb0xESk8zNHk2OW1SbHl6TE5kNTFVR1YKdjVxQ25vcVJRR2lWanFNSlNzeXJqaEVWVW5aQy9HUWV1VEN4UndJREFRQUJBb0lCQUhSZ210ZW90WXREcjAxWgphY0s2T0cyVTBsRXJWU29kdjh6NmdkMENwaU5vZXV3bTU5QkZKaVRhQkFKZ1lRZkF0V01CQ1NFdFVjY3ZmTEphCk1ib3NKVDRLaDdjMjBkK0Uvczl6QjgwSy8zclpuc21LMHRMN2tHeUl6UzlaOUdUQnpkeHM3NWplWnpnSC9QL0oKdFVNK2xFMWkralQ2dG5MT0xib2RQakNUMjNHRzBYOUdTeWxlSkhaQ3RXU0ZEckpNdkZqTkJ5MWlPWUEvWFlXNgpyY1RiSngrcVpRL3puRHVENkdMM1Q0SGVlYkNpSVdaWHlXdTh3Y1dpdGZYUG1LZVY2YVgxY01RekxFSFFweUgxCmVCeTE1NmZqM3czWU00V3JodXVwR0hxWk4wUVludUhUZU9vOXVMVFNUM1Z0NWl2ditMZi93SlhhY2V3SjMzNFAKVms3RnJta0NnWUVBOVZpSkZjZldiNkg5N3BqQS9adUpnbUoxa1gyRWxpZG5oLzBhWEZCRUY0a0N5b0IxQ0ZKbwpoM0ZqRUNtd2JjUEFWVnArYnRPNTkxcUxBZXZIVTVGZTFGeDJkTnh1RHNjYm82UHdReklvaTNMNDB0K3FIVTBtClZmZS9acVg1dG1wV0RaZlNkcitUR3pudmlXcTF4NUplWWh6TXNOd0RrM1dmS3l1T0RwRUJieE1DZ1lFQTN1QTIKT3EvZUNROWdFdzlJR1ZNNGdHY1Fwd0g2dUxlVGpQbldTekZZcU5XQjg2OUxZZ0dpVmhqKzh3UERRUVluMFVwaQpjQnVGUFB2NGdhTDVvY3pod2Q5QjBtdkJyVmJwMU9TUktBWHJwMitRN1RzZ0V4Vzg2NjYvMXh0ZDNMWEYvZUNTCm1QS1REdWRSc1RHVWFMSkpGRDNrS0ZiU05kTzQzTjV4N29nS1YzMENnWUFwdUF4WGI4dSszOFRXTlpOYmpIOHQKZEtDWlJNYXU0YlJ4STFEQU1jWGlXcUhtM1VFSlVUb0ZEZnJTWE1SclpjWG12YVNTSTk2VGVRbjZJYVdiU0RUZgoxM2t0RmU2QkJNcG1ZUklSMncyWjZNcjIwS0dVcWZIQzNJWG5ab0czeXcwbThwSVBMelJNaE9WK2NHN0lxTkx6CnpBSGljUWNLcEEyVXdhcytQdG9Ia1FLQmdRREZ6aTZ6RldVMW0wekVmYnFhcDI2dEgwdjdQVmw5V1loK0JUcTQKejVvRmRrRDR1dXBubUZXd25reWYrQVh5RHZtRjJjUFdCY2JSNGp1aktyYnRjRDRwWi9FdVJPN0czaTE0QWtnRwpRb0xzdnFyY3NhMzg0ajBpMjV4dDJGOE14Tk50U0VRenRJN3FHa2s1djJ3ZEk2YVNiWCt5Z2FQZG5BUWxHdFA1ClJRb1FyUUtCZ1FEdjlhSUJJQXRCVDZneEZaYWNNbS9nR0EreDBQWVRRQmUxckVYS2VFL1BWbUhPV2t5YTlJQVYKRmNaQ2NseXZZa1RzQ2hObTVsM1Vkak41RkV3L0Fka0NNYkZwaTJNQVVvUUppeUY0MDJmN3FzYU1zYkZBWVVVNAp1dlBYSW5iRjdrN2VZR0RLc1dTNjNNaExHcjlTMGcxMFNwK3h6RDdacFZzNE5WVU9mMm5weFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-ca-cert
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5zZGpKbWc3TTM0a1Z3dE9kTnZKY0l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV5TVZvWERUSTJNVEV5TVRJeApOVFV5TVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFzZ0JlUHhONVVZdWFWS0dpTWNleUYydi94MlRpbnEvL0s3THhYSDZDeFJDelFDMlgKL1FvREx5aVZIWjBKMks5QXVmbzRFdkJmNC84a0R2NGtMOEY1NmRxcHp5ZVVtNmg4aWhNYnQ3blJvYit4Vnhwbgo4M20yeXAvUURub2NGYnlCcFllUURhNjR6MSt4Nk9LU2RMR0NaWmkyU0h3ZVNsbDJRTnEzRXArUEVKc0FIV3RYCmduS003OElTblQyR0RKNjdlRndraE1YVVVwMUVIMkU3WkswaG9FRzczUE5mRkdUdGN1SXk0b3VyN296Q0Y4cm0KUzVYbEpqQlpRUERDelJOS2lCbVppd1hQcU9iNzFiK1VHMmZOanNBU2QwZElNL2xKWDg3Y0tvNnpZNEFuSVMxago1YWxZc1ZzblE3aXMzalllTTZ3UFRSSkRxSDRFaUxwRFdiQmRDd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSHlxcGpvWUNZM2NYbjhxTGZYSWp4S3ZvZTc3TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQkp3b3EyMkc0R2pBY3crTlo4M2p1MzZrd1NZelF5b2g0M01pYTd5UUN5V0YxMHZnM2VRVHpJCldBSWV0STlVUUtDVVU3d0UrcFowUnB5cy9xRDJDYlJpV05EdTBERWE4U2xBM0Fxb1hhM0VDdjgwNEtwNE8zVGIKTzJWejAvdzVWL1owME9EZXRORnBHTjJTcmpxRWxYWjdYRVFYNUZKN3c0RHJ1VWNNS2pjNk0xbE5tWjhaWXpIegpsL0htUllDM1BhdHIwK2dxMTRmbkx3a0o3bldjRW5uN0FTVlRNbm9kZE5wMWRMQlVMdjluYXVyWERBSjdlRlJYCk5mTzE2aDk3V2dIUkhmcjJJNFN6aERjTGtsVkVmelNiS29JWkFja0pEWnJBTEMwT2I3OCtycHBnSElnR1E0ZDMKNkFjOVhGZSt1YVJxOU1tYzUrN21hWjVsaFhqTEpoaGwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc2dCZVB4TjVVWXVhVktHaU1jZXlGMnYveDJUaW5xLy9LN0x4WEg2Q3hSQ3pRQzJYCi9Rb0RMeWlWSFowSjJLOUF1Zm80RXZCZjQvOGtEdjRrTDhGNTZkcXB6eWVVbTZoOGloTWJ0N25Sb2IreFZ4cG4KODNtMnlwL1FEbm9jRmJ5QnBZZVFEYTY0ejEreDZPS1NkTEdDWlppMlNId2VTbGwyUU5xM0VwK1BFSnNBSFd0WApnbktNNzhJU25UMkdESjY3ZUZ3a2hNWFVVcDFFSDJFN1pLMGhvRUc3M1BOZkZHVHRjdUl5NG91cjdvekNGOHJtClM1WGxKakJaUVBEQ3pSTktpQm1aaXdYUHFPYjcxYitVRzJmTmpzQVNkMGRJTS9sSlg4N2NLbzZ6WTRBbklTMWoKNWFsWXNWc25RN2lzM2pZZU02d1BUUkpEcUg0RWlMcERXYkJkQ3dJREFRQUJBb0lCQUFiL3pyVHFQaDMvd0V6Tgpva1FVMXlMbW8wTWk2MnBULzFPbmtLZ1RiVzcwVGlnYTR0d1hWYks0Qk0wS1RNWFJkbGtaeHJTdjhRVlZGZ1RrCjUyVmRWVDdsMDBHTEMrUG5CeWFpdzdkQXZrWis5Q2s1cDViQ1ZYYTRQQVVsdGc4QXY1UlR0VTFrYm0zeEZGelUKOCs5VXY0emhLV0hHUjZhaXgreWE3UkgxWmptLzNiRkNZQXltZWtZYUcvR0IyMUlyS0JXQzJ3RlNNaWlJMHJlcApNUEI1YkhraFRZRDhzbFgrUWpNaWxrc1lXaGRvLzIzUEJYUWt1YTNHWmNhTlJnNlhwRGY1d05VVVlUV25rZVZ3Clg3dGttL3NiSmdzUFVXQVp6NzRaenB5dVJRS2ljYVNhOWpXdnVQZldLSWNRZFI0VnZ1SVNYWDNHMElZc29aNWoKTllPS3YwRUNnWUVBd3lOcjRXcUhubEV6ZC8zZXd1ekgzQ0RzYUdMMkFLNkFURHArdW9YcGExOXgwaisyOTBmegpBZFV0MDdLVG9zbTJneHpOZWhzd1FwbnlvaUo2cDgvRFZMYzhNeC8rSFBENnZ3ZWZvMS9neTlQdDdXQVlFZXVZCnNEQmFOS0dyMXp5TjZVZ2RWR1BZQUNKZTlzT1Q2V25YVHNBUnBuc3dETE52ZU1jeHRBQm5JcXNDZ1lFQTZZU3IKbG1CaVAxTlJnVlF3ZkpjWmdUTXU2ZWtSaXRuMUc1dkhoY1ZsaXVMQ1Z0d1pOUGVaVnQxTnRmRnJjMXpCc3RTWgpqejFrajFOUHZaVEZVWXBuMGhkbU5mVGtzNXZ1Uk5uUjhQUlE3YkQ1SzduRXhudTN2RUxmTFAvb1dyaWlKVTVTCjFleTI5S3A5WlNENklPRkN6TEF0RkVSa2hQREZEZjFCQzNNV3J5RUNnWUJrNVlXOFVmYTVkMGJqZmhLV094UEQKMEFvc2x5NlhmNks2eDJ3TFNYNDlsR1luemVYdXlmYnVOYW15VWgxZ0NHZ2tOdHBQam90UGhJWWVLekc4WHdLaQpaUFB0ZzFkQzQ1N2k4ekFwcTBOeVlLd2ZGcGFiZlhPL2RlRE9ZZUdXTXFzMXVhSGdwcGRpeW1MTHVLaGNBZXZmCnZoUGlQc1BEYld2dnlSNzc4VkZpYlFLQmdHSnFDM2Fnd0VjMzhnMnpVWXZ3a2tzbEt3eGhzWWIzUEptYUdZaUQKSEx4ZnZNK21pdWtMd0pBZlRIVDFmZmRzakNXMSs5R21hZzhOYVhuWWpTQkVXR1R1ZjZFVnlKejVobjExMzBqUgpicG4rRDhVaDBaQms2NVpvQ0c2S20zNUFlZldIQU5vdm5SdVlEcWprTVFaU2FUaWl0eHpuaGdXUkF6dFdGR2VpCjVWaUJBb0dCQUxMamNoSUxIQThFdjIxeE5zbmpQRFJyNmFKejdGTFRLYU5XaFplZFpRWkZjREFTSEd6TUpGV04KRWJoZjRhak9NblhmbHFoVzNzWEd3ZWlBbEYwNnNWdmZjbkNJalhoRzZpNlVLRHRSWHZBMnkzTHZ4VnpOTnFNSApvRGpXanlmb3Uyb0NweGVpUEt1TENVS0VjZ0tWVFcvN3c1UHJNWktzL25POUpMVEZXd080Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/remote-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5zZGpKbWc3TTM0a1Z3dE9kTnZKY0l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV5TVZvWERUSTJNVEV5TVRJeApOVFV5TVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFzZ0JlUHhONVVZdWFWS0dpTWNleUYydi94MlRpbnEvL0s3THhYSDZDeFJDelFDMlgKL1FvREx5aVZIWjBKMks5QXVmbzRFdkJmNC84a0R2NGtMOEY1NmRxcHp5ZVVtNmg4aWhNYnQ3blJvYit4Vnhwbgo4M20yeXAvUURub2NGYnlCcFllUURhNjR6MSt4Nk9LU2RMR0NaWmkyU0h3ZVNsbDJRTnEzRXArUEVKc0FIV3RYCmduS003OElTblQyR0RKNjdlRndraE1YVVVwMUVIMkU3WkswaG9FRzczUE5mRkdUdGN1SXk0b3VyN296Q0Y4cm0KUzVYbEpqQlpRUERDelJOS2lCbVppd1hQcU9iNzFiK1VHMmZOanNBU2QwZElNL2xKWDg3Y0tvNnpZNEFuSVMxago1YWxZc1ZzblE3aXMzalllTTZ3UFRSSkRxSDRFaUxwRFdiQmRDd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSHlxcGpvWUNZM2NYbjhxTGZYSWp4S3ZvZTc3TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQkp3b3EyMkc0R2pBY3crTlo4M2p1MzZrd1NZelF5b2g0M01pYTd5UUN5V0YxMHZnM2VRVHpJCldBSWV0STlVUUtDVVU3d0UrcFowUnB5cy9xRDJDYlJpV05EdTBERWE4U2xBM0Fxb1hhM0VDdjgwNEtwNE8zVGIKTzJWejAvdzVWL1owME9EZXRORnBHTjJTcmpxRWxYWjdYRVFYNUZKN3c0RHJ1VWNNS2pjNk0xbE5tWjhaWXpIegpsL0htUllDM1BhdHIwK2dxMTRmbkx3a0o3bldjRW5uN0FTVlRNbm9kZE5wMWRMQlVMdjluYXVyWERBSjdlRlJYCk5mTzE2aDk3V2dIUkhmcjJJNFN6aERjTGtsVkVmelNiS29JWkFja0pEWnJBTEMwT2I3OCtycHBnSElnR1E0ZDMKNkFjOVhGZSt1YVJxOU1tYzUrN21hWjVsaFhqTEpoaGwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRY205NHhwcnN6SU9IRzZQWHhsUW5tVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEl5V2hjTk1qWXhNVEl4TWpFMQpOVEl5V2pBUk1ROHdEUVlEVlFRREV3WnlaVzF2ZEdVd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFDMUx2endHZXNrcEVXaVNXNStoVDlUZTlOWGRuYXBSTkhrNGhCVUd0ZkhQc1lacHdMcUdubUUKU09aY2VtRW00QWlkbVNmc1U0dFdQVTlTdUhJc1JxVXBDVlRCNmdZT0FFTlZLU3FKazM3U2JTVnhnUGxrcXJwRAphSzFGdTJaY1NtNnhsc25YZGZucmRMZk1yT2xNa204YThVNVRpNUZUazlzbjVQQkcvRmwzdnFVdUFqY1IrcFdYClU2b3lLUWFjQ1FPdkh4VkU2MERzYTVUeDVOTlFQcjVPNThUdjltdzUxTjUwUks2cjZPSVF0S3pLb0JJRUVLTTgKWlRxT0w5Z2ZwdUFQK2FLalZ4bmxRMHdKcHc2TEhQbzROZ09pRi9DR1JEa3NBZjRBeWFveFhmclhHZ0NJTFpvZApGOVFlRVFFemZicklxNlRTWlV4MmdqcFBmQk1DMUc4NUFnTUJBQUdqWURCZU1BNEdBMVVkRHdFQi93UUVBd0lGCm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWYKQmdOVkhTTUVHREFXZ0JSOHFxWTZHQW1OM0Y1L0tpMzF5SThTcjZIdSt6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBaEp2YWJBcFNWRUFtdG5SdGxrZVB1K0F3Z3R1UEQzZXJxQ2dpOG5pdnN5Q25mVzBMWk84SDJ3U29kSXE1CmV1OUtBODFrd3NDYjFpRHQrKytuR2VjQ2VBcTZqb290a094bkVnNGFpZ2YzZ3RoOVBISGdLUldqSzJMeE9lTWgKNUlHUWQvN0dCU0MxRFZ3R1FsNytxLzQ1a1BCTEROdkwrUDJ5Rm1WWmdDTjYxY1BJaWtXRVpPREN6U2FDK3ZzNAp2SnNlV09yL01OSVdJQ1NwVDZiWGErelpYMkdFZGlHY1hRVnlwMWFYNndNZ3BHZ0g5TUhsdndCOGpqb2p5andaCmViSlpucWwvWFRwbVJPSytiRnF2M3RXSldDZXRnU0JHL01ib2x2MmdUNVVFSXRvd0IyYjdsUVM0R2puaUdiQ0wKUmdaWURlYTdEMVNlOGNhT0RHOVQ0dmNxclE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdFM3ODhCbnJKS1JGb2tsdWZvVS9VM3ZUVjNaMnFVVFI1T0lRVkJyWHh6N0dHYWNDCjZocDVoRWptWEhwaEp1QUluWmtuN0ZPTFZqMVBVcmh5TEVhbEtRbFV3ZW9HRGdCRFZTa3FpWk4rMG0wbGNZRDUKWktxNlEyaXRSYnRtWEVwdXNaYkoxM1g1NjNTM3pLenBUSkp2R3ZGT1U0dVJVNVBiSitUd1J2eFpkNzZsTGdJMwpFZnFWbDFPcU1pa0duQWtEcng4VlJPdEE3R3VVOGVUVFVENitUdWZFNy9ac09kVGVkRVN1cStqaUVMU3N5cUFTCkJCQ2pQR1U2amkvWUg2YmdEL21pbzFjWjVVTk1DYWNPaXh6Nk9EWURvaGZ3aGtRNUxBSCtBTW1xTVYzNjF4b0EKaUMyYUhSZlVIaEVCTTMyNnlLdWswbVZNZG9JNlQzd1RBdFJ2T1FJREFRQUJBb0lCQVFDSWhCTUpSajRxcWF2ZQpENzQxam1pY21wd3ZObzlLRXhTamhNSVEzUGpnbzZmWUJFTHA2WEROLzYreTFuTUZPNkRDUG5nYVZRaVR2alphCmVhZHRQUDJNNGY3KzdUb0txcUFSTnFkYWFjd1ErVFJSUllDa0hRK2pZdWZMdHR2MWhnL0p0M2YxNUdxZXdwOEsKbE81a1I2RjNoNElnNlBSaktQRGtLbGZ3NUlyMDhXZ0ZTdDlZM29KWUJDNXZ5YWtyb0xROGc5S3BuNW44V21wWgpZbkpWTzBWekxPdHlVbmFWUWxVUDF4MExHWTB4Lzg1aHM0TUJuTGMrU0wvYXprMHd1dVdPVEVaZjl6MVNYSFdnCklNbjJKd2tYRVlaUk1UYWp2QWVuUTFEQXZ1Q05zdnVJWmJLaDlIZHJ6a2NhZzhscjNoSDIwZFJlR1l5NmhuTWQKb3ptblBDTVJBb0dCQU41YVJGejlxSFNXbVZtVm9SdEVQK1Q0R2drM3lIcmtvVlZyUTcyZUh6L0xnaVRhMlI1cApoeXJEeVhIOS8rU204SzQ5REdhZDZuUm96Q3JIWFd0ZlZsY2l1bFZFZnlLeXNhK3RqQXVDVzVNSEUzVjVnRm5BCmd6TjZ6TnM1azhwSmU0Q1NNSDc5Qm5aK0JrUitsajRRUnBYRzNaZkVpUExqVUsvTDNrd1M1UXZyQW9HQkFOQ1oKM3JlSVd6SHo1aTZVKzJ1VElDZUs2VmkxZ25vOGhjS1Y3ZHJvWFBIM0NTVVMzVzNLc3lMTzlzNFk4Umk1N2lGWApscGI4NDR6UC9Wc29rTkFCRTRPc2p3TW1xSWg1UUtIZmNTbnhTKzVkejFuSWY2aS9KVTlxbWxxUGpjc2FmRmMvClU5U1RyamE0QnYyaEg1OXpZMGpRd3pyOHZoOEluSWxFK2w5Q2NGeHJBb0dCQUlFMnljV1Vid0daeHZJRmYwTSsKTFRkZGFwdnl1K0dXM1o2cklBbWdTeDZpb0RYVXJCbjlUMXh0dkxJdTNqYzlRRjZ4QVhUY3pqUHA5c1BoYVl1TgpNcnFlWnRSSVl1MkNGTG8zeTB1ZzdLQ0xteVpJZm1zcDhkVEh4eWFhMWlUWEFSdGRXU3RpMVErayt2Vnc3dFNRClZzU1JkWkxOMXB2M3Q1c0JpV1NDRW5NVEFvR0FaT01HSkIxK2ZacElLUjlFdWJKZVNzR1VPYU1QaDY3ZHdrNWcKeXc2MlpRL2xERmtqWG9ZNlBRdDdzaEcrQ1FkamRCeTRhQzNHbjhPMzlPNlptdi9xUURTa3RoRnNVUlRUZlhaagpkTFdPMDZuckxyRVpqTE5saUJNMnM3WGFEZkN4VWtEK2VrRXljS1J3UFJwQUFRMzlacW9Rd2VhYXpNZU5iWlkrCndQT1JCQ0VDZ1lFQXU5RGgvalZac0V1TnZGMkV3c1pPRnZCYmJFYTRHaXkxSmlFd0xzY3NWc2pqQk5sSHNWdWQKVTdvVlUxaWVUeFVQajc5TllJeDFDRTVvV1ZyR0lyY09qcmkyQkZnNW1qQnAxMkhCSHVuVlJ0UVhXNHlJWnRzKwpwVXpWVWdieWhEOExaZURCUmFwMEdiY3VnRWZKQnpHZ2gwdGViSlpNVU1rcXNKcWJRTlhDM3hJPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5zZGpKbWc3TTM0a1Z3dE9kTnZKY0l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV5TVZvWERUSTJNVEV5TVRJeApOVFV5TVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFzZ0JlUHhONVVZdWFWS0dpTWNleUYydi94MlRpbnEvL0s3THhYSDZDeFJDelFDMlgKL1FvREx5aVZIWjBKMks5QXVmbzRFdkJmNC84a0R2NGtMOEY1NmRxcHp5ZVVtNmg4aWhNYnQ3blJvYit4Vnhwbgo4M20yeXAvUURub2NGYnlCcFllUURhNjR6MSt4Nk9LU2RMR0NaWmkyU0h3ZVNsbDJRTnEzRXArUEVKc0FIV3RYCmduS003OElTblQyR0RKNjdlRndraE1YVVVwMUVIMkU3WkswaG9FRzczUE5mRkdUdGN1SXk0b3VyN296Q0Y4cm0KUzVYbEpqQlpRUERDelJOS2lCbVppd1hQcU9iNzFiK1VHMmZOanNBU2QwZElNL2xKWDg3Y0tvNnpZNEFuSVMxago1YWxZc1ZzblE3aXMzalllTTZ3UFRSSkRxSDRFaUxwRFdiQmRDd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSHlxcGpvWUNZM2NYbjhxTGZYSWp4S3ZvZTc3TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQkp3b3EyMkc0R2pBY3crTlo4M2p1MzZrd1NZelF5b2g0M01pYTd5UUN5V0YxMHZnM2VRVHpJCldBSWV0STlVUUtDVVU3d0UrcFowUnB5cy9xRDJDYlJpV05EdTBERWE4U2xBM0Fxb1hhM0VDdjgwNEtwNE8zVGIKTzJWejAvdzVWL1owME9EZXRORnBHTjJTcmpxRWxYWjdYRVFYNUZKN3c0RHJ1VWNNS2pjNk0xbE5tWjhaWXpIegpsL0htUllDM1BhdHIwK2dxMTRmbkx3a0o3bldjRW5uN0FTVlRNbm9kZE5wMWRMQlVMdjluYXVyWERBSjdlRlJYCk5mTzE2aDk3V2dIUkhmcjJJNFN6aERjTGtsVkVmelNiS29JWkFja0pEWnJBTEMwT2I3OCtycHBnSElnR1E0ZDMKNkFjOVhGZSt1YVJxOU1tYzUrN21hWjVsaFhqTEpoaGwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURwekNDQW8rZ0F3SUJBZ0lRSW9ETGYxNGhzVE5RbmtvR3lYMUNaakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEl5V2hjTk1qWXhNVEl4TWpFMQpOVEl5V2pBcU1TZ3dKZ1lEVlFRREV4OWpiSFZ6ZEdWeWJXVnphQzFoY0dselpYSjJaWEl1WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBd1JiZllEOFowbVNwTGxOWDlrUmwKRXgxRG1NTnlqaFNKWndFZ1AvSXRBaGJNTVJqSmptb2JBamZ5TXVnV0xXaFVveHJuT1A1dWoxRDlPRXN1QkFGcgp6VDBJWEhxWW11eWR0RXJGVmVrVGQxSlZobTViWHpqSEtWYk05MHZQL1J6YjFrT0phbGg4ckhoamVpa1dzcFc4CmxKNGM4Mk5tb1BHRG5qL3lpWjBHZHphbTZmVkN5WisyczZUZ3ZFNWVJTmJiLzhFdEw4a29LMThPV3diNm9lYXEKQ2lVUzJaR3pKb3Nha3NGSzBjejRGV2NpcFIzbFV1amxienUrc09tK1VhR2RIMEhYQW93Y0xYcEFJbEdrdmdvMAoxbUQ0bFUyaTV5eElCMUtZYm9GTGUzaDhzUWFKdzJUNnNlYk4vTlhlU1JTNE9OLzNTWWUzWVA1cVpMT09vQlBHCnNRSURBUUFCbzRIZU1JSGJNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSOHFxWTZHQW1OM0Y1LwpLaTMxeUk4U3I2SHUrekI3QmdOVkhSRUVkREJ5Z2g5amJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXVZMmxzCmFYVnRMbWx2Z2hBcUxtMWxjMmd1WTJsc2FYVnRMbWx2Z2lWamJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXUKYTNWaVpTMXplWE4wWlcwdWMzWmpod1IvQUFBQmh4QUFBQUFBQUFBQUFBQUFBQUFBQUFBQk1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUNiYVpnUGRxQkxaRFJyakI2ZW50MTRUdjVnWGRic1RhYWhKZVUyTHRrWjdsRXppVTZyClhwbGtoL1U3MGhCZHZ6eU1DVUNqWThHUWQyQ0lVM3ZYanI2NTlURHJTYmpJN3V4dENpYU52LzdrMXc1SkZyU3AKeUYreGdiOEFmdGNzY2t3RXg5cnF3ak1CczZjdmMrOVNNRTZmZjRmM2VabzRqZDZkRUwwdk03REFoMkIvcFRYZwp0dlpXYmV5MGlVY3dhS01LWGhkQ0lnZ1QxUFJodkFvYTU1TDMrd2hYSGRkME5LWU94ZXB6UFczUFNTc1FjajlFClFjYlI4VjcwN0txWHdMOUZBNGFLcWpVaFBSSkgyVHdCNjVuZS8zOGpnQlNxZWgwN1l4cnZ4QXlBOGEvY0JYbUQKUWNxSmwraEtXc01xdTJoUzZmdmNoZXpqZEJtUzc1d1d5RWVpCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd1JiZllEOFowbVNwTGxOWDlrUmxFeDFEbU1OeWpoU0pad0VnUC9JdEFoYk1NUmpKCmptb2JBamZ5TXVnV0xXaFVveHJuT1A1dWoxRDlPRXN1QkFGcnpUMElYSHFZbXV5ZHRFckZWZWtUZDFKVmhtNWIKWHpqSEtWYk05MHZQL1J6YjFrT0phbGg4ckhoamVpa1dzcFc4bEo0YzgyTm1vUEdEbmoveWlaMEdkemFtNmZWQwp5WisyczZUZ3ZFNWVJTmJiLzhFdEw4a29LMThPV3diNm9lYXFDaVVTMlpHekpvc2Frc0ZLMGN6NEZXY2lwUjNsClV1amxienUrc09tK1VhR2RIMEhYQW93Y0xYcEFJbEdrdmdvMDFtRDRsVTJpNXl4SUIxS1lib0ZMZTNoOHNRYUoKdzJUNnNlYk4vTlhlU1JTNE9OLzNTWWUzWVA1cVpMT09vQlBHc1FJREFRQUJBb0lCQUM3N0s3cTFYOGtMYVFhMgpqSzZGRWJyRzRnMm5jSllWZFNFMDZ1M2tOUU5QSEx2TmRpMUtyK3VvUlN3UndHT29BUC8ycWMvNlNGaGlzbG9pCklMNGt3bUFidTQ4VTNWREV4ZEo2WnUxeVdxUXJ5bGQ5UG9vNnZHcllqZUtWOWJOMmRCNzhLOUZPV25kMGkyL0wKMDVQOFR2Z3lTSVVINkk2OGRQUHFSMDhvZjh3OWVjblluK01PcDk0YWtXNmgxUWliS1h4MlNseUlObjJYckZTeApIRFYyMFNGdkhucjJUZ3dsc1J6SEdRdzBKVjF2Q20wZGZvSFZ2ZXlkekJvY2pCcjV3dE40YTEyazkwRzB4RkI0ClZ1YmZhSWtCdzA2bm1pSnF2Zm5JNklFaWl2KzRlQU9wOGgwMnBUUG1CZXUveS91VjAyV3RNYjV6SnBvQm9zOS8KYVU5cmdJRUNnWUVBM3RDVFIzaVZiUjhVZnJuMVF0c0t6RHdFTVJqaXRxSXNWbVpucW5pV21yQUFKcEgvVXp0WApYL3ptS3FLM3BCT0E0ZHA3WDdZdTYxN1VHOUZQclQ2UWJIMzUrTEsrWm9BWVBpUmtheVUrWU5GWjFwVVpjNG5MCjJpMVdmNmR0ZlVvT2l3MXlra3J3VHNOeWtMa3pPV2h4VnVGY01OOUF2aWVjTkxHbktidGE5K2tDZ1lFQTNkanYKUTBiSjlhTUpzaG1ycVpvY1RJVUl2MHVNZFozbngyVFJZMEd5MlEySGwrWEIwSXd5bGJlcHBrZVlUaHN4dmZyRQpQZVNVdkNkRlBKUGhQMW1zODJsa1pqbTFLaGRuZjN2UUpSZWVpR1hVYmJ6YnBrczRyREtPdXlZaUo5NFJycWltCjJaZFU4UjNER2JFWTUwbWFnS2ZPNnY0R2pCbnlHemxTY1F5V1k0a0NnWUFoUVBYS0krZ0JPak0vMnBjTkhFM1gKUDFuTXpnNy8vT0lySHV0MzJMbDVhcTBMRkowTG1mNm5WOEl1T015NWt5T1lFWmg2SjJHSFJVYll3L3RsT3NJcApQdi93cXhTWmphS1FtN1BVL2VENmFDUkZUMGxXSWdtbmpUNnNuSnROcUtEVkJmUEVlNlN6ekoycmxjaGNXQWNhClZWWUNBVC9UWVd3QnZVWGFoNWpEQ1FLQmdRRFZGanJ6THZwcncxZGJ4NFo0V0x1WDBDeVB1ZHhIV1EyNUd5QjQKS3pIRGhGaGFVV2l4alFoRmdHMG1keHhXNFk0TXdlSmU1TURzWFBnRzhLL3BicFJPRlV4SFdHU244bVVLTVgzRApNd1dtVTlFUU90ZnJ5ZEs4cTY4bkdjQ3k5SDJkZXdjUWQyZ3lWUGtDSTNZZEtqaUtIU1VGMkV1bnBJQkZIL0VNCi94OHdxUUtCZ1FESUJINU9mMDBoOU00UWxyaWt2b1RwU3FFQUpUTlpQdGJpSTVZYXBGNEkvYWVHOGhsaDVqdCsKbnM0Mjd5NVRDelhGZVpxMGlHMmtqUUVTS3hlS2JxQkNzQTZXNFJoK1kwakU0S1NGNjJUaXN0MTVvbU05cUNqMgozN1pteWIrNjlFRks0VFNrakd6czdyRzFuMEY0NDQxSGkzL2ZyTzdCWjNvWTZlc3VTeVJpV1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5zZGpKbWc3TTM0a1Z3dE9kTnZKY0l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV5TVZvWERUSTJNVEV5TVRJeApOVFV5TVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFzZ0JlUHhONVVZdWFWS0dpTWNleUYydi94MlRpbnEvL0s3THhYSDZDeFJDelFDMlgKL1FvREx5aVZIWjBKMks5QXVmbzRFdkJmNC84a0R2NGtMOEY1NmRxcHp5ZVVtNmg4aWhNYnQ3blJvYit4Vnhwbgo4M20yeXAvUURub2NGYnlCcFllUURhNjR6MSt4Nk9LU2RMR0NaWmkyU0h3ZVNsbDJRTnEzRXArUEVKc0FIV3RYCmduS003OElTblQyR0RKNjdlRndraE1YVVVwMUVIMkU3WkswaG9FRzczUE5mRkdUdGN1SXk0b3VyN296Q0Y4cm0KUzVYbEpqQlpRUERDelJOS2lCbVppd1hQcU9iNzFiK1VHMmZOanNBU2QwZElNL2xKWDg3Y0tvNnpZNEFuSVMxago1YWxZc1ZzblE3aXMzalllTTZ3UFRSSkRxSDRFaUxwRFdiQmRDd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSHlxcGpvWUNZM2NYbjhxTGZYSWp4S3ZvZTc3TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQkp3b3EyMkc0R2pBY3crTlo4M2p1MzZrd1NZelF5b2g0M01pYTd5UUN5V0YxMHZnM2VRVHpJCldBSWV0STlVUUtDVVU3d0UrcFowUnB5cy9xRDJDYlJpV05EdTBERWE4U2xBM0Fxb1hhM0VDdjgwNEtwNE8zVGIKTzJWejAvdzVWL1owME9EZXRORnBHTjJTcmpxRWxYWjdYRVFYNUZKN3c0RHJ1VWNNS2pjNk0xbE5tWjhaWXpIegpsL0htUllDM1BhdHIwK2dxMTRmbkx3a0o3bldjRW5uN0FTVlRNbm9kZE5wMWRMQlVMdjluYXVyWERBSjdlRlJYCk5mTzE2aDk3V2dIUkhmcjJJNFN6aERjTGtsVkVmelNiS29JWkFja0pEWnJBTEMwT2I3OCtycHBnSElnR1E0ZDMKNkFjOVhGZSt1YVJxOU1tYzUrN21hWjVsaFhqTEpoaGwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU8yUEJRZ0Fabjhla1NsWEwwWTd5K1F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV5TVZvWERUSTJNVEV5TVRJeApOVFV5TVZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXdRL2ZFbnlJdU1Kbm54LzB0YW8vRnpXeEZtT28KZjY1amJ1T01MdkttMXRRRXo2R2xWaTZvRFZkeEVwdUNRWXJsVlBCWktiaUZuSzRuRWJ6YlNXYXp4dno0a01vSwpWUXhrVGVkUUlhb0J0R2xrOHdQZTBLYlZ0SE51TitkYVE5ckxUTUpycHJtSnBIbWhHYUdEK00rcG01YjI2ZDdYClZTN0pNdC9HSzUzdnJPUFlaMGk5MEZLOHBudTBZZmtzM3dFc3VpU1A4cjNxZG5oaXlzclpYT2VQMzJ1YTlKU3kKUHAzNFMrcDVLYlpIMFFZRkZ5cXdHcGRHdmpnbXovdU1iQUFDcnJsUlFOZTdtRVhNZ1QvYjQzbi9PQkdSV0NOUApRdU1McGU1cGlSM3h5M3lLRDlTZHNGa1N1cWdtV3BRWThPTnhtM1ZGR25TYUhvSkJLN20zS1FvcklRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUjhxcVk2R0FtTjNGNS9LaTMxeUk4UwpyNkh1K3pBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBQWRFQnp6eXR6c2JoQXBlNjh6N0l0RkNPUEtyVUJFRWUzV0p2T2txYWxaQy9OSkIKVjhZR1VMa25VcGtmSG9yYmRtdDBZTXVuTTRFRkYvRE52V3pBZER4TXdtNi82bHVObVhZVGVDZDNnc056bU1LSwpxUlFpVXFlMkRPeEdFZnJOdU80YjhZby9TN2FYdjZBQ3lhSjZHVmRVTU9HczY1WFNvUk13Z1ZuRkRLS1oxWWtNCnlnNlN5NStCa2Fva2ZTSXFYTUtTRjJtTjRVQzBkRDVTUDNBWXZtUVVOL005Qi9hM3FSMWZhTnh3akdZNlpIMkwKVXFQV2tpZFlLRVpXTHRRQ2d2N2pTSlhRUFdXOTQ3N0xqVU14bERhQWlHcjFJUWxyRHdScjhqaEJlcy9yaFkwRwpBaXNxeUpoWXJEZGd3QmFmSFZSanZidU42Wkd4TkJwZ3MyR2J3c3M9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBd1EvZkVueUl1TUpubngvMHRhby9Geld4Rm1Pb2Y2NWpidU9NTHZLbTF0UUV6NkdsClZpNm9EVmR4RXB1Q1FZcmxWUEJaS2JpRm5LNG5FYnpiU1dhenh2ejRrTW9LVlF4a1RlZFFJYW9CdEdsazh3UGUKMEtiVnRITnVOK2RhUTlyTFRNSnJwcm1KcEhtaEdhR0QrTStwbTViMjZkN1hWUzdKTXQvR0s1M3ZyT1BZWjBpOQowRks4cG51MFlma3Mzd0VzdWlTUDhyM3FkbmhpeXNyWlhPZVAzMnVhOUpTeVBwMzRTK3A1S2JaSDBRWUZGeXF3CkdwZEd2amdtei91TWJBQUNycmxSUU5lN21FWE1nVC9iNDNuL09CR1JXQ05QUXVNTHBlNXBpUjN4eTN5S0Q5U2QKc0ZrU3VxZ21XcFFZOE9OeG0zVkZHblNhSG9KQks3bTNLUW9ySVFJREFRQUJBb0lCQUh2YTdzVXhWNVVRUXVIMgo0a3JaV1hoT1hibDdYZEhyMHFhRkhKM1IxZTdrUGVIbVZlZWdMdmZBTFM0K3phVzJzY0Y0SC91QUFWZXU4aW1TCit5dHYwODNJNUw0ZW45cElCT0Zsa0NiSXBpZFRwZ3V4WS9SLzA0SGN1OHpwZ3lNYzdtZmtJcVBuUzhKVXRXRjQKR080NmF4a0NGSTJkQkpBRlg5WmZjUWJ5WDV5TndQTkx2WjVLWVpMbVQzdi9CS0JzMGxNbmIyd3lMZUlydEhUMgo4dzNySFcxN20vaDVhUjI5aEV3d2o1bFlEaVlzZm9PeUtmSG1oWjNkR2p4WDBMWW9VMGlmWTBUN2pWRWxRMU9ZClNkTHBqT3NSaVNPY3FOSEt2c3NPSGxocHB5a2EyY0tySTJGYi9NTG9GRVhiWXlmdGl0YVJvOGtJZkFoRmRYbnIKTFpjZWtMRUNnWUVBeWpVc1lOWUIySUZreHFjdnhFcWJSUDJoQ3l2Ykt4blZPZTNBYTNqNDJJWC9Da094dTR5ZgpjU2llY1lZL1JUM0N5Z2VUUk4zRGRPYkEvc0QvOGVFeVNuREo5YTFraUcyUHZFbW5IeVhQdkhZYjhGbllYVXJZCjcrRkhQaUlIRk1pK3RhZTZDMEdMcHAxZ3NZd2dLdHpMSGdVOUJoaUtDUTI0T2c3ZkFJQ2lCK3NDZ1lFQTlHdmEKYzZvcGlKditWdWdmRUJOT01NMkhDTldXTDRwMjhFSGdPSjZuQkkxcXFCaVZhQUNBQ2FYMWJGWXY2MnlMdFZMMApXV2kyakNKUlNIMjlKbUVOVTh0WnlxaXJ0ditpazN6ZHA0NTMwbHFCeXd4VnUyWFdJV0loTk1PZG1hYXdxUXR6ClF4UnNXbDJ4c3g3SGRvV1dUT05zYk96eDBXNngxUXF1WTd6cHdpTUNnWUIyYXVWdVlHWDhVT3FmbTlGUmR3K3YKTzRsUWJZS1FuelJNRkh3WGRHVG5DTEh2Wk8xMUZFbGJqNW9haWJBTDhMdGViVWxGajBtajhHOGR3aEVocWV3MQp4QS9DSEtVL2NFbzR6amxjK0Z2TDFxOU45by9MTXNZUTFURlBwY1hYMmlnMVllQ0dMd0NGdHF5bHpaWVpBK3kvCnkvbU0xRm9pS3pLMGJYa1Raa0Y5dVFLQmdIaXczUkNxSUpJbFBRVGEzNlBIZEoraWpTQXVuMWRnVHZTNkFxYlMKcUhRV0JHbDJvaWZWdjJPRVFGaTdnalFFeUVQRDc0WktyNEVvM093bnNvUEYvcGUyM09LMlFQdys1SjloVSs0Tgo2bHJEZUQyMEhJMUpidC9USGNSNUoxUWN2RFRzdzRDSEVDM2JBQWtMbE1DUW5EUGhSTVBRaUdPNi9qTE5jR2t0CmVsdnpBb0dBTDl5RTlJVTB6Z1Jxc1prM2J1VzIxK1RlM1dmaUV1RGs4aTRCdzV5RzdScWdvbmpsaHRPVS9zQ1IKK1RRalV4S3JUa1g5RXBFKzFSbnpwUDVRazlWcXhKMWNsRWZOKy8xa0NQTWNFMHd2NEtzc2NKV2dTWkdlUC9JSAprZlJRL05yWjNMb3hXdXIzakl0ZjNhYnJ4L0xxN096a0VaS3RpV2VzcGtNQ1pFZk1aVkE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5zZGpKbWc3TTM0a1Z3dE9kTnZKY0l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV5TVZvWERUSTJNVEV5TVRJeApOVFV5TVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFzZ0JlUHhONVVZdWFWS0dpTWNleUYydi94MlRpbnEvL0s3THhYSDZDeFJDelFDMlgKL1FvREx5aVZIWjBKMks5QXVmbzRFdkJmNC84a0R2NGtMOEY1NmRxcHp5ZVVtNmg4aWhNYnQ3blJvYit4Vnhwbgo4M20yeXAvUURub2NGYnlCcFllUURhNjR6MSt4Nk9LU2RMR0NaWmkyU0h3ZVNsbDJRTnEzRXArUEVKc0FIV3RYCmduS003OElTblQyR0RKNjdlRndraE1YVVVwMUVIMkU3WkswaG9FRzczUE5mRkdUdGN1SXk0b3VyN296Q0Y4cm0KUzVYbEpqQlpRUERDelJOS2lCbVppd1hQcU9iNzFiK1VHMmZOanNBU2QwZElNL2xKWDg3Y0tvNnpZNEFuSVMxago1YWxZc1ZzblE3aXMzalllTTZ3UFRSSkRxSDRFaUxwRFdiQmRDd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSHlxcGpvWUNZM2NYbjhxTGZYSWp4S3ZvZTc3TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQkp3b3EyMkc0R2pBY3crTlo4M2p1MzZrd1NZelF5b2g0M01pYTd5UUN5V0YxMHZnM2VRVHpJCldBSWV0STlVUUtDVVU3d0UrcFowUnB5cy9xRDJDYlJpV05EdTBERWE4U2xBM0Fxb1hhM0VDdjgwNEtwNE8zVGIKTzJWejAvdzVWL1owME9EZXRORnBHTjJTcmpxRWxYWjdYRVFYNUZKN3c0RHJ1VWNNS2pjNk0xbE5tWjhaWXpIegpsL0htUllDM1BhdHIwK2dxMTRmbkx3a0o3bldjRW5uN0FTVlRNbm9kZE5wMWRMQlVMdjluYXVyWERBSjdlRlJYCk5mTzE2aDk3V2dIUkhmcjJJNFN6aERjTGtsVkVmelNiS29JWkFja0pEWnJBTEMwT2I3OCtycHBnSElnR1E0ZDMKNkFjOVhGZSt1YVJxOU1tYzUrN21hWjVsaFhqTEpoaGwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUekNDQWplZ0F3SUJBZ0lSQUlMK0JIamFwa2hXLzQzcjdVY1ZqYjB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV5TVZvWERUSTJNVEV5TVRJeApOVFV5TVZvd0pqRWtNQ0lHQTFVRUF3d2JLaTVqTVRjdWFIVmlZbXhsTFdkeWNHTXVZMmxzYVhWdExtbHZNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3Vk8xbE8ySXptNXVuSjgzLzZCcmtmNkMKS2p3cnhtalpuVWNBcWdnb0g3NGZXZ3NTVFFFakFjNUVPTS8zVVdzUnhkeWFMazlPb2E1ZkxBcDRpbTVobmFTVQp4TWgyVVhHcjFsekMxQnBhZ0dNT083N1poc3orL0s1ZE9ZQlo2Rzl3QXphUC95OEpnVnhBaWoyK2V2T2lidVJ4CktoK2xjbW12bTZqN0NDa3Jzc1dqWUIwNFVOYjQvWTJqcDZlSHFIc0xsbWRCdExwKy9YbC9RaUcyT2JrK3ptUGQKSFRWT0tTYWJ2aUFvT3o2cGdwdzI3bGhqVUxibXZ2Y0JXU2xqeFRTM29lUW9ucUc2TW45UXBqUjJxVEdVamJpcApUcnhYdXZOcEs3eDdhVjRNZTlwNk1VNVRaWUJGSFBoVGtIeWZWdkE2ejU5RGtTVVNlWTVVZ1F1bTFULzhxd0lECkFRQUJvNEdKTUlHR01BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlI4cXFZNkdBbU4zRjUvS2kzMQp5SThTcjZIdSt6QW1CZ05WSFJFRUh6QWRnaHNxTG1NeE55NW9kV0ppYkdVdFozSndZeTVqYVd4cGRXMHVhVzh3CkRRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDcUNna3RWc1hsRlg3R0R2QjZGdS94K2ltalJnbmdQMXJCLzZWWlQKTFE4MVJVM1FRSXEyc3A0Mnd1VEVGS1JZditGeDhEek5LMzJJZ0IxRUZVRjJYNEZUTEZKK0xOYUVndkJTbGpWbQplUFBPTS9ld1pxUXVxN0IyUWlDYTlDQlZsWmRyZlJ4WTBMQS9WenBrU2RKTXNIZzgxbTk2S0JCRkUwTjJTSUptCnpKMncvU1dZNWZKUDRwd1VvMEQ1N0ttK3lNZXJ2RUd1cXEvNVlMTGJQODJ3dHhFVGtudXJNZllrYkVmOGNmSHEKSFptdGhpbXgwWGZ5dE5MTWgzMW85UEZPMEtocmd6RUdSOTJ0cnFkK2dJV1kyY1N3RzFTUUJTaEFhd3VpWDNtcgpnNHZLSHFsZ3JnYXc0b1VtcWtBQlAzU0wvL0FOY0NxWHdBdy96TFNIZnRXTmJDUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd1ZPMWxPMkl6bTV1bko4My82QnJrZjZDS2p3cnhtalpuVWNBcWdnb0g3NGZXZ3NTClRRRWpBYzVFT00vM1VXc1J4ZHlhTGs5T29hNWZMQXA0aW01aG5hU1V4TWgyVVhHcjFsekMxQnBhZ0dNT083N1oKaHN6Ky9LNWRPWUJaNkc5d0F6YVAveThKZ1Z4QWlqMitldk9pYnVSeEtoK2xjbW12bTZqN0NDa3Jzc1dqWUIwNApVTmI0L1kyanA2ZUhxSHNMbG1kQnRMcCsvWGwvUWlHMk9iayt6bVBkSFRWT0tTYWJ2aUFvT3o2cGdwdzI3bGhqClVMYm12dmNCV1NsanhUUzNvZVFvbnFHNk1uOVFwalIycVRHVWpiaXBUcnhYdXZOcEs3eDdhVjRNZTlwNk1VNVQKWllCRkhQaFRrSHlmVnZBNno1OURrU1VTZVk1VWdRdW0xVC84cXdJREFRQUJBb0lCQUZwZ05KbTdkV0h6ZEJnWgp3b2JveW9ERWRyc2h4K0VIOFBzNlR4QXRvZnc4MTlFekxjbjd4dzY0QzJKM3JnbE13VkU2OElUSHBGMm04MnpXCk5FV2FsbDJvcTdkV2N5RmR2MVFGcHpxYVcwWjdpQkxjQkRxbEtHcWRaSTFWK0RIVnJvcUIva3p3QTBTTENNelgKVW0yTjZaaG5pSk9GbWNWanJLbGJGSWRiSDhlQkZ0c1NoU0RCU0svazUxRmlodVNFa2svWlZjNk9QRDZOL2hjNwpXSDVEYms3VDdJakVkbStYdUFrNm1hTHBwUk5rMDYvd1JjdWdoVmJUTUxiNTFJZU5ZME5zeXlpaWd5WFN3OUprCk5KSGQvVlhsQll5aVpBazdIK3IzOVVFNFk4MlhtY2QxanZ3UG9DK21XaEdPajRmaWxabkVEbitORFZzMmdvZ3IKdHFIWDk3RUNnWUVBNXV0UXlyN2pjTVhqMitjc1A2WEhtNnArb1ZpeFV6KzVLR0hwT2R3SFQrNlR3Mlk1U0ZuNAowVS9NSDJNdlZMUUZLMFNadS9oWGJWamhaa2JPMEdlNXR1UFFlSDhiRngzVFJoZ1J2YklwK0llNUdkTU91bXlGCmFwSzdjYTlQeC92aEo5a0RGeE9Vd1o0Tmp0Mkl0RjNmRDVWdmFpMEtpaWN1NnZmVG1uUU80Z01DZ1lFQTFsTWwKYXJHQ0ZJbG5kU2pmak1WZFd5VXN1TG5zSndlOXJVSGpwR2NGV0dwa3luUUZMZGVNMmNYWjRYRUx2eWIvRVU0bAp5TmhLZWVGcHgxY0VvNlhMRC9vVWlSQmxhRXRMbTlBamhFTjliemhTckVudm1wWGpWL3JsQXFvZnZWVzVHbmZyCkRpNk5lNGZBekltaXpFY203cFBCdTVqZDJraGRDcExpZWlXR2pqa0NnWUFVWmNMY05lSm5Tc09tNEJPemg1UkwKTnRNNnMxZnVqNWx1YkwrcVFicFBvRFpqTXp0cUhiQng1TWVXR2kvTEhwKzZRN1FFdTVvVmFaMTNhRmZLWnU4cgpyWkh6b3Q2a3V4aTNmMWJKMTl3SFBRM25yeElFKzZNSlYrN0F5d2lVRkxhOXkxaVBpRVpDbUJDQWh5Y1ZMNW1OCmlkaXVtMDNzQ0N3SHkxNWdyVkhIT3dLQmdEbnNYc0JuR1BEVDhkSUlLZUt4dEhsZG9xaUtGdmkxYnQzVVlPR2QKdGlRZkhQNWFQTXdXNVVvMTNweS9JSjJZdkhiQTJCVmYzMER4V3RVMC8xdjdBdFpla0E0N0VDMFByRzkvNFJsdAo1QWliQUR6di9vR1k0TWgyVms1U0RDSHZlUWRlUVhpanZEa1doMVRBSGU5M2kxNFBNTnl5ZzhMcXE3cWYxL1dMCkRzS0JBb0dCQUsrb3N3TnNzd05uQWNjak1DeGtYZEtwN2ZqK3gzNGRTcm13d3V0SUF3NWdmWTVhWmozYytrQU0KN1R2REpZSTlIUlZ6V0I1Z1k0R1d3MmRCdktGMUJUZXNQSlhSYmp2RmhCRXR4aUFJeEdUQlVIMzJaRlNCTFNNbApWeHJXaEl4TGlJcVJybHlhV3N5QjJnQnZsbU5sT2l3Q2RuK1lKaE90RW15bGFmTnIrLzhHCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: c17
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "117"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-wireguard: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "false"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  ipam-cilium-node-update-rate: "15s"
  cluster-pool-ipv4-cidr: "10.17.0.0/17"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  cnp-node-status-gc-interval: "0s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "true"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"

  external-envoy-proxy: "false"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: c17
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/clustermesh-apiserver/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumexternalworkloads/status
  - ciliumnodes
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumendpoints/status
  verbs:
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumexternalworkloads
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver-metrics
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/component: metrics
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: kvmesh-metrics
    port: 9964
    protocol: TCP
    targetPort: kvmesh-metrics
  selector:
    k8s-app: clustermesh-apiserver
---
# Source: cilium/templates/clustermesh-apiserver/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  type: NodePort
  selector:
    k8s-app: clustermesh-apiserver
  ports:
  - port: 2379
    nodePort: 32379
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.14.2@sha256:52f70250dea22e506959439a7c4ea31b10fe8375db62f5c27ab746e3a2af866d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/clustermesh-apiserver/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: clustermesh-apiserver
        k8s-app: clustermesh-apiserver
    spec:
      initContainers:
      - name: etcd-init
        image: "quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args:
        - |
          rm -rf /var/run/etcd/*;
          /usr/local/bin/etcd --data-dir=/var/run/etcd --name=clustermesh-apiserver --listen-client-urls=http://127.0.0.1:2379 --advertise-client-urls=http://127.0.0.1:2379 --initial-cluster-token=clustermesh-apiserver --initial-cluster-state=new --auto-compaction-retention=1 &

          # The following key needs to be created before that the cilium agents
          # have the possibility of connecting to etcd.
          etcdctl put cilium/.has-cluster-config true

          etcdctl user add root --no-password;
          etcdctl user grant-role root root;
          etcdctl user add admin-c17 --no-password;
          etcdctl user grant-role admin-c17 root;
          etcdctl user add externalworkload --no-password;
          etcdctl role add externalworkload;
          etcdctl role grant-permission externalworkload --from-key read '';
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/state/noderegister/v1/;
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/.initlock/;
          etcdctl user grant-role externalworkload externalworkload;
          etcdctl user add remote --no-password;
          etcdctl role add remote;
          etcdctl role grant-permission remote --from-key read '';
          etcdctl user grant-role remote remote;
          etcdctl auth enable;
          exit
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      containers:
      - name: etcd
        image: "quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/local/bin/etcd
        args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        # Surrounding the IPv4 address with brackets works in this case, since etcd
        # uses net.SplitHostPort() internally and it accepts the that format.
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=clustermesh-apiserver
        - --auto-compaction-retention=1
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - name: etcd
          containerPort: 2379
          protocol: TCP
        volumeMounts:
        - name: etcd-server-secrets
          mountPath: /var/lib/etcd-secrets
          readOnly: true
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      - name: apiserver
        image: "quay.io/cilium/clustermesh-apiserver:v1.14.2@sha256:0650beac6633a483261640b6539c9609f5a761f4ab4504fd1e6ffe7f2bb82e9a"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt
        - etcd.config=/var/lib/cilium/etcd-config.yaml
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: identity-allocation-mode
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: enable-k8s-endpoint-slice
              optional: true
        ports:
        - name: apiserv-metrics
          containerPort: 9962
          protocol: TCP
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: etcd-server-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-server-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-admin-client
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-admin-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-data-dir
        emptyDir: {}
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "clustermesh-apiserver"
      serviceAccountName: "clustermesh-apiserver"
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: clustermesh-apiserver
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.14.2@sha256:a89030b31f333e8fb1c10d2473250399a1a537c27d022cd8becc1a65d1bef1d6"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.12.0@sha256:1c876cfa1d5e35bc91e1025c9314f922041592a88b03313c22c1f97a5d2ba88f"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.12.0@sha256:8a79a1aad4fc9c2aa2b3e4379af0af872a89fcec9d99e117188190671c66fc2e"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.

# Only create the namespace if it's different from Ingress and Gateway API secret namespaces (if enabled).
