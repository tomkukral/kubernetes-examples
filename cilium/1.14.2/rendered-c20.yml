---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSDEvNnZzVTV3c0hCNEpaS3d3aEMxakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEkyV2hjTk1qWXhNVEl4TWpFMQpOVEkyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3Z6NFY3VGQ3TnBNQUdGekxNUXAwaG00dzNtdmNWbjFoZThRMk0rN0llZ1hLbmNIbTAKWlNQbXNMNUF5RVpZKzFsbTRheWNuSUtlQ2tlcmgwV0U4eDZKUE04dE0zSTJOdmJZUkVRdndSU2ZEWlVGUU9ZRgphbDRNaHFzVGtjWWJsTFlrMWlpOGI5YzJNTjhHT3FrdllTdWRqMnpiY1dhNnplZjc1NlZSb1ZEczRONzE2N1pSCmEwcm1HVzZEa3NKMUFyQnZBMWVqd1ZyY01zYVN1MGoyaHpGSUhZbE52U2Q0b1JSTHZvaW1mZVYzb2VUT1ZJWmUKMUZnMGRJaHlQZVlOMkZieWJzZmRvOWNDeVNIb1BnQzVYTmFaM3I2MFgvRE1jOWZqWXhmOUdtUyt6d09ySFQyeApVN0h1VXgweUZ4K0twTStndGlsMnpYa25uWWErWnN1NUk1b0hBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVSd0NwVkRVZUFUNXNCVGlsdnZCT2V1UFE0S0F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGck02S1NsZ3I4U0ZnbGcvVXNyemZpdEI1TzhhVjZZeC9FaExHdjZQcWlrSnJKNGRkcnVBbHRICnpXeDMyRGUxdW91Y21sRTNWdUtFeFkxMEl5UkNyM1Vvekx6cVlUQlg1UTFNbGd3MlJzMHpVT1Qzay9QQUtWNnMKYTN6bFd3NVYySVpSN3IvSThlTlc4c1BpTU1IaHRFazN5dVA3YUlKMlUyemJjSkhmdlRDNDUvNXRFT1k5ZndXQwpLMHFTbzFVWjBHNGs2bCtHNHNWR0hYQ0UyeEVJbThZeENhdWlQRU5QR0MrN0Zvb29MRXBKeE5ET0lOVlB3UmVuCitqQzErSFVySk0wM0JvaHZnaFBidVVTTisydE9SYTY1aEtHOFRLU1J4RVUyVjBxbU5LdVhhSWdZcE5uRlR3bUoKdS9tV0RNcXVQR2p6bVM4WENrV1BwM0t6dWt5cjQwST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcjgrRmUwM2V6YVRBQmhjeXpFS2RJWnVNTjVyM0ZaOVlYdkVOalB1eUhvRnlwM0I1CnRHVWo1ckMrUU1oR1dQdFpadUdzbkp5Q25ncEhxNGRGaFBNZWlUelBMVE55TmpiMjJFUkVMOEVVbncyVkJVRG0KQldwZURJYXJFNUhHRzVTMkpOWW92Ry9YTmpEZkJqcXBMMkVyblk5czIzRm11czNuKytlbFVhRlE3T0RlOWV1MgpVV3RLNWhsdWc1TENkUUt3YndOWG84RmEzRExHa3J0STlvY3hTQjJKVGIwbmVLRVVTNzZJcG4zbGQ2SGt6bFNHClh0UllOSFNJY2ozbURkaFc4bTdIM2FQWEFza2g2RDRBdVZ6V21kNit0Ri93ekhQWDQyTVgvUnBrdnM4RHF4MDkKc1ZPeDdsTWRNaGNmaXFUUG9MWXBkczE1SjUyR3ZtYkx1U09hQndJREFRQUJBb0lCQVFDYTRpK3VHVVFYMXZSMAphU3VQVjRBbWcycGI4bUdLNHY1dlpkMlNQb3NFNVBXbEhTbWJDeDg5dEtkbld3amVpMUNQbW5EKzU4TUtoL1ByCjRSZ1ZzRGxPbmd2R3ZuUDMzeVJJRXB3ZmxmSWN6VkpqZG5FdWhDNm15bDBjdUdmWEZJUUNuOGp6ZVhRWGdhWjUKVG1TT0lRVFRvZTg4eEFMRXYzR0lNdU1wcnZ3a01lQlZMUC9WamsySEhabGtybTQ0eHlZZU9nVTJOK1k2bTd2Ywp2WFJibmp1QzcxcU1OSFRwR3kwTW9KUG1QZi9hendOamd4L2JjT0UwL21mWWl6Nndua0VjYmozWGMyVHk5bE9rCm9XVm5jUnZsUk00N3p0Q3BKTUNFVnFVUkpLcXNNTnB1Z1lNcUljUGlER1lIbUpsOWJsSU5PbUxPemFReXNZUVIKK0ttYm9ZK0JBb0dCQU1TQ2Z2NHRCOWFMNTdCVTMrY2RSNElYSmlUa040WTlVaDdNM2l2SVg2ZHdBUjUrTWM4QwpEcEZvSXBQRUJTL2FvMVExc3J4MlF3R0FZcVA4ZDdqdlFXblRYK1NKemxmaUdBRHhTeWk0eUEwZG9EZC82aUFkClBCN1c3Nk44Sjg1ZmZKOUZPam1HWHRxRlJ1Zzk0bjc3R24zOWVVdEx0dVR3NjNTUWpNL3JMUXpKQW9HQkFPVUkKMS8vUnYxa29La3FrQVROK1h5TDM2WWIxQ3UyZCsyaHJETkdWeXFSRDk5Sk5PYTg4N2lTa01qWjZMUTUzYjAxZApyemV6TndIQ0F4UkgzQ0wrTG85LzAvNm1wN2ZzNDNndE84emNROEV4THN4eGN3ZFBxd2pJejFzMmwwMHdzajQ3CnNYMkFMRjBXTHk2RURNQ0hqMXV5SnRiMlZ2SnMzd1R1d3Z0bE0yaFBBb0dBSnFRZWdxNnFKdWNWNVJlYmU1L0gKU3U1d1lycTVyRnpzZy8vM0JCYi9zRFlYRWo3d1htdGlIL2VoTFB0VHBjaFJhNkt2aGQyZmFYRXNkR0NWempqRgozU0JpYjljbFN5UzdZWndSRW0zYmNMRE5xM3dzdHFucEE0dHlUZXlCQzFTOWRiZ3dMZFdkVzB6djE0VXJ2NXB5CjZDbHFxNEswOFNucXN0NGx3bERWWi9rQ2dZRUF1cmhrQ0M1Q2xuZ1ZTbmE4ZC9PZHNnOTA5azZOMHp5SnV3NFQKREViWFJ1WVdndi9zZUQzdlZEWDhyY2NiTm9FT1gzOXlHckhqdFc0clBueDdMcGdVODI1ZU1XeENyY0xWaTZNcwo3bzNnT3Y5U3pOL3N6RmdaOHZacmZreGFPMWJvNmEyV3ZOOGl5OTBMS0J3Rm5XeW01ald1VG0vVVlKMTdrRFRyCkJ6THhIeWNDZ1lBMHVpMGV6c2QrZm9MV3BDUjN4UkdJRTM5N3dxc3lzVFJIanUyZjNlUFdNYUs2VU8rSUF0bUoKYTdJQUt2UWkxOGFSTDJHaDBpanp6Z2dCZ0NQZVFUbWpUWlk3WE5xMVFnc1E5K3NrS0lkSytuWlBUb1g2UU4xZgpyWFRkYythNGVrcFYzVHR3QU9hUmswZFJobWZiM2VHMk5EUzd6b1RpNmdROSs2RzBPK2JDeHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/admin-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSDEvNnZzVTV3c0hCNEpaS3d3aEMxakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEkyV2hjTk1qWXhNVEl4TWpFMQpOVEkyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3Z6NFY3VGQ3TnBNQUdGekxNUXAwaG00dzNtdmNWbjFoZThRMk0rN0llZ1hLbmNIbTAKWlNQbXNMNUF5RVpZKzFsbTRheWNuSUtlQ2tlcmgwV0U4eDZKUE04dE0zSTJOdmJZUkVRdndSU2ZEWlVGUU9ZRgphbDRNaHFzVGtjWWJsTFlrMWlpOGI5YzJNTjhHT3FrdllTdWRqMnpiY1dhNnplZjc1NlZSb1ZEczRONzE2N1pSCmEwcm1HVzZEa3NKMUFyQnZBMWVqd1ZyY01zYVN1MGoyaHpGSUhZbE52U2Q0b1JSTHZvaW1mZVYzb2VUT1ZJWmUKMUZnMGRJaHlQZVlOMkZieWJzZmRvOWNDeVNIb1BnQzVYTmFaM3I2MFgvRE1jOWZqWXhmOUdtUyt6d09ySFQyeApVN0h1VXgweUZ4K0twTStndGlsMnpYa25uWWErWnN1NUk1b0hBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVSd0NwVkRVZUFUNXNCVGlsdnZCT2V1UFE0S0F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGck02S1NsZ3I4U0ZnbGcvVXNyemZpdEI1TzhhVjZZeC9FaExHdjZQcWlrSnJKNGRkcnVBbHRICnpXeDMyRGUxdW91Y21sRTNWdUtFeFkxMEl5UkNyM1Vvekx6cVlUQlg1UTFNbGd3MlJzMHpVT1Qzay9QQUtWNnMKYTN6bFd3NVYySVpSN3IvSThlTlc4c1BpTU1IaHRFazN5dVA3YUlKMlUyemJjSkhmdlRDNDUvNXRFT1k5ZndXQwpLMHFTbzFVWjBHNGs2bCtHNHNWR0hYQ0UyeEVJbThZeENhdWlQRU5QR0MrN0Zvb29MRXBKeE5ET0lOVlB3UmVuCitqQzErSFVySk0wM0JvaHZnaFBidVVTTisydE9SYTY1aEtHOFRLU1J4RVUyVjBxbU5LdVhhSWdZcE5uRlR3bUoKdS9tV0RNcXVQR2p6bVM4WENrV1BwM0t6dWt5cjQwST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lRVGFzMWduWG13aFp2Yjg4WXU1ODB2REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEkzV2hjTk1qWXhNVEl4TWpFMQpOVEkzV2pBVU1SSXdFQVlEVlFRREV3bGhaRzFwYmkxak1qQXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGREQU1VamRBcHRRSDlZZmkySWhQL0VSZmVsRnYzcUovcExwcUJVdTBRcDJLYTUrUVkKVE52cFc0TGl4SnNRZnU5U0crT1B3R3h5ZnZ0cDM2Q3I5VGFtaml0RVBnNjFkUFVJVGliOEdhaHJYMHo3OHVGOQpZZElMemVhSnptVDhTVkJiL081algybTlCSGhOV1cyNERnd3BOVnkzbjR3elU1S0Y0NldzSS83OGJRdDVZWXd4Ckp0ODE4eVdoNWxWT2JONFM3Z1FxOTh6M1JoQXR0dDM3ZkxYM3JoUTdrRmhOdUhsRm5DZjI4cm5ZODNIVVJyZ3gKdlVXRUx1amZtM3U1Z25iSEp5M0MxVUtUVHZMNmVLTi9WMjlwcEx6dkZseFIrV1AyZVprRFJSQmw0T29kU2dnTgpOaDhHOHlSdDZidnl4dmo0SlQrdjFkMktiZHNrbnJFQUUvYnRBZ01CQUFHamRqQjBNQTRHQTFVZER3RUIvd1FFCkF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXcKQURBZkJnTlZIU01FR0RBV2dCUkhBS2xVTlI0QlBtd0ZPS1crOEU1NjQ5RGdvREFVQmdOVkhSRUVEVEFMZ2dscwpiMk5oYkdodmMzUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBS2I1T1lNblZHQk53c2tuTFJNYnVrTkErbDV5CkM0akY0SDlkY0lYem56R2l6TXByd2JsakRONzF2djcydVZUZDYwVnF5ZXdwMHBRSEFWd2hFT1lDdzhkUFhnWEwKTmdOS0tySlY2SjNUNDI1VG5hV1prSWdvRVlHQllEdlpheUpZenlqM2xpZllRV3pqSFp1cmUrL2FuN0FGQjRpOApEODdCOTNxbTZoQWZXaEwrcStXc2FWeXFRdlRKd2lXdHBpdnN0VWs1bm5KcWdoYS9EbmZLVnBjMXRSU2tGdWd4CmRzaGhMWTUyUyt0Q3VMV2QrM3FueUp4bXRMODVWdzUwUnY5K29SOG1SZ3RCVzlUeWw2QVJpSWhQQy8rQVhVczYKeGQ2YXQ3QS9BVmJ4QlhTTTZmMC9pY3JHdTVySUZZdjZWejVQN0JmL0pLVHhsbkljU1h3UXVvSmQ0dWM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBM1F3REZJM1FLYlVCL1dINHRpSVQveEVYM3BSYjk2aWY2UzZhZ1ZMdEVLZGltdWZrCkdFemI2VnVDNHNTYkVIN3ZVaHZqajhCc2NuNzdhZCtncS9VMnBvNHJSRDRPdFhUMUNFNG0vQm1vYTE5TSsvTGgKZldIU0M4M21pYzVrL0VsUVcvenVZMTlwdlFSNFRWbHR1QTRNS1RWY3Q1K01NMU9TaGVPbHJDUCsvRzBMZVdHTQpNU2JmTmZNbG9lWlZUbXplRXU0RUt2Zk05MFlRTGJiZCszeTE5NjRVTzVCWVRiaDVSWnduOXZLNTJQTngxRWE0Ck1iMUZoQzdvMzV0N3VZSjJ4eWN0d3RWQ2swN3krbmlqZjFkdmFhUzg3eFpjVWZsajlubVpBMFVRWmVEcUhVb0kKRFRZZkJ2TWtiZW03OHNiNCtDVS9yOVhkaW0zYkpKNnhBQlAyN1FJREFRQUJBb0lCQVFEU3NUZGlhUVdvSzFyWgpMSUFIQXBaeXdkVXhsOUhOVHRJVlRoR0JBUXpybWRCWC9INGlWMmdwbHNzNzROQTR1ZlRkRzY0Yy8vbWViTUN4CkdyR29GaFBnVDVTWCtGckd4Tk1sOW5BY1RVeUdBNUY2ZVBoTExXa3JUVGZYMUgzWEp2NU1uOXFOcDQwKzJEcmUKNTBXNGNOTlFtQWRuRXRGc3Z0VGpmNmdUVzBBWlV3VkRSekxFNC9sMVg3bHloUWt5d0ZxMlVXcDJ0NlBrZXB6OQpNU0E4OUpQZUdONytubmVqbW5PYm9CVVlVbEI0T1ZwWHpNVlNybS82Z2Z5K2NNRnJnV3BiMHBOQlBWOHYxdWV6Cm1LSDR6WlRiWU41QlZkRkRLbnBWTjg0d3BBOWczWG0xekR4S1lxb1VWaHZ0d2hVRnVualNHbW1lQnZIOHJjTjQKTHVVQjc2OTFBb0dCQVBQcFZySnNtUEJFaFVBN3A5cU1WV08wLzJ6TGF4cVFBN2VqRVc5c3RySUlLV2pLS2JLeQo5TzdUa2dhSjFoOWQrQ1lwdWZpRUk5UmdESEU4eTN6SnZBRE1HL0ZIeWNwWmhyU2tUWGgyUjB4aWRjaVBNcEIrCjJxSERMcHlPa2JmcUJ0c3R0TzNZVThOQkZtbWtUdWhFMS9VVkp6T29qTEV4VndrT0ZpMUJqNWdIQW9HQkFPZ0EKazNtY3ViVmlDS1hJV0F1RzFIcTBUZXRwNnVMM1V1M2hKVXdDaGRXeWhyNDAybEVHdnZoeHA5WldoM2ZQMDU1eAp3K0tMSDF6M1UxRUFOejNRVFZESy9UVTZSMmxtMjRiNWVJd2NaVm54a1JVZ1VxcGI4VWlIL2tJM2trTFdiUWhVCkdTdGdGbFZtZHVLVXk3b2d6cWh1QVZiRjU5QW5OUktjRjBjSTRqUnJBb0dBTzV0NnBJQUZvREllbm1QMTBXTWEKT3hPd21GWGVCcy9MR01XeExSblVUQTNTa05sVzkyVGtscmo5cHJ0b3FLRytVeFUvYll4ZGRUbEQwU2lhVWhTNgo3VGIwWFRLK0RjVnpOaEl4SEk5TFBVK1NtVURsaW9wMXc3Si9ZYU0xMlV4SUFLaGEzd1ZPOHhpazhZeEYvRjFXCnFYNVI1ajM2cEJMNndpdS9IN0ExOTJFQ2dZQVhjRDkxOE5SK002cEYvV2lQdVk1cjJ4MW9KQ283eGRyVjk0SUsKSE5NaWxNZXlIYXJVdHNiQ1dORXBBVkxzVXMzQld5TDhGeXdTKzFXcWdFZ1VjWi91QXFQMEpiQWpRT1g2eStkVwoyR09RNDZ2Um81TldiTFdDcTJLUGxBZXR3dlgrK21nVWpyK1MzeWd4bWZDL0hDTmt0c0JoNE5xYmwrcHZ0OTlPCktPS1pnd0tCZ0V5TWYvb0NjNVh3QjZGSTFtOTdoRWJIdW4vYUg1ZTBIOEtNZVlEZVBzSE1xTWwzYmtzNGo5ZTEKLzU5dWdwYWRpemgyZU1ET2JYZzlicG93OE95Q2k3eTc5aDU2MFYvZXQyNlR0ZFN4aUFjVUhDZlZkaWJ4eTdzVgpFNkkzeXJON0RsSmpPTlA5eU5aQURrV21BYlNwWHRUYVNVMEZPRnBqZm9uVnoyZUVPd1JmCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-ca-cert
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSDEvNnZzVTV3c0hCNEpaS3d3aEMxakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEkyV2hjTk1qWXhNVEl4TWpFMQpOVEkyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3Z6NFY3VGQ3TnBNQUdGekxNUXAwaG00dzNtdmNWbjFoZThRMk0rN0llZ1hLbmNIbTAKWlNQbXNMNUF5RVpZKzFsbTRheWNuSUtlQ2tlcmgwV0U4eDZKUE04dE0zSTJOdmJZUkVRdndSU2ZEWlVGUU9ZRgphbDRNaHFzVGtjWWJsTFlrMWlpOGI5YzJNTjhHT3FrdllTdWRqMnpiY1dhNnplZjc1NlZSb1ZEczRONzE2N1pSCmEwcm1HVzZEa3NKMUFyQnZBMWVqd1ZyY01zYVN1MGoyaHpGSUhZbE52U2Q0b1JSTHZvaW1mZVYzb2VUT1ZJWmUKMUZnMGRJaHlQZVlOMkZieWJzZmRvOWNDeVNIb1BnQzVYTmFaM3I2MFgvRE1jOWZqWXhmOUdtUyt6d09ySFQyeApVN0h1VXgweUZ4K0twTStndGlsMnpYa25uWWErWnN1NUk1b0hBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVSd0NwVkRVZUFUNXNCVGlsdnZCT2V1UFE0S0F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGck02S1NsZ3I4U0ZnbGcvVXNyemZpdEI1TzhhVjZZeC9FaExHdjZQcWlrSnJKNGRkcnVBbHRICnpXeDMyRGUxdW91Y21sRTNWdUtFeFkxMEl5UkNyM1Vvekx6cVlUQlg1UTFNbGd3MlJzMHpVT1Qzay9QQUtWNnMKYTN6bFd3NVYySVpSN3IvSThlTlc4c1BpTU1IaHRFazN5dVA3YUlKMlUyemJjSkhmdlRDNDUvNXRFT1k5ZndXQwpLMHFTbzFVWjBHNGs2bCtHNHNWR0hYQ0UyeEVJbThZeENhdWlQRU5QR0MrN0Zvb29MRXBKeE5ET0lOVlB3UmVuCitqQzErSFVySk0wM0JvaHZnaFBidVVTTisydE9SYTY1aEtHOFRLU1J4RVUyVjBxbU5LdVhhSWdZcE5uRlR3bUoKdS9tV0RNcXVQR2p6bVM4WENrV1BwM0t6dWt5cjQwST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcjgrRmUwM2V6YVRBQmhjeXpFS2RJWnVNTjVyM0ZaOVlYdkVOalB1eUhvRnlwM0I1CnRHVWo1ckMrUU1oR1dQdFpadUdzbkp5Q25ncEhxNGRGaFBNZWlUelBMVE55TmpiMjJFUkVMOEVVbncyVkJVRG0KQldwZURJYXJFNUhHRzVTMkpOWW92Ry9YTmpEZkJqcXBMMkVyblk5czIzRm11czNuKytlbFVhRlE3T0RlOWV1MgpVV3RLNWhsdWc1TENkUUt3YndOWG84RmEzRExHa3J0STlvY3hTQjJKVGIwbmVLRVVTNzZJcG4zbGQ2SGt6bFNHClh0UllOSFNJY2ozbURkaFc4bTdIM2FQWEFza2g2RDRBdVZ6V21kNit0Ri93ekhQWDQyTVgvUnBrdnM4RHF4MDkKc1ZPeDdsTWRNaGNmaXFUUG9MWXBkczE1SjUyR3ZtYkx1U09hQndJREFRQUJBb0lCQVFDYTRpK3VHVVFYMXZSMAphU3VQVjRBbWcycGI4bUdLNHY1dlpkMlNQb3NFNVBXbEhTbWJDeDg5dEtkbld3amVpMUNQbW5EKzU4TUtoL1ByCjRSZ1ZzRGxPbmd2R3ZuUDMzeVJJRXB3ZmxmSWN6VkpqZG5FdWhDNm15bDBjdUdmWEZJUUNuOGp6ZVhRWGdhWjUKVG1TT0lRVFRvZTg4eEFMRXYzR0lNdU1wcnZ3a01lQlZMUC9WamsySEhabGtybTQ0eHlZZU9nVTJOK1k2bTd2Ywp2WFJibmp1QzcxcU1OSFRwR3kwTW9KUG1QZi9hendOamd4L2JjT0UwL21mWWl6Nndua0VjYmozWGMyVHk5bE9rCm9XVm5jUnZsUk00N3p0Q3BKTUNFVnFVUkpLcXNNTnB1Z1lNcUljUGlER1lIbUpsOWJsSU5PbUxPemFReXNZUVIKK0ttYm9ZK0JBb0dCQU1TQ2Z2NHRCOWFMNTdCVTMrY2RSNElYSmlUa040WTlVaDdNM2l2SVg2ZHdBUjUrTWM4QwpEcEZvSXBQRUJTL2FvMVExc3J4MlF3R0FZcVA4ZDdqdlFXblRYK1NKemxmaUdBRHhTeWk0eUEwZG9EZC82aUFkClBCN1c3Nk44Sjg1ZmZKOUZPam1HWHRxRlJ1Zzk0bjc3R24zOWVVdEx0dVR3NjNTUWpNL3JMUXpKQW9HQkFPVUkKMS8vUnYxa29La3FrQVROK1h5TDM2WWIxQ3UyZCsyaHJETkdWeXFSRDk5Sk5PYTg4N2lTa01qWjZMUTUzYjAxZApyemV6TndIQ0F4UkgzQ0wrTG85LzAvNm1wN2ZzNDNndE84emNROEV4THN4eGN3ZFBxd2pJejFzMmwwMHdzajQ3CnNYMkFMRjBXTHk2RURNQ0hqMXV5SnRiMlZ2SnMzd1R1d3Z0bE0yaFBBb0dBSnFRZWdxNnFKdWNWNVJlYmU1L0gKU3U1d1lycTVyRnpzZy8vM0JCYi9zRFlYRWo3d1htdGlIL2VoTFB0VHBjaFJhNkt2aGQyZmFYRXNkR0NWempqRgozU0JpYjljbFN5UzdZWndSRW0zYmNMRE5xM3dzdHFucEE0dHlUZXlCQzFTOWRiZ3dMZFdkVzB6djE0VXJ2NXB5CjZDbHFxNEswOFNucXN0NGx3bERWWi9rQ2dZRUF1cmhrQ0M1Q2xuZ1ZTbmE4ZC9PZHNnOTA5azZOMHp5SnV3NFQKREViWFJ1WVdndi9zZUQzdlZEWDhyY2NiTm9FT1gzOXlHckhqdFc0clBueDdMcGdVODI1ZU1XeENyY0xWaTZNcwo3bzNnT3Y5U3pOL3N6RmdaOHZacmZreGFPMWJvNmEyV3ZOOGl5OTBMS0J3Rm5XeW01ald1VG0vVVlKMTdrRFRyCkJ6THhIeWNDZ1lBMHVpMGV6c2QrZm9MV3BDUjN4UkdJRTM5N3dxc3lzVFJIanUyZjNlUFdNYUs2VU8rSUF0bUoKYTdJQUt2UWkxOGFSTDJHaDBpanp6Z2dCZ0NQZVFUbWpUWlk3WE5xMVFnc1E5K3NrS0lkSytuWlBUb1g2UU4xZgpyWFRkYythNGVrcFYzVHR3QU9hUmswZFJobWZiM2VHMk5EUzd6b1RpNmdROSs2RzBPK2JDeHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/remote-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSDEvNnZzVTV3c0hCNEpaS3d3aEMxakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEkyV2hjTk1qWXhNVEl4TWpFMQpOVEkyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3Z6NFY3VGQ3TnBNQUdGekxNUXAwaG00dzNtdmNWbjFoZThRMk0rN0llZ1hLbmNIbTAKWlNQbXNMNUF5RVpZKzFsbTRheWNuSUtlQ2tlcmgwV0U4eDZKUE04dE0zSTJOdmJZUkVRdndSU2ZEWlVGUU9ZRgphbDRNaHFzVGtjWWJsTFlrMWlpOGI5YzJNTjhHT3FrdllTdWRqMnpiY1dhNnplZjc1NlZSb1ZEczRONzE2N1pSCmEwcm1HVzZEa3NKMUFyQnZBMWVqd1ZyY01zYVN1MGoyaHpGSUhZbE52U2Q0b1JSTHZvaW1mZVYzb2VUT1ZJWmUKMUZnMGRJaHlQZVlOMkZieWJzZmRvOWNDeVNIb1BnQzVYTmFaM3I2MFgvRE1jOWZqWXhmOUdtUyt6d09ySFQyeApVN0h1VXgweUZ4K0twTStndGlsMnpYa25uWWErWnN1NUk1b0hBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVSd0NwVkRVZUFUNXNCVGlsdnZCT2V1UFE0S0F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGck02S1NsZ3I4U0ZnbGcvVXNyemZpdEI1TzhhVjZZeC9FaExHdjZQcWlrSnJKNGRkcnVBbHRICnpXeDMyRGUxdW91Y21sRTNWdUtFeFkxMEl5UkNyM1Vvekx6cVlUQlg1UTFNbGd3MlJzMHpVT1Qzay9QQUtWNnMKYTN6bFd3NVYySVpSN3IvSThlTlc4c1BpTU1IaHRFazN5dVA3YUlKMlUyemJjSkhmdlRDNDUvNXRFT1k5ZndXQwpLMHFTbzFVWjBHNGs2bCtHNHNWR0hYQ0UyeEVJbThZeENhdWlQRU5QR0MrN0Zvb29MRXBKeE5ET0lOVlB3UmVuCitqQzErSFVySk0wM0JvaHZnaFBidVVTTisydE9SYTY1aEtHOFRLU1J4RVUyVjBxbU5LdVhhSWdZcE5uRlR3bUoKdS9tV0RNcXVQR2p6bVM4WENrV1BwM0t6dWt5cjQwST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQVB1SVB3NktTMGsxWThSMmxlU0NWYnd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV5TmxvWERUSTJNVEV5TVRJeApOVFV5Tmxvd0VURVBNQTBHQTFVRUF4TUdjbVZ0YjNSbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBCk1JSUJDZ0tDQVFFQXlNMGpmTkduQUc3ZEtWZzNrZmV2akJoNmZ6M1NVZUJkZHJHUkcvbFhqemFwbDZNNmxhYncKekVmc0FoQ3lhMWdueTBMVitPNFlBcmFVRWh0Q290VzFGaFhQM0dETTJycmY3WEhKK0k2VjZ3ekk1TnhQUFdMUgptOSt2UW81RklWbUg0SE9MSUhrL2x0TjVJNHo3Q2w5bGswMUJENkplYnI0RHc3ZjdLS2lMdUptdUhVd1EzYlhjCk10UFp3OXpub29yQ1dxUlhLTVVMUlFXYnZBMDlPaVYzSzZlUTJnLzVWRnVzNEVXQUJiZnp1WlJxYkJETnE2dWMKR21ETGhobmRkTW93NmdCcE9IR0dkb015bklpVG1INnpKMlU0RmJsU1RFUjQ1eU1ZR1lKR043bDJha1ZDeU84egpOS0UzMzhaSjVBeHZwZ0JzMmxtV0w1eFozRm9aLzhsZEtRSURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DCkJhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXcKSHdZRFZSMGpCQmd3Rm9BVVJ3Q3BWRFVlQVQ1c0JUaWx2dkJPZXVQUTRLQXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUpiOVBVcTFCclRhWmU1UWNnbENLSWJPRGZPa0xZaHNmYnZHTnZMUm04WWRtYjZONUhFcXd2V3p3Mlg1CkxCNmZtMFg2VTljUWQ4WnRkUzV2eUh1ZmFMZ1VxeWJEWEc0YTllQkpYNUlTeEkreXdOb21MMWFVMVg5RDU4MysKRW8zU3lSelViZ3dPejlPK1NORXVDalEvVzY1am9OWCthSWhGTHEzVnN2V0R1aC82VTB0UjlPMVQwTVBaNUYwLwpHQTU3c0pOSnNXaTN5NDA0Q1RYWUpXSFNJUXhtb1pKaXhyVFR5dWlreGlLTlozWnc0YUNWTHdyWTBabFBiQ1gzCnY2bWdmZ1ZqaHhTMzlwR2Jtc3F3UmVtem00TVZRNlZjdmRzYktTVVhrZWtETEZVOERZMmttd2RUejBSMVYwa0EKNzJkdlhsdkJic3djY0R1amxTV0VUdWtKMVRzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeU0wamZOR25BRzdkS1ZnM2tmZXZqQmg2ZnozU1VlQmRkckdSRy9sWGp6YXBsNk02CmxhYnd6RWZzQWhDeWExZ255MExWK080WUFyYVVFaHRDb3RXMUZoWFAzR0RNMnJyZjdYSEorSTZWNnd6STVOeFAKUFdMUm05K3ZRbzVGSVZtSDRIT0xJSGsvbHRONUk0ejdDbDlsazAxQkQ2SmVicjREdzdmN0tLaUx1Sm11SFV3UQozYlhjTXRQWnc5em5vb3JDV3FSWEtNVUxSUVdidkEwOU9pVjNLNmVRMmcvNVZGdXM0RVdBQmJmenVaUnFiQkROCnE2dWNHbURMaGhuZGRNb3c2Z0JwT0hHR2RvTXluSWlUbUg2ekoyVTRGYmxTVEVSNDV5TVlHWUpHTjdsMmFrVkMKeU84ek5LRTMzOFpKNUF4dnBnQnMybG1XTDV4WjNGb1ovOGxkS1FJREFRQUJBb0lCQUNBVkhwRm4wZDN3MktjdApjQnVEVG1uODB6MlhQQTVXNGJnQUlPWXVUWDRWUnIxeWwvNm5JSndTOWJOU3haNy9BOFNuRmhiaXU3VmJSSWNzCkVkYUFmS0ZkdE10S01CRFdnTWFvUXBQUy9FTUUxT2cwQnZrUTI5cWl2NWJMc21Ia3N4LzZkZ1VuT2pDMzh3ZnEKRTRZUnZlSHVHdklMaURqN1pSQ1ZTYXl5V1RpU0ZHeWNrWkwxeUpLejY3Qk80TW9MWmNyRkgzL1Zmd0FsbGNPSQpFVzFFY1Y2MkJPQkNOdy94Vkd2aGJJQXIwOWVXd0NPbmZGa3F6ZFV5bTcvQnc4UGYxQ0FCZE1WMVdsWEI3S0wzCmpZMVA3ZGpDYWFkL09MbEVlL0VFKzRhNitIbkZkZERJc2t5UmVYcDBkY0k2cldVYy9icndhNDFIenR4MHZ6L1QKazVrS0VJRUNnWUVBeTBaKzIwblBUbGhrT3Q2RERJRkFESUt2NU50WHIwOWZTT3ZBRVRGaXFjVFVKSTRFVTJxeQpSN094eWYrY2hYcE9uZzFyd0lDOEwwbk1wQ2JZRURoMy85RzY5NkREdDA2R0h1SnhZM1BXUk9UVGJPZ25rNVdOCnVSTzN2a0Rvcm9Ua0UzUFkzTGpUc2ZtU0JDbXArd2oxM0kwSHRpaTM2L01Qd2x4aE1oTGgwMWtDZ1lFQS9PSmQKcTdscmx2WHRzU0Q5emhuVW1vNFMycE9GWldmSkN1SW5KOWhuc1JZcExJZFVzVHFBMDRlSGMvbFdSeDZTRDB5NwpzTTlTdGRlaU1FTXRlT1d2Z3ZvUUxRcUNxYVpJZDI0eXA4d2VSTHJNLzIwMk5Ga0w4bmlGa2lJdGdEVzdkUE5oCkdma0ltdUQrSWJtU1ZIdnMzb3dZZ2xVaVZYZWFFZkxERytOSHJsRUNnWUJ4ZE9ock52ZzVUMGFxUVBXK0xnbjAKc2FEQlNOZlpKcUVWVDFoRmdGNEVTYkxxc0VXajFZS3FXSmFjRzBwZWlkU0ZqUkllUVB4SUhKWFc3VU5kVWxkUAo5dHkzU0FqVk1FUFZ5eWZrall3RHFnQ0Q0ZFB0SU9VWWJ2UDRnYndkWkZqMHJvMVZMT2dqaHh2RHJRbU43d05qClZXZi9lUnltMm1ScVpDdHZ5bkEzQ1FLQmdCKyt2dW1HdmtYV0czK0gxN1NlczN5dlp4aC9PbGl2ZmFKYkgzVTIKQ2xaRnBPZU5HWW1pQVhnTVpHbWZuRUFUUzF5V1VsMXd1VDVRa25DaWpqdkdBWkZjbU5rK240WnlkRmhod2dRawpjSXhLTXQvQnN2TkJWbW1helpHNXJxS1FuRGFqTXNaUzU4eWhmK1YxNlRPbjF1VmRDdHFabTFURlRkY0E5Wk16CnBkVHhBb0dCQUxzQ2hZMmhCTUZjOXNuRjhpUGFTNzNBUGxZNEZsK2NHWk9JVE4rN3dBd0t0L0ZyQXFPTmdoN04KeldEOGFLbklqV09zaTRJY3dlelAvM3B5UXRXSVpNa2pFZTBWWEQwemRINzVvNWtFMlJKb3E0MXhvWVNpV21RcApmVWZkdWFjc3d5cjRoQlZ0Rkl5U29KZzFaVjZmMVpBZ1R0RENsU2tGZmVuZGl0TUw0bG9TCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSDEvNnZzVTV3c0hCNEpaS3d3aEMxakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEkyV2hjTk1qWXhNVEl4TWpFMQpOVEkyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3Z6NFY3VGQ3TnBNQUdGekxNUXAwaG00dzNtdmNWbjFoZThRMk0rN0llZ1hLbmNIbTAKWlNQbXNMNUF5RVpZKzFsbTRheWNuSUtlQ2tlcmgwV0U4eDZKUE04dE0zSTJOdmJZUkVRdndSU2ZEWlVGUU9ZRgphbDRNaHFzVGtjWWJsTFlrMWlpOGI5YzJNTjhHT3FrdllTdWRqMnpiY1dhNnplZjc1NlZSb1ZEczRONzE2N1pSCmEwcm1HVzZEa3NKMUFyQnZBMWVqd1ZyY01zYVN1MGoyaHpGSUhZbE52U2Q0b1JSTHZvaW1mZVYzb2VUT1ZJWmUKMUZnMGRJaHlQZVlOMkZieWJzZmRvOWNDeVNIb1BnQzVYTmFaM3I2MFgvRE1jOWZqWXhmOUdtUyt6d09ySFQyeApVN0h1VXgweUZ4K0twTStndGlsMnpYa25uWWErWnN1NUk1b0hBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVSd0NwVkRVZUFUNXNCVGlsdnZCT2V1UFE0S0F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGck02S1NsZ3I4U0ZnbGcvVXNyemZpdEI1TzhhVjZZeC9FaExHdjZQcWlrSnJKNGRkcnVBbHRICnpXeDMyRGUxdW91Y21sRTNWdUtFeFkxMEl5UkNyM1Vvekx6cVlUQlg1UTFNbGd3MlJzMHpVT1Qzay9QQUtWNnMKYTN6bFd3NVYySVpSN3IvSThlTlc4c1BpTU1IaHRFazN5dVA3YUlKMlUyemJjSkhmdlRDNDUvNXRFT1k5ZndXQwpLMHFTbzFVWjBHNGs2bCtHNHNWR0hYQ0UyeEVJbThZeENhdWlQRU5QR0MrN0Zvb29MRXBKeE5ET0lOVlB3UmVuCitqQzErSFVySk0wM0JvaHZnaFBidVVTTisydE9SYTY1aEtHOFRLU1J4RVUyVjBxbU5LdVhhSWdZcE5uRlR3bUoKdS9tV0RNcXVQR2p6bVM4WENrV1BwM0t6dWt5cjQwST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURwekNDQW8rZ0F3SUJBZ0lRRDBKSENVR0VKUll6RWsrNWRybHFFekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEkyV2hjTk1qWXhNVEl4TWpFMQpOVEkyV2pBcU1TZ3dKZ1lEVlFRREV4OWpiSFZ6ZEdWeWJXVnphQzFoY0dselpYSjJaWEl1WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBNFJ3WDR5WURGVkt4Um5UUGN5ODcKOWlyTVppRy9BcDFwbmcxWnQzVTRVVzR4TmV5WGJHSXhkV2ZPczZXcnJWb3Q5T0k3cVJFREVMOW5vV1RhclRDQQpWeG5JNDUvZDRTWVpxT0p6M2hCQjBTdUhHR1VYVVBTeXRwU1RVS2lJTElySjJJSW1nNnIrbHVYOEtzTlZQaXV2CmVnTTc1bHUwOHNUOEl5NjFtQWdLQzB1bitZY1ZabjRlQmdKaFoyTDJCTVh2N0hXdTNuU0dwekpLY3o2WVI2cFQKOEdUb1FCdmdSZk1wOCs0NDJCT05KeXNxcHRlbG43WUp5TnNxUzBTTlp5Um5GL0l4YTEyenh0WVNhZXB0MDYyMgppanhWTjNCWUVDajMvSjZYOXF0dzhlQ0RrSkRhLzJCcWJFMlRCQjNvSVV5d2liUVFNaVcvbjB3QWIrNTBkSGJCCmN3SURBUUFCbzRIZU1JSGJNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSSEFLbFVOUjRCUG13RgpPS1crOEU1NjQ5RGdvREI3QmdOVkhSRUVkREJ5Z2g5amJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXVZMmxzCmFYVnRMbWx2Z2hBcUxtMWxjMmd1WTJsc2FYVnRMbWx2Z2lWamJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXUKYTNWaVpTMXplWE4wWlcwdWMzWmpod1IvQUFBQmh4QUFBQUFBQUFBQUFBQUFBQUFBQUFBQk1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUE5Vmhqc0Z5OFRwYVZjNEZHV0F1SmhWUlRMNnZWdDQ5VC9oanptMFcwb2ozeW9XLzdjCmtjL29tTm9uSlhlWTloRWt6aVY1czZmZ003MlhWS2M5NVcwMmtuNjNNTVFZNTZQQ0NsZHhXMlkxQ0hhdVYyUGsKeGJqTStZYVlrRExhMktNMEcrUFhhU3RNUXhtVkdSMk8zKzRpYWN0bW1yZEFRdWpzL0svcHZCbUpOMlJZMG1wUwpLMDYvdnFDby9NeW15MkNEcVo0cWJTT3FPN2lnZDZ2MytxU3JqbVU0aSsrQ2NDandpTlJrenprY0VSMkt4T095CkpEZUNQSDA4TUhlZ2NIM1RRanlCZXY2NFJWUXFUbFMra1VvYy90bDN2R3hTUkNyWGt6bE1pYXdvbEcwclBOYUEKTE1MOFNoaXN4L2NsRDR0a3BJWENiMlprK3VIWnBmNTE3Q0FxCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNFJ3WDR5WURGVkt4Um5UUGN5ODc5aXJNWmlHL0FwMXBuZzFadDNVNFVXNHhOZXlYCmJHSXhkV2ZPczZXcnJWb3Q5T0k3cVJFREVMOW5vV1RhclRDQVZ4bkk0NS9kNFNZWnFPSnozaEJCMFN1SEdHVVgKVVBTeXRwU1RVS2lJTElySjJJSW1nNnIrbHVYOEtzTlZQaXV2ZWdNNzVsdTA4c1Q4SXk2MW1BZ0tDMHVuK1ljVgpabjRlQmdKaFoyTDJCTVh2N0hXdTNuU0dwekpLY3o2WVI2cFQ4R1RvUUJ2Z1JmTXA4KzQ0MkJPTkp5c3FwdGVsCm43WUp5TnNxUzBTTlp5Um5GL0l4YTEyenh0WVNhZXB0MDYyMmlqeFZOM0JZRUNqMy9KNlg5cXR3OGVDRGtKRGEKLzJCcWJFMlRCQjNvSVV5d2liUVFNaVcvbjB3QWIrNTBkSGJCY3dJREFRQUJBb0lCQVFES1Z4SXhuczFPc1ZHZgpYd2ZKSlQva2VYdllvYVNybVFxQ2dzV04zZE9OZmxyRmViQnlQNkR0UXkzTTFMR0gxSE5TbHJmQnRBVHBYT0t0CmM1WUw3bml0MGdOOGR3cGRnbjIyRERiUitCTHhEUXNWcG1oYTRGaHpQUUZka3Q4MENseDhQQ0NhWVcwTi9oTzMKN0hRR3VnVzB5b3RnK0RXaHNlWmhTVzc1Qk9EaVhLTUZEZVB1MDNWa3pOUk1TQjU0WGlFOUVRL05jZnZHTld0NgpLSEs1M3ArS2VZWjlra3FMK1J4V1pvYXhEdFdIaWZsWU1JaXlOWXVOTkN2bnRWcHRuWCtac1VMTkM3NnNLY044Cis3bFl1anlBVzR3MVNHTlNBZmlJVlR4MnRpdTVXMS9jWkEvcHZkc0tUWDJadXV3ZnpoWE90SmgvaWZSMjNzaGEKb2sxMThidkJBb0dCQU9nUGJ3YXM0Y1lZbjRMUmh4a2dQaDRyVEdsMVdTT2ZSQy9XZGEwRkF0dy9GZjQ1ektwYgpCN3hiUUg0MytxY0d5dEJMcmZXVWRVZHkvMFJHb3hGb3JTK2tMLzFIZVp2WjVwbzhsR3dJSHM5QUwvVmNaYXRDCjdSNEoyWVBRQndITXUyNllkenNkbzUzYWxBWStvUldTUTRhd2ZuQXYrcXd4MTRzdEkrWVVGdVpwQW9HQkFQaFYKR1ptdWt6dmFRVlV6MFJMTG5qZ1hpMys0UXZaMHArTDBLM0UwT0dzbm1GN2xEV0ZxNVNKVWVQZDhOa2hMcVl5UQorUG4vTW1BdHhsK2M2d3BDNHJtMDhQWS9Ib0J1eU9wV1FsRzgzeEdXbWwrL2F0N0FDTkl6N21DYURlTHZnVFRyCmtUZncxZTU3bkh4aDh6WFd1ekdMdEpnZHNUejRMTUdpeE5IQWhnVjdBb0dBUFZYbStKSzFVaENzQ0gydEFaMGUKRGdkUHVRZ0ZPWDhkSEsvSWhxU3VidHhWeWM0cEpGWFBJNS9TMmdtZHZJdjFDejBWaTdWamtqRDQrMmpZTFAvSAoxckhFNVdNQTU0cWVndUhFTVJHc1l3Y0tKZ1gzOFY1TklnVmtjb3lIYlpoWmFnL3VZN2VmeVZjK2pLLzlENkNMCkxJeDF2dDFQbWpmS1NzVHhtaHh4T1JFQ2dZQVh1bG5sMjA1cUs2S09kNU1FanJ3aGMrNTZWNnJlVGFzMC9rdWcKVjNNRW1oWHZDMGZLQlNLN3N3S1Q4eVJrcUFZZFRrVGI3a3hyOERQQ013WXFSdFhQRk1EcFpvS05sd2hQaThwdQpjUE9IaExKZmI3VFFiOXpuNk5wZ0ZKZzdGTk50c1F5QklkdnZHNVNLTmZtOUxUVlp1SldhNjB0aUhmeDR6QXF1CldBejJQUUtCZ0MvamU4Wk9qYVZqWXhIeFBzT25hSVY4aStkTTYycm52ellwOHkySWlsNGxaWVg0R1ZLY0RSWjcKbHp0VUIweWg2VDBDV3RVNUZIV1FEUmhvNGRYeXRuYURkQ1BGei9XTmZJUzJ6bTExVGgzVGUwcmdld2RVVmFURQpKejdFOCtkdTE2WnJJUHJJaXZxYkxTR2J1Sk1DbmYwUW5ZUkthVm1rbjAxbk1mMGZ4YXduCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSDEvNnZzVTV3c0hCNEpaS3d3aEMxakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEkyV2hjTk1qWXhNVEl4TWpFMQpOVEkyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3Z6NFY3VGQ3TnBNQUdGekxNUXAwaG00dzNtdmNWbjFoZThRMk0rN0llZ1hLbmNIbTAKWlNQbXNMNUF5RVpZKzFsbTRheWNuSUtlQ2tlcmgwV0U4eDZKUE04dE0zSTJOdmJZUkVRdndSU2ZEWlVGUU9ZRgphbDRNaHFzVGtjWWJsTFlrMWlpOGI5YzJNTjhHT3FrdllTdWRqMnpiY1dhNnplZjc1NlZSb1ZEczRONzE2N1pSCmEwcm1HVzZEa3NKMUFyQnZBMWVqd1ZyY01zYVN1MGoyaHpGSUhZbE52U2Q0b1JSTHZvaW1mZVYzb2VUT1ZJWmUKMUZnMGRJaHlQZVlOMkZieWJzZmRvOWNDeVNIb1BnQzVYTmFaM3I2MFgvRE1jOWZqWXhmOUdtUyt6d09ySFQyeApVN0h1VXgweUZ4K0twTStndGlsMnpYa25uWWErWnN1NUk1b0hBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVSd0NwVkRVZUFUNXNCVGlsdnZCT2V1UFE0S0F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGck02S1NsZ3I4U0ZnbGcvVXNyemZpdEI1TzhhVjZZeC9FaExHdjZQcWlrSnJKNGRkcnVBbHRICnpXeDMyRGUxdW91Y21sRTNWdUtFeFkxMEl5UkNyM1Vvekx6cVlUQlg1UTFNbGd3MlJzMHpVT1Qzay9QQUtWNnMKYTN6bFd3NVYySVpSN3IvSThlTlc4c1BpTU1IaHRFazN5dVA3YUlKMlUyemJjSkhmdlRDNDUvNXRFT1k5ZndXQwpLMHFTbzFVWjBHNGs2bCtHNHNWR0hYQ0UyeEVJbThZeENhdWlQRU5QR0MrN0Zvb29MRXBKeE5ET0lOVlB3UmVuCitqQzErSFVySk0wM0JvaHZnaFBidVVTTisydE9SYTY1aEtHOFRLU1J4RVUyVjBxbU5LdVhhSWdZcE5uRlR3bUoKdS9tV0RNcXVQR2p6bVM4WENrV1BwM0t6dWt5cjQwST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRRlRrU2hWa3BBRDIvSWkxeU1YZVZlVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEkyV2hjTk1qWXhNVEl4TWpFMQpOVEkyV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFESTJBR0ZkVDBTdFVXV01IMVZlT2ZNbVA1WjRKT08KVyt0MWV1T0hUL1ROK1pPb0x6VVVyeE5nbEpSdnFiZ200SE5YWk0zM2lLRmJNUTUrbWYxQS9tWjB1QTVQOUd1Ngp5TXA3NDJGd0RSN0I1M0RPR0ZycFlHV1JEKzY2Yy9HQUI5SWdCRmNWU0N6MnJkM2hib1lZcHl5cGZLMy9PTXZmCktQSThVZndVb0tzdU0rSGNEUWwwbGlMMWpMMzdrWjYvYXBhVEdkbkYvUzI3M2RjRDViMjlrb1llLzIzNTBnMW8KNGRZakExNzJrOGNOdkxqV0hDdS9MTVUwei84ZEtMSGFFV0RkR3N1elhUZmlweXorYWExclVWbzRpZFUrZ3Q4Two2RGlyUG80U2tHNDZ0Ty9xWnRJYTQvWnRJeXpGZVQ3TjRoMVFoaFlqSmZDUzljdGNWWHZUMVZnVkFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZFY0FxVlExSGdFK2JBVTRwYjd3VG5yagowT0NnTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFMd2lUNmh6aVdUQkZaeE1NRjZ6RGViWUpibXhBWVRSUG1Oa3A3bUlKSEtlRzBpdFEKVS92NmVvQUNjV3cxY0d4SzZSbEhKc3hzSEYydU13SVZ4UHdTS3NqdjdOZUdrMGQwS1kzQjFSd0lJU2tRT0ltZApnS2lHKzUyS1pvUHF6TDZGTUNQdFRoZExOZ1ptUTZuV0hLbThyR1A0T01SVkhFSFp5WC9yRW5CZEVVOTcyOVBLCllVTjRnMnZ1MGlqZnM5d3cyeUUrNVVCQzh1cDZsSW02aWJBSElhL2VJVTVSb21reHBCL2x6VGxVa2JtNmp1WHoKUE1RLzhYS3dNWUFQNTdrMXRvQjlNbXkzRTZjWUsvdWw4T2NFeXVjVWliKzBJRVR0VlpYZE02OGw1OUQwc2oxawp6M0ZZZ25OcUVldDJRYUFaMFAvc0loLzNwYWZXK2dyeVRaU1UxQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeU5nQmhYVTlFclZGbGpCOVZYam56SmorV2VDVGpsdnJkWHJqaDAvMHpmbVRxQzgxCkZLOFRZSlNVYjZtNEp1QnpWMlROOTRpaFd6RU9mcG45UVA1bWRMZ09UL1JydXNqS2UrTmhjQTBld2Vkd3poaGEKNldCbGtRL3V1blB4Z0FmU0lBUlhGVWdzOXEzZDRXNkdHS2NzcVh5dC96akwzeWp5UEZIOEZLQ3JMalBoM0EwSgpkSllpOVl5OSs1R2V2MnFXa3huWnhmMHR1OTNYQStXOXZaS0dIdjl0K2RJTmFPSFdJd05lOXBQSERieTQxaHdyCnZ5ekZOTS8vSFNpeDJoRmczUnJMczEwMzRxY3MvbW10YTFGYU9JblZQb0xmRHVnNHF6Nk9FcEJ1T3JUdjZtYlMKR3VQMmJTTXN4WGsremVJZFVJWVdJeVh3a3ZYTFhGVjcwOVZZRlFJREFRQUJBb0lCQUNWazRsT2cwbkFyUS91RQpwN0ZFUTVRNllCRUgyVEZHTi82MWxLdGEzYStENmxRRUJoUUZ6TXZNbmg1ME1RODc5djJzalJTcllhK0M0TG45Cm5jTitHa0ZkQzMwamV2Tlo4eWxCMnFCc01PL1ZVWkZ0dzI5MFBUVFhESkcyaUo1WDFtMlRvVXNiRnhRT3B5TVQKMnUrNElINmw4aGQwMGJDSkJTRHArczgwWXVyRTliWkpUeGIyTkRybCtnK2N0SUxCSkozK2FaZ0JqZjU3YnlnUQpjK2NwWFRobnorb25YbURqcDVxN1daSlZTZDhlZmFSN1k1MXIxU1JFVS9MRkFjUTRtbXZtOHlPQjZmVTF3amFoCnowc2tZb3NxdmpXTVNNcVIvWlg2SjJTeW5QbUQ0WHlLUXN5YlhDZFhaVEhKS2lUQXZKZlBGSm4xOHZQTVBmMnQKV2dndTlrRUNnWUVBNUI5bGp0VlplakRGQyt1TUFNZGVwSTlLSVZsaTlQcHNOMUdHcDhOaCt5VW95bW5RU1drbAp4S3g5YzBGd0NxOGJPS05LQVh4WUt2NFF2T2JoNVRIVWt1eE92enZFd0E4cllKWGkrK0QzZ2p4Rm4yMEp3OG5nCkMrWXVxM0poYlN4VW9SeHc2U2VZQ1pCSitrRnJRREo2ckhlY3pSejRvUEhWNDU3M3laUk5pZDBDZ1lFQTRXTTMKSDArRzhpMFcwQWZvVTRBc1doZzVlQmNhNmY3TlJkUUlKUXlWYUZKUHBWTlk1L1FjWmhhLzUwN3l1TXRpYXgwdwprdVNrSUZ2a3BBcGRzdE5vTFk2L3U0UWVvR0RQMjJ3Q0pITW5WSDI2b3FoQjlxbU5jQWhwOGdIZC9FL2J1Kzg5CmpOUkkySitEQ3FEMU1vNUFnKzJGU1FDVnNHL3NDL1FESENweUQ1a0NnWUVBaldKUUpVaGhubk9makpXK1BiVlQKR1JhZDBURi9QV24vckFGaFBaVEFvMUVTaVBFdjRHL0VzckpkUmhPbWgxaWp2R1NudDJnRGxSSEYrZTMyejRBawp5YktmMDdJTmJTTjV0UER3cno5czUxREhyZGw4bGRZR2dCbDNqMWJpdnpFY2VvWVFETkUzVDZZWDAzeThKaHVqCklFVTU3MzRuTWtqd1VaVHk2Z0o2VkJrQ2dZQUNnZEVHSnlOUUpGSkJwQ1RnY09lTlpRR1dwV01tUVRCVlc0TnYKcmhFblpPci80c3AxWWhEQ3pmUDZoYlZMZXUrd1UxWEwvSUVhM3dyUERGSjRmOE9ENWplWnhXRjExVDNhcWZ2bwpIZVBORzh6c3JFUjNrdkZBMHNjaTZ3Um1IeGxKb09LbFkyTWdEYjR1YXhYdkp3ZnVyOEN3ekRIZUVaQ2xuV1EvCmR2Vm4yUUtCZ1FDQ28yUS9VNzhCMDdwMjNLTUxMakJ2bk5KRWxkNG5maTZrbDRoTGdCamMwOGZQaWVma2dHK2IKQnduMUFENERnK2RYMTBuUGg3TFlBOG0vS29NaUtwRjVxYVdhMk1weU8vTlZORlR5bmNMbVUvVXRxcFhXd0tXUQpFRVZ2UFoxZm85cXkrbVdZTEs2dTBkZTJaeHVETUtIOEN4KzBNbkw3a21PWmdsV08zT3N4dGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSDEvNnZzVTV3c0hCNEpaS3d3aEMxakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEkyV2hjTk1qWXhNVEl4TWpFMQpOVEkyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3Z6NFY3VGQ3TnBNQUdGekxNUXAwaG00dzNtdmNWbjFoZThRMk0rN0llZ1hLbmNIbTAKWlNQbXNMNUF5RVpZKzFsbTRheWNuSUtlQ2tlcmgwV0U4eDZKUE04dE0zSTJOdmJZUkVRdndSU2ZEWlVGUU9ZRgphbDRNaHFzVGtjWWJsTFlrMWlpOGI5YzJNTjhHT3FrdllTdWRqMnpiY1dhNnplZjc1NlZSb1ZEczRONzE2N1pSCmEwcm1HVzZEa3NKMUFyQnZBMWVqd1ZyY01zYVN1MGoyaHpGSUhZbE52U2Q0b1JSTHZvaW1mZVYzb2VUT1ZJWmUKMUZnMGRJaHlQZVlOMkZieWJzZmRvOWNDeVNIb1BnQzVYTmFaM3I2MFgvRE1jOWZqWXhmOUdtUyt6d09ySFQyeApVN0h1VXgweUZ4K0twTStndGlsMnpYa25uWWErWnN1NUk1b0hBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVSd0NwVkRVZUFUNXNCVGlsdnZCT2V1UFE0S0F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGck02S1NsZ3I4U0ZnbGcvVXNyemZpdEI1TzhhVjZZeC9FaExHdjZQcWlrSnJKNGRkcnVBbHRICnpXeDMyRGUxdW91Y21sRTNWdUtFeFkxMEl5UkNyM1Vvekx6cVlUQlg1UTFNbGd3MlJzMHpVT1Qzay9QQUtWNnMKYTN6bFd3NVYySVpSN3IvSThlTlc4c1BpTU1IaHRFazN5dVA3YUlKMlUyemJjSkhmdlRDNDUvNXRFT1k5ZndXQwpLMHFTbzFVWjBHNGs2bCtHNHNWR0hYQ0UyeEVJbThZeENhdWlQRU5QR0MrN0Zvb29MRXBKeE5ET0lOVlB3UmVuCitqQzErSFVySk0wM0JvaHZnaFBidVVTTisydE9SYTY1aEtHOFRLU1J4RVUyVjBxbU5LdVhhSWdZcE5uRlR3bUoKdS9tV0RNcXVQR2p6bVM4WENrV1BwM0t6dWt5cjQwST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUekNDQWplZ0F3SUJBZ0lSQUxyL3dDQVNSbE5vZ3BsQW04VmpQVUl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV5TmxvWERUSTJNVEV5TVRJeApOVFV5Tmxvd0pqRWtNQ0lHQTFVRUF3d2JLaTVqTWpBdWFIVmlZbXhsTFdkeWNHTXVZMmxzYVhWdExtbHZNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwaGhCbytOWXJuaU52U0FYUVp1djRmdG8KK1ZrQXIwWEJoMFNWZnhxQ2g3Mjl2SXRwYzlzeWI1Wlc4SXBVc0JPS1VwVlhoRVRzRnNXV0FFdXJ6UDdoU3VteApab0dGeSs5b1EzeDlLaFRYTWozOHRzQ1JVY2JMVHMwRStxUnc3OWFEMXZzdnVUanZaUnpWRkd3d2xWS1lKdmZTClV6NTg5a3pUSWdjN3pEWnRlZWQva3IzWUJaRnNEb21KK1hiVEUzZmRscy92dzdQU1puQitqL1ZaUHRoNnFnTnkKUENlUWtrckt3dElPT1hFVjdYVHVzNng3YkRrTUZjOStQU3RZbVY4TllRSEplZ1o5K3U0RVN4QnZvM0tmZTQrawptZ0JPVXdPMXBBRVFqOTNrUWtYYjhaUHhoeTJoZXJVMU4vdHBpNitzajA1YTRhNWE0cTJZaER5akxBSUNWd0lECkFRQUJvNEdKTUlHR01BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlJIQUtsVU5SNEJQbXdGT0tXKwo4RTU2NDlEZ29EQW1CZ05WSFJFRUh6QWRnaHNxTG1NeU1DNW9kV0ppYkdVdFozSndZeTVqYVd4cGRXMHVhVzh3CkRRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFESWtDTlhWSkx0SElOVkJsZnlOODZNb0c0b0Z1cDJ6VG83TUFGekYKRUNCKzR4T0xOUThpQ21oQnNJUTNTeklaaGh4b1BCeWx1WmFnTk1sVU1keTJGMDBnREFmYlBJNW9BdVR4VEFhVQpMVG9Qalk5d0JvUnFqcndSYmFDcllPZWY3a2xuZnNHNXdGR3NkVXdiZjcvS3dPLzN5VU13U0tFMTJNMHJDNWRrCjFYaDR3TksyRklaK1lERVE1VWp5UDVBa1lBZmVJR1V3aXVYTXdQSkRVT3NzYkl2QXNkVTl0TTdiRjE5ZW9aM3UKSXNmZTdJUUZNSzI3YXVqMWordXpveEVETzhhY2QzK1JRWXNZdDJPdWJyUzI3N0tJT1VpcXB0YkhqeXhUS2d2Zwpsamp3aUhMK0Q3bjBTcEVqYmhqWGJyWnN6ZjRIUlg2VXViMWZ2ZmowdS9wTyttND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMGhoQm8rTllybmlOdlNBWFFadXY0ZnRvK1ZrQXIwWEJoMFNWZnhxQ2g3Mjl2SXRwCmM5c3liNVpXOElwVXNCT0tVcFZYaEVUc0ZzV1dBRXVyelA3aFN1bXhab0dGeSs5b1EzeDlLaFRYTWozOHRzQ1IKVWNiTFRzMEUrcVJ3NzlhRDF2c3Z1VGp2WlJ6VkZHd3dsVktZSnZmU1V6NTg5a3pUSWdjN3pEWnRlZWQva3IzWQpCWkZzRG9tSitYYlRFM2ZkbHMvdnc3UFNabkIrai9WWlB0aDZxZ055UENlUWtrckt3dElPT1hFVjdYVHVzNng3CmJEa01GYzkrUFN0WW1WOE5ZUUhKZWdaOSt1NEVTeEJ2bzNLZmU0K2ttZ0JPVXdPMXBBRVFqOTNrUWtYYjhaUHgKaHkyaGVyVTFOL3RwaTYrc2owNWE0YTVhNHEyWWhEeWpMQUlDVndJREFRQUJBb0lCQUZUbmNwZDl5QmZ5SmkyNQpLMHpiVXcvN1h5ZnRuUVk0SllhNTQ4U1MvUTlJVWNaQmZPTlNRU2F4VmY4dG1CMzBONkU2TXowRDhYa2Vib2srCkMzYnp4aTVWRk5rOUhNb1d2VWNRcHpCN2JhQWpSdDdBSWJvdm9YZitDTFlXQUlJY2FmbFdWNm45NVZreWRyWWoKSnRzaG50V1lyMG51NWVkUGtyK2N0c0RIZWlTWitySEhBMHc3N3hoZzNRMjJSSW01ZFhORjBBbGRTWnB1YnFpWApwTW54SDgwbnVWY0d2RC80Q3hSVVlxR2RoSkhOaTlCNDF2VDFiVEE2Q2l1clQ0bVZzMVVpd01YRDRrdGd4K2VICi9nY1RrREFhYVB1TjU4aEUwUmtJZWpnV1MraWUyanQrQ0dCdTFidzgzK3ZBVHhDWWg4Q0JVY21Wb1NTRWIvbkoKVStQUFRqRUNnWUVBMlhoZjJTanFkbldqVmZVVTZlR0FyUjF2OElVSU1FZ3VIYS8zOGNtZTBVTHhiK2xjVzJjdApndFF1bUttbG1kS0cvVHA5dVVMemQyZEEyaEZmKzFpU3BLR1NOMThtNS9CbXZXc3hob2J0MGZQYXlPRUFzVjJDCm02bUk0R2FUMy9LYVhqV1Jib2NZa292bGVyOFNONEJObkhaOENnV2lYQkZEa21DbGtueU1STWtDZ1lFQTkxRmIKNkRGd1V5Wmw0b2RJc0xlN05namFNSkZqUElOMTI1eVdSQTVRVktQZEM0d0xPMG90ZGczVFlnUnczWngxMjhPQgp0MTNOVHFWL2dxbVNTUkpqODM0elB6NkxMdTdZUHJRdW5wUFBGNDNzN2RZNExLWmF3MSswT3QyWFJDOFdyOVJFCnZrNHpHU0V2RnhNakVSTSt6R3FWa3FWd3dUeElxWkVvd3ZyMVBoOENnWUVBMTdBMElFWWNoWEVYbHVHRTVKTHIKOU1jRmh4L3FoemlQeEpJSzhKeHdFRXk4K2FvU0YvVzFoZFM4Z2wyQUNaaHNtaXV4RmxYNDg2eE0vZnZObnBTeQpuT1pEQnZnd3Rrb1JIRDE4MlZocDk1cE1uSC9OR0IwT3RTVG94T2Y0TWwyRURYeER5Y1BqOHpVZFhTaTFBS2NZClV0NlJGNytPMEpHdTJ6ZFFBSUhXL1VFQ2dZQm9SWDRaWEZhK1IrOG0zZURRMlBYdVp6Y095UTFzNHdRYXpsOHcKWEZTVUN1NVVRdnd0U0MzNG13V25TcllIU1VNTG45Y2Q1MGQ3UkIySmlsTHB5ZjRvRitvbFhRb3poSEhacGdBTgp6Y1cvYVpBZUNuWnVwTWlabk0wUkVJSUpOazA3WHFTSkU5RkpaQXRGa0VUMW13YWNDc2Y3SnhOdDlTdXhpa2tFClEraUlBd0tCZ1FDZlU4Y0xUNVorWmpQajJqUDlSYmpIdTZVZkhrMmxnYThuWG5SbWcvTTNEYkpVZjR0b3REY3cKbmlSOGpnZUJ0Z3BnMnUreGlhTWtGbS9IemxYTithcll6ZzdEdVhYVEU2MExKZ0hsbVZPSyt6Zm5Ud0JNckU0KwpCNFVSL25iYlE3cXpDeUU0b3Frd1NOM1BpZUNQaDBhOFJVNkt4S016a3VBelpJR00ySVBxNFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: c20
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "120"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-wireguard: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "false"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  ipam-cilium-node-update-rate: "15s"
  cluster-pool-ipv4-cidr: "10.20.0.0/17"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  cnp-node-status-gc-interval: "0s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "true"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"

  external-envoy-proxy: "false"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: c20
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/clustermesh-apiserver/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumexternalworkloads/status
  - ciliumnodes
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumendpoints/status
  verbs:
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumexternalworkloads
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver-metrics
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/component: metrics
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: kvmesh-metrics
    port: 9964
    protocol: TCP
    targetPort: kvmesh-metrics
  selector:
    k8s-app: clustermesh-apiserver
---
# Source: cilium/templates/clustermesh-apiserver/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  type: NodePort
  selector:
    k8s-app: clustermesh-apiserver
  ports:
  - port: 2379
    nodePort: 32379
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.14.2@sha256:52f70250dea22e506959439a7c4ea31b10fe8375db62f5c27ab746e3a2af866d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/clustermesh-apiserver/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: clustermesh-apiserver
        k8s-app: clustermesh-apiserver
    spec:
      initContainers:
      - name: etcd-init
        image: "quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args:
        - |
          rm -rf /var/run/etcd/*;
          /usr/local/bin/etcd --data-dir=/var/run/etcd --name=clustermesh-apiserver --listen-client-urls=http://127.0.0.1:2379 --advertise-client-urls=http://127.0.0.1:2379 --initial-cluster-token=clustermesh-apiserver --initial-cluster-state=new --auto-compaction-retention=1 &

          # The following key needs to be created before that the cilium agents
          # have the possibility of connecting to etcd.
          etcdctl put cilium/.has-cluster-config true

          etcdctl user add root --no-password;
          etcdctl user grant-role root root;
          etcdctl user add admin-c20 --no-password;
          etcdctl user grant-role admin-c20 root;
          etcdctl user add externalworkload --no-password;
          etcdctl role add externalworkload;
          etcdctl role grant-permission externalworkload --from-key read '';
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/state/noderegister/v1/;
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/.initlock/;
          etcdctl user grant-role externalworkload externalworkload;
          etcdctl user add remote --no-password;
          etcdctl role add remote;
          etcdctl role grant-permission remote --from-key read '';
          etcdctl user grant-role remote remote;
          etcdctl auth enable;
          exit
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      containers:
      - name: etcd
        image: "quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/local/bin/etcd
        args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        # Surrounding the IPv4 address with brackets works in this case, since etcd
        # uses net.SplitHostPort() internally and it accepts the that format.
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=clustermesh-apiserver
        - --auto-compaction-retention=1
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - name: etcd
          containerPort: 2379
          protocol: TCP
        volumeMounts:
        - name: etcd-server-secrets
          mountPath: /var/lib/etcd-secrets
          readOnly: true
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      - name: apiserver
        image: "quay.io/cilium/clustermesh-apiserver:v1.14.2@sha256:0650beac6633a483261640b6539c9609f5a761f4ab4504fd1e6ffe7f2bb82e9a"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt
        - etcd.config=/var/lib/cilium/etcd-config.yaml
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: identity-allocation-mode
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: enable-k8s-endpoint-slice
              optional: true
        ports:
        - name: apiserv-metrics
          containerPort: 9962
          protocol: TCP
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: etcd-server-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-server-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-admin-client
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-admin-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-data-dir
        emptyDir: {}
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "clustermesh-apiserver"
      serviceAccountName: "clustermesh-apiserver"
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: clustermesh-apiserver
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.14.2@sha256:a89030b31f333e8fb1c10d2473250399a1a537c27d022cd8becc1a65d1bef1d6"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.12.0@sha256:1c876cfa1d5e35bc91e1025c9314f922041592a88b03313c22c1f97a5d2ba88f"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.12.0@sha256:8a79a1aad4fc9c2aa2b3e4379af0af872a89fcec9d99e117188190671c66fc2e"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.

# Only create the namespace if it's different from Ingress and Gateway API secret namespaces (if enabled).
