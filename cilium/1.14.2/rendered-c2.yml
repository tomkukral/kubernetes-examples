---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVE9XTTF3enZVNDJ0MjFaZGU2Rnd1VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEEwV2hjTk1qWXhNVEl4TWpFMQpOVEEwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3VkTmdvOHFTR2V0anFlRnNRYkZIcExsT1dpZkpDUlZ5aWh5WUU4UUZ2TVVVL2NqNm4KbStXM3Z2cGYwb1RJQmliVzZCTkltTGtaTDErSTE0ZGc5Szh5N0JuTjNUd0JYVnFPVTF1YkYxbmJDUTc0UDM0agpaQm9pVmZrb1ZTUnQ2TXh6WXN2Zmg3OG12T3dZMTBxRUhmbjAxT2t6Mmp4TUk5THJkS0lUUU5ZMW4zY1JjMmJ4ClpXUzFRTmMzQzBid0Fka21mdDJwaFdzbmZKekZER21laEVkbjlIaFBWSHphMitGUWJIZkVQRWEyTjROYVdRaVUKSVBndTFnQlU5N0dOek43UzZLSGdWZEZUemd6RFhVc1Evd1dEeC96YkhzZXpSSkdpellHNGFqaWs4V1JPSk9uUAphWWl4ZmM3RjFXM2ZveFdRcWNOa09xWWc0Z1VoK3JrTis0VC9BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVYcTVDRkxic3BMaW4vWGp5VUozdVNkNFV5WFl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFLMUFLTENiblVWTXZYZDZkazFXQXkvaXRyd1dRaU5QY3paMStYVS9TWk8weHppcnA4VG9vK0o0ClJnT2RsQTJHT1FlZG16RllXeTc0TG9DbFM1cjdXeVBGdEJwZFh3b2lQaWt3VkNnNlZTbHRUUW51V3F5WUJKczkKSWxSSk9yd0hBVldMSU81RkVLbHl6S3puL3NQRmxwUEJTVFVWM3RoK3pGNzNSZ3Z6RlhIcFRFQ21Kano3N1oySAo1RkllRmJFbmQ0MnBDdG1CUWhkSmRFZnZDU0RHckRPeG1PMmtUMENIY1Y1cERxMjdVenp5K2NKTzlHaUIzRGlsCjdLdlptWkY5dmRvZ09GckduaFFvU1FDUWZ6LzNsYmJyb1hsbDBqZzlqL01zV2V1NFFRVjBBbjF1RzNXbEt3NzAKMUVadnowTVdRWjY3M1BIbE1HOXV6OXBEdDdKNkNOTT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb1FJQkFBS0NBUUVBcm5UWUtQS2tobnJZNm5oYkVHeFI2UzVUbG9ueVFrVmNvb2NtQlBFQmJ6RkZQM0krCnA1dmx0Nzc2WDlLRXlBWW0xdWdUU0ppNUdTOWZpTmVIWVBTdk11d1p6ZDA4QVYxYWpsTmJteGRaMndrTytEOSsKSTJRYUlsWDVLRlVrYmVqTWMyTEwzNGUvSnJ6c0dOZEtoQjM1OU5UcE05bzhUQ1BTNjNTaUUwRFdOWjkzRVhObQo4V1ZrdFVEWE53dEc4QUhaSm43ZHFZVnJKM3ljeFF4cG5vUkhaL1I0VDFSODJ0dmhVR3gzeER4R3RqZURXbGtJCmxDRDRMdFlBVlBleGpjemUwdWloNEZYUlU4NE13MTFMRVA4Rmc4ZjgyeDdIczBTUm9zMkJ1R280cFBGa1RpVHAKejJtSXNYM094ZFZ0MzZNVmtLbkRaRHFtSU9JRklmcTVEZnVFL3dJREFRQUJBb0lCQUUxSTFBM24yRHovSlNOUwpLRDF4VHlRMjhxN0k4N3FxRWF5cXBJd2gzRm5QQVBkbmZCd3ljeVRnaFBoNFFYeC9SU3VGYWkyS0FzNEdiNU1tCnNBR2l4QTZTQzZob2J0SEg4bnNFc0p0WFQrWTU4QmpIdi9DYnd2d2REQ0R5L3cxMXlVVUFxb0tmRjI1bzJVcnoKN1QzMExheHB1ZG5QdjFDWHVqTzIycW9lMmdhc24rTUhPQmEraHZDMEtrcWtWK251UWdMM0ZJNzRhZlNVUjRoKwpVdTR0cVlLWHc2WWxhaUkxNk9rSnl1NmVkckdWQVVzc2RlV3hSSkhZbExqU0hhMlVoRWQzZnJBMkZOemQzaDQrCmRlOWcwanI0VU1EUmtueU9PQlJJMGJMY056RVFybUU0b2lLYkRWVTBOWkV3UXMwU3ljeVBKbU83d3RwYmNyODQKeExObXE0RUNnWUVBeXN6d29SK1pLNUkzVXB2L2YvUmNVVENKbHFuWGNncTVROW5kWlJGdmNsRDdITFN0Z3krRgpoVTgyc1VpMVpkOVVpaFdiTHFzR0w5NHJXOUZLVGM1MXo5QmlLSG9ZT0JBOEhlU0RoZ0hDb0VNZGVRbFVTTm1ECkcxSXZPV0hiM09OWlpMajlnRWtWcStiejh4M0lwSzVOZjJ0bVRHblFtNlpKU3NoTnRTSzMrRUVDZ1lFQTNEaDAKMEVLRUVtcTlsdy8vRlh1MkVzWUdiRUNoUWtOSTdxa05vNzBmZkpwMWYzNEo2aUNUUEJYczAvWC95bVg0d1JCWgprWTFvME1VblorOHFLWlNwVVo0b05wVWlaNXFjU1BlZmRTeUZhc2gxMitOVnhsNWYwZDgzZGhQY1ltMjdLdXY0CnNaUmowcUdPL2VyK2k2LzFQejdhUHMrMzRzeUNUZEZsWWRlU0xUOENmeHlFdFZIekg1Y0ErTWFsS1VqVkZDWlcKclFLQzM4a3B1T1BSdjFCM0l6VHdMbC9iQ0l0cUkxeWJ4eFVuSkZzdkRMUmVWWFE2bUtRaW1mWlBlQ040NVJoVQpOWGw3c2V3d1hFUFgzcWI1bUdUeEN6UDZHK0FpdGswaFFZTFFRQnJQM2NKTVFWbkk3VU0vTnc3NUlUNEhSTjZtCk83eURKTksrajQvMG12amQ2UUVDZ1lBRGFFUTJiTEVLYitoYkMvNVFZTWVpWnJuMnR0Rkg2eTZYc3JucFRLWE8KRWIyN3FVR1NBOHNEWlB0ekZCMVBEbURZNjkzVzZLODBlN2h1WFQ3endiOFU2ak9KRkttaG5MektURHFGWDVqNAoyLzBtMTgrZDhCdmZiV3E0UXZwbjgzYXY1VkxGdkp3R3lFVWtISnl2b0p0VXpTNG5ScU43dU5wVFJlZ2hxV296CmxRS0JnUUNLV3NsOTJlVGZuSzlMZkRWYjkvbVd4Y3hnUTAxTTB4aFJVbEVZVCtLcUk2ZW92dXlhZGh0UXl6YUcKSlI1SzBMYkF5WmZkNFBPTDJEOGdLWGdCclBURGJrdVlwM0ZzTDluSUtrb0J4Z3NzUWFxWUc3cTJrZWJ6RVJNUgpNMXdjRlRwcTcxMEE5V2tHdWU3bE5Ua3QzeURXejM1VTZoSVlHVGVyYmNLaUhtcm1qZz09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/admin-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVE9XTTF3enZVNDJ0MjFaZGU2Rnd1VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEEwV2hjTk1qWXhNVEl4TWpFMQpOVEEwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3VkTmdvOHFTR2V0anFlRnNRYkZIcExsT1dpZkpDUlZ5aWh5WUU4UUZ2TVVVL2NqNm4KbStXM3Z2cGYwb1RJQmliVzZCTkltTGtaTDErSTE0ZGc5Szh5N0JuTjNUd0JYVnFPVTF1YkYxbmJDUTc0UDM0agpaQm9pVmZrb1ZTUnQ2TXh6WXN2Zmg3OG12T3dZMTBxRUhmbjAxT2t6Mmp4TUk5THJkS0lUUU5ZMW4zY1JjMmJ4ClpXUzFRTmMzQzBid0Fka21mdDJwaFdzbmZKekZER21laEVkbjlIaFBWSHphMitGUWJIZkVQRWEyTjROYVdRaVUKSVBndTFnQlU5N0dOek43UzZLSGdWZEZUemd6RFhVc1Evd1dEeC96YkhzZXpSSkdpellHNGFqaWs4V1JPSk9uUAphWWl4ZmM3RjFXM2ZveFdRcWNOa09xWWc0Z1VoK3JrTis0VC9BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVYcTVDRkxic3BMaW4vWGp5VUozdVNkNFV5WFl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFLMUFLTENiblVWTXZYZDZkazFXQXkvaXRyd1dRaU5QY3paMStYVS9TWk8weHppcnA4VG9vK0o0ClJnT2RsQTJHT1FlZG16RllXeTc0TG9DbFM1cjdXeVBGdEJwZFh3b2lQaWt3VkNnNlZTbHRUUW51V3F5WUJKczkKSWxSSk9yd0hBVldMSU81RkVLbHl6S3puL3NQRmxwUEJTVFVWM3RoK3pGNzNSZ3Z6RlhIcFRFQ21Kano3N1oySAo1RkllRmJFbmQ0MnBDdG1CUWhkSmRFZnZDU0RHckRPeG1PMmtUMENIY1Y1cERxMjdVenp5K2NKTzlHaUIzRGlsCjdLdlptWkY5dmRvZ09GckduaFFvU1FDUWZ6LzNsYmJyb1hsbDBqZzlqL01zV2V1NFFRVjBBbjF1RzNXbEt3NzAKMUVadnowTVdRWjY3M1BIbE1HOXV6OXBEdDdKNkNOTT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRZWo4V3VndUY3MWdPR2U5M2RuZVdhekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEExV2hjTk1qWXhNVEl4TWpFMQpOVEExV2pBVE1SRXdEd1lEVlFRREV3aGhaRzFwYmkxak1qQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQCkFEQ0NBUW9DZ2dFQkFOenMzSWYya2tkR1h1Q3UwWFhDRjNOek1tcUxLZGxESUtNdGFXTDEwRVpvQ3lpRlBDM3oKVHR0RTdheFhQTkI1Ukl3NnBLMUlGRGthZWFSd0VwOHNGUERzZ2dJakpyUmcrdFVPSzk0V0hvM2crQm9tbzg2bgozUlRPUnZRaUtpbHY4UXBsVnJSdmNvSW9lY3M5ZG1rbC9nKzJMaEx3RkpwZ1NXOEl0bDFHWjExd25YU041UlZFCkU2bDZJMWJjWXNDWERRVk9NZnVJZlFwYkhzU1ZheUtPYWNJbWh2eC9rWm9KTkx4TkUyVFBpZXByZnR3TkFoMisKSEFsNWUvS09ZSWNyV1k1enFYMW5xUnRxc21obGpjaUMyWGx0OW9ualBhK1FxdWRDRnpLMllzUEswcWVFY2hEbAp4dnkwVEpIeWhCZitWdWYrZk03VVIrWG1aOTBDdmZVSUVlMENBd0VBQWFOMk1IUXdEZ1lEVlIwUEFRSC9CQVFECkFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUEKTUI4R0ExVWRJd1FZTUJhQUZGNnVRaFMyN0tTNHAvMTQ4bENkN2tuZUZNbDJNQlFHQTFVZEVRUU5NQXVDQ1d4dgpZMkZzYUc5emREQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFTemVvSnNMdzhlWE5sVUtWUE5pemU0Nm5kc2RoCnh4UnZESGtmaEpWOHJDUVo4TFhrZ2hzOUk0bE5mN05sVk9kTDBTV2hqZHdnWnFSTXZsZ1RwRUJGdjRLSi9EUGIKYkF1WHd3NEp4RmR1UVRRdDgzdUNxMVdwaFNCZHJCK3hsaUR6TDhtUCtiK2c4M1REQVNlMVNEa0FMdERkejZScQo3WE9HNVNGTytUWEd5WTNWQlgyeElzQ2s2MTI5c2R0NStJYk9MUmlYVEw0ZUppY2NPcXFKQXFxKzlsaER3QWs5CjVYbU03YXRpRUwrdWU2WXFJcGE3Wjk0YXUvZ0l3MDVIYlgyUjQ5eWY5SDFOSzQxdFRjTGZCWHZ5bTh4YUVEVnkKVGRmQkNiWS9OVDlWOE1ad2JOcjF2S04ySUxoVEJkR1VGdFY1WFQ2d0Jjc0RCMk5zbE9QalV1TWlYdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBM096Y2gvYVNSMFplNEs3UmRjSVhjM015YW9zcDJVTWdveTFwWXZYUVJtZ0xLSVU4CkxmTk8yMFR0ckZjODBIbEVqRHFrclVnVU9ScDVwSEFTbnl3VThPeUNBaU1tdEdENjFRNHIzaFllamVENEdpYWoKenFmZEZNNUc5Q0lxS1cveENtVld0Rzl5Z2loNXl6MTJhU1grRDdZdUV2QVVtbUJKYndpMlhVWm5YWENkZEkzbApGVVFUcVhvalZ0eGl3SmNOQlU0eCs0aDlDbHNleEpWcklvNXB3aWFHL0grUm1nazB2RTBUWk0rSjZtdCszQTBDCkhiNGNDWGw3OG81Z2h5dFpqbk9wZldlcEcycXlhR1dOeUlMWmVXMzJpZU05cjVDcTUwSVhNclppdzhyU3A0UnkKRU9YRy9MUk1rZktFRi81VzUvNTh6dFJINWVabjNRSzk5UWdSN1FJREFRQUJBb0lCQVFDYmMwY1JuRnY5THZUZgpuK0xldXoySkRNdXkwRTBZQlBYWUc4SUYwZlZGTlR4MHZKdEZzZWdRdllXSE9MTWY5ZFJYMzRPME1mMlkySm96CkxIRE44MVNnMmFuNUd3Ykc4VjVOdi9UNkJoSmx2cUNVdGcrWS8rQytIUThzQlVZcGRnempSYjhtb3l5dGpSRjIKQXI5bzZVVEZoV2tTQmtCWkI5dGo5M3RxVW5tMDhwTjJ1THVKU0tyR2M0emg0NjYyU0IvNVgwZGRQcGtQV1pXRgpyb29DSGc2OHZVV25WbVlISU15VFl5N0pDOVVnOURBYS9rSXhiR2hScDdJSEl6V2xNbzJ1V1A2OFl6ays0SjJjClM0UUNVbHFhdlM3VUFrQ1F0WmQ0UnRkQ0VRajBWQjJCNENIVVorMGg2SjVyandpWUpuMmtQbVIzSXh3QWtCZFMKckFrSnFCREJBb0dCQVB3NmN0SENmMjVrT20zdkVDUEpnR2xTVjJiRDVTbVNVN0c1V1JOWkRCVlZqNHlDZ0xzbAoxdzNFR1d4eDhpc2liVjdLTllmNHMxeXh4WGxQWjF4Ykl2d0NzMzcxVWE1bFhsVEpSWlNsYmxNSndvUS8rNzJKCnhPclpSbERJSXdUb01wSEtUbmlGNGZ5RklJb2YvMy9PN3BIVHBKK3dzZ3VVWWZvL3FjcmVuaEZWQW9HQkFPQTYKbFFSMDE0VXRScDVLMDhKaEtUeEVYendoa01zb216TnlMbi9TRkljODRXWXI1YkZ3ZTZJTFd3dFo0cUhPSUJKMgpTYXpYcHJ2WVJsN290MmZJL2xpQUMxOE5RLzNyVjlSY3UvcUdtczlQU0o4cjBndnF2UlVQTGs2WmhHVHNPMmxqCnlwUHY3anRJNXVLaHFWdnZ0ZHdNSDZMWFVsbHVuaFp3L3E4M2xWNDVBb0dBQnV4MzBHZzlaVU5kRXoxM3ZQUEEKRWFRUUFDTXFmRHluRFg3Z0FoYjByUFUvVG9VYWtZaVZZYXhiWWsyeWJ4cXYwK1ZMR09OcjBRU1VQaU0rM0JzbwpWN0NmU3NIakx4MWJQSXFWM1dHNUtKQmhCWTVZRTdqZmJlN3U3akxBTzFkQVpCNGdqMUJsaHJBRTE2WFBOcXZ3CmdwSkR0NXA3R0xSSENENk5JNk4reFUwQ2dZRUExd3JYeDBKWFB6M0FzQ2FMRjZ3ZTQ5R2VsQWlNMkluRTduM2UKNG04VGlPOTJLNHFGNnJvNWw1clVZZnArUXpkdndzVDJ1M0RHVXZpRDVKbkM2eUh6NitSQkE1T3hWVi9UQjdNNApCSGY3R0Q2dEl4bmZnOVpJS0Y0Nnh0NnIvaTRnZkY1YjlhenhDS0pONjZPbXpLa0QvRmtVTGhQYXdqSTRJc1dUCk8yOVBMT0VDZ1lBd3NmcTMrMzRCZE9KRXRRYkZBZVQwZUJQZjY3bXBzYm1KNGxuRjlFMkJoKys4NitKK2VLd0cKVHZYdXM4M3FQMWJ6UnRnaDh4Q3EzNUFCa0k0NlJmaXZ3UnNrVDkwM2dxWTRRbUlXM2tPVEZvVjJMRklNQStwZApIaXZEMzAyWXBDeXAwellJMTU1Q3VVa0xyOUxYeDRSZzhaNWhLTHpmM09ha3cySGVsWFdMZ2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-ca-cert
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVE9XTTF3enZVNDJ0MjFaZGU2Rnd1VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEEwV2hjTk1qWXhNVEl4TWpFMQpOVEEwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3VkTmdvOHFTR2V0anFlRnNRYkZIcExsT1dpZkpDUlZ5aWh5WUU4UUZ2TVVVL2NqNm4KbStXM3Z2cGYwb1RJQmliVzZCTkltTGtaTDErSTE0ZGc5Szh5N0JuTjNUd0JYVnFPVTF1YkYxbmJDUTc0UDM0agpaQm9pVmZrb1ZTUnQ2TXh6WXN2Zmg3OG12T3dZMTBxRUhmbjAxT2t6Mmp4TUk5THJkS0lUUU5ZMW4zY1JjMmJ4ClpXUzFRTmMzQzBid0Fka21mdDJwaFdzbmZKekZER21laEVkbjlIaFBWSHphMitGUWJIZkVQRWEyTjROYVdRaVUKSVBndTFnQlU5N0dOek43UzZLSGdWZEZUemd6RFhVc1Evd1dEeC96YkhzZXpSSkdpellHNGFqaWs4V1JPSk9uUAphWWl4ZmM3RjFXM2ZveFdRcWNOa09xWWc0Z1VoK3JrTis0VC9BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVYcTVDRkxic3BMaW4vWGp5VUozdVNkNFV5WFl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFLMUFLTENiblVWTXZYZDZkazFXQXkvaXRyd1dRaU5QY3paMStYVS9TWk8weHppcnA4VG9vK0o0ClJnT2RsQTJHT1FlZG16RllXeTc0TG9DbFM1cjdXeVBGdEJwZFh3b2lQaWt3VkNnNlZTbHRUUW51V3F5WUJKczkKSWxSSk9yd0hBVldMSU81RkVLbHl6S3puL3NQRmxwUEJTVFVWM3RoK3pGNzNSZ3Z6RlhIcFRFQ21Kano3N1oySAo1RkllRmJFbmQ0MnBDdG1CUWhkSmRFZnZDU0RHckRPeG1PMmtUMENIY1Y1cERxMjdVenp5K2NKTzlHaUIzRGlsCjdLdlptWkY5dmRvZ09GckduaFFvU1FDUWZ6LzNsYmJyb1hsbDBqZzlqL01zV2V1NFFRVjBBbjF1RzNXbEt3NzAKMUVadnowTVdRWjY3M1BIbE1HOXV6OXBEdDdKNkNOTT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb1FJQkFBS0NBUUVBcm5UWUtQS2tobnJZNm5oYkVHeFI2UzVUbG9ueVFrVmNvb2NtQlBFQmJ6RkZQM0krCnA1dmx0Nzc2WDlLRXlBWW0xdWdUU0ppNUdTOWZpTmVIWVBTdk11d1p6ZDA4QVYxYWpsTmJteGRaMndrTytEOSsKSTJRYUlsWDVLRlVrYmVqTWMyTEwzNGUvSnJ6c0dOZEtoQjM1OU5UcE05bzhUQ1BTNjNTaUUwRFdOWjkzRVhObQo4V1ZrdFVEWE53dEc4QUhaSm43ZHFZVnJKM3ljeFF4cG5vUkhaL1I0VDFSODJ0dmhVR3gzeER4R3RqZURXbGtJCmxDRDRMdFlBVlBleGpjemUwdWloNEZYUlU4NE13MTFMRVA4Rmc4ZjgyeDdIczBTUm9zMkJ1R280cFBGa1RpVHAKejJtSXNYM094ZFZ0MzZNVmtLbkRaRHFtSU9JRklmcTVEZnVFL3dJREFRQUJBb0lCQUUxSTFBM24yRHovSlNOUwpLRDF4VHlRMjhxN0k4N3FxRWF5cXBJd2gzRm5QQVBkbmZCd3ljeVRnaFBoNFFYeC9SU3VGYWkyS0FzNEdiNU1tCnNBR2l4QTZTQzZob2J0SEg4bnNFc0p0WFQrWTU4QmpIdi9DYnd2d2REQ0R5L3cxMXlVVUFxb0tmRjI1bzJVcnoKN1QzMExheHB1ZG5QdjFDWHVqTzIycW9lMmdhc24rTUhPQmEraHZDMEtrcWtWK251UWdMM0ZJNzRhZlNVUjRoKwpVdTR0cVlLWHc2WWxhaUkxNk9rSnl1NmVkckdWQVVzc2RlV3hSSkhZbExqU0hhMlVoRWQzZnJBMkZOemQzaDQrCmRlOWcwanI0VU1EUmtueU9PQlJJMGJMY056RVFybUU0b2lLYkRWVTBOWkV3UXMwU3ljeVBKbU83d3RwYmNyODQKeExObXE0RUNnWUVBeXN6d29SK1pLNUkzVXB2L2YvUmNVVENKbHFuWGNncTVROW5kWlJGdmNsRDdITFN0Z3krRgpoVTgyc1VpMVpkOVVpaFdiTHFzR0w5NHJXOUZLVGM1MXo5QmlLSG9ZT0JBOEhlU0RoZ0hDb0VNZGVRbFVTTm1ECkcxSXZPV0hiM09OWlpMajlnRWtWcStiejh4M0lwSzVOZjJ0bVRHblFtNlpKU3NoTnRTSzMrRUVDZ1lFQTNEaDAKMEVLRUVtcTlsdy8vRlh1MkVzWUdiRUNoUWtOSTdxa05vNzBmZkpwMWYzNEo2aUNUUEJYczAvWC95bVg0d1JCWgprWTFvME1VblorOHFLWlNwVVo0b05wVWlaNXFjU1BlZmRTeUZhc2gxMitOVnhsNWYwZDgzZGhQY1ltMjdLdXY0CnNaUmowcUdPL2VyK2k2LzFQejdhUHMrMzRzeUNUZEZsWWRlU0xUOENmeHlFdFZIekg1Y0ErTWFsS1VqVkZDWlcKclFLQzM4a3B1T1BSdjFCM0l6VHdMbC9iQ0l0cUkxeWJ4eFVuSkZzdkRMUmVWWFE2bUtRaW1mWlBlQ040NVJoVQpOWGw3c2V3d1hFUFgzcWI1bUdUeEN6UDZHK0FpdGswaFFZTFFRQnJQM2NKTVFWbkk3VU0vTnc3NUlUNEhSTjZtCk83eURKTksrajQvMG12amQ2UUVDZ1lBRGFFUTJiTEVLYitoYkMvNVFZTWVpWnJuMnR0Rkg2eTZYc3JucFRLWE8KRWIyN3FVR1NBOHNEWlB0ekZCMVBEbURZNjkzVzZLODBlN2h1WFQ3endiOFU2ak9KRkttaG5MektURHFGWDVqNAoyLzBtMTgrZDhCdmZiV3E0UXZwbjgzYXY1VkxGdkp3R3lFVWtISnl2b0p0VXpTNG5ScU43dU5wVFJlZ2hxV296CmxRS0JnUUNLV3NsOTJlVGZuSzlMZkRWYjkvbVd4Y3hnUTAxTTB4aFJVbEVZVCtLcUk2ZW92dXlhZGh0UXl6YUcKSlI1SzBMYkF5WmZkNFBPTDJEOGdLWGdCclBURGJrdVlwM0ZzTDluSUtrb0J4Z3NzUWFxWUc3cTJrZWJ6RVJNUgpNMXdjRlRwcTcxMEE5V2tHdWU3bE5Ua3QzeURXejM1VTZoSVlHVGVyYmNLaUhtcm1qZz09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/remote-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVE9XTTF3enZVNDJ0MjFaZGU2Rnd1VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEEwV2hjTk1qWXhNVEl4TWpFMQpOVEEwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3VkTmdvOHFTR2V0anFlRnNRYkZIcExsT1dpZkpDUlZ5aWh5WUU4UUZ2TVVVL2NqNm4KbStXM3Z2cGYwb1RJQmliVzZCTkltTGtaTDErSTE0ZGc5Szh5N0JuTjNUd0JYVnFPVTF1YkYxbmJDUTc0UDM0agpaQm9pVmZrb1ZTUnQ2TXh6WXN2Zmg3OG12T3dZMTBxRUhmbjAxT2t6Mmp4TUk5THJkS0lUUU5ZMW4zY1JjMmJ4ClpXUzFRTmMzQzBid0Fka21mdDJwaFdzbmZKekZER21laEVkbjlIaFBWSHphMitGUWJIZkVQRWEyTjROYVdRaVUKSVBndTFnQlU5N0dOek43UzZLSGdWZEZUemd6RFhVc1Evd1dEeC96YkhzZXpSSkdpellHNGFqaWs4V1JPSk9uUAphWWl4ZmM3RjFXM2ZveFdRcWNOa09xWWc0Z1VoK3JrTis0VC9BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVYcTVDRkxic3BMaW4vWGp5VUozdVNkNFV5WFl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFLMUFLTENiblVWTXZYZDZkazFXQXkvaXRyd1dRaU5QY3paMStYVS9TWk8weHppcnA4VG9vK0o0ClJnT2RsQTJHT1FlZG16RllXeTc0TG9DbFM1cjdXeVBGdEJwZFh3b2lQaWt3VkNnNlZTbHRUUW51V3F5WUJKczkKSWxSSk9yd0hBVldMSU81RkVLbHl6S3puL3NQRmxwUEJTVFVWM3RoK3pGNzNSZ3Z6RlhIcFRFQ21Kano3N1oySAo1RkllRmJFbmQ0MnBDdG1CUWhkSmRFZnZDU0RHckRPeG1PMmtUMENIY1Y1cERxMjdVenp5K2NKTzlHaUIzRGlsCjdLdlptWkY5dmRvZ09GckduaFFvU1FDUWZ6LzNsYmJyb1hsbDBqZzlqL01zV2V1NFFRVjBBbjF1RzNXbEt3NzAKMUVadnowTVdRWjY3M1BIbE1HOXV6OXBEdDdKNkNOTT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUo0eVpRNXozZitHaXArK1lPbE1yTnN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3TlZvWERUSTJNVEV5TVRJeApOVFV3TlZvd0VURVBNQTBHQTFVRUF4TUdjbVZ0YjNSbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBCk1JSUJDZ0tDQVFFQTRyN1FtbXZTY1ZVSkZQQlcyZy9MRS9ldjl3Y0ZGOGdlMnBXZGZTVTVtRi9uWlh4aGtSUW8KSzVmME5jNFVjc3ZLYTdadGdqSjF2Z0t1K3pLOGZCWUpOMll0QW5zMmUxNUNqWStBRW5aazBMNU5IMDdLcDNoSgpRZXBuOFRRWWh2RkttZlppSDN3YU8zVmtlc0pySlZBY0drK3pPcDVSSFBTS1QrclJVekU5MkZDVitMVVA2V0tPCmZ2S1N0cGtQZ1VWeFRqcW9RaVVzdWozTENVTEN6bERUVFNKT1Z5S0RyaXkycWtnSlFXc3lEMGRXUm1sTW5qVjEKRmt5dFN1UVFmTEh1Z2lRY2hJUEo1M1FSNlNMWDVWcDE3M1dRaVFtdFJ3N1ROQTJCc0ZwdVphbmtwWXBkS3IyaQpYVXcxNnJoUzg5SkVFTWo1Y1hmL2wwNFJNV0JxSGZudXp3SURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DCkJhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXcKSHdZRFZSMGpCQmd3Rm9BVVhxNUNGTGJzcExpbi9YanlVSjN1U2Q0VXlYWXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUJQMVF2VkhEK29kdTk2ckN0SVhxblhmVzB0WlhKS01VY3QvU2RVVTVVMjNRZ1ZGM1Bnc2RMQ01VaVpRCm1ZZUp2YXJPMFNhVDQ2Z3U1Nm1QNTZFcGNFQUxwUmdkSy9EaWVYWXZDd01mbE1FbldjTE90eUVzRmlKV0NZbzkKdXZ0SlhPK3p1VkdKWlREUGlWa3pPSkN2eWNvaXB2VDdpNk5lc3V2KzlTS2h2Zis0OXRWMTI3UWdYSW1qUitSNQoySHdJZjkxM2MyamdmYUZOL2Q0dnl6WlNIaVFZVjkvUEwxT2RyWWNCNDA0a3g3QVZRUUdXak9MZXByMHVJTGY2CkJOYzlxNHUwTkFnTkNUWE00Q29KYXY4R2ZaQlNNTE1xa1dxcmNxekJ3cE44QWNBQzhjUHJWMm1tUUFsa0QxT3kKeEdvTFlKTWs2VTRUWnVxTHJFYkhzVHZhNUg4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNHI3UW1tdlNjVlVKRlBCVzJnL0xFL2V2OXdjRkY4Z2UycFdkZlNVNW1GL25aWHhoCmtSUW9LNWYwTmM0VWNzdkthN1p0Z2pKMXZnS3Ureks4ZkJZSk4yWXRBbnMyZTE1Q2pZK0FFblprMEw1TkgwN0sKcDNoSlFlcG44VFFZaHZGS21mWmlIM3dhTzNWa2VzSnJKVkFjR2srek9wNVJIUFNLVCtyUlV6RTkyRkNWK0xVUAo2V0tPZnZLU3Rwa1BnVVZ4VGpxb1FpVXN1ajNMQ1VMQ3psRFRUU0pPVnlLRHJpeTJxa2dKUVdzeUQwZFdSbWxNCm5qVjFGa3l0U3VRUWZMSHVnaVFjaElQSjUzUVI2U0xYNVZwMTczV1FpUW10Unc3VE5BMkJzRnB1WmFua3BZcGQKS3IyaVhVdzE2cmhTODlKRUVNajVjWGYvbDA0Uk1XQnFIZm51endJREFRQUJBb0lCQUdXQ3Y2a2lkRWhBcFp3MgpMT3ZhL2pPbVE2VDRBNU91Q0FJYjBUSGhwSE5QSEMwWERpY0JPeXFwRUsrMTN2bTF1cDJXUWxoemRycm1RS2c5CkFwMGEwRzE0MU5Xemk2U1hnbndWcm1TVmxIVFBmWDl5cXM5bXpvVXdCL0M0UGZMTHUzWktFNHU4NTVHTzhMajAKcVRzL0xoV3BjTGZoZ0xiUjA4b0xla01nWEd1bWNIemEyZU9KdnB1UllyVWs4bjE2aERRdm1zUnlRTmRzZmlsRgpibm1YRExLTkMxaEJ2enJQYzZZcWVaeDh6UWx5UkVRQ0tJSDBPQm9iMDNtWDhhOUVZK0JTaGFVcy84VFpHVTVtCmVoWWZrVXRSV0MxZWp6bnE0aUFOYVZtLzNkemU2TW10Y2c4Q0F6R0lkRURyVlArRjFFL04yWHFYRi9JNHdqSmYKTFBBS3NVRUNnWUVBOU9iN1I0ajBxbkYyVlhNb0FSbnBtNml0Z3VDcGJsWUhSZDQrdlhjakFjaFhqTHFadnFlRAprUENaVEdCTzB3SzJBWkVZbVh2THlSRFdVMXNESHhmR3ZXLytpUW1Sd0RiY29nem9VbkVXekY2ZmJ1UHZIMWFaCmViakwwYWMxdU9HelZIZHIxamcrLzBCSStXT05RQ01pZXBtV1ZKUUhLRVpCdjAxUkZQUzR6TmNDZ1lFQTdRVXoKdEJRSXFLT3pNRlB6OEZVcW0vZGxjQWl2bUhsaTVvL1FWWjhxc1RpZlc0eVRMTFptU2ttaG5lNWFLdjNxVUZ4VQp2bWdScy81TzVqRkE3V3dnQ2gxdkQ0NTNqN3Fpc1BTT2ZUOUZHVEI4ZVltSzkwUk90cTFHSklzSTdsenYyUU9GCk5Xb0gwSDBpTFp6OEx6d1dkN1o5V3k5UVhHSWJ6L1lnY0xSNmRza0NnWUJCZ2M5UThTZFF1QXpKQ29aMjFQR1IKdTJxK0NVNEl2Mll1b0NYMEUvdi9MQkdQQ1JLNjFwL3drd3JPVFN5SWNMOHlhQmRHWnNDNXhaRXV0cmQ5QjZVWApZdStZeEVDQ1E2cDhoaXRXY2YyQktRWklhUnU3TERUZFJEcndsMk5kVXJIZk5CcGFNSzFaSlY3ZnBtdFA3cFg0CmFVQzIydW1YTWtPLzRmU0FRSDExL1FLQmdCSWNvNmJQSVJwQjZCOTVTdHJDcDA3anlNeVczVlE1Y21WTCtBK1MKNmlCQXcyeXJnVk9aWEpld3FMajR6Y3NiUEJ5SDhiSGJJZjh2SDdoWGF5NjVaSGxoWm1zNTU4a0Q2Z3E3cFdmTQp2ZXIrMllRd0RuNTJxYzByMElCYVg0UlhkYnlQbUU1TW0reENvNm40cFF5MitzQ0xJV2ttWkcycTBaVkNxWmZ6Ck1xaUJBb0dCQU9aUTMzd1pIR21NYnZJaXcyNnJaQmRzeldtL05rdWJsYzFPS240YSthYWZ2SS9jSHhaY2FhcDMKdFJpMzFSVUpqV0RGemZwVUluRkVUODNyZGI2UHFpbStwaDd2Y1lTZnNsTkNHc2hUQUJqY2ttU3pxekZvdWtOYQorZEZVeklUdk9sQzdqeTY4NmxOdkxHYVBRMmt3VDMxU0dUNEp3L3RQai9DS2N4NWw1cEkzCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVE9XTTF3enZVNDJ0MjFaZGU2Rnd1VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEEwV2hjTk1qWXhNVEl4TWpFMQpOVEEwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3VkTmdvOHFTR2V0anFlRnNRYkZIcExsT1dpZkpDUlZ5aWh5WUU4UUZ2TVVVL2NqNm4KbStXM3Z2cGYwb1RJQmliVzZCTkltTGtaTDErSTE0ZGc5Szh5N0JuTjNUd0JYVnFPVTF1YkYxbmJDUTc0UDM0agpaQm9pVmZrb1ZTUnQ2TXh6WXN2Zmg3OG12T3dZMTBxRUhmbjAxT2t6Mmp4TUk5THJkS0lUUU5ZMW4zY1JjMmJ4ClpXUzFRTmMzQzBid0Fka21mdDJwaFdzbmZKekZER21laEVkbjlIaFBWSHphMitGUWJIZkVQRWEyTjROYVdRaVUKSVBndTFnQlU5N0dOek43UzZLSGdWZEZUemd6RFhVc1Evd1dEeC96YkhzZXpSSkdpellHNGFqaWs4V1JPSk9uUAphWWl4ZmM3RjFXM2ZveFdRcWNOa09xWWc0Z1VoK3JrTis0VC9BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVYcTVDRkxic3BMaW4vWGp5VUozdVNkNFV5WFl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFLMUFLTENiblVWTXZYZDZkazFXQXkvaXRyd1dRaU5QY3paMStYVS9TWk8weHppcnA4VG9vK0o0ClJnT2RsQTJHT1FlZG16RllXeTc0TG9DbFM1cjdXeVBGdEJwZFh3b2lQaWt3VkNnNlZTbHRUUW51V3F5WUJKczkKSWxSSk9yd0hBVldMSU81RkVLbHl6S3puL3NQRmxwUEJTVFVWM3RoK3pGNzNSZ3Z6RlhIcFRFQ21Kano3N1oySAo1RkllRmJFbmQ0MnBDdG1CUWhkSmRFZnZDU0RHckRPeG1PMmtUMENIY1Y1cERxMjdVenp5K2NKTzlHaUIzRGlsCjdLdlptWkY5dmRvZ09GckduaFFvU1FDUWZ6LzNsYmJyb1hsbDBqZzlqL01zV2V1NFFRVjBBbjF1RzNXbEt3NzAKMUVadnowTVdRWjY3M1BIbE1HOXV6OXBEdDdKNkNOTT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURxRENDQXBDZ0F3SUJBZ0lSQUxZRm42di9LdytnTzZBeURrR1JCTDh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3TlZvWERUSTJNVEV5TVRJeApOVFV3TlZvd0tqRW9NQ1lHQTFVRUF4TWZZMngxYzNSbGNtMWxjMmd0WVhCcGMyVnlkbVZ5TG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1pOHNMMFFFN3o3RElQUWZLdmwKbEZRMm5ubmNWSXpESDYzdjNXMzBiVDBRcXFQR3E5WWs4Y0dkNkhzM0pSbFlYWnJSS0JsMCt4NHJxSFE3RndkNApOcVZZQ0NjMnRBV0l0ckRscGVJSksrejA1OVlnZSs2OUZCbzh1OXFVLytMR1M5MmlHVXZ2QVp5bnQ2NStmRWdLCkl5ZHBqL25QZ1FNNzc2Y3YrVDhvTUhuaHlhRVZaUlFpM0VwZWtxME80Q0hzM3hmcFVSL2d3S1NJSUNnWE9ReTMKcm5vb2dTS1dDdE1jMXdIc0l1bW9NTzBuejh2dFZndTdiS0d1RExwb2dpWkdrSHpxWmlqcGtISk4xc3RKMWo1eAp2aS9sc2JTNVU1VHZaK2lYeTI5NldQZExUK0YreEMva3AvZXZycWhUSm1EZXRIRCtUYzZSL1FVSS8vSjJlZzVrCmFkTUNBd0VBQWFPQjNqQ0IyekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVVhxNUNGTGJzcExpbgovWGp5VUozdVNkNFV5WFl3ZXdZRFZSMFJCSFF3Y29JZlkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnlMbU5wCmJHbDFiUzVwYjRJUUtpNXRaWE5vTG1OcGJHbDFiUzVwYjRJbFkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnkKTG10MVltVXRjM2x6ZEdWdExuTjJZNGNFZndBQUFZY1FBQUFBQUFBQUFBQUFBQUFBQUFBQUFUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBYkI3QmVPOGdPYSt4bndNdnQrZm04UWo1U2NNd3BlOTNHOEJUQzBocjdSaE5CbHlSCjBHT21vY041SDZRRTJ0YmRwS1N6TnJPeVlyazNlWHFxNkZyNGRXeUNMOUI1cWxJQWczUGtLM3U0L2FmVXl2bFMKS1ZUaHU5RERlcmp3bzViQ20xQ1BOQ1N4T011YXdxUHNhS1o0NVlHa0t2ZXVLU04zT2EvTnNpWCtFUnpuWXhicApBSmFFQ0YwVGZOL2dwRm4vTCtmQkFHV0JDY0xGaE4vNEVQZUhVZG9XQ1Y1OGY3dDFSTEhzRW1iRjVTdlpjLzlhCm1RdGRFaG1PWUl4R3Vlb0lycTNPeWpBMDVOcUtzbkJoZXNxeDZtMFhHNkxHanVVNzEzdWxvY0JWQ3BkRSt2Q1gKYit4Y1RqcmFHNkVRMU9hZFdIRTNHOHlpZzhraXhJeEwzUHd3emc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeUx5d3ZSQVR2UHNNZzlCOHErV1VWRGFlZWR4VWpNTWZyZS9kYmZSdFBSQ3FvOGFyCjFpVHh3WjNvZXpjbEdWaGRtdEVvR1hUN0hpdW9kRHNYQjNnMnBWZ0lKemEwQllpMnNPV2w0Z2tyN1BUbjFpQjcKN3IwVUdqeTcycFQvNHNaTDNhSVpTKzhCbktlM3JuNThTQW9qSjJtUCtjK0JBenZ2cHkvNVB5Z3dlZUhKb1JWbApGQ0xjU2w2U3JRN2dJZXpmRitsUkgrREFwSWdnS0JjNURMZXVlaWlCSXBZSzB4elhBZXdpNmFndzdTZlB5KzFXCkM3dHNvYTRNdW1pQ0prYVFmT3BtS09tUWNrM1d5MG5XUG5HK0wrV3h0TGxUbE85bjZKZkxiM3BZOTB0UDRYN0UKTCtTbjk2K3VxRk1tWU42MGNQNU56cEg5QlFqLzhuWjZEbVJwMHdJREFRQUJBb0lCQUhETEhlQk9YVmp1RTkwcApWRFJldnhjR3pjdVprMlM0NjE4WURlc1AwaVhpN0k4MFBqQUkrRk1jQUpyanBKUDJSRHFPMWlKZnlnN3M1eTNRCldpTlhXQlZXUHRhUjlWdTZzelQ1QlZuYVgzVTVNOS9zeHRhaUpkNk1TOTRKcFRMdXk0aFE0amY1cDRVMzlJMDMKQTJ5VFRhZUN1R1RkUlJmbElNZG52SHpSZjFPc0hYbDJyNklNSEYrbksrd1JFUDlsR1p0SG1rQndVODBWNHdxLwpQYkp0STR3SzMzdG9NQm5pcG5zTWhuVTlqdEQ3bnptQzhrbEtCTjBVQUxXb0tvRy9wY1FqSk45Kzd4bXhMc01oCk9UTnNINENKRTdQT3hYYlFtZGYyakhyQUQ2eFFUUHJGanB6eEVGU2VYN1VYSWtVSlBSVzQ1dGhoUXdsZ2pHRHEKR1VKUHlSRUNnWUVBNlp0RzdjU1ZsbW5NNHF6c243ME5WNThKYm9aOUx3RHUyZFJNa1lENVcyd2lnTXArK21regpCNnNyV0NNRGdmeEhnS3hIYVMzWnFwci8yYnFZNHBMRFE4S0FHSzJKZElWem9yVjZkZUpsRzFhSEdldWVKcXJ0CmFWdHpHZmE1U1B3UHUrdUo1ZlUvVVJYQ0lJdkM5YTZZZzBGYlBZb2R6azdwQ2g2T2R5bTFWK2tDZ1lFQTIvckwKTXJMRzB2QVU2Mml3WGVGZlM5blVjRlVJNm5BL2VqbWI4djc5MUUwbVdmTnFtM2hWUks0dHl2T05ReW5XRVZCeQoxb0JMYkpoQ1R3dVJRQ3VhY0UxU1A5YUs2OHNsNThleklzbzU1bHA3TXFwZWMvdzJ6ejJNcVVtUHc2ZXNHczNuClNkNEZ0NXl3cVh3S1ZMRU4yTkp3OVQ1cGQ0TmZaYXBDL3Nnc21sc0NnWUFYNW1RR1ZYTjhkUXlhTUZqeEt0VmYKbm96SGV3ajVzeDI4dVlTdjZrTVl3R0p6VE1SYStFSlpTWURndm94UVV6QTVrT2FwY3lCdTNQYktIdFlmY0NaOApHejBoeVRkajdYZGNNVGI3TXBObmpaMjY0Q2xKQ1huS3FxbUhBWUFKWUloM2tHeUdVMllMOUs3c3gzL0Z4UHdqCmlaODlGNUZmRnlHdWdGdlJBenBqYVFLQmdRQ0VYUEdyZmRzWXpaRW8zUU5TV2V2SGJqamZwcXNJdGFYY1c1RzAKc3kzMGNyK2kzRTdIWWE2Yzl0bGpCdzEyM2xPS2M0ZkYvY2hrZlhGWXNyTWhrNXNIKzk2RHZ3bzBPemFCc3EzZApQeVY3ci9IMVdJSWc5Qi9lcjBCV0ZJZEd5VHRMbloyUDJ1SkJ5eXlacnFOZ3RuQ0lpSWVqYVh4NGh6bjlxR2RMCmV4TXJoUUtCZ1FDWWhrc0x4MlhOdVNLb2dXY1dtZnhTT3BaVktZeUlKdEFzdExjUVVqTXF2aGRqNGxFeXRVVkMKTktxT2RoWVNRbmpnVVBsYWxpZklQNldkUnZ5ZDNOMkFFbVZFdUx6YXNHckcyUGcrWEFiSE1sS04rc2JIMVhDWgpscWhYNzk0UnV1SzNZaTJzZzlXelp5QjdGUDRHVjVnWTlvUnhXMGYrMmU2NW9XSVlLOVlGaEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVE9XTTF3enZVNDJ0MjFaZGU2Rnd1VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEEwV2hjTk1qWXhNVEl4TWpFMQpOVEEwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3VkTmdvOHFTR2V0anFlRnNRYkZIcExsT1dpZkpDUlZ5aWh5WUU4UUZ2TVVVL2NqNm4KbStXM3Z2cGYwb1RJQmliVzZCTkltTGtaTDErSTE0ZGc5Szh5N0JuTjNUd0JYVnFPVTF1YkYxbmJDUTc0UDM0agpaQm9pVmZrb1ZTUnQ2TXh6WXN2Zmg3OG12T3dZMTBxRUhmbjAxT2t6Mmp4TUk5THJkS0lUUU5ZMW4zY1JjMmJ4ClpXUzFRTmMzQzBid0Fka21mdDJwaFdzbmZKekZER21laEVkbjlIaFBWSHphMitGUWJIZkVQRWEyTjROYVdRaVUKSVBndTFnQlU5N0dOek43UzZLSGdWZEZUemd6RFhVc1Evd1dEeC96YkhzZXpSSkdpellHNGFqaWs4V1JPSk9uUAphWWl4ZmM3RjFXM2ZveFdRcWNOa09xWWc0Z1VoK3JrTis0VC9BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVYcTVDRkxic3BMaW4vWGp5VUozdVNkNFV5WFl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFLMUFLTENiblVWTXZYZDZkazFXQXkvaXRyd1dRaU5QY3paMStYVS9TWk8weHppcnA4VG9vK0o0ClJnT2RsQTJHT1FlZG16RllXeTc0TG9DbFM1cjdXeVBGdEJwZFh3b2lQaWt3VkNnNlZTbHRUUW51V3F5WUJKczkKSWxSSk9yd0hBVldMSU81RkVLbHl6S3puL3NQRmxwUEJTVFVWM3RoK3pGNzNSZ3Z6RlhIcFRFQ21Kano3N1oySAo1RkllRmJFbmQ0MnBDdG1CUWhkSmRFZnZDU0RHckRPeG1PMmtUMENIY1Y1cERxMjdVenp5K2NKTzlHaUIzRGlsCjdLdlptWkY5dmRvZ09GckduaFFvU1FDUWZ6LzNsYmJyb1hsbDBqZzlqL01zV2V1NFFRVjBBbjF1RzNXbEt3NzAKMUVadnowTVdRWjY3M1BIbE1HOXV6OXBEdDdKNkNOTT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUwxbVJoN2lyWmZiNnU3ZTIvMzh2SXd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3TkZvWERUSTJNVEV5TVRJeApOVFV3TkZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTFIV3pDcCt4MXArR0luMGlXNVorK0VtbU52UTAKa0pVM01lcW1hWVdWL1hMTzBBRGtTcHU5UHNKbWNPdGFTR05XNHhMeC9sZ1RsRUtkNncwbDd2TGxvdW9jZWhMbgpwUHh5bHVQYncrWHF5N0lrUThsd1VhRWZOL1BYTmZiMjJZZnYyOVB0cDhKZGZlTmtGdVdvcVdIRkFOaTh5ZmtvCmNsMDlrcytRdlU4MVdTU2lGY3ZvcnBDaVY2YVpFalUzR1N4RlN1SXFLZytidHhiZ1NON2k4dlZGcnFMUXk4WlkKWHR5bFNVVGltYk1XQVFKL0xxZTVqeDhpVkhIcUJBN2gxbUNvbmVsN3hTcWRwaDBxQVlIQ2srQUY5c25ObVZUTgoyM3BDRS9CTGd0RHhYdWQvQ01mR1lVNlpGL2RPWjI0V2ZTOHdFMElyeEcrcXlvajVpTC9tWVBOdk13SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUmVya0lVdHV5a3VLZjllUEpRbmU1SgozaFRKZGpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBR1BaaTlSQVVDMjdoZUJjNnBENUdGQ2hoZmp1OVdqMTltQ0ZWZDludDViak1kZmQKVzBuTkNyUTlwS0k5dG0zb0FOcGhEWWpuTWJvRG1aU2lEVFBxSDZoSEcrVnE1M3RobVQ0UFdxSm1qMG1veWE3UgpXa3FEcWRSQ29JbnlJVmgza0ptSDZEc0x1Ynp2WWIyeEQyZllEYUNuSmQ1S0tOYzVRUjdvdWhtUkZyZDgyajRxCmRBWDBreXg0TWFib082cGNEYU5ZOVdaaGkxMXJXV0NuTGRKWElIM3ZHQmV2WkJ5akNLMHMveTJuNjl3a0VFWWgKZm83cUE4bEFSVVE2cTVpdmhiMTN0V2pKQldTMHlLbzhIc24rUDRyclFWRGVBbDNnMzJzQlBwdDViR3ZXdnJQKwpyZmFQS1BrNWRLN3kzTDZzbi9zNU9YUFQ3NldSa0hMMmJPZWc3ZVE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMUhXekNwK3gxcCtHSW4waVc1WisrRW1tTnZRMGtKVTNNZXFtYVlXVi9YTE8wQURrClNwdTlQc0ptY090YVNHTlc0eEx4L2xnVGxFS2Q2dzBsN3ZMbG91b2NlaExucFB4eWx1UGJ3K1hxeTdJa1E4bHcKVWFFZk4vUFhOZmIyMllmdjI5UHRwOEpkZmVOa0Z1V29xV0hGQU5pOHlma29jbDA5a3MrUXZVODFXU1NpRmN2bwpycENpVjZhWkVqVTNHU3hGU3VJcUtnK2J0eGJnU043aTh2VkZycUxReThaWVh0eWxTVVRpbWJNV0FRSi9McWU1Cmp4OGlWSEhxQkE3aDFtQ29uZWw3eFNxZHBoMHFBWUhDaytBRjlzbk5tVlROMjNwQ0UvQkxndER4WHVkL0NNZkcKWVU2WkYvZE9aMjRXZlM4d0UwSXJ4RytxeW9qNWlML21ZUE52TXdJREFRQUJBb0lCQUZGUmEySFpsYnZMK3c4ZwpUaEk0SEFqMFI0WXBHaVZzdDErSHJJSWUreld5eDYyZGFjT1VzRzVoQWN5ZWlFUEVvZkR2dzJmU1Zrd2M0MHlnCkQ3RFJqMHMzeUFhQlRlQThMNi9KTHNoZ0srb2pHUFpKRjVCbTF3Z1hjSHZiTnNnejIzNk1NeDVPcW5JUW9yS1EKM0dsWVhvcmdhZ0gwTjZMdVJTNzMrekk2S3ZVZStWNlhKZEN4dW1Kblg5Mjl5SWM5TkRycllFcW4ydTlPbWh6RApSYlpaUWc4VXkraHd1cWlyeEk5Tk1OODBEb05GYmxUeFhTdjduNDJidHJ0dEowMXRFVmJhVXhKazNDeDJlWkp1CkFWYlFEcThPRk04dkp2U282Zi9admp0bDE0R1dvT3RnUitSRkl5ZkZjRG8rSHlib3JKNktiT0ZDQW05RmFaYWQKR1ljdHNtRUNnWUVBK29iUWxhYkREWm1MbUFPQzJoL1NlZFR0djdxODF2S2ptWUFIUmVzc2p5NkhqWW15NStmbgpJSHNERlAvZXFoQzRPNXZycHR4WkdzcG8xcjB2MWFid2FxSUtEMmFabHpWT0ZDeCtBdk1CN1Y2RXRnSDlmYXhQCkU0UVFjOWtUZEFQakdYUCt1VENlc3VBSkwrSG84R05pMmgyVTBrbjB1bml4QitUS3dyclRIMDBDZ1lFQTJSbjYKYkE1Mk9zU0puR0I5SmRwT3h5eFFlclBTa1pXSGVDVlZLTUFjRWFlRElGZUswSUdyc3RLUS8yYVdiMS9tZWdHeAp1U2o5QmNWd3JpQnExb1NNM3h6SGhiYUtXRWJsellhT3Rqc1UvTTJ5L1JXUXo0MnN4R295a2E1YU9EK1AvRHpoCnJOZTVRT3JrTXdTVDN5UGlHV0w0T1hvQWJyd2wwem9vZmpEdWlIOENnWUVBaVczUkdIYjlnd1ZhNVUzdnh4WXoKMEs5MHFIdVl3ZFVpMTc2NnZxa3VyWERaM1ZQUE41WW9YTkgrTTlQVTRyZi9TSHZVL3BqYnJHMmlxMEhtN3E0QQpMbzZyTkIyVlhiUlpHNG40cWtlQ0pDTjRhNXVWNGczVzV4N0lJN1RPRGhOZnpnT3FsUTVOMEZSRDFlZDRiLzRsCktQK1hOdkJvOXEza2R5OFQ1MVN6SWZVQ2dZRUFoVTMzUHp4T0NsMjlwWUIxdDdWcFk5RHBCYjYrejlmQjI5c0kKaEVJWnVobGlZWXgvVnZJWUxIQXd5aklDc3hadW5ZSEd6OHZFT1RQM3NXT0VWbjREUmNnVkZ4eHpyQ3EwVmxPRgo4NDBwb09UcFA0OXJZSlk4ZkVvOURNakM2d0RVZDJ3bW9ndS8yNFdmWTFndk4vZC9rRmo5MDhUKzJQKzhOZ3ZpCjYwRStaaDhDZ1lCWUJoOXRTVk04UHFjOFdNU3VUcWx0UFJXem1QcXRkYmxGdmRiaGJ2dk9KOWZEamFuaFZEQXkKd2NMakN4TDBMNjQvU2pkOW1oNWJwSE5pUUJ3WXlldnRhTnBqT1VQS1dCUjhYR1ZPQUxNQW54a29aUUFwKy9Kego1UHFQV1hFSnRGL0lOMEZQK1daZ2U4OGhwaDd4anlIZ1EwaFBFVFpJVGZXNnczQXZtbDFHeXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVE9XTTF3enZVNDJ0MjFaZGU2Rnd1VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEEwV2hjTk1qWXhNVEl4TWpFMQpOVEEwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3VkTmdvOHFTR2V0anFlRnNRYkZIcExsT1dpZkpDUlZ5aWh5WUU4UUZ2TVVVL2NqNm4KbStXM3Z2cGYwb1RJQmliVzZCTkltTGtaTDErSTE0ZGc5Szh5N0JuTjNUd0JYVnFPVTF1YkYxbmJDUTc0UDM0agpaQm9pVmZrb1ZTUnQ2TXh6WXN2Zmg3OG12T3dZMTBxRUhmbjAxT2t6Mmp4TUk5THJkS0lUUU5ZMW4zY1JjMmJ4ClpXUzFRTmMzQzBid0Fka21mdDJwaFdzbmZKekZER21laEVkbjlIaFBWSHphMitGUWJIZkVQRWEyTjROYVdRaVUKSVBndTFnQlU5N0dOek43UzZLSGdWZEZUemd6RFhVc1Evd1dEeC96YkhzZXpSSkdpellHNGFqaWs4V1JPSk9uUAphWWl4ZmM3RjFXM2ZveFdRcWNOa09xWWc0Z1VoK3JrTis0VC9BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVYcTVDRkxic3BMaW4vWGp5VUozdVNkNFV5WFl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFLMUFLTENiblVWTXZYZDZkazFXQXkvaXRyd1dRaU5QY3paMStYVS9TWk8weHppcnA4VG9vK0o0ClJnT2RsQTJHT1FlZG16RllXeTc0TG9DbFM1cjdXeVBGdEJwZFh3b2lQaWt3VkNnNlZTbHRUUW51V3F5WUJKczkKSWxSSk9yd0hBVldMSU81RkVLbHl6S3puL3NQRmxwUEJTVFVWM3RoK3pGNzNSZ3Z6RlhIcFRFQ21Kano3N1oySAo1RkllRmJFbmQ0MnBDdG1CUWhkSmRFZnZDU0RHckRPeG1PMmtUMENIY1Y1cERxMjdVenp5K2NKTzlHaUIzRGlsCjdLdlptWkY5dmRvZ09GckduaFFvU1FDUWZ6LzNsYmJyb1hsbDBqZzlqL01zV2V1NFFRVjBBbjF1RzNXbEt3NzAKMUVadnowTVdRWjY3M1BIbE1HOXV6OXBEdDdKNkNOTT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRR1dlWWJ6b1NXK3k2R1lacUFKbndQREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEEwV2hjTk1qWXhNVEl4TWpFMQpOVEEwV2pBbE1TTXdJUVlEVlFRRERCb3FMbU15TG1oMVltSnNaUzFuY25CakxtTnBiR2wxYlM1cGJ6Q0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNVWhld0psOWthb2dKQmZuTHlWVEpMVTdIckcKSTBmbjNreFF4YWVLMDdpRlFKc2pRWnl3U3lWWTFDbXVBT21IejBRSmpiK3JvdHdPckRJUUxKSFFuWlJzNGNucgo4d0ZSa0hvMFJUd0NDcjg3WG5Pdk9aUmNkUmh2TUlZbXhVWU5OYWh2M2toM0pBbUJPTUZ6M0dVclg5dVBSc0h2CktLR2tJT0EvNjdaRnRwK2ZNQXFaOG9sdm5RRC9UQXZLaTZkcFBVS0hqZjhGK21UakRRYS9KRk4yOVVCWHZpSEsKcGpWTmZGa2Mwa2RyV05ScWhwK0oxcVNrRGx2NzFOaVo2dVl5cklnSjZLbVMwMlptSDk5QnN1SHRuOUFDYlFvdwpMaFVRd09pM1VDRmNQVFdqYnREK1JROS9qQnc4Q1BxVS9ZN3NCc3IrTm9DUE5nQTNvR0VtbXdRcnFrVUNBd0VBCkFhT0JpRENCaFRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVVYcTVDRkxic3BMaW4vWGp5VUozdQpTZDRVeVhZd0pRWURWUjBSQkI0d0hJSWFLaTVqTWk1b2RXSmliR1V0WjNKd1l5NWphV3hwZFcwdWFXOHdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUFkWEFLOFN2ZTQ1ZVkremZ2M1c3QmxQaW4rTnZnc1RUaC82YlkvYW5RNEcKQTZuL0d0THRQS3hpOE9KOXdSWEZwVENTTEZJQ1ZiV2ZYcG55VXBHUnpYYVZZMzdDSWdHL0E5L0Y5bmRyT1RHdQpLTTA5WENHK2ZybzBYZDA2eFNNbldBclJwZVpkaitPUStWdyt4UHphNGhXTzFlWGNLbzRIdEl2OGxLbE9xOHRBClBSRG91Y0hOYzhkbU5HSkVyMEdaZmxPcm0yaGpONXluYitUa0NYMWtrc0M0Z2JrNWFtdEsrUUhhZ0d5RlFnbDAKOTVya3pONDFBWjZrdW9Dek5rMVB2MVpMTGFpdEZiMDdSSWtvOGhMZzRRMzhQaStWbmUrYWVjY2V5WXNiVit2ZQpsREg1dnJxVGlTQWE0Z3JTNnV3OWZDSjJBQ0R6K25IYTNSMmdvNGpCV0VrPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeFNGN0FtWDJScWlBa0YrY3ZKVk1rdFRzZXNZalIrZmVURkRGcDRyVHVJVkFteU5CCm5MQkxKVmpVS2E0QTZZZlBSQW1OdjZ1aTNBNnNNaEFza2RDZGxHemh5ZXZ6QVZHUWVqUkZQQUlLdnp0ZWM2ODUKbEZ4MUdHOHdoaWJGUmcwMXFHL2VTSGNrQ1lFNHdYUGNaU3RmMjQ5R3dlOG9vYVFnNEQvcnRrVzJuNTh3Q3BueQppVytkQVA5TUM4cUxwMms5UW9lTi93WDZaT01OQnI4a1UzYjFRRmUrSWNxbU5VMThXUnpTUjJ0WTFHcUduNG5XCnBLUU9XL3ZVMkpucTVqS3NpQW5vcVpMVFptWWYzMEd5NGUyZjBBSnRDakF1RlJEQTZMZFFJVnc5TmFOdTBQNUYKRDMrTUhEd0krcFQ5anV3R3l2NDJnSTgyQURlZ1lTYWJCQ3VxUlFJREFRQUJBb0lCQVFDZkkvODFHWEV1NjVzVwpja21MS0pBdnZUckhocXMyd21ZQWYvaUE0Qjg1eUVFMnZNaWNJT29aVlZPNTdpSUlaVDRhOUFkOTQ2YlBOZjBuClVVMVp6ZXRZeG1tazVCbENTRUYxbGpzS1RhKzFYODFKWVB6LzI0QWdZS3J3c2QzeVJubTU1ODJ2L0phWUliemEKMTVqbUI1VVVIOStFY25qL3ZRdFpYZUVCUGRoSGxRT3FTU2h2aVF3WkhkTjRqSmVFa1hQTGUvMXgxbWtESEI4bwpPTlRseWdOMUZqb1VsVUNhNDRhbFFUdnFQWkp5cW9NNjVKNHZHdkxna3RBNXMzdGRFclVlY3djLzZ5YzBodFZmCnJmalY5QnI3NEp1SGJvdGQ1YlQwNDFpWmE4YzY5WU1idGtvNnBaM1NmYm5OcXBrMVpNeEU5dGhQL25lYWRoUFUKTlk3eUJrRmhBb0dCQVBtNGZBQU8rVnRVOWNTN242ZWpodEh1UXJFVmZjNkRjd3R2Y2hya3UrdGpFWS9pZHJTOQpuLzdvdVBlTWxGWHh2TDI0RTNScDZEMTdCOVlRWWNQTlRQVWhWOTVVbUtJNkQwV1MvQzViUmQ2SURYbE9hZFlYCndwdEErTXRVTDhOMnhIZTRkTGQ3MjF3d2Fxd1JiQjRRVnBTblJodjBPYjdtV25ROS8vcXZXQlpOQW9HQkFNb1cKZGpYNytNQ3RSL2dJZ0daRmltYmtkVFRlM2tDU3VLTnFCVWRWNmRqQ3phSkNyZk9SR1hlbDczcUFNQnBBRTBIWgpqVTNkWVdCUzNLakZxQURaZ3FKRDJmYzc0d1lkaHlOdFlFbWdCNVNjU0ZEVEhJTUt1amNBL2YvM1lUUlAweE9GCm9oSW02WUk0dzhLT0ZZZFJ1cXZqNjYySFYyWFhnTVdHNGtUL20wL1pBb0dBZmxrb2JFTW5TVjJ3U0EwQ1Y2aDIKZzJ0QTFTWmhsQWFRUTkzc1pzMEtnNnVKYkRxU0F4cmFnL2d0OWhwcnh4eGJlY1pVR1plb1NNc2lDTjRiQ1Iycgo3VzhrYlRweVM4cUNoWm83L0J4ME9vYXVBbzE1SVRpK1h4MDloR3NoQzQzaEZBNEJDQUVqMlA0cVNzczUzL0EyClRscGdMNjZmTlFhS0I3eUM4c3liRGhVQ2dZQUJJbjhuYm5MSElqSDFRcGIxL0EzNjVlMkNqbjNRL3dIcWFQMysKbUl6bm1yQnM2Tkx4T3k5WmJLVWJtdnlxS1JIeW5MWWVhYy9TS3FUeWphbVQxNlRVSkcxazVnRXdWNW9hcU5LUgpsMFJ6b1MwR3h5aXgwNjJZQVhscnBvZjFNejJNTG9QcWRpMTVmYmdicjVDUFlmWWFZUDFCekREQmNhUlhkNXB0CnFNSEdnUUtCZ1FDRnI1SVlIaVJ1bjI5U25Pc3BnSEViRVU5dEd0bUtIVEpBaVI1VFNKSGw1MVVlU0VXZFB4RDUKMjdicTBUZ2o0OG9HMzJIYmpjZXBaQ1k2Znh2SlFXclFEOFhqZFNyTEgxRHp1cjdkc1h3NE1kSHhleWdqQUNQcgpQSHhCcUpwdDZQUGg2T0NScEJWTm00SUdsRWRWR3lya0daVmFPZHVESDJJZHBLQmJmNzJpbUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: c2
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "12"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-wireguard: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "false"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  ipam-cilium-node-update-rate: "15s"
  cluster-pool-ipv4-cidr: "10.2.0.0/17"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  cnp-node-status-gc-interval: "0s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "true"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"

  external-envoy-proxy: "false"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: c2
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/clustermesh-apiserver/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumexternalworkloads/status
  - ciliumnodes
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumendpoints/status
  verbs:
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumexternalworkloads
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver-metrics
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/component: metrics
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: kvmesh-metrics
    port: 9964
    protocol: TCP
    targetPort: kvmesh-metrics
  selector:
    k8s-app: clustermesh-apiserver
---
# Source: cilium/templates/clustermesh-apiserver/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  type: NodePort
  selector:
    k8s-app: clustermesh-apiserver
  ports:
  - port: 2379
    nodePort: 32379
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.14.2@sha256:52f70250dea22e506959439a7c4ea31b10fe8375db62f5c27ab746e3a2af866d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/clustermesh-apiserver/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: clustermesh-apiserver
        k8s-app: clustermesh-apiserver
    spec:
      initContainers:
      - name: etcd-init
        image: "quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args:
        - |
          rm -rf /var/run/etcd/*;
          /usr/local/bin/etcd --data-dir=/var/run/etcd --name=clustermesh-apiserver --listen-client-urls=http://127.0.0.1:2379 --advertise-client-urls=http://127.0.0.1:2379 --initial-cluster-token=clustermesh-apiserver --initial-cluster-state=new --auto-compaction-retention=1 &

          # The following key needs to be created before that the cilium agents
          # have the possibility of connecting to etcd.
          etcdctl put cilium/.has-cluster-config true

          etcdctl user add root --no-password;
          etcdctl user grant-role root root;
          etcdctl user add admin-c2 --no-password;
          etcdctl user grant-role admin-c2 root;
          etcdctl user add externalworkload --no-password;
          etcdctl role add externalworkload;
          etcdctl role grant-permission externalworkload --from-key read '';
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/state/noderegister/v1/;
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/.initlock/;
          etcdctl user grant-role externalworkload externalworkload;
          etcdctl user add remote --no-password;
          etcdctl role add remote;
          etcdctl role grant-permission remote --from-key read '';
          etcdctl user grant-role remote remote;
          etcdctl auth enable;
          exit
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      containers:
      - name: etcd
        image: "quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/local/bin/etcd
        args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        # Surrounding the IPv4 address with brackets works in this case, since etcd
        # uses net.SplitHostPort() internally and it accepts the that format.
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=clustermesh-apiserver
        - --auto-compaction-retention=1
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - name: etcd
          containerPort: 2379
          protocol: TCP
        volumeMounts:
        - name: etcd-server-secrets
          mountPath: /var/lib/etcd-secrets
          readOnly: true
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      - name: apiserver
        image: "quay.io/cilium/clustermesh-apiserver:v1.14.2@sha256:0650beac6633a483261640b6539c9609f5a761f4ab4504fd1e6ffe7f2bb82e9a"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt
        - etcd.config=/var/lib/cilium/etcd-config.yaml
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: identity-allocation-mode
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: enable-k8s-endpoint-slice
              optional: true
        ports:
        - name: apiserv-metrics
          containerPort: 9962
          protocol: TCP
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: etcd-server-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-server-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-admin-client
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-admin-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-data-dir
        emptyDir: {}
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "clustermesh-apiserver"
      serviceAccountName: "clustermesh-apiserver"
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: clustermesh-apiserver
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.14.2@sha256:a89030b31f333e8fb1c10d2473250399a1a537c27d022cd8becc1a65d1bef1d6"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.12.0@sha256:1c876cfa1d5e35bc91e1025c9314f922041592a88b03313c22c1f97a5d2ba88f"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.12.0@sha256:8a79a1aad4fc9c2aa2b3e4379af0af872a89fcec9d99e117188190671c66fc2e"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.

# Only create the namespace if it's different from Ingress and Gateway API secret namespaces (if enabled).
