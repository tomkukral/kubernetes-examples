---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRlhVam9nUEhFeG1sNXNnNWRrWm9YakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEV3V2hjTk1qWXhNVEl4TWpFMQpOVEV3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzV2WGtGZ2twakNRRkpSbitaWDBWcXlQYnhqLzJ1YlFoR2M5VWpFVTI5N2xxamNsbTgKZnZPUVNNWERPc01QWTQra1BIa2pXaGtXMmw2TW5CbXRXWi9aYzhuNkFnN3oxenJuanlmeWFCb3ZjaWhJaWEvdQpPbnlEL1hHYUNrNDRjUDFVR1hRNXp6TVBKTGc3UVJvNk5tNkMyclVydUUvdVVXS0RLVmEyUUZMQVNjSm1pblJNCnd4WkZJc3JsL1NDMnJRTi9ENnJyZnd2cjh1TkFITGdIYytFMmU2MTZqQzlFTXFVN3EyNWh3bTFaWGRhMVo2ZkgKeDFPdEwwYy9ESWx0VnI2eGt4dWM1anNvdkxXSzVsaUtvcllnSmNDRlEra3pmRDI4Z053SnN3dllBeUJHQUdXWgp6ODJ1N2lBcmkzTEJESitobGRvdzErNm9IODRYOFY5NEVUS0pBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVzL0haVGhETVhxNTFLZTRLMkM5WCs0VnVxcjR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFBcmxZQ01mQXcxMCtTK2NtdHNBWjgwcVluZUZibUVVUzhvUThuMGlkeW9RYUVFNm5JVWltbW5JCnZ5UGlOaG5TZXMrT2NlOHNYSlhHUnM5VFRXOGIvQnk2Y0tPT25jUGlFR3hVZmFSdEx2SjJFVTFMS25kL21aWVcKMkpyY0JQT2g0VnhkZWgyYzJQTTRtQlYwR0pjTTduL0gvd1dZVE04aTA5dCt4SllHbnA0aG5KRE1EcDZ2RmxhSgo2MUhrczFKNEY3V3dWaUtUSUR4R01TOGtCRk42SEYwN0FYRzYydWxRaFR5QTEycWVHT0ZjV2o3MS9oYlI4cDBHCks2MWxYMzZsU0JqVWIzRy9Ha1ZCK0w2NStDdVJOdWE5N094TGVUbDIrWmtjNzQvbGlaK3NZaldZd2RVR0VxcWEKaWJzZDFac2hPWW8zVVVOd0ZiZHRTZ251aEZUTUFkZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdWIxNUJZSktZd2tCU1VaL21WOUZhc2oyOFkvOXJtMElSblBWSXhGTnZlNWFvM0paCnZIN3prRWpGd3pyREQyT1BwRHg1STFvWkZ0cGVqSndaclZtZjJYUEorZ0lPODljNjU0OG44bWdhTDNJb1NJbXYKN2pwOGcvMXhtZ3BPT0hEOVZCbDBPYzh6RHlTNE8wRWFPalp1Z3RxMUs3aFA3bEZpZ3lsV3RrQlN3RW5DWm9wMApUTU1XUlNMSzVmMGd0cTBEZncrcTYzOEw2L0xqUUJ5NEIzUGhObnV0ZW93dlJES2xPNnR1WWNKdFdWM1d0V2VuCng4ZFRyUzlIUHd5SmJWYStzWk1ibk9ZN0tMeTFpdVpZaXFLMklDWEFoVVBwTTN3OXZJRGNDYk1MMkFNZ1JnQmwKbWMvTnJ1NGdLNHR5d1F5Zm9aWGFNTmZ1cUIvT0YvRmZlQkV5aVFJREFRQUJBb0lCQUYrMG9xeFZBMUZlYlh3OQpTRGhXSCtXeklaTTg5NkV0NjBxcUd0UFQ4YlFCSWxELzlmOHJod0w4akhKWlQvTVpBUVhHWjBEeEJ1YUFwS0ZkCk9kblp5WVQ1cGNRZDFXaU5xWHR4aDByZm0wYUJVd0oxZCtLUDNtTUFiODNJcTU5bmtSRUpnSnJkQ2RrdXVZTkcKdTJYdGNDb2EyYWxxY2oxQlVEcDNUWWZoUXdKeTNTV1FDTlRDQlpjb2EyZXpGU0NvdGN2eERjMWtkY2ZZTG15bwp5eEhqMXZmQmhoWjFXODJCOGIya1JVVkdHdFVlY0U5TXg0UFBBZkQwVkJzMVpqb05KRFlmTVM0Y1VsU1ZBaURTCktVUnZFdVdhOVhqTWFJd1F3REhVT1VManA0MWttMHZqeXErK20yYkZJRjBVZ01GZER1QkRWVHdxY2hHRUNPbnIKaWlEMTMrVUNnWUVBdzkxQjU0NnpIOC9VQWdqSDNrbXVydG10Z0J1ZXF2b1h0QnhYY0tsY2dZSm90Y2ZpMFZhUwpCNlZaVnVjSHJVNWR2U1EyZkdyK2R1ZTF6ei85MUo4OGlDRWlXVGxxNHA0eFEyRkJtNVQwa3dlK1BKYkh3eGZGCm8xemtzTXZrWTZoQmQ4NEw5V0hCbEo4cGo0cVFTOVpxU2JQV2JIWmE2Z29hTE9rT3JmN3g5dnNDZ1lFQThzUjMKVytSL3JDZ0RQSXhKSDI4bnY5UGl6VnZSZHprR3NHRmkvSldOMGJWVUxCYjUrdnV0UUViZGIrM3ZFTFcyaUFuTAoxRDdqbkJsUFQ1QXV4UzhjMDVuV2RtN2ZSRDl3SUdONzFMRG5UMU1vVmQwN1VIR3ZyQTRzTXJVeE1xNlZnbGtUCnZFL3BGVGRXRW5OU2ZFVm00Ry9zK29SNkMyY0piS1hSc0ZyZDFVc0NnWUVBbzMzZ1VscUNXTTZSU0xWdHFMWlcKa3V0dThSMmMvMWxOU2ZIU1oxOW5zVTlhK2tvRW9mc2lZREY4ZHBiWWlLaCtoTEJpcnM1YzVJSWIrQWlSWjljWApud1lSZHVyL3RuU1g2SWVaVFRZMFJUclVhQnp3V0lCU1lEL2RRVnFncFROQW1yR3F0OFJHNHpsTVp0NGgvcnZXCjh2aWp4dHV3bmVXYTNkd1lmZEx1eE5zQ2dZRUFwbzQ2SVphVUxXWEtTcWtvcGVOYUR4YnMzTjJveVRZYnE3azAKODN3YnI0dkxjdkJVazJoR1Jmb1loR2xtZ2oxWlBONFR0TXRzMXpUYUlBa1l2WG9FT2Z5cWtkaWhYeTV5M0JYRQo2SGh5U2c4UWRsQnhHRkRYS0tFVW03bUtSbTVXN3ZYMFAxZEgzNkYyY1BRajNGUzFMemc3Q3VrRzNublRrbkgxCmVodnRaQjhDZ1lCb3hLa0ZkWkgxQk9kR0xDYW53ZnhQekZFNlJBRkZIQURDWXFGVURxb3o1NTlEWkcxcHEvcmcKbStsQTVvZmpCTHpqMlN1S2ozR3hFSjdIbS9kUFlKUkxxb2xzNUYyZ0puY0pBSC82LzA4NmVZRUxtVGk5ZXJqNwphSm0vK1lRWE5XcUpOMWlSV3FMSmExeC9GbmxaVXM0eFpSOHNzczZlcXFvbTdveGx0cXhHOVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/admin-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRlhVam9nUEhFeG1sNXNnNWRrWm9YakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEV3V2hjTk1qWXhNVEl4TWpFMQpOVEV3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzV2WGtGZ2twakNRRkpSbitaWDBWcXlQYnhqLzJ1YlFoR2M5VWpFVTI5N2xxamNsbTgKZnZPUVNNWERPc01QWTQra1BIa2pXaGtXMmw2TW5CbXRXWi9aYzhuNkFnN3oxenJuanlmeWFCb3ZjaWhJaWEvdQpPbnlEL1hHYUNrNDRjUDFVR1hRNXp6TVBKTGc3UVJvNk5tNkMyclVydUUvdVVXS0RLVmEyUUZMQVNjSm1pblJNCnd4WkZJc3JsL1NDMnJRTi9ENnJyZnd2cjh1TkFITGdIYytFMmU2MTZqQzlFTXFVN3EyNWh3bTFaWGRhMVo2ZkgKeDFPdEwwYy9ESWx0VnI2eGt4dWM1anNvdkxXSzVsaUtvcllnSmNDRlEra3pmRDI4Z053SnN3dllBeUJHQUdXWgp6ODJ1N2lBcmkzTEJESitobGRvdzErNm9IODRYOFY5NEVUS0pBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVzL0haVGhETVhxNTFLZTRLMkM5WCs0VnVxcjR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFBcmxZQ01mQXcxMCtTK2NtdHNBWjgwcVluZUZibUVVUzhvUThuMGlkeW9RYUVFNm5JVWltbW5JCnZ5UGlOaG5TZXMrT2NlOHNYSlhHUnM5VFRXOGIvQnk2Y0tPT25jUGlFR3hVZmFSdEx2SjJFVTFMS25kL21aWVcKMkpyY0JQT2g0VnhkZWgyYzJQTTRtQlYwR0pjTTduL0gvd1dZVE04aTA5dCt4SllHbnA0aG5KRE1EcDZ2RmxhSgo2MUhrczFKNEY3V3dWaUtUSUR4R01TOGtCRk42SEYwN0FYRzYydWxRaFR5QTEycWVHT0ZjV2o3MS9oYlI4cDBHCks2MWxYMzZsU0JqVWIzRy9Ha1ZCK0w2NStDdVJOdWE5N094TGVUbDIrWmtjNzQvbGlaK3NZaldZd2RVR0VxcWEKaWJzZDFac2hPWW8zVVVOd0ZiZHRTZ251aEZUTUFkZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRTE9uQVh1cnIrRzJSanE0K1NnaVUvakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEV4V2hjTk1qWXhNVEl4TWpFMQpOVEV4V2pBVE1SRXdEd1lEVlFRREV3aGhaRzFwYmkxak9EQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQCkFEQ0NBUW9DZ2dFQkFOVTlEY2lyTEJ2R2dQNlpzaThidnByYjRYY20vRllyMCs1WWwzemlvb2w0Nk5CZ0FtS3YKN3ZqSC96VHhXNTMycXR3dCtYVkpWWXlXOUdtb3NLNTJRcEpiZ2UwYVJKQUlWc0lqZlJqb2NwS1EwaVpnYVA4bApJcitXK2RhaGhCSkExek90Ly9VUW04VWFCd2cyN1JpU1NINlFMemQwSUlnQzN3MEVnaTFqUGhua1k3ZWEwU3cyCnF0Nm85UVU1eXFnTUFKUU1CRWx6MWROKzMxVlAxRi92ZExybmsxSG1xaWwzQzNHZTNwTFZaSjZmRXNJRk1YSFUKTWJET1A4YlVqS0tqYi80WFQzU2t6a1hsYU0rTGpBVWdoUGNONFArdlRtSFJDSEwwMCtGTm9FM2RKRlRlQXMzRApBL2dhbWhiQ2l4ZUgvVkZDOFRuVUNXeGZxWDFsS1BWUmxLRUNBd0VBQWFOMk1IUXdEZ1lEVlIwUEFRSC9CQVFECkFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUEKTUI4R0ExVWRJd1FZTUJhQUZMUHgyVTRRekY2dWRTbnVDdGd2Vi91RmJxcStNQlFHQTFVZEVRUU5NQXVDQ1d4dgpZMkZzYUc5emREQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFUOGsvTzBXVk5hd3BPdVoxa2k4akltNDZReSs4CncyVDBDMUtmZ0xnUU9nU1ZHNyt3ZHc4enZCRmJybFA4M1VIcVNlcXpyM0M1aTdCU3h2ZnRvTWwxd1orbUZVY3EKdXRaRVhPLzBRSzlWNzJwVm9WbVFGdGh5TWgvLzNLai92WCtYL01pbDVVeE1jQ1BNMWRnVWMvSklPOHhFcG9pTQo2SkMzTEJKTU51bVlYclo3d01TQ0c1NFFEODF2OTJOSTducHR2YUNuNVRNd01jTjNCSndrYlYvMkg5cUlUU0pRCmYwT1A0aUxFRitqNVh6Z2RYcmZjMG9nMHV1ZkloWmF1L0V2NWo1eWU1U3NJOTlIbGMvNktJQU9TSHRjblpRUG4KN3E5TS9jNnNTR1l5bVRHaUtqeElFdW9Cd2laNW5ZY1BabWlWVTZDeW13L1ZaUmdQR0tuSk5jSERRdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMVQwTnlLc3NHOGFBL3BteUx4dSttdHZoZHliOFZpdlQ3bGlYZk9LaWlYam8wR0FDCllxL3UrTWYvTlBGYm5mYXEzQzM1ZFVsVmpKYjBhYWl3cm5aQ2tsdUI3UnBFa0FoV3dpTjlHT2h5a3BEU0ptQm8KL3lVaXY1YjUxcUdFRWtEWE02My85UkNieFJvSENEYnRHSkpJZnBBdk4zUWdpQUxmRFFTQ0xXTStHZVJqdDVyUgpMRGFxM3FqMUJUbktxQXdBbEF3RVNYUFYwMzdmVlUvVVgrOTB1dWVUVWVhcUtYY0xjWjdla3RWa25wOFN3Z1V4CmNkUXhzTTQveHRTTW9xTnYvaGRQZEtUT1JlVm96NHVNQlNDRTl3M2cvNjlPWWRFSWN2VFQ0VTJnVGQwa1ZONEMKemNNRCtCcWFGc0tMRjRmOVVVTHhPZFFKYkYrcGZXVW85VkdVb1FJREFRQUJBb0lCQUVQUzJJaUVFVktBVDlVcgpNNmFTTDR6MzlQMitFN0tnM0JiS2JOeVhCVld1ZEhhYW93ZWFwK3JQU2hnZjBLRXNyT205WWNQeFlGbUlSaE01ClNZRWtNa1owL3AxWXBvZ2RidUx2QU1Ja1pSVERKV1I1Yzh2N2x0TFRoWUhEKzhzR2ZxeDhZcFlqQXppczc2R28KUHI5Ni83M3B4R3JoNzlyeTl0a2dIdnVxdmp6amQ4c29rNllVdnN4M0tRVVpwWnp2SEZyTkxVTnNVT2N4Y3Q0egpyOXVQU1REbis2WmtoQ3AxYXVmMkVEU0tQb2paZjRGUW9KOVZudmxnV1V5WXA0UGsyLzROVkx0dXcrR2Y2UE0rCktGc1hvUlU4MGVRVnZ0Q2wxbmc2N2xLOUpoSWlMZWdkT0RUdGtSallZcFF6dkk1QUt6MzJmU1h4OHlwQnFWTUYKSGhmNXVBRUNnWUVBL1VRTmMvZGVoT0g5T2N2Vk4rUnZpWlNSa2FmZTNmZ2lqMWVNV1hkaWhuanFaaXFmMGtNdQpBMTQ0aFpOWGYwbXZXMTk5Q2dDRXlOYno4MHJrVFBxQUNGaFdQMXpzNndPeCsrdmszMGpTS290VXZSMVFvQ1FvCmRHMXhyWVRqTG9KS0o4d2RkZGpyUnFwd29zSzRyS3VtVVV1ZE8xcUkzalNOcVVjSkZWNEpvR0VDZ1lFQTE0cGcKMWNsa1ZzQ3ozaVlFY0xCclQrN0xST0JxMCtFVVM1TUlxTEI4UksxN3hwQ0pROXo3TnNCdHpOenRXNzdHVXhsNwphMWhzOTJrSXpKQ0wrTkFDc0huQ1d1TTVBZkcvODRBeWZPd09KVFZVMEdrZmJ4K1M4eUF1bG1mZVNFczRtTTdRCmZORTBxSHRZQWt6bU8yUEJPMEZUR0EzeXl1SGtOT1BXWHR4ZFhFRUNnWUF5RFhqN0tqQXI0dDNBeGwvbEkraEgKTUcxMGM5Qy8zWUkzQWY1aTBBMVF0aVRjL0IrSjFtMEpqVjF1U0toS0o2M1lTUTdWSXpVYTNDQnFQS3JSNjgvUgoxbU4xTWxCQVFnS3kzdlBrak9lOE1MMFdndXlrT1lFbFFWdnVCdzArNjlEci9KTDE3MkRRSG04VU81ZHp5SmllCkNHdVNoMW4xVUQyTzd0TUV2Z2o1QVFLQmdGcmZ0Y29NK2VmMW9TQWxLVFFWdlhqYTlncVpENUU3VVdJM29LdjIKbEw0ajRvNnFPNlZJRXdaWGhUT2RaZG1MaW5SWXh3ZFFKY2orR0w2ZXB0VUZaa3pmV1FrV3lkOCsvSzMrTzhzZApmeTFDMmZwd2g5ZERHYUsxeTg2UUJsQzJuaXNXN3lIZzFuRytaekc1R0V5cjF6bFRabVE2NVVXU2piT2E1N1BnCjl0L0JBb0dCQUt5S2Z4UlhwQnlpNUxCaDd1cFB4bklidlVhaXBubjdkOGJTc244WHNldGFzUXVxcVRYZSs2VzAKUXc3anBjZlUxNk1yNTlXWHlzOEhHWW9NdXA5aldrQjN6WHROOUlqN0NNWUNrcEozcGg1cTdhZW9LbENBQ21QSwpJU3JzWkFIRCsrUFRxMUZvTFoySkhMczB0U3o5UDlzb1VBZkJSNXhNdUtSN0ozbkhtekl4Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-ca-cert
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRlhVam9nUEhFeG1sNXNnNWRrWm9YakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEV3V2hjTk1qWXhNVEl4TWpFMQpOVEV3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzV2WGtGZ2twakNRRkpSbitaWDBWcXlQYnhqLzJ1YlFoR2M5VWpFVTI5N2xxamNsbTgKZnZPUVNNWERPc01QWTQra1BIa2pXaGtXMmw2TW5CbXRXWi9aYzhuNkFnN3oxenJuanlmeWFCb3ZjaWhJaWEvdQpPbnlEL1hHYUNrNDRjUDFVR1hRNXp6TVBKTGc3UVJvNk5tNkMyclVydUUvdVVXS0RLVmEyUUZMQVNjSm1pblJNCnd4WkZJc3JsL1NDMnJRTi9ENnJyZnd2cjh1TkFITGdIYytFMmU2MTZqQzlFTXFVN3EyNWh3bTFaWGRhMVo2ZkgKeDFPdEwwYy9ESWx0VnI2eGt4dWM1anNvdkxXSzVsaUtvcllnSmNDRlEra3pmRDI4Z053SnN3dllBeUJHQUdXWgp6ODJ1N2lBcmkzTEJESitobGRvdzErNm9IODRYOFY5NEVUS0pBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVzL0haVGhETVhxNTFLZTRLMkM5WCs0VnVxcjR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFBcmxZQ01mQXcxMCtTK2NtdHNBWjgwcVluZUZibUVVUzhvUThuMGlkeW9RYUVFNm5JVWltbW5JCnZ5UGlOaG5TZXMrT2NlOHNYSlhHUnM5VFRXOGIvQnk2Y0tPT25jUGlFR3hVZmFSdEx2SjJFVTFMS25kL21aWVcKMkpyY0JQT2g0VnhkZWgyYzJQTTRtQlYwR0pjTTduL0gvd1dZVE04aTA5dCt4SllHbnA0aG5KRE1EcDZ2RmxhSgo2MUhrczFKNEY3V3dWaUtUSUR4R01TOGtCRk42SEYwN0FYRzYydWxRaFR5QTEycWVHT0ZjV2o3MS9oYlI4cDBHCks2MWxYMzZsU0JqVWIzRy9Ha1ZCK0w2NStDdVJOdWE5N094TGVUbDIrWmtjNzQvbGlaK3NZaldZd2RVR0VxcWEKaWJzZDFac2hPWW8zVVVOd0ZiZHRTZ251aEZUTUFkZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdWIxNUJZSktZd2tCU1VaL21WOUZhc2oyOFkvOXJtMElSblBWSXhGTnZlNWFvM0paCnZIN3prRWpGd3pyREQyT1BwRHg1STFvWkZ0cGVqSndaclZtZjJYUEorZ0lPODljNjU0OG44bWdhTDNJb1NJbXYKN2pwOGcvMXhtZ3BPT0hEOVZCbDBPYzh6RHlTNE8wRWFPalp1Z3RxMUs3aFA3bEZpZ3lsV3RrQlN3RW5DWm9wMApUTU1XUlNMSzVmMGd0cTBEZncrcTYzOEw2L0xqUUJ5NEIzUGhObnV0ZW93dlJES2xPNnR1WWNKdFdWM1d0V2VuCng4ZFRyUzlIUHd5SmJWYStzWk1ibk9ZN0tMeTFpdVpZaXFLMklDWEFoVVBwTTN3OXZJRGNDYk1MMkFNZ1JnQmwKbWMvTnJ1NGdLNHR5d1F5Zm9aWGFNTmZ1cUIvT0YvRmZlQkV5aVFJREFRQUJBb0lCQUYrMG9xeFZBMUZlYlh3OQpTRGhXSCtXeklaTTg5NkV0NjBxcUd0UFQ4YlFCSWxELzlmOHJod0w4akhKWlQvTVpBUVhHWjBEeEJ1YUFwS0ZkCk9kblp5WVQ1cGNRZDFXaU5xWHR4aDByZm0wYUJVd0oxZCtLUDNtTUFiODNJcTU5bmtSRUpnSnJkQ2RrdXVZTkcKdTJYdGNDb2EyYWxxY2oxQlVEcDNUWWZoUXdKeTNTV1FDTlRDQlpjb2EyZXpGU0NvdGN2eERjMWtkY2ZZTG15bwp5eEhqMXZmQmhoWjFXODJCOGIya1JVVkdHdFVlY0U5TXg0UFBBZkQwVkJzMVpqb05KRFlmTVM0Y1VsU1ZBaURTCktVUnZFdVdhOVhqTWFJd1F3REhVT1VManA0MWttMHZqeXErK20yYkZJRjBVZ01GZER1QkRWVHdxY2hHRUNPbnIKaWlEMTMrVUNnWUVBdzkxQjU0NnpIOC9VQWdqSDNrbXVydG10Z0J1ZXF2b1h0QnhYY0tsY2dZSm90Y2ZpMFZhUwpCNlZaVnVjSHJVNWR2U1EyZkdyK2R1ZTF6ei85MUo4OGlDRWlXVGxxNHA0eFEyRkJtNVQwa3dlK1BKYkh3eGZGCm8xemtzTXZrWTZoQmQ4NEw5V0hCbEo4cGo0cVFTOVpxU2JQV2JIWmE2Z29hTE9rT3JmN3g5dnNDZ1lFQThzUjMKVytSL3JDZ0RQSXhKSDI4bnY5UGl6VnZSZHprR3NHRmkvSldOMGJWVUxCYjUrdnV0UUViZGIrM3ZFTFcyaUFuTAoxRDdqbkJsUFQ1QXV4UzhjMDVuV2RtN2ZSRDl3SUdONzFMRG5UMU1vVmQwN1VIR3ZyQTRzTXJVeE1xNlZnbGtUCnZFL3BGVGRXRW5OU2ZFVm00Ry9zK29SNkMyY0piS1hSc0ZyZDFVc0NnWUVBbzMzZ1VscUNXTTZSU0xWdHFMWlcKa3V0dThSMmMvMWxOU2ZIU1oxOW5zVTlhK2tvRW9mc2lZREY4ZHBiWWlLaCtoTEJpcnM1YzVJSWIrQWlSWjljWApud1lSZHVyL3RuU1g2SWVaVFRZMFJUclVhQnp3V0lCU1lEL2RRVnFncFROQW1yR3F0OFJHNHpsTVp0NGgvcnZXCjh2aWp4dHV3bmVXYTNkd1lmZEx1eE5zQ2dZRUFwbzQ2SVphVUxXWEtTcWtvcGVOYUR4YnMzTjJveVRZYnE3azAKODN3YnI0dkxjdkJVazJoR1Jmb1loR2xtZ2oxWlBONFR0TXRzMXpUYUlBa1l2WG9FT2Z5cWtkaWhYeTV5M0JYRQo2SGh5U2c4UWRsQnhHRkRYS0tFVW03bUtSbTVXN3ZYMFAxZEgzNkYyY1BRajNGUzFMemc3Q3VrRzNublRrbkgxCmVodnRaQjhDZ1lCb3hLa0ZkWkgxQk9kR0xDYW53ZnhQekZFNlJBRkZIQURDWXFGVURxb3o1NTlEWkcxcHEvcmcKbStsQTVvZmpCTHpqMlN1S2ozR3hFSjdIbS9kUFlKUkxxb2xzNUYyZ0puY0pBSC82LzA4NmVZRUxtVGk5ZXJqNwphSm0vK1lRWE5XcUpOMWlSV3FMSmExeC9GbmxaVXM0eFpSOHNzczZlcXFvbTdveGx0cXhHOVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/remote-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRlhVam9nUEhFeG1sNXNnNWRrWm9YakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEV3V2hjTk1qWXhNVEl4TWpFMQpOVEV3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzV2WGtGZ2twakNRRkpSbitaWDBWcXlQYnhqLzJ1YlFoR2M5VWpFVTI5N2xxamNsbTgKZnZPUVNNWERPc01QWTQra1BIa2pXaGtXMmw2TW5CbXRXWi9aYzhuNkFnN3oxenJuanlmeWFCb3ZjaWhJaWEvdQpPbnlEL1hHYUNrNDRjUDFVR1hRNXp6TVBKTGc3UVJvNk5tNkMyclVydUUvdVVXS0RLVmEyUUZMQVNjSm1pblJNCnd4WkZJc3JsL1NDMnJRTi9ENnJyZnd2cjh1TkFITGdIYytFMmU2MTZqQzlFTXFVN3EyNWh3bTFaWGRhMVo2ZkgKeDFPdEwwYy9ESWx0VnI2eGt4dWM1anNvdkxXSzVsaUtvcllnSmNDRlEra3pmRDI4Z053SnN3dllBeUJHQUdXWgp6ODJ1N2lBcmkzTEJESitobGRvdzErNm9IODRYOFY5NEVUS0pBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVzL0haVGhETVhxNTFLZTRLMkM5WCs0VnVxcjR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFBcmxZQ01mQXcxMCtTK2NtdHNBWjgwcVluZUZibUVVUzhvUThuMGlkeW9RYUVFNm5JVWltbW5JCnZ5UGlOaG5TZXMrT2NlOHNYSlhHUnM5VFRXOGIvQnk2Y0tPT25jUGlFR3hVZmFSdEx2SjJFVTFMS25kL21aWVcKMkpyY0JQT2g0VnhkZWgyYzJQTTRtQlYwR0pjTTduL0gvd1dZVE04aTA5dCt4SllHbnA0aG5KRE1EcDZ2RmxhSgo2MUhrczFKNEY3V3dWaUtUSUR4R01TOGtCRk42SEYwN0FYRzYydWxRaFR5QTEycWVHT0ZjV2o3MS9oYlI4cDBHCks2MWxYMzZsU0JqVWIzRy9Ha1ZCK0w2NStDdVJOdWE5N094TGVUbDIrWmtjNzQvbGlaK3NZaldZd2RVR0VxcWEKaWJzZDFac2hPWW8zVVVOd0ZiZHRTZ251aEZUTUFkZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRT0pkaGpITjEwc2FmWnplM0MwekZwREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEV4V2hjTk1qWXhNVEl4TWpFMQpOVEV4V2pBUk1ROHdEUVlEVlFRREV3WnlaVzF2ZEdVd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEVlNEM2NBYlRTTGxRbkFkTG45cDlYczdVVnJEdHBUWHBaUVpORDZzS0lRVXVxV1FTOExVd3IKZlYvK3ZpZkVQcW5GSW9zcWdVMnZJbFFDeUE1aHFFTW40VGtldWpiczkrZm9YU3RyZEhBcCs1WHh3Nm9YT1EvcQp4b09oc1JWbEFSeURGNTk5MkptdzRZbENCd1BoOUNZaTdQa1ZZTVBnQVNXS3R1OW9Rd05va0V2aVVHTEdSSlE4CmpMTmlxZWlsYzM2Y3ZOZFgvRjk3UFFBVmsxYzlsK2YyajNrQzNKM2JTUmZTNWlSVVRGOTlFUmVCT3JhU0hpeXMKVHN4cmF3Uy8xSVROenlXbzM2U1p0RkdMS3FweldCRFZVT0lrS1JaNjBOS0x5NTBMMTVJTEkybFpld25iLyt1aApmU21MM1hCQ3h5bXNpVmt3Rndzb0VIM2F2SmVCdXRTckFnTUJBQUdqWURCZU1BNEdBMVVkRHdFQi93UUVBd0lGCm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWYKQmdOVkhTTUVHREFXZ0JTejhkbE9FTXhlcm5VcDdncllMMWY3aFc2cXZqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBVWxZMWtEbzAyL1R3Y3BVdjJWU1dNQlBRN2RjMGhSSllDUUp0OC9hejFoMzBwZklmREFrMjR3Q2I3TExlCnFvbldGc2dBTnlIcDNhOVZ2YWFNblJVdFJtWTRmQkxhZ3NOVlFzTG9ENlVMalJJcjZROXlMYnFFQ2pGU3ZibFIKWjU4bFY4QmhGTW44WjcvVlJHRE9MZmpHS1lPWXd5T1YzOW5qYUxGNGdJcXVSdEZOcGNkWmtEUXpkSGNXekRrdwo5b3Z6SG9kL3JxbHpVYzdhWkczSWZyRzA3dUJ6L0RvSi9QUm53WG5tWDdXYmNPN0VEdUxIVUJiUWFzbWxkMjY0CjMva3p2eTNobVkyakVtV0M0c0ljMm9heUdPdUpZSWhBbVpoZUpEMytpT0cxV09rSEVmWElvRzIzUnh6WjRldDIKenJyMGpWL0gva0NaMTNkM2tINUxRZFJuTmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMVVnOTNBRzAwaTVVSndIUzUvYWZWN08xRmF3N2FVMTZXVUdUUStyQ2lFRkxxbGtFCnZDMU1LMzFmL3I0bnhENnB4U0tMS29GTnJ5SlVBc2dPWWFoREorRTVIcm8yN1BmbjZGMHJhM1J3S2Z1VjhjT3EKRnprUDZzYURvYkVWWlFFY2d4ZWZmZGlac09HSlFnY0Q0ZlFtSXV6NUZXREQ0QUVsaXJidmFFTURhSkJMNGxCaQp4a1NVUEl5ellxbm9wWE4rbkx6WFYveGZlejBBRlpOWFBaZm45bzk1QXR5ZDIwa1gwdVlrVkV4ZmZSRVhnVHEyCmtoNHNyRTdNYTJzRXY5U0V6YzhscU4ra21iUlJpeXFxYzFnUTFWRGlKQ2tXZXREU2k4dWRDOWVTQ3lOcFdYc0oKMi8vcm9YMHBpOTF3UXNjcHJJbFpNQmNMS0JCOTJyeVhnYnJVcXdJREFRQUJBb0lCQVFDNFR2ZDErZHVDamhxVwpvdExaTlp3NU04alc4OEZibkdLUVkwU1p1bk5sUDlmZFc1UGw4ZGNTOWdOUXBvN0MzY3ZqMlpnZG9TTzZwcFdtCjJhN2o0WDQzSmtBd040ZGpmRS9oMHpIRWFCak5qdVhpeU0xaHlDUGpKSzEzdXduY0FQdmNwVHRraXhzMWFaRXQKaDlacEdvMGlQVnA2aU9aNzIwSFAvNG9mdFZscXIwS2haaWhtd0R5UjdCbjF2aWdudWk0cnpNUTZmNldZR3dRcgowQ0NUNU4vYkFmQ3R4ajQ3UTYzR3d5NkJWVnFzZzNTREltTlZiN0lIcnduUm5hd2NpeUJsbUduS2d1eTFBbTQrCmQ2by8zZVZ4V3UvL0h6aW15ZEJLMW5OZ1NJWTgrQWtGQkd3K3BZUHZleEZhUUIvUUlXcFpPZVFWa1NRWFdHMUIKRC9EYll0b0JBb0dCQU5tTUlDc2E0eWlFb1Awc2FaNWlBUVNYY2hKZFQwNDdYRnUyRVlqU0dBZzZ6ajJSV1lDSgpTZmxuYkZjcGFUdjZUZUxxSnk0MllmZVd1QXFwSWJSY05EVFdETU45Z21tVmdLS2d3M0ZqNW4xc1A3WXY5TDZGCnRrWmk5ZkxuYjAwKzJERDF3NjFBU0VIekNDOGliSVljUUNYc0paMW0zN21DaFNuVVhtRzBhUWFCQW9HQkFQcjcKSHFsbEdNWTdORFZHNU9pOEtkMGZidGRIejJsdWhoVURsMFJINk5YYVNSZ21pMHZSWGwrNStGemZnaGEvQnFTWgpib3FTOVgvY2RRVWJsTzRYUE1Xc0E2aWdmVitCRXNDSUVlNTRIMzI4RTBXalFtSnZjbDhDSHF5K0dLb3I1NnpoCmRwSmdXWG5vTFJEejgvbDl0Ni9ESjZkSTJudklRZWhXTUxXc2lqMHJBb0dBSU9pN3JRbWlOMnpvMWFPMFRvdFEKMEJzQTNKcFU5dWF2OEFlNDIxTzg0dkhTWlNucHVqSUtpTG9HZjZENkZHS25DWjZXVXIxVFVKcnlPRnFoaUtFeQpISlFNMWozVVRwaVpId0Rteis1bTNhNVViUUVRS3dvYktzYXBvaGMwbFNEZW4zbHVJblZJK1FFRXlleVJNakJ2CjI4eS9XL0pHQWRBbXlNOGhmL0pFdVFFQ2dZRUFpblNpVTV5NzhBK1ZHNWNDalFuUXBuWEN0ZXlkbFhJdGNjWkwKV3BXNDh0QzY1aUhOVW9RcjVlODMvalFuRmRsSUZ1RzF3NmlTMm5pSjdjbHJmWFZBUjJRL21IVUE5UURGa1lULwpMMmtCSm1IczE4dmF3V2J0MTAvYUVEM0dhWXBUQW1KWEFTVTU5ekNJUEFQNG9iZ2k3MGxmeEw5Q0dHcy9RS2JiCnREMTgvWVVDZ1lFQXdXemxGc1dWUU13bkNlUTUxREtkaGpuRng4YThSaFQ4Y3pnUGYxUlZQRHV6NlU4UzZMaWQKVjQrcVFzYW1CL1N6S1dEekZxMUJTQ2l4Sk9YZE1TdkRDMWNmODBjbUxpOHpSTnZHejBTOVVSQmV0SnhOUFgxMgpTdWdML3JLR1JraHkyZTVSZS9PUzF0VjlOaVpTN3BIN05rNnlrbVRkZ2ZMRWJTZys2M0tnNEVFPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRlhVam9nUEhFeG1sNXNnNWRrWm9YakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEV3V2hjTk1qWXhNVEl4TWpFMQpOVEV3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzV2WGtGZ2twakNRRkpSbitaWDBWcXlQYnhqLzJ1YlFoR2M5VWpFVTI5N2xxamNsbTgKZnZPUVNNWERPc01QWTQra1BIa2pXaGtXMmw2TW5CbXRXWi9aYzhuNkFnN3oxenJuanlmeWFCb3ZjaWhJaWEvdQpPbnlEL1hHYUNrNDRjUDFVR1hRNXp6TVBKTGc3UVJvNk5tNkMyclVydUUvdVVXS0RLVmEyUUZMQVNjSm1pblJNCnd4WkZJc3JsL1NDMnJRTi9ENnJyZnd2cjh1TkFITGdIYytFMmU2MTZqQzlFTXFVN3EyNWh3bTFaWGRhMVo2ZkgKeDFPdEwwYy9ESWx0VnI2eGt4dWM1anNvdkxXSzVsaUtvcllnSmNDRlEra3pmRDI4Z053SnN3dllBeUJHQUdXWgp6ODJ1N2lBcmkzTEJESitobGRvdzErNm9IODRYOFY5NEVUS0pBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVzL0haVGhETVhxNTFLZTRLMkM5WCs0VnVxcjR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFBcmxZQ01mQXcxMCtTK2NtdHNBWjgwcVluZUZibUVVUzhvUThuMGlkeW9RYUVFNm5JVWltbW5JCnZ5UGlOaG5TZXMrT2NlOHNYSlhHUnM5VFRXOGIvQnk2Y0tPT25jUGlFR3hVZmFSdEx2SjJFVTFMS25kL21aWVcKMkpyY0JQT2g0VnhkZWgyYzJQTTRtQlYwR0pjTTduL0gvd1dZVE04aTA5dCt4SllHbnA0aG5KRE1EcDZ2RmxhSgo2MUhrczFKNEY3V3dWaUtUSUR4R01TOGtCRk42SEYwN0FYRzYydWxRaFR5QTEycWVHT0ZjV2o3MS9oYlI4cDBHCks2MWxYMzZsU0JqVWIzRy9Ha1ZCK0w2NStDdVJOdWE5N094TGVUbDIrWmtjNzQvbGlaK3NZaldZd2RVR0VxcWEKaWJzZDFac2hPWW8zVVVOd0ZiZHRTZ251aEZUTUFkZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURxRENDQXBDZ0F3SUJBZ0lSQUtjTVVlcjh1bFhabERFbW1FUWF5emd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4TUZvWERUSTJNVEV5TVRJeApOVFV4TUZvd0tqRW9NQ1lHQTFVRUF4TWZZMngxYzNSbGNtMWxjMmd0WVhCcGMyVnlkbVZ5TG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQVBXUHY4R3lnSnNKRDVySU9RblMKaGN3NGthQnZIUVFQaHhKK25EcWR6MTJnTFJvcW01SHZiT0NUejRXVXVqK3BKYVVYV3A5TmJGUXpaRklzVWVSdwozUDNxbnZrSzgwdCtqT2Q3ZllZNnlpejU3Vmd3Rk5lMjJQWGVjKzJkZFhSUWpmTnY3TDV5dmpmYlhMWnlkWXhFCmgvbS9uM3dLT3BlMVBJZGxUd0JCNXZ1QS8rUkRsRG1oV2tIZldtdlR4UUd1dUdtQUJ3b0FsaU14cDhYNS92MjUKblNRS0dTYXRSWU56UzR2WFdYdlNhZTlqKzVuaGttNEJMTDJqL1lyUFhYUkVvdmF6b1lkTGhyV0wxSUtvY1hETgpoczZtcFVOMGJ6QS9NdmRjTW9QaFk2emtUa0R2UmFGK2lsakVRUW9mNXUvczd3WVJNWE03dnU2Tmd1VDd3M0FHCmFza0NBd0VBQWFPQjNqQ0IyekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVXMvSFpUaERNWHE1MQpLZTRLMkM5WCs0VnVxcjR3ZXdZRFZSMFJCSFF3Y29JZlkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnlMbU5wCmJHbDFiUzVwYjRJUUtpNXRaWE5vTG1OcGJHbDFiUzVwYjRJbFkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnkKTG10MVltVXRjM2x6ZEdWdExuTjJZNGNFZndBQUFZY1FBQUFBQUFBQUFBQUFBQUFBQUFBQUFUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBVy9mTFZObFE0eUlIMkFzekR2ZnJ0MEVLN1dxV1JoaVlHZjVvYkVHK1ZtdGFyd09ICk1yZFBRd0t0OXJFUE9YN2hjVWdzbmRHM3d6azhsVGxHTFRBS24vOUZ1Zmh3dEgzc0JveXpGeFFDbHRYMUtXdDQKWTZ1b1BXUWFpcVBoOHpDSUV3U2Vvb3VRcFdYV1FabWs3UGxqU2lqRnpNS2xKUXdDUngvNUgyUWdzNWdSUnBJOQpYZzR2VkZ6T0lwUGhHMXcrSmNNMGw3Rll3MHluY0habkNSODBEbWN4SlMwQjBSZXpVd2p1dXZjcUt3Snp3N3pICnVjME9kSzdENkNQQitpeGxBMzdSZE5JNHAzTkY5bzU2V1BDMzRUNHNoOFQyWXM0V3NtcTV1TUxlUzJqV2hlL3UKWTRtcVB6TFhhMDAxYUszelRjSGh3T2VwZ3k0aGZZOUR5NVhhSlE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBOVkrL3diS0Ftd2tQbXNnNUNkS0Z6RGlSb0c4ZEJBK0hFbjZjT3AzUFhhQXRHaXFiCmtlOXM0SlBQaFpTNlA2a2xwUmRhbjAxc1ZETmtVaXhSNUhEYy9lcWUrUXJ6UzM2TTUzdDloanJLTFBudFdEQVUKMTdiWTlkNXo3WjExZEZDTjgyL3N2bksrTjl0Y3RuSjFqRVNIK2IrZmZBbzZsN1U4aDJWUEFFSG0rNEQvNUVPVQpPYUZhUWQ5YWE5UEZBYTY0YVlBSENnQ1dJekdueGZuKy9ibWRKQW9aSnExRmczTkxpOWRaZTlKcDcyUDdtZUdTCmJnRXN2YVA5aXM5ZGRFU2k5ck9oaDB1R3RZdlVncWh4Y00yR3pxYWxRM1J2TUQ4eTkxd3lnK0Zqck9ST1FPOUYKb1g2S1dNUkJDaC9tNyt6dkJoRXhjenUrN28yQzVQdkRjQVpxeVFJREFRQUJBb0lCQUVLYTZ2Z3U0cE1xc2dEWgpyaDdyNno2cFdWYWF6TlA5SWpYeUFZNGtuOHBWVitaeENDRmRQN3JxWEs5dTE5WE1tMWxjTEVocFI2alBCN2NDCkxuUTM2TGsybWtnU29Fc3AyQzR4WUtxMzUzNnJpNlVQNVpkZEVSd2ZhbkpZOHpMSlpyZFE5SFh6eVlSOUMzaXgKTXhFSXhaa0lVTW5rUEdCSjJGRWhPWHhvWTY1emx2RTJaOW5YeXlnTTRLWmxmSDlza1hoNmNiUGlic1ZEVFRZSAo0OU4yZ0xKMFVKL1RUVTV4T2NtUkV5SXdRSlBEbnZ3QkdQYTEzaGYzYmk3SnNzZ0MxUFpUVW8zOWlndlhYWThkCjM0YnlIZ3lVL0RtY0pUb2g5aFZBUExNRndDN1BRVzRYOUlWS0RKUGlGRUlNa0JRWFhZaVRwRTEzSXNxdHNlZGoKYjhFWDRBRUNnWUVBK2xpOUpPei9KVk9LcjAyRmw1VFZyYmVWU0EzNHNmZTFRUHVxTmp1Z3M4dEJ3UkpXVG9CQwpNN25rekhHS3BOeHdvRys5U0U3amJZeXd3ekI5YXhUZUNrSS9vSjRJTjMyWDd4SlFJa0JBZlo1amRoaXpwbzYrCndOUjU2U1FzVTE5UTl5eHQ1MURWM1JCeDRVZkdySUFSdS9POGFiZHhpSnh0MjlSTUFSbzBBRUVDZ1lFQSt4dFkKNlRDRzhlRlB0RW5FVjhDWFc3c3hWdHQ3UzRUY09NMDcwMnl4S1VhQnlrOUZmbm5oZW9RamNybVZZZThzc1I0bwptSlZYRFpEMCs1YVQwejJ0bkVLQlBYNVlaSU5IM1lMWU5ySUdaWnRkamxvWmcybmR3NW9tN0xKazFJN0xHVjFxCkR0dmE0ZGxHOTFGdDc0by9hUDNPZlE5L3lDY0hDK3JSL1VJZ1NJa0NnWUJSK01wK0U4ZjduZDQwUm1ydTFrSWQKTHBhSDBHTlZTcW1qeklQUVhEZmpoek5SbDhLQTA4aFpqWTNZVDNrNVFDRDB0NEcvOG16UGl4aTU0Ti9BTjBYNQpEL1lyam5OY1VCaDJwSVZ1b2FFOFFLZUtuTTMrUkpFN0xKZDZlbWkxSittbjlYbExHNUhiWDY0YU9ObFoxRmw2Ck5IWEdHOVhtQ0dxRVo0QTNnQy8wd1FLQmdGR1J3Nk1VY1hHWFdGWGZkSmx3NVhvVjUrUW9MZmdOTTZCOEFzZ2UKVWJwdnZlK2pLcGI0THFlbXp3RVFpaGNqSTZoeGZJeDhUcWdJZzV4S2dNQ3BFNEZrRlNtTnBsY1lVanNCcXd5eApiZVNKd0sxaVZWRmNEWDdoejIwcVVoaStQZm1DWDladDByOTAzbG11cVFDY0x4Y0RBNVdhZUU3alpxV1haUmxZCjVyWEpBb0dBTVliMHQvY1UxQk5qSFFtb3RtVWw2RllFL0ZDVFdnVGhkRS8rVlNSL1ZaNTFjWmNLKzJvS2lGcXYKbXZlR1V0cldMcjZiUzVRaEU1azBuUE9Dc2JvWTgxWTk4N1VjMXM0SEJWRlR4b09TOC9FWTIwd1JHY0VEUUFIVwpaamZSRk5hUHRkSjV1UmhOY01iWXVMeG0vam1tdjhwSHlsVHU3TzY5ZjFhdzVid0hRNnc9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRlhVam9nUEhFeG1sNXNnNWRrWm9YakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEV3V2hjTk1qWXhNVEl4TWpFMQpOVEV3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzV2WGtGZ2twakNRRkpSbitaWDBWcXlQYnhqLzJ1YlFoR2M5VWpFVTI5N2xxamNsbTgKZnZPUVNNWERPc01QWTQra1BIa2pXaGtXMmw2TW5CbXRXWi9aYzhuNkFnN3oxenJuanlmeWFCb3ZjaWhJaWEvdQpPbnlEL1hHYUNrNDRjUDFVR1hRNXp6TVBKTGc3UVJvNk5tNkMyclVydUUvdVVXS0RLVmEyUUZMQVNjSm1pblJNCnd4WkZJc3JsL1NDMnJRTi9ENnJyZnd2cjh1TkFITGdIYytFMmU2MTZqQzlFTXFVN3EyNWh3bTFaWGRhMVo2ZkgKeDFPdEwwYy9ESWx0VnI2eGt4dWM1anNvdkxXSzVsaUtvcllnSmNDRlEra3pmRDI4Z053SnN3dllBeUJHQUdXWgp6ODJ1N2lBcmkzTEJESitobGRvdzErNm9IODRYOFY5NEVUS0pBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVzL0haVGhETVhxNTFLZTRLMkM5WCs0VnVxcjR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFBcmxZQ01mQXcxMCtTK2NtdHNBWjgwcVluZUZibUVVUzhvUThuMGlkeW9RYUVFNm5JVWltbW5JCnZ5UGlOaG5TZXMrT2NlOHNYSlhHUnM5VFRXOGIvQnk2Y0tPT25jUGlFR3hVZmFSdEx2SjJFVTFMS25kL21aWVcKMkpyY0JQT2g0VnhkZWgyYzJQTTRtQlYwR0pjTTduL0gvd1dZVE04aTA5dCt4SllHbnA0aG5KRE1EcDZ2RmxhSgo2MUhrczFKNEY3V3dWaUtUSUR4R01TOGtCRk42SEYwN0FYRzYydWxRaFR5QTEycWVHT0ZjV2o3MS9oYlI4cDBHCks2MWxYMzZsU0JqVWIzRy9Ha1ZCK0w2NStDdVJOdWE5N094TGVUbDIrWmtjNzQvbGlaK3NZaldZd2RVR0VxcWEKaWJzZDFac2hPWW8zVVVOd0ZiZHRTZ251aEZUTUFkZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUxKYkpoYWJKWHFvc1pMQ3g0d0ViMmt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4TUZvWERUSTJNVEV5TVRJeApOVFV4TUZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTJqRGFMQVNINDBVV083VUpLQzgvZTRuWVZOYnIKQXNnbXpIWCsxc01jQ3RjYkhaSzROQUlWM3p1RTViTHE5UDJrOWprQ2IweXkzMzl1THB4dDVBSmV1bHQxc04xaQpwMzkvVzVsbEk5UmltT3N3dnZTSlpHWHRCZENhTFBNWmlXM3oybVJUcmF3dWRkZ3B3QzZsQVV1SXFEZUpRT0pwCkk0M0RBTG5DRTBrWm5IbTdQRmlRaHVicGk3ekZ0ejdaSDErRDdOdTRHYWJpYi93KzMxWXFYVnEzY2xKR3UweWsKOE5pN1ZqVjV6ZkZTM1JXRkorY1pUMzAwNlI1bFZMT3lONW52M0F4WWdtSjZzNnFJZFo5OTJhOE1oSXNLYjBuOApmSVM4T2RkNTlZdmpUV3Y0OW9ucnhUd29jK3RSTUtieFNXV0FlNkxzVHdhZ3BBZWNLUkhsWG5rUnRRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU3o4ZGxPRU14ZXJuVXA3Z3JZTDFmNwpoVzZxdmpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRGNUZFZQMlJqcUxqSFRpQTBVeDhpVktYYjhjYTlGOVgzaklZUTJhanIvSlFRekcKVmZ1MEZJeVpTbzJUdE10UHZKOWp0TVNReGRFWTIvNm5qNGFQS0VLZDVacVVxTDBzVFphejdzSmxjcU1lTE53TgpqN2dPNWhwSlRtMDJJdHFZU1Y5NjlyM1lyYk8zeFpLNGEwZjU0SGZPc000MktLbndnaWRsR05hUXIrVzlIa1lMClhEV2pET3plVXZPYzhTVERnNjNOVG9jUXIxemtNanE4b2EwVGNoaE9RcVlxcGNrbHFTVFI0c1JvUTM2Sno0WTEKYmNOTUk5Q3NiSFV4V3l3cDE3WFZNSERmb1lOY2QvRkRwRm1MeExiNE5ZZmoxN3RJdUdhb2F4YWQzR0RiQUJlLwpqNDV3ODVCNUtub3pxaFMxQWVyVU1PRXN0a2psM2xvY05vSnRXM289Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMmpEYUxBU0g0MFVXTzdVSktDOC9lNG5ZVk5ickFzZ216SFgrMXNNY0N0Y2JIWks0Ck5BSVYzenVFNWJMcTlQMms5amtDYjB5eTMzOXVMcHh0NUFKZXVsdDFzTjFpcDM5L1c1bGxJOVJpbU9zd3Z2U0oKWkdYdEJkQ2FMUE1aaVczejJtUlRyYXd1ZGRncHdDNmxBVXVJcURlSlFPSnBJNDNEQUxuQ0Uwa1puSG03UEZpUQpodWJwaTd6RnR6N1pIMStEN051NEdhYmliL3crMzFZcVhWcTNjbEpHdTB5azhOaTdWalY1emZGUzNSV0ZKK2NaClQzMDA2UjVsVkxPeU41bnYzQXhZZ21KNnM2cUlkWjk5MmE4TWhJc0tiMG44ZklTOE9kZDU5WXZqVFd2NDlvbnIKeFR3b2MrdFJNS2J4U1dXQWU2THNUd2FncEFlY0tSSGxYbmtSdFFJREFRQUJBb0lCQVFETWUvUThSSkxGNEQyUgovM3h4ZUxaYUpUbmxhUFlmU1UxeldUSllPOHJRTGdCdm1zMmZrRVRIVFpTallTYnFLN3lxTll1ZW01Y1g5dWxnCkxhS2ZpY2tWaGhtcWhCQ3RRY1F1S0hpdE42S2dCZXROU3dob1cwM2pvVGljMzhnVEVFVDFiQWt3UHFuY0w1WVIKVXFXNXJQeUtDbUpMdU9Vb09QZUVlcEwwV0JIMG5qV2xoYTNPcEExV2R1QnA3NnZmSVQveXZyZFQvb1R1Q0tERApSSFpsOEpVMkRMSFhERWlhb2xPYkg4cVc5QzNDK3pLMUpUaXZpTGR1cldHTVFPL1VodTM4ZkhKWTNlMVhtNmpMCjBSOHVZRzBmUE4xcFZRaDc3Q0t0aTlGckxqaGNTQmhRQXd3QXloNjM0aldud0R0R3ZramwyRHlsd29RNXRMdFUKWkVPTCtqZ1JBb0dCQU43Ynh1OFllSWRYbW9TUXN3V1Rjdm11aGIyN01ERkpFN2VUdUtzNzVQbGhCMnBmSWFDbgpRZVBwNUkvUDJrUGgzVFlBZWJ0cXYzR0xzV3dsdEYvTFJ6blAwQis2eVZrdGpxZDg2N2h0ZHdvQVBOYWRwY2loCjIvd0ExSzFZVGpXR2lZN0VpR29UZEFIMVNkcXExRzBQYW1wNlUrbkl3R0cxb3NsWDF0K2MyVUNuQW9HQkFQcWoKWUhOaHVDUWJOVWd6RVF1bk5pYXh4MnhITXNoZnVHYXpyV1VVTVhVRUlWVEFFelhmOFUvRjNVa3lCMTM2S21YTApGSzRtVzFYZGV3c3V3T3NBQW5sN0F0dWsxZkVJOXNnZGx1N0JROGhNbk1aNVlzWVFmYVNGK2NBcUVsVlNMWWxyCjlmUHFhSGlsZVFzYzZlVVVOa1g4b3I1UGh0ZUhyRThpN080L2FHcERBb0dBRk1pcVpPSURXNXZ2N1MwUmhST2IKUlczaFN6Q0o3ZzdDcC93KzNMbFpRV2lyS0dCMjRtUzI0R3FQeGxtOElWaVBLTm9pZ0RnVVlxS0VpWEY2d1BSVQpVQy94V1FReWd2NmNyMElYT2J2N3ZoTUhtWHhhV2J1K3FHSHJjNzhvakJWZi90Q1ZhRThvSW9hZHZLYng2TG5uClVzYlZ6SmZNV1ZCM1BnL1RHa2VtZTBFQ2dZQUVZL0JBbFNtZ21FbHFwbHBhRmVmQTdjUk1oVUxDZDhySEljYWIKeXFyREhmdG5mS1haZjc2K1l2enBWMU1CdG13ZnRGcjhZZmVmblcyV1dJOVFqb044bFVjTGlldWxlVDY1YXF0RwpLMlNBa2JiOVV3c0Q1UzRPUDdxTVB6QnJCakYrQXNJZ0w2Nzh6Z2s4eEpqa1JtSmMvM3ZxVVlKUExEVThmYVFnCjJFTi8rUUtCZ0Zaa3Uza2V5d3ZjVkM1bnk0UlZhMjVLZzZaamVPUGFsN0hkeFpXWVowSDNtZEM2YVNpekVDenEKaGtUZEdpTWYxVmxiNUNoa0RZM3NKUXRDS2ZnRmhUM0dvUDFRS3RGUTlaQWtCQ3dvTnhmcmdYTnY2aW41Vm1VUwpMNEY2RzNmVmhQSEVnTjJEVVE3MmNGbmJ1LzZJSzZpd0Y4VWV6M1E3eDFuWllreHVRa2Y1Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRlhVam9nUEhFeG1sNXNnNWRrWm9YakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEV3V2hjTk1qWXhNVEl4TWpFMQpOVEV3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzV2WGtGZ2twakNRRkpSbitaWDBWcXlQYnhqLzJ1YlFoR2M5VWpFVTI5N2xxamNsbTgKZnZPUVNNWERPc01QWTQra1BIa2pXaGtXMmw2TW5CbXRXWi9aYzhuNkFnN3oxenJuanlmeWFCb3ZjaWhJaWEvdQpPbnlEL1hHYUNrNDRjUDFVR1hRNXp6TVBKTGc3UVJvNk5tNkMyclVydUUvdVVXS0RLVmEyUUZMQVNjSm1pblJNCnd4WkZJc3JsL1NDMnJRTi9ENnJyZnd2cjh1TkFITGdIYytFMmU2MTZqQzlFTXFVN3EyNWh3bTFaWGRhMVo2ZkgKeDFPdEwwYy9ESWx0VnI2eGt4dWM1anNvdkxXSzVsaUtvcllnSmNDRlEra3pmRDI4Z053SnN3dllBeUJHQUdXWgp6ODJ1N2lBcmkzTEJESitobGRvdzErNm9IODRYOFY5NEVUS0pBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVzL0haVGhETVhxNTFLZTRLMkM5WCs0VnVxcjR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFBcmxZQ01mQXcxMCtTK2NtdHNBWjgwcVluZUZibUVVUzhvUThuMGlkeW9RYUVFNm5JVWltbW5JCnZ5UGlOaG5TZXMrT2NlOHNYSlhHUnM5VFRXOGIvQnk2Y0tPT25jUGlFR3hVZmFSdEx2SjJFVTFMS25kL21aWVcKMkpyY0JQT2g0VnhkZWgyYzJQTTRtQlYwR0pjTTduL0gvd1dZVE04aTA5dCt4SllHbnA0aG5KRE1EcDZ2RmxhSgo2MUhrczFKNEY3V3dWaUtUSUR4R01TOGtCRk42SEYwN0FYRzYydWxRaFR5QTEycWVHT0ZjV2o3MS9oYlI4cDBHCks2MWxYMzZsU0JqVWIzRy9Ha1ZCK0w2NStDdVJOdWE5N094TGVUbDIrWmtjNzQvbGlaK3NZaldZd2RVR0VxcWEKaWJzZDFac2hPWW8zVVVOd0ZiZHRTZ251aEZUTUFkZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQUlvR3htcGg0MktvYStBQ3I5RWtRNEV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4TUZvWERUSTJNVEV5TVRJeApOVFV4TUZvd0pURWpNQ0VHQTFVRUF3d2FLaTVqT0M1b2RXSmliR1V0WjNKd1l5NWphV3hwZFcwdWFXOHdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzgrR2VvSmRuTGE5UmxWY0kyU2ZjaW5FUW8KQWQ1RFloYXFrU3VzektCbmFCMEdySXIxOGZIbS95OEpoWUtrYWJna21aaERCR0J2VGxkcUZnbDlTa2wvdGF5ZApPcGZEK25vVGM0T3pMMGVRTnZON0ZFUllZOUtYUnBGbnBJWUkzODJCRkRWL0ZTTFRJcDVIU1p3aHJQYTZzNGVSCnYyS3pFaTVLc2UyeUxyL2hnS0JaZEpDM2JiM3FsREZEaUQvZ0NQNVVwYWxTSk8xM294Rkd5Qk16SGRLU2dQZXYKWE9CNWgxbWZiSHVwQldOWHg1d3dDQU5qM0E5RU9vellpQjBjVHFETmt3QzVYZG9kQTVPc0FtZmRyODR2Ymd3UwprWURWUWNLM1Q2MWdvNFdaWXRpOHpQQmRGL1V3WnMzWmVuTnJXOXY2SkJWeHE4cFFJRWJUUVIza20yeDVBZ01CCkFBR2pnWWd3Z1lVd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGTFB4MlU0UXpGNnVkU251Q3RndgpWL3VGYnFxK01DVUdBMVVkRVFRZU1CeUNHaW91WXpndWFIVmlZbXhsTFdkeWNHTXVZMmxzYVhWdExtbHZNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFCWTA3dVE4WWFjcUtZWVRPK2JhY214WVhvRWZEdVcyR3Zib1M5YVpLQ3oKUmg0THlVZStyWG9nRmdYS0h1RkJsMG5qK24yRnUrUHpDWloyWFBVSnQwZTI1R0g3QTg5MXpVeXF1djc5ZlJleAo2ajNKWXJldmNnS0hDd2MySjExQ1ZQTVgvUURIWWJTWkZwZzkxZzRMaDJEU2kxUDhHVmNPeXU2VjNRSVV2Mi9aCjk0b1liSHFaWW5LWS9nNDcyWitQcE9hZEZsemk0N3hKMzBBQ0VPZ3lzRFAyVVZKS0VLUEc4cG9JZThraXFjZVoKdlgvb2xSaXlta0s5T3EyUnRPcUh0NDhic3Rzb2JLWWNIUlhTWnJaR2VsZ1VJaU5ET2FxcDFYdGtyT3NEVEphUQppNUVCMmZTRVUybzd3Wm9QUHZNWEtGb1QyOUNpV1g5QTZEZGJuT2k3ZXlUSwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdlBobnFDWFp5MnZVWlZYQ05rbjNJcHhFS0FIZVEySVdxcEVyck15Z1oyZ2RCcXlLCjlmSHg1djh2Q1lXQ3BHbTRKSm1ZUXdSZ2IwNVhhaFlKZlVwSmY3V3NuVHFYdy9wNkUzT0RzeTlIa0RiemV4UkUKV0dQU2wwYVJaNlNHQ04vTmdSUTFmeFVpMHlLZVIwbWNJYXoydXJPSGtiOWlzeEl1U3JIdHNpNi80WUNnV1hTUQp0MjI5NnBReFE0Zy80QWorVktXcFVpVHRkNk1SUnNnVE14M1Nrb0QzcjF6Z2VZZFpuMng3cVFWalY4ZWNNQWdEClk5d1BSRHFNMklnZEhFNmd6Wk1BdVYzYUhRT1RyQUpuM2EvT0wyNE1FcEdBMVVIQ3QwK3RZS09GbVdMWXZNencKWFJmMU1HYk4yWHB6YTF2YitpUVZjYXZLVUNCRzAwRWQ1SnRzZVFJREFRQUJBb0lCQUZOeGNQdzc4b2N6enk4TQpCbDFJbmZ0SGU0VWJCaFZGRy9NbmRWeXhZdWNtZnlLeVVBNDRUdlFNbksyY3FjcUY4RTBoRWE0T0liTWtxYzdyCmVqYzc5V2FTUjIyS01QZldBOC9SQTBlOVNlRnhrbVEzMTlJY0NpTElnMjU3cE1BSWEwdGpMQmc0c2c3L1MxcjUKTXh0ZnIvZFRUVHJiZ3U3RnlYRXNUbVNPNWlYaGpvWStEL2pyVk0waHk4OWFhZGVFTDVoVHBsYmNvc3JkUXkybQpjYlFOTGtlWklET0wxQVc0RklhUkVDeHkvOXFrTEtzUGdJV09lSlVxdGozcHI5b3VyTlNVZDg3QmJnNDJvTFpvClVWK2l5dDM0VUJHa3pab1Z0cXFjM29YN3pmdENEOHZYY0ZuQjd1OUtkTGtwQ214TDlDTG14L0NCc1BraGdwcGMKdllZRmx6RUNnWUVBN3NYRFNIN3U2bndnb1dERjBaeURKZVByaWJERGg4bU5SVnRxV3F5VWdwTTQ0azNrKzgvdQpzTFNCNkI1ZTdUdmhGdU13QzkyYzlhUThQUy9yakp0K2I0ZVpyN05RWW1idm52VGpqcWMwV3hHVW0welRMT3k3Cjl0VG51ZWVTUUg3L2EvSDU5RVFSZ1ZabjNTSVNsdnNVc0Mxc3dGNHN1MTRpL21sNm8yRWNyT1VDZ1lFQXlwckYKNnhzV2hkMHFRMVJaKzJOQS9wdHM2cndHZ1c5WThwaUIwKzA1V1V2bldpZHBGcWdGVXdZem5PRHZPanQybytFZgpQRXRRTGswK1ZoZllJTUpiMzY3QklZSStBaU8vUEpCVVpYekJRbWNZSWhYL1RRYmx6bTNoRnZLTW9XTFNGTjd0CjhqM0psK3lobnlZcGdnbE9FMzNhWWVJRjEvVjZ0eVJoK2x4bkhBVUNnWUVBbXBxODVyMGg3L3l0bURDMEJoU0UKcXMwWW54QXdtMFM3VDVSd21nT3pLWlV3T1FCYzYxdm8zc3dTYlh6MDFFRjRicnh1U05DWEtFck9vb1BiempDRQp2cXlicTdPOHNlcWE3MTc3MVV1WXovcmpNV2VlT1RHVVI2LzExMThGU1BPeWFXL0YvQTd6RXI4akE0RmpiaFZuCmdPZjR5ZHB3dG1XdTNQTHBjTTZacGEwQ2dZRUFwNFVKbUxleEM4WXVwN1ViSVl5VHRQRjJRVEJ1Z0o4OGdIb3cKL3JYcThUYWRlQ0dWOXJHK2xVTlBjYXRhb2wrQVhVaEt0MlBlVENwNkhGMWl5dE5wZTYzVzZvbnlFM3JUS0pSOQo4OXdQUDRSV28vaGtPNkEwYTFiWEFrNVNrUzVRWGdsbDNTSFJpZGlTV2pFSHFRbGdrU1ZDYUNTbWlFWGt6WUU3CnNmS3RIckVDZ1lBK3A2QzBDZUtzVDllcGxDT3R1aitSSmxiTzY3QUtiMU1JTDlaejhIaGk5bmxSSitaWTRPQVQKZFVhbzdaTFJMT3BuWkJVaFFlZ2NZTjY5dHgySlExMStDd0lhbUJKQXFJaW9TVVdtK1l1QzFNQ0hlZHB1MmVlRQoreUwzTUVvY0pQSXI0eUxBWkE0THBDVXZOM2dSTktGM1R5ZDhHODhBcnp5N0Z1VE9SeGI3WGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: c8
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "18"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-wireguard: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "false"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  ipam-cilium-node-update-rate: "15s"
  cluster-pool-ipv4-cidr: "10.8.0.0/17"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  cnp-node-status-gc-interval: "0s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "true"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"

  external-envoy-proxy: "false"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: c8
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/clustermesh-apiserver/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumexternalworkloads/status
  - ciliumnodes
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumendpoints/status
  verbs:
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumexternalworkloads
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver-metrics
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/component: metrics
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: kvmesh-metrics
    port: 9964
    protocol: TCP
    targetPort: kvmesh-metrics
  selector:
    k8s-app: clustermesh-apiserver
---
# Source: cilium/templates/clustermesh-apiserver/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  type: NodePort
  selector:
    k8s-app: clustermesh-apiserver
  ports:
  - port: 2379
    nodePort: 32379
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.14.2@sha256:52f70250dea22e506959439a7c4ea31b10fe8375db62f5c27ab746e3a2af866d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/clustermesh-apiserver/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: clustermesh-apiserver
        k8s-app: clustermesh-apiserver
    spec:
      initContainers:
      - name: etcd-init
        image: "quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args:
        - |
          rm -rf /var/run/etcd/*;
          /usr/local/bin/etcd --data-dir=/var/run/etcd --name=clustermesh-apiserver --listen-client-urls=http://127.0.0.1:2379 --advertise-client-urls=http://127.0.0.1:2379 --initial-cluster-token=clustermesh-apiserver --initial-cluster-state=new --auto-compaction-retention=1 &

          # The following key needs to be created before that the cilium agents
          # have the possibility of connecting to etcd.
          etcdctl put cilium/.has-cluster-config true

          etcdctl user add root --no-password;
          etcdctl user grant-role root root;
          etcdctl user add admin-c8 --no-password;
          etcdctl user grant-role admin-c8 root;
          etcdctl user add externalworkload --no-password;
          etcdctl role add externalworkload;
          etcdctl role grant-permission externalworkload --from-key read '';
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/state/noderegister/v1/;
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/.initlock/;
          etcdctl user grant-role externalworkload externalworkload;
          etcdctl user add remote --no-password;
          etcdctl role add remote;
          etcdctl role grant-permission remote --from-key read '';
          etcdctl user grant-role remote remote;
          etcdctl auth enable;
          exit
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      containers:
      - name: etcd
        image: "quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/local/bin/etcd
        args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        # Surrounding the IPv4 address with brackets works in this case, since etcd
        # uses net.SplitHostPort() internally and it accepts the that format.
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=clustermesh-apiserver
        - --auto-compaction-retention=1
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - name: etcd
          containerPort: 2379
          protocol: TCP
        volumeMounts:
        - name: etcd-server-secrets
          mountPath: /var/lib/etcd-secrets
          readOnly: true
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      - name: apiserver
        image: "quay.io/cilium/clustermesh-apiserver:v1.14.2@sha256:0650beac6633a483261640b6539c9609f5a761f4ab4504fd1e6ffe7f2bb82e9a"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt
        - etcd.config=/var/lib/cilium/etcd-config.yaml
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: identity-allocation-mode
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: enable-k8s-endpoint-slice
              optional: true
        ports:
        - name: apiserv-metrics
          containerPort: 9962
          protocol: TCP
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: etcd-server-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-server-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-admin-client
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-admin-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-data-dir
        emptyDir: {}
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "clustermesh-apiserver"
      serviceAccountName: "clustermesh-apiserver"
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: clustermesh-apiserver
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.14.2@sha256:a89030b31f333e8fb1c10d2473250399a1a537c27d022cd8becc1a65d1bef1d6"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.12.0@sha256:1c876cfa1d5e35bc91e1025c9314f922041592a88b03313c22c1f97a5d2ba88f"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.12.0@sha256:8a79a1aad4fc9c2aa2b3e4379af0af872a89fcec9d99e117188190671c66fc2e"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.

# Only create the namespace if it's different from Ingress and Gateway API secret namespaces (if enabled).
