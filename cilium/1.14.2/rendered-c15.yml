---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQjhhaVBqTGR4UnRSSGtIMit6UjBwekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEU0V2hjTk1qWXhNVEl4TWpFMQpOVEU0V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGI0bW13d1ZERnkvY29PR0lSYVZFaDdzZ3JvZ1o0c3pQNWZJV1MzWW9OVk9PQjN3RTYKQ1hTL1NGMGZUVlBnaExKcytHZm0ybVRUQUdYZDJSc3paMUdGa2N5K3FCc0RxVGVZOXcvakVBYmx3WFpRV3I0NwowWC9weHh0WXYrUDRNSWRHaVh3ZUJhK3dFdFM3bnRxVGJJbERaeEN5akwwWGV4eEg0TkFjcWQwOUtzekd0SGFnCmNKdytSTW1iOW1xOGZTUGsvKzNkNy9iYU1zVnovKzMycDRFRHVxeWl0VGYzMndIRXBjbWtaT2xOSUgvaWJCeGUKWU1NSzhldE0zOGZmeENrOVp3RGxIQVpLa3lteUJ6OUJlenI1OFFaYTlRTHFUK0M4dXBBWDg4QVRmS0JDRnlVMQpDRGRGU1FHSWIvcGhNcXBOQkFlZ1BPSE9ZczJaSEVUc0NJYTVBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5U0J2c2RGK1N5OU1TQ1pXNTBKb0tiRFdCbHN3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJMnRVQzY4cXBhekVES1R4cXhZYzE0bjNoVWJkRm9kcmVFVW1YMmVWQUNmSmhYcXNWemF1dDlhCmRnWS9sNUpoVHg0SjB4dlZKYTBRSDdJc3ZzTzk2bmE0dFBPYi9ST3orMHR6WTZlQ0Fia0NtLy9OeVIvYTg1UWsKWGYrbmVOa1hJUjZhZExJUXlEVXRWa0xDS3pJSUNnUXdmbDY1aTZ2Ly9Qa0dzN0txOHRPOXhEZUhUT0VnRi96cgpXbUltSTh5TkpZdzhVcitGQ2xCTTFDVnQ2VTNlZndqb1dKWWRCclJkOElaV3dQLzE2YVN6dUhLMkdpaUJTRU0xCit5b0lVenl6MGpWalJnT2RPVUQ1a3Iwb2UwKzlmVTlpUFZjZnVsM3FnMGkwbVk0U0w2VWdrclZjdmFhQ1d2Z3gKQlk2MmlHc2RZbVM4WnlOZzdSSzhXNzJoNFExbEJ3cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMitKcHNNRlF4Y3YzS0RoaUVXbFJJZTdJSzZJR2VMTXorWHlGa3QyS0RWVGpnZDhCCk9nbDB2MGhkSDAxVDRJU3liUGhuNXRwazB3QmwzZGtiTTJkUmhaSE12cWdiQTZrM21QY1A0eEFHNWNGMlVGcSsKTzlGLzZjY2JXTC9qK0RDSFJvbDhIZ1d2c0JMVXU1N2FrMnlKUTJjUXNveTlGM3NjUitEUUhLbmRQU3JNeHJSMgpvSENjUGtUSm0vWnF2SDBqNVAvdDNlLzIyakxGYy8vdDlxZUJBN3Fzb3JVMzk5c0J4S1hKcEdUcFRTQi80bXdjClhtRERDdkhyVE4vSDM4UXBQV2NBNVJ3R1NwTXBzZ2MvUVhzNitmRUdXdlVDNmsvZ3ZMcVFGL1BBRTN5Z1FoY2wKTlFnM1JVa0JpRy82WVRLcVRRUUhvRHpoem1MTm1SeEU3QWlHdVFJREFRQUJBb0lCQVFDMnZ5SWdLVXE4V1p4OAo3UDkwZ1JkUklHZDAvQ0JzeUdOMkFxdnhOL2E0eGNpZjgzdk5oSFpuVS9reFBzOXJWbDRFZXgrL21kc2FFc2FXCjd3M1FWeHBGN0x0QjZlMHB5Y1hQZCtiWVRFV3ZSbTdTc2RoUlZ2ajhqdUtIakZRbnZnMXY3bXdkZDVSZ3ZnWFkKT1Zwb0ZGaXdrRVFzWVJQM0kvYUpOcXRBWjF6Y3E5OHl0eWdNekJlb2QySjQxK0dvdDhuSklCYU5QN3pUMnhsOQpJMUxrZllkdEY0cm9oRlp6Zm1sMzMvWW9ESHhzbklLaWhBZ3BDTmpkUERjZGNWUURVbzBrVEs0YnVIZUV0c3RHClBLVFlOTWF0OEwyT1M5SjFmUHNDYWhoZ0NDWXBacmE3MUR4eWVPMzVQMlVYOG00SjVTQTByQVZuUnFHZTJXUU0KTW80b1BhNlJBb0dCQVBMTDhkZ2w2cXV5aUMvakEwM1JBUjBqV2RzZ1NnYU40eitYakpJeUVoVG1ObGdHYS9YTgpOZjFnMnRneWxSRXNMN2Z0V0huaWV3K1Q0VXBMQ3NEKzhGU1pSTTJaT3FRZHNMeXhhSzhNek4ybS9rbkZwZmV2Ck1uemNpeUlnelhwR2pMM3hHUW1MLzlhenBwYmhpa1ZKN1FPMW5Ed0NzOXBLalhoK1lUQ2JKVjJiQW9HQkFPZlgKZjhXZTJCekhtYnM5NlVUUGluUDY5aEdnRlhOZnNaMTVEUkUrMXBvNExpSGpRb09jT3ZZdlh4Mk1wVnFkVVREdwo5enZzdjhXL2E5T0QyZDdVdzd4UnZra2o0WEdIaHdCVldmd3diTGhYU3pGeTRTS21TK0ZabHpZZWpVbFlzVDNoCkhsUjY1QmRRVVJPaE5BQUxpM2JVdGhaMkt2ZjEzRE1iUTRUVy9SdzdBb0dBZm5ic1NZRzJjaWhUOTExdll5RHkKUzVNV1FxVFc2Z01OMHhuRkJvRStHZFN2aWJvT2tjR0oxYWlWVlBkRDNlWCtGUGR6bGtqNWdHdXVkVndSQmVYRQptTXdjb2xxbHlNWU9RTHJIcENZdXIyVkVIbmpzc2M1M3BjSGFWclJ2VXJsY3BiTG5MNm5VWUtqQ3BPUmxlU0hBCmFxWTE4cXdWc2lZUytpZ1p4NCtJTHZFQ2dZQS9SQk5kL2tiRE04VER6OVZFTGM1K2I5R09aYnoweXZ4UkdLTjAKUFUyYXNCSUd0Vm1GU0xEZVZYY0RQVW95UEJQWDR5blVkSHF3bjlmdzFGNHo3S090VkRFMURGR05CWXJWa0hVSgoyTDBTWU4vb0VvMVZRMFFacnJVUTA2MkNnbTE3a1Y4UmRxZWZwUTg2NkJha25JSG1YNDJBKzZZbUhEV0d6TDNVCkZrYmoyUUtCZ0RRZUN4S0hzYi94SkdPU2kxaVV1N3h1Z1czaEFBVXJPbTlmVzg2UUczT0dLVUpKcGMrbllpaHkKd0dYcHZZN0NPeUtDQncrRlBCT0YxVXNFN0gyUE8yVnhDNTFqNEtuNlh1eFE2NUxnVEQzS3pHcC9vajZyRmNCOQphb2lhVzVxWEF1UzlaVnlQbTcxTld2KzlsbzlVbjdLQmlEWXBweGJqSXJUMEhZcXRlT2lwCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/admin-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQjhhaVBqTGR4UnRSSGtIMit6UjBwekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEU0V2hjTk1qWXhNVEl4TWpFMQpOVEU0V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGI0bW13d1ZERnkvY29PR0lSYVZFaDdzZ3JvZ1o0c3pQNWZJV1MzWW9OVk9PQjN3RTYKQ1hTL1NGMGZUVlBnaExKcytHZm0ybVRUQUdYZDJSc3paMUdGa2N5K3FCc0RxVGVZOXcvakVBYmx3WFpRV3I0NwowWC9weHh0WXYrUDRNSWRHaVh3ZUJhK3dFdFM3bnRxVGJJbERaeEN5akwwWGV4eEg0TkFjcWQwOUtzekd0SGFnCmNKdytSTW1iOW1xOGZTUGsvKzNkNy9iYU1zVnovKzMycDRFRHVxeWl0VGYzMndIRXBjbWtaT2xOSUgvaWJCeGUKWU1NSzhldE0zOGZmeENrOVp3RGxIQVpLa3lteUJ6OUJlenI1OFFaYTlRTHFUK0M4dXBBWDg4QVRmS0JDRnlVMQpDRGRGU1FHSWIvcGhNcXBOQkFlZ1BPSE9ZczJaSEVUc0NJYTVBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5U0J2c2RGK1N5OU1TQ1pXNTBKb0tiRFdCbHN3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJMnRVQzY4cXBhekVES1R4cXhZYzE0bjNoVWJkRm9kcmVFVW1YMmVWQUNmSmhYcXNWemF1dDlhCmRnWS9sNUpoVHg0SjB4dlZKYTBRSDdJc3ZzTzk2bmE0dFBPYi9ST3orMHR6WTZlQ0Fia0NtLy9OeVIvYTg1UWsKWGYrbmVOa1hJUjZhZExJUXlEVXRWa0xDS3pJSUNnUXdmbDY1aTZ2Ly9Qa0dzN0txOHRPOXhEZUhUT0VnRi96cgpXbUltSTh5TkpZdzhVcitGQ2xCTTFDVnQ2VTNlZndqb1dKWWRCclJkOElaV3dQLzE2YVN6dUhLMkdpaUJTRU0xCit5b0lVenl6MGpWalJnT2RPVUQ1a3Iwb2UwKzlmVTlpUFZjZnVsM3FnMGkwbVk0U0w2VWdrclZjdmFhQ1d2Z3gKQlk2MmlHc2RZbVM4WnlOZzdSSzhXNzJoNFExbEJ3cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lRT3hPZm5FMklsTENJbVVVQW9IeG9DakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEU1V2hjTk1qWXhNVEl4TWpFMQpOVEU1V2pBVU1SSXdFQVlEVlFRREV3bGhaRzFwYmkxak1UVXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREtCN0ExL3RZY3hnTUd4alIvcWZrTTgwZDBDMm94MFcrK1hhSnlQZ1VDMVlxU3JBU2IKM1h3OForbDFFOHNmblZPV3ZQR01XT3lXZ0N5N0Vib2xHYjJXa1JkcVl4SElUZndzaGlqWVdWWDVnUzIyWTUzZApxOC9RbzVqbzh1cC9sd0dGemJWdnYzNDNOTjk3UHRXMzNqenppc1p1SXV0SHFSOGxKRVU2aUxpbUZTRGZJTzFtCitveVVuTUJCZUtkRjdJbTJGN25jUXVTRzhQRzFGd25CL285TzlDR2taZTBucTFSaXB4dFpSemd6LzJNRy92c2EKdXlEMkFIQWQwOUZSZjVHalZ3UW1YMzR6bmtLbm0rMGE1Vi9UVEFMNzRzVmV3a0o3MFNyZEpjQnJLKzludmRZMgo4UUFaeVJ3OWRRU2NqMGRHS3JYcHhGZjFIZlBCZEQ0T29ieTdBZ01CQUFHamRqQjBNQTRHQTFVZER3RUIvd1FFCkF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXcKQURBZkJnTlZIU01FR0RBV2dCVDFJRyt4MFg1TEwweElKbGJuUW1ncHNOWUdXekFVQmdOVkhSRUVEVEFMZ2dscwpiMk5oYkdodmMzUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTHRYSk5LT3VqVk5CRzF0QnR5QXgySVYrbktrClRPaEpyeEdCY3djdmJXS2JhTFNJMHdmajNpUWlJY29Tbm5qT1hsekhyUEZkcGs4LzR6eGh3di9WelpQSnBUUkwKOU5WVWFYSTdld1Fra1VYVDU2TVNBY0NFaGNwbG5UUzdPSVlKQk9iVVdNY3Y3dGtXT251d0t0elpvV0pmNGg5SAoxSmhidFFLajlYaXU1bjFNUGFyOEFlVnZuWVRGaFpJZlAzYVBBakJNaEozZzh0NFpsYXRhQjZobCtkb0U0ckRkClJQZTJ6Q3FqY3U0TlkvRzVMMzZSNlZLQmlWeFBsdG4yOEU5dFM1enl1VzU1WUNFMmh4V3hMZXJhU2dYRDBLajQKRVhBMzdzOWZ5ZmRsaWt1M2ppY2JKTWtHVnpQN1h5d0pLcU51bmhJMkY3QVhMdit2bCtmZTN4V0g1ZnM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeWdld05mN1dITVlEQnNZMGY2bjVEUE5IZEF0cU1kRnZ2bDJpY2o0RkF0V0trcXdFCm05MThQR2ZwZFJQTEg1MVRscnp4akZqc2xvQXN1eEc2SlJtOWxwRVhhbU1SeUUzOExJWW8yRmxWK1lFdHRtT2QKM2F2UDBLT1k2UExxZjVjQmhjMjFiNzkrTnpUZmV6N1Z0OTQ4ODRyR2JpTHJSNmtmSlNSRk9vaTRwaFVnM3lEdApadnFNbEp6QVFYaW5SZXlKdGhlNTNFTGtodkR4dFJjSndmNlBUdlFocEdYdEo2dFVZcWNiV1VjNE0vOWpCdjc3Ckdyc2c5Z0J3SGRQUlVYK1JvMWNFSmw5K001NUNwNXZ0R3VWZjAwd0MrK0xGWHNKQ2U5RXEzU1hBYXl2dlo3M1cKTnZFQUdja2NQWFVFbkk5SFJpcTE2Y1JYOVIzendYUStEcUc4dXdJREFRQUJBb0lCQVFDdmQyMzc5NUZPL0V1MApub0VLUUQ0bW1VVDk3TXdXNktmODFxWTRRdFZuV01BNkUxME5ZcGg4Zm1PdFk3dVBnYjBQdHBxMElxZVpMMG1xClVBTTBKZDhiM25oUDFpdWpwTmZZYzgwVjJzRnBLbURoZ0RPa1M0ejYwSndGOXJUa2krcXVvN05wa3crME14L0cKa3hSYjFaRnFsS1V6RXZEMkZGVVFsU2ZyWnNPNHVpWEs4RFBWUmliZmpNZnpSTlpNbXdUVml3TFVEK1FoK2NragpFb25LQ3NUS05xSngrWTlhZlZzeVZMeUVJM1kxdUV2QWpVZGZYTzR3T1IwdWJzSDZWS2hET3lWcVFnc1RvdkdQCjB1UjRKbldOc1hVSWY3MTVsTzNoMmtvVWZwZXRUQWF4aXJnQUtacis4QVlZb1pKRUcrOU83QkVhNW1ibWpzS2MKcWh2RDZvVUJBb0dCQU53c0h1cmcxZk00cnBmeG9EZ2lhV3pIcElzWlRRcWhVT2U3UFpieFZDek1LM1lWY1ZEcgpPQzlnT3kyRitGN2srODJNNU1DdTA2dDJLQ2ZlRCtQVGhkcStQZSs4Snl5VEtHcVBkcm9PZzcrOFBvYUloeUdtCmwrVGNaRzZmQ1NnNmluUjI4eGhVR0FDcStuUGpsNUFWWWx1Y2FzTm45SmdmTmdXVjJLK1BJWE9yQW9HQkFPcm4Kek16c3RzUzV5Vm9TaktjTHIvQWlKNE90NWs2SmFyejB5NjZoT1JhSXRJbEVOTlJHZDVTZk1DdStYaGdOa3BBbAo1Mk5yRHFjT25pK0lXeDE4SlliY2wxNG1lTE1ib1QrOXZpSG9kYlp6ZlphcjVjYndMUkVQNWdIZXVZN1JUV0JUCmVzbFowODFxOFp1Y2JoNTVPU04wcWVRbjA3TDM0Y1cvd04zRmhzc3hBb0dBWUdvbHc5OWZjWm9Cd3VINXNudEgKUlc2TG5Lb2d0YVg4d3UyWXcrKzhWNzIwem9vSFRGTWxFSUlJaUIvaHF0U0ZlL2JWK1piVmRJRlNobHJWQklTTgpXa1B5NVhlMGcrMlJSbEM2d2pFMitwQ1pwTnBHcXJMRVUyRTd6Y0Z4QmgvVW43bXpMSlV1eWFRVjl3ZlVTREZGCkdDOEFCY0FST1VoNXBLcUE4Q2d5a3U4Q2dZQmVrbjQ0anFDeXFSMndmc0ZUeTNmRTFPdFZyMkNHZy9xT0lud1MKVFdSZmR5QkFGMDZ4bThFdSs3djRFSWR2Wlo5NUcxbUNCQ3I5QlB5WXBHd1NmZFhaNnR1aUV4a0srdmU3WXRlMgpiUkZmS0RZS3dDQWRMTHJvSUo5NFowUUxoS2FEUG5penNjOTg1eTVvZU4wNHRaTlVlL2FlSFk2MGdlbktwSDJ3Cmk0TE9NUUtCZ1FDSjlwSm5rUmRiWDExMFJiMWI5NVNVMkozZEp4Q1JDUEtvenptS0hPMDlrajMrMEduU0hORUMKZEgydnoyZFhVWTRQY0hSS21IZkY0RlRIZzdMcG1mcGpqOEJPeGtQa1VyTi9MNkY1NFhBTUdSazM3UlFrTWlhNApDWlc5SzFVaCs4eE1JRmxvTXBZWDc5dGsvTU1KYTB3bTNuM0ZhV3FydW0yRnNmTkJKYWhubkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-ca-cert
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQjhhaVBqTGR4UnRSSGtIMit6UjBwekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEU0V2hjTk1qWXhNVEl4TWpFMQpOVEU0V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGI0bW13d1ZERnkvY29PR0lSYVZFaDdzZ3JvZ1o0c3pQNWZJV1MzWW9OVk9PQjN3RTYKQ1hTL1NGMGZUVlBnaExKcytHZm0ybVRUQUdYZDJSc3paMUdGa2N5K3FCc0RxVGVZOXcvakVBYmx3WFpRV3I0NwowWC9weHh0WXYrUDRNSWRHaVh3ZUJhK3dFdFM3bnRxVGJJbERaeEN5akwwWGV4eEg0TkFjcWQwOUtzekd0SGFnCmNKdytSTW1iOW1xOGZTUGsvKzNkNy9iYU1zVnovKzMycDRFRHVxeWl0VGYzMndIRXBjbWtaT2xOSUgvaWJCeGUKWU1NSzhldE0zOGZmeENrOVp3RGxIQVpLa3lteUJ6OUJlenI1OFFaYTlRTHFUK0M4dXBBWDg4QVRmS0JDRnlVMQpDRGRGU1FHSWIvcGhNcXBOQkFlZ1BPSE9ZczJaSEVUc0NJYTVBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5U0J2c2RGK1N5OU1TQ1pXNTBKb0tiRFdCbHN3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJMnRVQzY4cXBhekVES1R4cXhZYzE0bjNoVWJkRm9kcmVFVW1YMmVWQUNmSmhYcXNWemF1dDlhCmRnWS9sNUpoVHg0SjB4dlZKYTBRSDdJc3ZzTzk2bmE0dFBPYi9ST3orMHR6WTZlQ0Fia0NtLy9OeVIvYTg1UWsKWGYrbmVOa1hJUjZhZExJUXlEVXRWa0xDS3pJSUNnUXdmbDY1aTZ2Ly9Qa0dzN0txOHRPOXhEZUhUT0VnRi96cgpXbUltSTh5TkpZdzhVcitGQ2xCTTFDVnQ2VTNlZndqb1dKWWRCclJkOElaV3dQLzE2YVN6dUhLMkdpaUJTRU0xCit5b0lVenl6MGpWalJnT2RPVUQ1a3Iwb2UwKzlmVTlpUFZjZnVsM3FnMGkwbVk0U0w2VWdrclZjdmFhQ1d2Z3gKQlk2MmlHc2RZbVM4WnlOZzdSSzhXNzJoNFExbEJ3cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMitKcHNNRlF4Y3YzS0RoaUVXbFJJZTdJSzZJR2VMTXorWHlGa3QyS0RWVGpnZDhCCk9nbDB2MGhkSDAxVDRJU3liUGhuNXRwazB3QmwzZGtiTTJkUmhaSE12cWdiQTZrM21QY1A0eEFHNWNGMlVGcSsKTzlGLzZjY2JXTC9qK0RDSFJvbDhIZ1d2c0JMVXU1N2FrMnlKUTJjUXNveTlGM3NjUitEUUhLbmRQU3JNeHJSMgpvSENjUGtUSm0vWnF2SDBqNVAvdDNlLzIyakxGYy8vdDlxZUJBN3Fzb3JVMzk5c0J4S1hKcEdUcFRTQi80bXdjClhtRERDdkhyVE4vSDM4UXBQV2NBNVJ3R1NwTXBzZ2MvUVhzNitmRUdXdlVDNmsvZ3ZMcVFGL1BBRTN5Z1FoY2wKTlFnM1JVa0JpRy82WVRLcVRRUUhvRHpoem1MTm1SeEU3QWlHdVFJREFRQUJBb0lCQVFDMnZ5SWdLVXE4V1p4OAo3UDkwZ1JkUklHZDAvQ0JzeUdOMkFxdnhOL2E0eGNpZjgzdk5oSFpuVS9reFBzOXJWbDRFZXgrL21kc2FFc2FXCjd3M1FWeHBGN0x0QjZlMHB5Y1hQZCtiWVRFV3ZSbTdTc2RoUlZ2ajhqdUtIakZRbnZnMXY3bXdkZDVSZ3ZnWFkKT1Zwb0ZGaXdrRVFzWVJQM0kvYUpOcXRBWjF6Y3E5OHl0eWdNekJlb2QySjQxK0dvdDhuSklCYU5QN3pUMnhsOQpJMUxrZllkdEY0cm9oRlp6Zm1sMzMvWW9ESHhzbklLaWhBZ3BDTmpkUERjZGNWUURVbzBrVEs0YnVIZUV0c3RHClBLVFlOTWF0OEwyT1M5SjFmUHNDYWhoZ0NDWXBacmE3MUR4eWVPMzVQMlVYOG00SjVTQTByQVZuUnFHZTJXUU0KTW80b1BhNlJBb0dCQVBMTDhkZ2w2cXV5aUMvakEwM1JBUjBqV2RzZ1NnYU40eitYakpJeUVoVG1ObGdHYS9YTgpOZjFnMnRneWxSRXNMN2Z0V0huaWV3K1Q0VXBMQ3NEKzhGU1pSTTJaT3FRZHNMeXhhSzhNek4ybS9rbkZwZmV2Ck1uemNpeUlnelhwR2pMM3hHUW1MLzlhenBwYmhpa1ZKN1FPMW5Ed0NzOXBLalhoK1lUQ2JKVjJiQW9HQkFPZlgKZjhXZTJCekhtYnM5NlVUUGluUDY5aEdnRlhOZnNaMTVEUkUrMXBvNExpSGpRb09jT3ZZdlh4Mk1wVnFkVVREdwo5enZzdjhXL2E5T0QyZDdVdzd4UnZra2o0WEdIaHdCVldmd3diTGhYU3pGeTRTS21TK0ZabHpZZWpVbFlzVDNoCkhsUjY1QmRRVVJPaE5BQUxpM2JVdGhaMkt2ZjEzRE1iUTRUVy9SdzdBb0dBZm5ic1NZRzJjaWhUOTExdll5RHkKUzVNV1FxVFc2Z01OMHhuRkJvRStHZFN2aWJvT2tjR0oxYWlWVlBkRDNlWCtGUGR6bGtqNWdHdXVkVndSQmVYRQptTXdjb2xxbHlNWU9RTHJIcENZdXIyVkVIbmpzc2M1M3BjSGFWclJ2VXJsY3BiTG5MNm5VWUtqQ3BPUmxlU0hBCmFxWTE4cXdWc2lZUytpZ1p4NCtJTHZFQ2dZQS9SQk5kL2tiRE04VER6OVZFTGM1K2I5R09aYnoweXZ4UkdLTjAKUFUyYXNCSUd0Vm1GU0xEZVZYY0RQVW95UEJQWDR5blVkSHF3bjlmdzFGNHo3S090VkRFMURGR05CWXJWa0hVSgoyTDBTWU4vb0VvMVZRMFFacnJVUTA2MkNnbTE3a1Y4UmRxZWZwUTg2NkJha25JSG1YNDJBKzZZbUhEV0d6TDNVCkZrYmoyUUtCZ0RRZUN4S0hzYi94SkdPU2kxaVV1N3h1Z1czaEFBVXJPbTlmVzg2UUczT0dLVUpKcGMrbllpaHkKd0dYcHZZN0NPeUtDQncrRlBCT0YxVXNFN0gyUE8yVnhDNTFqNEtuNlh1eFE2NUxnVEQzS3pHcC9vajZyRmNCOQphb2lhVzVxWEF1UzlaVnlQbTcxTld2KzlsbzlVbjdLQmlEWXBweGJqSXJUMEhZcXRlT2lwCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/remote-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQjhhaVBqTGR4UnRSSGtIMit6UjBwekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEU0V2hjTk1qWXhNVEl4TWpFMQpOVEU0V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGI0bW13d1ZERnkvY29PR0lSYVZFaDdzZ3JvZ1o0c3pQNWZJV1MzWW9OVk9PQjN3RTYKQ1hTL1NGMGZUVlBnaExKcytHZm0ybVRUQUdYZDJSc3paMUdGa2N5K3FCc0RxVGVZOXcvakVBYmx3WFpRV3I0NwowWC9weHh0WXYrUDRNSWRHaVh3ZUJhK3dFdFM3bnRxVGJJbERaeEN5akwwWGV4eEg0TkFjcWQwOUtzekd0SGFnCmNKdytSTW1iOW1xOGZTUGsvKzNkNy9iYU1zVnovKzMycDRFRHVxeWl0VGYzMndIRXBjbWtaT2xOSUgvaWJCeGUKWU1NSzhldE0zOGZmeENrOVp3RGxIQVpLa3lteUJ6OUJlenI1OFFaYTlRTHFUK0M4dXBBWDg4QVRmS0JDRnlVMQpDRGRGU1FHSWIvcGhNcXBOQkFlZ1BPSE9ZczJaSEVUc0NJYTVBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5U0J2c2RGK1N5OU1TQ1pXNTBKb0tiRFdCbHN3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJMnRVQzY4cXBhekVES1R4cXhZYzE0bjNoVWJkRm9kcmVFVW1YMmVWQUNmSmhYcXNWemF1dDlhCmRnWS9sNUpoVHg0SjB4dlZKYTBRSDdJc3ZzTzk2bmE0dFBPYi9ST3orMHR6WTZlQ0Fia0NtLy9OeVIvYTg1UWsKWGYrbmVOa1hJUjZhZExJUXlEVXRWa0xDS3pJSUNnUXdmbDY1aTZ2Ly9Qa0dzN0txOHRPOXhEZUhUT0VnRi96cgpXbUltSTh5TkpZdzhVcitGQ2xCTTFDVnQ2VTNlZndqb1dKWWRCclJkOElaV3dQLzE2YVN6dUhLMkdpaUJTRU0xCit5b0lVenl6MGpWalJnT2RPVUQ1a3Iwb2UwKzlmVTlpUFZjZnVsM3FnMGkwbVk0U0w2VWdrclZjdmFhQ1d2Z3gKQlk2MmlHc2RZbVM4WnlOZzdSSzhXNzJoNFExbEJ3cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRUU1CRjJwUjBxRmZFMTQ3V3ZCRFlMVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEU1V2hjTk1qWXhNVEl4TWpFMQpOVEU1V2pBUk1ROHdEUVlEVlFRREV3WnlaVzF2ZEdVd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEY096cXhQUEgwa2RQcGc1WmVSdnU3ZkpaWmJhQnFyVWZKT3VjbHpiNi85VDA4QkZqSXpPTVAKUmRtWWI5c3dTMG40a3ozV2tiRXB3WGxXUkhWOHdpOVJyMjlIQWxRdE55azIyMlc2dWg1V0hvby9iUWJVYmNLaApIOEZOcUJqL2duRlp0RWRjR3Zhb0kwYWdneDVQNnRCdjY4VSt0cnFGa091dC9GREFwbGtkZGxURUVBVTU1OUI4CkphN1lTWjZLWTdtOXNPaWVrSzRCTWdZM2VWa0lTc3p3NTZTUlk0czU4U05UVFp1ZEsvN2tMMkJ2QUVxVWpsd0oKUVJnbDFPWWF2dEFPZFY4N1duVTFWSSszMjYyQ3NuMVhUZnNFZG05T2U3QUxpUjJQMkNFcGxWejBFekxCSmVuRQpLZVA2S2w2OGRYczVzMGJETXYvQzc5Q1NoMzVoSDhLMUFnTUJBQUdqWURCZU1BNEdBMVVkRHdFQi93UUVBd0lGCm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWYKQmdOVkhTTUVHREFXZ0JUMUlHK3gwWDVMTDB4SUpsYm5RbWdwc05ZR1d6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBWG1lTU9RRnRLUWEzQW5wUFpxeVBUeGJNclJ5SXdaQzJabm5MNjZjT0JqVm16NWlDYjNFSVFyZWFYM0llCmhsbVRzZ05ENndhL044NHBzRmVGOUdUTzU2NkV0NW1KcVQrOFF3bHE3SWpxa1N5aDVjZHN0UWVjbTYzQlpvSm4KNXN5ZG56RzlKZHBRTnlKbzRPVzdFREFORWZ0OWRwOWErNVg5WWw3USs1Yk9Hb2VqdEdpelFUSndZVEtRRi9RYQp4M1pvL2cwS05FVHpKZ1daSFd1NTcwNmNadHNpcG1GYy9Za0ZySjBNUTlTSis3WCt4UmdkYUZQbWxUWlp0ZnppCjhBQ1B0a2xDUVowZ1dzK2g2MFkwVkd5K0tLZHR1ZWRlQW5DNTRYR29jcFBSQ3NOQWJyTzYxdVRLVmJTWWp5ME8KU2pUQ0lIazhMMWZmMktnUnpzQngzcTF0Unc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBM0RzNnNUeng5SkhUNllPV1hrYjd1M3lXV1cyZ2FxMUh5VHJuSmMyK3YvVTlQQVJZCnlNempEMFhabUcvYk1FdEorSk05MXBHeEtjRjVWa1IxZk1JdlVhOXZSd0pVTFRjcE50dGx1cm9lVmg2S1AyMEcKMUczQ29SL0JUYWdZLzRKeFdiUkhYQnIycUNOR29JTWVUK3JRYit2RlByYTZoWkRycmZ4UXdLWlpIWFpVeEJBRgpPZWZRZkNXdTJFbWVpbU81dmJEb25wQ3VBVElHTjNsWkNFck04T2Vra1dPTE9mRWpVMDJiblN2KzVDOWdid0JLCmxJNWNDVUVZSmRUbUdyN1FEblZmTzFwMU5WU1B0OXV0Z3JKOVYwMzdCSFp2VG51d0M0a2RqOWdoS1pWYzlCTXkKd1NYcHhDbmoraXBldkhWN09iTkd3ekwvd3UvUWtvZCtZUi9DdFFJREFRQUJBb0lCQURnVStTaERQZFlyQUl6Wgpqb1FwalZjOExjbE9LbWlnQWNUVHRDTWpWcXpwVlpPZ0E3LzJ0T2Vod1B5WmwzYWY1WkZnWllIcmpmTDFLdUgyCkF2a25OZ2VXSmo4dDc2T29CVjNMMXdjSytFaXo5RDZjay8ycWljS2dKSWlUQXZLbUZCbGsyRHN6UHBhb2pRYTQKL1JJYTJNTjNoYjRucUMzMUxwOGF2ckdnYXRjZVh2RUQ0Uld3emkyaWlzckRNOEVkUVNxZUFaeFlJQ1VEaThTZQpiQnRVK0htNmFyOGVwSWhrQ0RzUnNGdUptN1RCYTFIYTNMWlRLeXFqemc0Q1FCQmhhR2FleGNnRG5lR1o0YlhaCnNHMit2Y0hEWHBrT3c5T1FYSlBIb3l5bUUvdDRMcmJnZHc4SWduZlhmb0NnZERVV2sxZG1zYUZVQ2NYM2tZaXoKR1UwbVdlRUNnWUVBK3NNc09YTFRJb2xQQlozL2pPb29Ba1VyQVdSVHlVUWJkSERVTHAzVys4SUd5Q2ErUm5FSwpGQW1ONG91Z3QwYlVwaHowSm9sWXVxc0VrSjhBTm9GT2FJZ1czRkl5RDJrM1U3UUY2VzBWNllRUkpKSEdnZDJqCjg2T0MzbFFOL1p6MXY5QzJUVTl2dHBBQzRSVkl1NmlEU0R0NEhlYy95Y0pGMk82TXZ3YzFZVzBDZ1lFQTROVE8KbUdtV3F2OGxJWStiZjM5Y1Z1RlpwVHRZcW01bXpFOEtaUmZOWXhpMjZtbkx3cnlId3ZVYmFtT1laQ2ZpRFI1ZAp0UTllU2FVUElSdXFMZUVjOGlHMWhxQk4vd2o0SzJnT2pGMXB1Qy91bGV4NkVvNms5ZEhaRXJMaGxVeFpRNm1JCnhLQWV3dVh6MVdrbmN3cXpJZFFmcjZseFBQOVBEdUF0VmtIQzRXa0NnWUVBaUczM2Vhb0hSUnIvYTBieTZtL2IKSktFTkxNeXc2U2VzNkVVYXErSWtQUVRyTzZvWWk2cWttUkk1cDYvZjJOY29pdGZsM2JHTUhNTSswSkF4UlhaRQplb3JRSlQ1ekRmOW9vcG1uUGNDajAxQ1BJeDVNcWdzMFVESDkyWWhSdEZIWlFtc0RSRHlid3UvSElUNjdPNTRMCkR4bUwySGtnTTEwSE0yZFdHL2lJQ21FQ2dZRUEzYWh3MWtxalJJcXZyTnJNVDNMZE1ycVJpeGxyWFB2alZXSkgKdVVzeUxwVGJJVmlVanJVWWs5amE0cFMyVldnTXNTcFM4SUxxVG1qdzlZODB4RzYvL3VmRTg2bHZ2QlMzdHZPcwpCQzdFWDliQnZnV2FoRmtsd1VUV1lsMEJraFBublpHelNVY2pqTHJ4SG1IQmh1WHhuVlJvdU9Ld3haWmY5eWFGCkRCbGhiS0VDZ1lCVCtqdTYxSERZME40eXJ5RVlOb2JwMXZ6TTIwcms3ZFpIa2c5aG5xYWtlNEJ2UTZFeHVwYWsKdmpocjJIWUtsZ0FHUVFCSHVQNWZjbWpmcDFhQWpscU1YNkNSdkxscjhEY2RzQjJncHFTbGJSRVZtNVpzSkl6aQphWjVmY2NHcjJHMEJqdjdtYkJsS0V0ckZzZ2FHVDRBSFdqMWt2dGc1S0dZeW1PaTNIMVpYaEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQjhhaVBqTGR4UnRSSGtIMit6UjBwekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEU0V2hjTk1qWXhNVEl4TWpFMQpOVEU0V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGI0bW13d1ZERnkvY29PR0lSYVZFaDdzZ3JvZ1o0c3pQNWZJV1MzWW9OVk9PQjN3RTYKQ1hTL1NGMGZUVlBnaExKcytHZm0ybVRUQUdYZDJSc3paMUdGa2N5K3FCc0RxVGVZOXcvakVBYmx3WFpRV3I0NwowWC9weHh0WXYrUDRNSWRHaVh3ZUJhK3dFdFM3bnRxVGJJbERaeEN5akwwWGV4eEg0TkFjcWQwOUtzekd0SGFnCmNKdytSTW1iOW1xOGZTUGsvKzNkNy9iYU1zVnovKzMycDRFRHVxeWl0VGYzMndIRXBjbWtaT2xOSUgvaWJCeGUKWU1NSzhldE0zOGZmeENrOVp3RGxIQVpLa3lteUJ6OUJlenI1OFFaYTlRTHFUK0M4dXBBWDg4QVRmS0JDRnlVMQpDRGRGU1FHSWIvcGhNcXBOQkFlZ1BPSE9ZczJaSEVUc0NJYTVBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5U0J2c2RGK1N5OU1TQ1pXNTBKb0tiRFdCbHN3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJMnRVQzY4cXBhekVES1R4cXhZYzE0bjNoVWJkRm9kcmVFVW1YMmVWQUNmSmhYcXNWemF1dDlhCmRnWS9sNUpoVHg0SjB4dlZKYTBRSDdJc3ZzTzk2bmE0dFBPYi9ST3orMHR6WTZlQ0Fia0NtLy9OeVIvYTg1UWsKWGYrbmVOa1hJUjZhZExJUXlEVXRWa0xDS3pJSUNnUXdmbDY1aTZ2Ly9Qa0dzN0txOHRPOXhEZUhUT0VnRi96cgpXbUltSTh5TkpZdzhVcitGQ2xCTTFDVnQ2VTNlZndqb1dKWWRCclJkOElaV3dQLzE2YVN6dUhLMkdpaUJTRU0xCit5b0lVenl6MGpWalJnT2RPVUQ1a3Iwb2UwKzlmVTlpUFZjZnVsM3FnMGkwbVk0U0w2VWdrclZjdmFhQ1d2Z3gKQlk2MmlHc2RZbVM4WnlOZzdSSzhXNzJoNFExbEJ3cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURxRENDQXBDZ0F3SUJBZ0lSQU1ZTFYyblVXUzZVMUl6ZUJYSWFlRm93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4T1ZvWERUSTJNVEV5TVRJeApOVFV4T1Zvd0tqRW9NQ1lHQTFVRUF4TWZZMngxYzNSbGNtMWxjMmd0WVhCcGMyVnlkbVZ5TG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU9laWkydkJ0TWZqT2pRWm9oOVgKN0FLZmJzeWQwbjVXSVpnZGhTbzhUYVRIcVFyK0wwSlpUMnpEOUUyWFZPOXhla1BaalFtWG1MTjVaT0tkVEpSNwpLY2NyalY4WXd0bTJlQVBCUm9rQUNaLzVYTmljMC9BMEJ1aXJ1ZktiQnJhbHRiSi91cWFtdk0vSDFMSy9IbWdwCjhUZCtEb3IvSm5CNFBNNGJrZU1JMG5VTGlUT3JRNURicFB0eko5U1gvc3kwMldkbmMxMkhnZ0RYMnYrRFJKcXkKZk9pbjZaWm5FK0NselNLMDBsUDFDT0FOUUlhNHpQQmVRTmlwazRCN3k5U2JGd0NQSU1ZME9BWHg5dXJsblBnbwpWZE55bWNrK043R3hPdUQyejBjck9FVm9jcml0SWh3cXM5VjhSSDlKVVA3TnMrRFZGSEZ5WmdTeGtsT1pDMXEyCnA2Y0NBd0VBQWFPQjNqQ0IyekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVTlTQnZzZEYrU3k5TQpTQ1pXNTBKb0tiRFdCbHN3ZXdZRFZSMFJCSFF3Y29JZlkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnlMbU5wCmJHbDFiUzVwYjRJUUtpNXRaWE5vTG1OcGJHbDFiUzVwYjRJbFkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnkKTG10MVltVXRjM2x6ZEdWdExuTjJZNGNFZndBQUFZY1FBQUFBQUFBQUFBQUFBQUFBQUFBQUFUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBVWRKdnBKM2JGNW9BdWk1S1AzVnpjQkJVeWM1NnpCZFk1cGc3OXVCRXE0RGYwdXVmCktmYnVCMTIvbXlpVVFOeitScG10aHh4bGoxZ0FSbTJ1ZlZFck5Rc21XU2VWODlRaEYyNnlrVE9FQ2pWM0xranMKdFUrblRQU3VYd0NybU5OekpOby92T1BhNWVwUWNTVHl4ektyL1ZaaGlaVzRWeXU2V3dQejJtekFsR0gwZkxhLwpZRW4weFVOblltT3paZlk0dnpLNnRjSkFEaTRIdVJiNHJxUGw3RG9ZdDBJRGpHWnNhMUxBN1gwUzJwTktSbjlxCkh6aGkyL2RWQUNSY2xEZ3ZqMjY4czJpbGw4Q0Q0M3gybzZ6eUt6TVRjOUsvQUVOOWxvMnBkNHVKZmo0emllSlgKU25MZXQyNlZaaUUwZkpUTjMybUIyb0h5TEU5YjNIUXMzVlpnb2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNTZLTGE4RzB4K002TkJtaUgxZnNBcDl1ekozU2ZsWWhtQjJGS2p4TnBNZXBDdjR2ClFsbFBiTVAwVFpkVTczRjZROW1OQ1plWXMzbGs0cDFNbEhzcHh5dU5YeGpDMmJaNEE4RkdpUUFKbi9sYzJKelQKOERRRzZLdTU4cHNHdHFXMXNuKzZwcWE4ejhmVXNyOGVhQ254TjM0T2l2OG1jSGc4emh1UjR3alNkUXVKTTZ0RAprTnVrKzNNbjFKZit6TFRaWjJkelhZZUNBTmZhLzRORW1ySjg2S2ZwbG1jVDRLWE5JclRTVS9VSTRBMUFocmpNCjhGNUEyS21UZ0h2TDFKc1hBSThneGpRNEJmSDI2dVdjK0NoVjAzS1p5VDQzc2JFNjRQYlBSeXM0UldoeXVLMGkKSENxejFYeEVmMGxRL3MyejROVVVjWEptQkxHU1U1a0xXcmFucHdJREFRQUJBb0lCQVFDbDRseGlnVWpNVmNpYgpBemg5cGVPWlJVQitQUkEvOWNMOVF6Yll0bk1NYlFoOG5PaVBaWkpoM0R1YlRhTkFEMDUyUk5paVkvU3hvMkJDCmdsQVRqZGl2a0ZzZ0hZVjlrUldGNnVadXVwNHArTlVyTTdUOE11WTN2clBlTUhPd1hpQXZneFhTdjFvOG0ybVIKMFJrZms5bngyYzdrY0RIQkhmcTl5RFRFR005UGplUmd6UEV6RXI3Y2N5V2VCTFdTY2NGMEliR2Z2czlzd25JOQpWa2JkM3N0YWhIcHRLMTVNTGVuZ2hKelhkUWtMTlZVcUxJck5KTWdJN1VNNVR0NEJwL0hVUXdNejBNUlNnVVUyCm1hY1Z3eCswcjhCa2dETzZjdHlVMTFFWi9LK1cySEJIbS9Pdlo5NklnS1h5NVBnUVlXSUo2MHl6YURuV2pkZmEKVVYrVFJvVlJBb0dCQU9xL2w0NjVxQkxFQUlHcDhzNk1XVzZaVldMdlcvdm1maThXUFZxTHh0U1ZIcUhsM3BwMApGWmZLbk9IdU51end2WS9IOU1LM0V6dU9xZ0VtZjBUa2llZThDL2c1V2diUmNjTlAzTVEwVzFrOFRmK0M4Z053CnQwYi9FWFlRWk4vUXUzTS9aRVV0alJDcTNycW1TdzFRNWU1ZWUzRk1mRGhVVkZCWk1EV1MrN0lkQW9HQkFQeWEKeStkZTZLNkNBcWhYampvM1EwRWs5RGY2Y2haZGM2eElodkQ4RWwzZG5JL1gzR1pRWi95Z1R0ampaei9iU3BVLwpGdFZjWGhnTjFCWjlBN2hHcVp0cTdkUXlvclZuVGxFSjR1M1NnVHpwR0FlWGQ4TWlzS0RLYU5XT3pOYXlUNlRmCjhvWExoaTc1TGppaUVwZnBKNkZSTCtzS2xDcHgyTTlqeTBja2J4V1RBb0dBR2xkcGNGQ1E5Wm9jM0cvdm1SSFMKcjBCeGZtcVJqZEN0ZENjd3QwcGNBMXJBVnpadUpqTEVnWVh3Mk1GY1ZIWW5MMDBtdi9xL0k3MjhnZWlKKzNjUgpxbmxGZHBNbzhQN3JueGtGRXRjMU1PdzliR0NMTzZ1WVJWVTE1bU9zamhqa0QraWJIZEFndGpBV1VpZDY0SUdsCmEzd2FxZm9GTG1UNEdSUUkvdG9CZUZrQ2dZQS9xTE1pUitUVHRhZjl6TExuTU80ZUNMWVROV1p6QkhJV1JPRGMKOG1tZWhpN2lnVC9sK1BWNzBOcU9CaUVMRXJTbEVCVXRCKzRlbWIyTlBVd21zSWdseHJqUTlVSFQvWWpiRzJhNQpFSWZKVmVUY1pPdWxuYVJ0b1JUeVhONTZiTTF0ZTVLZTdUK1BydlJiQ1YwdU0yL3RVNHlENjFLVHI4VTMzcXBuCjcyS2ZTUUtCZ0NSNjZSaEdFMDFBUDE3Q1JxcWdvcklWWFV4K0U1RkZrVHB6cjQyU1RiaHV5bWFaQTlGN29kNXMKNEVZQzl3cFFmR0lZZ3o3VXY0eDlQalpnRkgyZTVWdk5JN3o5YW1QZUowejh4WlFBR0dPTnllT3hFKzEwSVdLRQpFMW9CQ055NEV2ZTFnbU8zZjZaUmowWW80S1ZnUEVhS0J1c0JrRG14aWxmbVk4dHUrNkhTCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQjhhaVBqTGR4UnRSSGtIMit6UjBwekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEU0V2hjTk1qWXhNVEl4TWpFMQpOVEU0V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGI0bW13d1ZERnkvY29PR0lSYVZFaDdzZ3JvZ1o0c3pQNWZJV1MzWW9OVk9PQjN3RTYKQ1hTL1NGMGZUVlBnaExKcytHZm0ybVRUQUdYZDJSc3paMUdGa2N5K3FCc0RxVGVZOXcvakVBYmx3WFpRV3I0NwowWC9weHh0WXYrUDRNSWRHaVh3ZUJhK3dFdFM3bnRxVGJJbERaeEN5akwwWGV4eEg0TkFjcWQwOUtzekd0SGFnCmNKdytSTW1iOW1xOGZTUGsvKzNkNy9iYU1zVnovKzMycDRFRHVxeWl0VGYzMndIRXBjbWtaT2xOSUgvaWJCeGUKWU1NSzhldE0zOGZmeENrOVp3RGxIQVpLa3lteUJ6OUJlenI1OFFaYTlRTHFUK0M4dXBBWDg4QVRmS0JDRnlVMQpDRGRGU1FHSWIvcGhNcXBOQkFlZ1BPSE9ZczJaSEVUc0NJYTVBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5U0J2c2RGK1N5OU1TQ1pXNTBKb0tiRFdCbHN3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJMnRVQzY4cXBhekVES1R4cXhZYzE0bjNoVWJkRm9kcmVFVW1YMmVWQUNmSmhYcXNWemF1dDlhCmRnWS9sNUpoVHg0SjB4dlZKYTBRSDdJc3ZzTzk2bmE0dFBPYi9ST3orMHR6WTZlQ0Fia0NtLy9OeVIvYTg1UWsKWGYrbmVOa1hJUjZhZExJUXlEVXRWa0xDS3pJSUNnUXdmbDY1aTZ2Ly9Qa0dzN0txOHRPOXhEZUhUT0VnRi96cgpXbUltSTh5TkpZdzhVcitGQ2xCTTFDVnQ2VTNlZndqb1dKWWRCclJkOElaV3dQLzE2YVN6dUhLMkdpaUJTRU0xCit5b0lVenl6MGpWalJnT2RPVUQ1a3Iwb2UwKzlmVTlpUFZjZnVsM3FnMGkwbVk0U0w2VWdrclZjdmFhQ1d2Z3gKQlk2MmlHc2RZbVM4WnlOZzdSSzhXNzJoNFExbEJ3cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQVBscTFmTGYyZzRoRWZ0ekRmeXZqa013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4T1ZvWERUSTJNVEV5TVRJeApOVFV4T1Zvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhXaDNYRkFBNFJoNjFGNlFibHh1OG5JRnFmZGYKMnE4ZFB0K0l6ZXIzbEVMZmxsL2dwSXpkcWJSbXBLQTFmWnJSRHZKMmVxQXczbEtUN2puWjc5WUlXVUFZQVRYWgo4ZGk2MExDK3ZiM1hzWmtRZFFqU3piQjlmUUdTcm0zeEt2bTNPbUtxYjJraVhJWFgzeWk2QjdFZVBVNDNVVVdECkNGNDM5cTJYRUpiNmpyYXZLK3lLZkJwK1VKQVZ6M2p1MnppcHZkMUJmUDhwb3hPNEVvWkdIY1ltUHVKQTlYanYKcmJjbU42bzZqbUd3S1BYZC8wUVZhV1R0ODVTM2l3RlBpcmtEODZaSjc4MGQ3R3ROTzVKZDFIWnh0TG9TeDBiRQprbUlBR2hUYlFIWXBwb2svclpNOG1nTGluSWN4ZEkzTU0ydG8vN3NZdndxd1N4RFNwTVdVRUd5RXh3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVDFJRyt4MFg1TEwweElKbGJuUW1ncApzTllHV3pBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBQU5WVUloTk1XVFFtekRwT1VESS9FZFRSdjgwSG52c3pRTXowYVVrNHVQRGZ5M1QKKzlPR3BUb2R4TXUzT2R1L2Q5aTJQejNubmd1MGRTYVhNWEZaby9UajU3N0NicDRNRks5dUZHMXFKMTZWOWlLbApLSVVSaW1ic09CenppdWRUNmdLRUNuSWtoNERVRFlXRndGc1BOR044cGtyMjNWTkVCalVwL1VvdWs4U1Z0OTE4ClFyRmVJR3BxMEV3M1NzcHBXRjVqNkdGUzI2U1YyVS8ydkhsK01YcTllTGZVUVBRaXNSQVM5aVJ4WFEvbHFWWnIKc01kOGxibmdUWmlKMGdobHI1M0tNQm1LZXhTVElPTVFRTDNHSUN5YloyelE1NkNWcWJ1aHF5VWRXT2ttM3pNQQpvRlJyRDR6b01lUy82WTJuN1p5dGhsZkF6ZVAva2Nkc1hFbVJDL2s9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBeFdoM1hGQUE0Umg2MUY2UWJseHU4bklGcWZkZjJxOGRQdCtJemVyM2xFTGZsbC9nCnBJemRxYlJtcEtBMWZaclJEdkoyZXFBdzNsS1Q3am5aNzlZSVdVQVlBVFhaOGRpNjBMQyt2YjNYc1prUWRRalMKemJCOWZRR1NybTN4S3ZtM09tS3FiMmtpWElYWDN5aTZCN0VlUFU0M1VVV0RDRjQzOXEyWEVKYjZqcmF2Syt5SwpmQnArVUpBVnozanUyemlwdmQxQmZQOHBveE80RW9aR0hjWW1QdUpBOVhqdnJiY21ONm82am1Hd0tQWGQvMFFWCmFXVHQ4NVMzaXdGUGlya0Q4NlpKNzgwZDdHdE5PNUpkMUhaeHRMb1N4MGJFa21JQUdoVGJRSFlwcG9rL3JaTTgKbWdMaW5JY3hkSTNNTTJ0by83c1l2d3F3U3hEU3BNV1VFR3lFeHdJREFRQUJBb0lCQUJBRmpZSnhmOURGRXRyLwpuY3RITnozNElSdU5WenRCY1NjMEx6OC9MYjdidXBmU3lrR3dxU0RuNGxqRUkvTkF5R3psSXRhSy84eGJlV1FoClQ5M1dTakVzTVlhUG4xT3dtbURycDE5dzgvdVhCNjNuL0d2elFnd09QNkJtamVkR0F5ZjY4QWhBeVNnbk9NRUUKNWl4UHBMdW5DSGhSSXZSZjZUemRFK0NsMEVvYXh3T2pZSzNoaEgxSE0xRXZ2MVBxRlN4cU5SMDArVk0xcUNoLwo0dHc5Q1lDblIvRm41cFprSGxNTlA0SlhheXBhQ1dMbzlMekNuV3BQTHJDOXI4OVpWNkVIOGQ5UDVjSGNjcUVPCnRVc2pnQjUwM2p2VDZjT1dia1k2Y05nSlM5cUlBSVNMbnNESnpLV01RU2Y4bnl3dStkcGpaN1lYOUNvSUg2bFYKWHM3TE55a0NnWUVBOEpxSGR0N2ZlaTZPU2F0NW5DMTIwbUl1UzZWRWoremNpTTdJSVhxNERIUjkycEhNbGx5WQozM2xmanhOSFpOSG5CS09PUUtldTJiMGJGOHM0Y0RBY2ZCcUhsc2luSEFlS3dPQnBud3Z4Z2NjbVBaclowOVBUCitLVmhNclVqeEw5Umlibm1FVkxsL2dWeW96NkxIQ2FXSGRmK01Ha0pmRHBiQjQycVExRzdsdzBDZ1lFQTBncFQKTkpJQnhjUmN1N1c2MjdnaUpOS0xhbGdKbW16Rlk1OHZ0Z2VhSzJ1N2IrOGNpZW5ZeW8rNUdZWTVYSWlHZG8wZgpaVTJDa25Xd00rVWRhTUx5MDkvZzZBamkzUll6S2FxbkVXRnZwdEpXUGZjOFRTRHIrL2dvSUwrVlpUK1hEWGtKClJqWG5jc3V3djk1cy8yeS9jT3RTdXJ2RUtiZlplTkN4SXFFSzFpTUNnWUVBckVSSDEyRk5xb0pvMS9CUk92UUcKVGkyRHJoK2ZUbGt0c1RvMGFsd2VLTFREWTFuZW5JMmgydWRnOXVTN3lrRExZalBrWndCb0hYZmJUUmJ3eXNwMwpxcGVvR3RxQlkzMDI2RkFFNzU0eWhWUGNXbUZqc3RuSXZBOVUzMlI0UHFjb3J5Nk52anVYZGwvYUsyMWRWb04rCkdkSUxLZ2dhaFhxV3NIckt2RFpwMUlVQ2dZRUF3di9xOTZlR0ZjR1VCb0ZWbForQnM0WDFBU255NEhlVFdrWHoKMlo5OU5rcXluZHowTmVYdzZ6NDdyc0s2aG5vSnZBNlEwMC8rcFZLMTM3Z2FjYVJzSk9CNHdYTmVpN3VNakdadQo3T2YwN0gvaXFXemJndy9KaHdpQTJNYUZRSmFrK2xFZ2x4cDhZa3RSTVJDalNSQUJQQ2g5aWZmQXlxcHhNSVV2CnJ1S3NXTmtDZ1lFQTNaSmc0Q3dVRDZkT253NW5EN0RiVGtVMlZNcVp4QWg5TkE2b0xnaGNXTkpZOFk3SFNOVkkKeVFkUXZ4N3NRdjlGbUh1VDF6dXN4c0JEMHlCSlJyWEdpaGdMUUNrbHphSXhnejA5ZGJleVBDS2NBQStoL3dEOApxVVcwWGZINkJtRytzdlRqeWR5YlMreDY5K2FiZlBidnJqRXlKY0poS1BQU2VvdHd1RnZWRG44PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQjhhaVBqTGR4UnRSSGtIMit6UjBwekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEU0V2hjTk1qWXhNVEl4TWpFMQpOVEU0V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGI0bW13d1ZERnkvY29PR0lSYVZFaDdzZ3JvZ1o0c3pQNWZJV1MzWW9OVk9PQjN3RTYKQ1hTL1NGMGZUVlBnaExKcytHZm0ybVRUQUdYZDJSc3paMUdGa2N5K3FCc0RxVGVZOXcvakVBYmx3WFpRV3I0NwowWC9weHh0WXYrUDRNSWRHaVh3ZUJhK3dFdFM3bnRxVGJJbERaeEN5akwwWGV4eEg0TkFjcWQwOUtzekd0SGFnCmNKdytSTW1iOW1xOGZTUGsvKzNkNy9iYU1zVnovKzMycDRFRHVxeWl0VGYzMndIRXBjbWtaT2xOSUgvaWJCeGUKWU1NSzhldE0zOGZmeENrOVp3RGxIQVpLa3lteUJ6OUJlenI1OFFaYTlRTHFUK0M4dXBBWDg4QVRmS0JDRnlVMQpDRGRGU1FHSWIvcGhNcXBOQkFlZ1BPSE9ZczJaSEVUc0NJYTVBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5U0J2c2RGK1N5OU1TQ1pXNTBKb0tiRFdCbHN3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJMnRVQzY4cXBhekVES1R4cXhZYzE0bjNoVWJkRm9kcmVFVW1YMmVWQUNmSmhYcXNWemF1dDlhCmRnWS9sNUpoVHg0SjB4dlZKYTBRSDdJc3ZzTzk2bmE0dFBPYi9ST3orMHR6WTZlQ0Fia0NtLy9OeVIvYTg1UWsKWGYrbmVOa1hJUjZhZExJUXlEVXRWa0xDS3pJSUNnUXdmbDY1aTZ2Ly9Qa0dzN0txOHRPOXhEZUhUT0VnRi96cgpXbUltSTh5TkpZdzhVcitGQ2xCTTFDVnQ2VTNlZndqb1dKWWRCclJkOElaV3dQLzE2YVN6dUhLMkdpaUJTRU0xCit5b0lVenl6MGpWalJnT2RPVUQ1a3Iwb2UwKzlmVTlpUFZjZnVsM3FnMGkwbVk0U0w2VWdrclZjdmFhQ1d2Z3gKQlk2MmlHc2RZbVM4WnlOZzdSSzhXNzJoNFExbEJ3cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUakNDQWphZ0F3SUJBZ0lRRjVERDJXS29qbldPTzdhcmlDbXFkVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEU1V2hjTk1qWXhNVEl4TWpFMQpOVEU1V2pBbU1TUXdJZ1lEVlFRRERCc3FMbU14TlM1b2RXSmliR1V0WjNKd1l5NWphV3hwZFcwdWFXOHdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3kyNWlrWFpOdVVsTlRmTzBJYnhMMU5mZ2sKYVAwL01sR25nTGZRNjJhdlFxbnA0ZFVQRm1wY0hrVXRlT0trTTh4c2ExQ2l4MXdsay9uRzFDd1pCamhNejE0ZApKSEhPSFJ6MEppMjZpV1RiQ3g5MlhjMC94VE55RDE3ZEhwRnN5Q2MzMkh1VTZodVhrb0xiYXF4TVpraU52VVFBCnc0V2U2SEF3R2hZWXhpNU0xelRpQXIyb0JEMW00eklDU3VHU2xkSXE5d0xuSEJQSTNkM04wUDE2TXl3bVlFdVEKN0tJVGtOaWN2L1ZZd1UzYTNUNTBnWmtFSnRHY3YvdmRoSm9hb2ZCVGtmZi95eko3Y3BhZjFWa0NreERJNWhIcgprS0FxRHp4SDd6MmRTRGk3RzB6enFXbkk4VHA1K0R6Q09QZkFFeExsd3gzNTJhRWNSSDBEeER4ZEZ1eC9BZ01CCkFBR2pnWWt3Z1lZd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGUFVnYjdIUmZrc3ZURWdtVnVkQwphQ213MWdaYk1DWUdBMVVkRVFRZk1CMkNHeW91WXpFMUxtaDFZbUpzWlMxbmNuQmpMbU5wYkdsMWJTNXBiekFOCkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQXNudTMwTis3dnhiOUppOFRmbHNIdjJ2alFmWU9jVDJweWVSeTZOOVkKMHUzV0hBL1l1MzlTR3JtS05qbUtBMXk1Yzk5d3VZUit5bmdwVE5zMVdWMFlNeXp0YmtJQjRJblpoNTd0ZlRTRAo5aWZ6VENBVTZTK3EzYXphRjlSTW1iUHFmQXhNdk9FejU4WG9rUkloUWpYYVB4NXEzS3BKUml6a2VXV3BnbkR6CjB6VlNpOVlkMFpXZmI4cnQ3MWdGcHFHall6emtPd3h3VlhZeHUwOXI0QS9WRXBaUkNaNzhCTVBjYXJNRVM0V2kKSVI3eFkwOEtSZC9PMTAySERIVDMwM0YrekI4VHVvRW5yNFNNMmlQeCtrV09HbC80eEpGY3BCMktoQlE4bXFZQgo5Mk1GNEdoT0ZhbEtaSEhXNWlBdHB5QkdVNkxleGFtSjZ3NzlEVUROZUxCbHhnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBc3R1WXBGMlRibEpUVTN6dENHOFM5VFg0SkdqOVB6SlJwNEMzME90bXIwS3A2ZUhWCkR4WnFYQjVGTFhqaXBEUE1iR3RRb3NkY0paUDV4dFFzR1FZNFRNOWVIU1J4emgwYzlDWXR1b2xrMndzZmRsM04KUDhVemNnOWUzUjZSYk1nbk45aDdsT29ibDVLQzIycXNUR1pJamIxRUFNT0ZudWh3TUJvV0dNWXVUTmMwNGdLOQpxQVE5WnVNeUFrcmhrcFhTS3ZjQzV4d1R5TjNkemREOWVqTXNKbUJMa095aUU1RFluTC8xV01GTjJ0MCtkSUdaCkJDYlJuTC83M1lTYUdxSHdVNUgzLzhzeWUzS1duOVZaQXBNUXlPWVI2NUNnS2c4OFIrODluVWc0dXh0TTg2bHAKeVBFNmVmZzh3amozd0JNUzVjTWQrZG1oSEVSOUE4UThYUmJzZndJREFRQUJBb0lCQVFDdFpaZW1RZEljc2xOMgpMVGJmWmsvS3luZTNWTkd2NHVpbXEzT0paNjQxV3p1L011R0xyditPTHdxQit5QStjTGxPb3Z1WjFBelJvWlFWCjNyeWh4aFh1NFZzc2haaVBha29YcUt2TW5FYmExUDI3azFUWTdpWGgvbVRKbWtrQ1hVa29Ld2drWnBJNWNDRE0KOTYzeW8zYlRjeG5xWTZPM1cwRG9ZV0hxd3JkQVpnUXdlRzhSMENVTG5kS2lLOU5PRTVqa2EvNzRySi8xU3c4YQpIODIyWjlVMmlzY0NkVm80ZWoxU1hNT1hOQlJCalF0VndieTFQSHRWUzJJSXR5MjB3OFk5QWRmU1IzUXNuYS84CkdZbFdURWJCUXZUOGVXZitrWjJiZUZLb1BXOVZCc2lZTmd2RC9Ib0F1NERUMTBlVldkRXd6UzJwYVZhQ1ZaTFYKZDY3eGdYK0JBb0dCQU5GOXloUEp2YUJJUVd0eXFoU1paYlcvOExxVDUxWVEwSnVmZnFVNnBQL2hYMENXdzY1UgpNN3pFekpWT3VLTXMxcjRQU3kwN1JTaVBrMjFtMzJGeTFtZHkySTJmc01CeDNIK2pDNG9BYjl2NVpvVDRiZ3N5Cisxc0IyWWpHMmtVbnA5Z2NSRHc0UkpzdVkvclp2ZjUwVmV1OHlQU1lrb3NLYlMzYU1iQUpEcmhWQW9HQkFOcVEKeUN0NGpLbUR0SXJ0d2JpdzArVUNIY3lvWXB0cUlYdkxQVng2WkVscVZLcTlEejQ2VWMyNUI3a05lL1BrWGIwTQpRbWJyNmlyeU14cEcxb05UTlRlRVQxampYS0NoaDBhblpTY3pUYlBCdWtGVThFZUI5MVladFJQTHVrQVd2eFlVCkVJUXJPK0I3cGsxU1RadHg1ZDY0Ykhmd2Jubmg5U01GcjZ0dDBUV0RBb0dCQU1pclBydXZ2clhmSU5ORTFnaS8KVzc4NmFlUy9NcFN0ckxXMWxRRys2RGkzY0orVkMwSmFSRDNwSWJOUDRldGtVeHRoMlBndDB6UmtPNnRMSkdUYgpOT2VKQ2tpM0UvOXowZXh0aU9zYk9nc3pubkYyNnlwTkhwcnhiYWZvRzBLdEZza2JZbjF3eEw4Rk0vNGhQeTZUCno0M3RtMjA1RFA2azhTby8zT0tyK202MUFvR0JBTW9ydEV5cHBJdEVuYU1JeS9HWDkxalUvVldLeUROMEYyYlkKRjNsTWFTbVRwcCtNWStZdXNlNTJZZE5seXF0T0tQc3V0TmxaRFhFT09nRHJWNCtBVHpCOFBaMCtLamNYVXZjaQo3aWsxaG9GcENHMVlNUzRqNVBLS3N2bU5zRW1LQU5WZVYreTV4UmdmcURQTGxxZmIwa0tUR3hwU2x3NDgyYkM4Cm1NTWN3TEViQW9HQURyYWMzZkhEbTB1NE9VYnNNcHNnd0RSbWlyYXRqd1JNQ2NPZGFmVUlCZzRycTZGRXJkaFMKTG1KK0dwYzNGUWs2Qk5ZZEdFTUQxOFZ5Y0d5UU1pd2djcXN5K3FtTkM5T0dSd1U1clc2OHJJZ0h3emFKemFtbgo2aWx6OXBNMzNLc0RiakpXQnBWYitkVmxQMWVmdDE0ckJvU1lSbWdOZHpFUE1yRlB0cWM4d0EwPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: c15
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "115"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-wireguard: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "false"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  ipam-cilium-node-update-rate: "15s"
  cluster-pool-ipv4-cidr: "10.15.0.0/17"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  cnp-node-status-gc-interval: "0s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "true"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"

  external-envoy-proxy: "false"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: c15
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/clustermesh-apiserver/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumexternalworkloads/status
  - ciliumnodes
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumendpoints/status
  verbs:
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumexternalworkloads
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver-metrics
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/component: metrics
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: kvmesh-metrics
    port: 9964
    protocol: TCP
    targetPort: kvmesh-metrics
  selector:
    k8s-app: clustermesh-apiserver
---
# Source: cilium/templates/clustermesh-apiserver/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  type: NodePort
  selector:
    k8s-app: clustermesh-apiserver
  ports:
  - port: 2379
    nodePort: 32379
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.14.2@sha256:52f70250dea22e506959439a7c4ea31b10fe8375db62f5c27ab746e3a2af866d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/clustermesh-apiserver/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: clustermesh-apiserver
        k8s-app: clustermesh-apiserver
    spec:
      initContainers:
      - name: etcd-init
        image: "quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args:
        - |
          rm -rf /var/run/etcd/*;
          /usr/local/bin/etcd --data-dir=/var/run/etcd --name=clustermesh-apiserver --listen-client-urls=http://127.0.0.1:2379 --advertise-client-urls=http://127.0.0.1:2379 --initial-cluster-token=clustermesh-apiserver --initial-cluster-state=new --auto-compaction-retention=1 &

          # The following key needs to be created before that the cilium agents
          # have the possibility of connecting to etcd.
          etcdctl put cilium/.has-cluster-config true

          etcdctl user add root --no-password;
          etcdctl user grant-role root root;
          etcdctl user add admin-c15 --no-password;
          etcdctl user grant-role admin-c15 root;
          etcdctl user add externalworkload --no-password;
          etcdctl role add externalworkload;
          etcdctl role grant-permission externalworkload --from-key read '';
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/state/noderegister/v1/;
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/.initlock/;
          etcdctl user grant-role externalworkload externalworkload;
          etcdctl user add remote --no-password;
          etcdctl role add remote;
          etcdctl role grant-permission remote --from-key read '';
          etcdctl user grant-role remote remote;
          etcdctl auth enable;
          exit
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      containers:
      - name: etcd
        image: "quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/local/bin/etcd
        args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        # Surrounding the IPv4 address with brackets works in this case, since etcd
        # uses net.SplitHostPort() internally and it accepts the that format.
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=clustermesh-apiserver
        - --auto-compaction-retention=1
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - name: etcd
          containerPort: 2379
          protocol: TCP
        volumeMounts:
        - name: etcd-server-secrets
          mountPath: /var/lib/etcd-secrets
          readOnly: true
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      - name: apiserver
        image: "quay.io/cilium/clustermesh-apiserver:v1.14.2@sha256:0650beac6633a483261640b6539c9609f5a761f4ab4504fd1e6ffe7f2bb82e9a"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt
        - etcd.config=/var/lib/cilium/etcd-config.yaml
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: identity-allocation-mode
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: enable-k8s-endpoint-slice
              optional: true
        ports:
        - name: apiserv-metrics
          containerPort: 9962
          protocol: TCP
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: etcd-server-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-server-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-admin-client
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-admin-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-data-dir
        emptyDir: {}
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "clustermesh-apiserver"
      serviceAccountName: "clustermesh-apiserver"
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: clustermesh-apiserver
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.14.2@sha256:a89030b31f333e8fb1c10d2473250399a1a537c27d022cd8becc1a65d1bef1d6"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.12.0@sha256:1c876cfa1d5e35bc91e1025c9314f922041592a88b03313c22c1f97a5d2ba88f"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.12.0@sha256:8a79a1aad4fc9c2aa2b3e4379af0af872a89fcec9d99e117188190671c66fc2e"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.

# Only create the namespace if it's different from Ingress and Gateway API secret namespaces (if enabled).
