---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWjJHN25oZlBDQXZHN01UOEZ6TjdrekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEUzV2hjTk1qWXhNVEl4TWpFMQpOVEUzV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREFUQlNvbE4zY1l0UUJxdG1BYXdkM2xLNmplNVJCYW85SzMrYThwTWcrUXlvaTNnSC8KRHA5SC9aYW1MVXpsTElsS29iYTJXbXN0Z1BTLzhld3UzWlNLczNLY3lmUkphWDRQWUZUMFByd1N5YzFIN1ZGSgo1VkNOcHZjNXNSR24yRWFCaDluc2lTOHdiTDl1MkxtNFRUK05UaEkvYUZRc0k0RVFZQVV2OFk0NUJQZW5LV2hQClZQdWY5a1JDeUpjaW5XeTJRczJCS084SWZ2RUovQ2hJaGRQM1UzNFN4VUxGK1JTNURZMmpScTJYU0hGZFdkWTYKek1tUk9zN0xuN2JQUUM2bFdqYXhLNE9tM2IrMTNpWm4rL0E0SlE4d0RWaUwyaUs4cEYzWkpyN1Z2T1VjNzB4VQpMU096YjdVUUc0aUhFT2NocXZXRTJHbjF4cDdmL3pBMnRGTlBBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUrKzlGOEl4VGFEKzMzTHBTR1JVeEZFU3NBdzB3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMejRyVTY1SC9abENaMnZYd3EwMGJteEt3TUxFbUhMTWdBVVJTZVN2QmREQjI2L0hBc09iMXZWCjF1d0k5a25UNDR6WTYzNXNnZkc5NTlERUttQVpITU5iR0JLZGUzTlhUUWx1RFJMblhCVVZmeDJVY2lUczlFUDgKblREZmpDY2IzcFNLeU1DaGhOK2RZZ3R6b0NsL2owSitzL3N5ejRZTm43UU9KR2RZSnN3N0w2RXFUYUNzUlc5Vwo0eEYyVXhTMWx5U0xZaGdkL3JaU2FKZ2dpS2dJbzJsc1NEL2VmdTd5R1dyZXEwT3dRTjViVUQrTnptYWxhMDNCCnlnQ05Qd0ZUWWJSaGtHQ1h1bW5pKzg0dW5TWXNlaHRPRzBFdHF6QmVmcnpHcWZINW5Cbm8wb0JBclZNbHdlWkwKT2wyWTE1RkVUU0FjWGprV25mMFd2eUhKalJjNnZSYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBd0V3VXFKVGQzR0xVQWFyWmdHc0hkNVN1bzN1VVFXcVBTdC9tdktUSVBrTXFJdDRCCi93NmZSLzJXcGkxTTVTeUpTcUcydGxwckxZRDB2L0hzTHQyVWlyTnluTW4wU1dsK0QyQlU5RDY4RXNuTlIrMVIKU2VWUWphYjNPYkVScDloR2dZZlo3SWt2TUd5L2J0aTV1RTAvalU0U1AyaFVMQ09CRUdBRkwvR09PUVQzcHlsbwpUMVQ3bi9aRVFzaVhJcDFzdGtMTmdTanZDSDd4Q2Z3b1NJWFQ5MU4rRXNWQ3hma1V1UTJObzBhdGwwaHhYVm5XCk9zekprVHJPeTUrMnowQXVwVm8yc1N1RHB0Mi90ZDRtWi92d09DVVBNQTFZaTlvaXZLUmQyU2ErMWJ6bEhPOU0KVkMwanMyKzFFQnVJaHhEbklhcjFoTmhwOWNhZTMvOHdOclJUVHdJREFRQUJBb0lCQUZpSWJwWnkrM1pFOWZEUwpsUkxmcys5bFA4WTYxallMOW03MWlNamZZT1h4akV2RFJNNEdFR1ZYcG0xWnUrWmpTODVWaDhhSytIOVp1TlZLCmIzL2dPa3hsYytZbHdOZXZ2djhiVGVHcHBITk4vN29XMCs4ZXFhaWQ3NExiT0JLN3F6Smx0bnFGYW5sMEIrcmoKMHhXOFV2OGVxNTRQelhrSTI1b0xhemY0a1k5RUl0K3JTUXFhZWhUZ0tEQm13c2hpOUlSWUpuN0I1YXhYWjQ5LwpoVlRGZnhxTzdWcTN4SzhzdmRyT0puc1IzejVvSW5XQ3lMaTVSdzZDTnhQVSttSWJvYjZEQmpDWm1SMENXQ0ZzCmthMGxsdW9EOEgweHByMy9SYTN0bWJLMEJqUWRzQW9BT3VNbHV6YmJISGJ3Y3JYQmhieGhEaityNUtHbytkLy8KK3UwLzBUa0NnWUVBNGJ4aU9QVXU0WTV1bzlXOHVtSTBMeG9ZVXJFdkNsbi9NeWhMQjhOblRrV0VNb1pOVHdpSQpKSTdnZWFjTGN5SXlzSDFzNUdXYlk3SGlJbU80YWFTVWZ2MGp1WXBXcjhGZlA2SkZaZ0VZaldJb0h6R2lPQUhaClZxRzVWZm1KSXBVbmlIL2RleVdLNlVpcHZNOTdPTVhJZTRaOU1uN1FRbFF6VEpCSFFTQXpoWHNDZ1lFQTJoUUgKSkpQd3NmWTVsaWUwSmlISjhsNGwwcnFHTkdxRFJhWmdjUmdMajRjTVRxWUZ4aWRkaUxmZG1pb1BwbGU3OUtIeAo1Y2ZXcUxrUCs0b2U0N0pBVjd0aGp1bXBIQ2xYRGh1RDR6ZEJKN3lqUzZIODkxTW11OXNXWi8yaXh6VW41ek5UCmZ2Q0tJU0RwN3JMVjV1dUIvL1QwTzNIdmNoWHF2N0ZNZzNQby96MENnWUVBZ0lENWVXczZNUFVnVHV3UjhCaVAKbEhES2YraVYydEs0MEtxVGErdjFGejNEcis5OGV3MWtVMHR5eGs0dDJuRVJZaDlFcWhDZGtQZG13Q1Q4aWtkQwpzYmZ4YW1JeVR3Tko4Yk95eGdyQnExckJkR0NROUVrNUxIUU1TY0V3TEJ1MDBhUFl0WTM5c2lmSFdORFVXTkZlCis5TG4ycU1PYzNQemNCYUNPYlRYSDVrQ2dZRUF5a3lINzhPWkpjMU8wRjhXZThVZWJFb3Y5aEwzeWdvQXFvelQKckRYdEM0RHd4c2kyVklKUi96RHBUa2kwYWMrN1dRMGRzOVcwNktGOEZSQ2s1UDZITjV0b3ZjVStEaFMvWUNQZwpMZGdsQmZLMDNNVnhRQkdQdmZaWUM3RzYzZWNPbENnRnpaemYxaW1OT05RSEg0YmErcERHTzVyT3o5dEsvL1krCkR6ZG9MZFVDZ1lFQWxhSzlYRm0ycUZSdlZIRm82eDMwQ1o0bTNPdk9qUmhkb21IZzJaWFFVVVlRSW1CWDRtdXYKNFdUS0R5djhNV1ZRQkVTNFF2OVBFYTVMZGdRZXdwODN0RU52emZCanAxdVF2OWV6V0duZlFmdjVCcjd1T3F1dgpMZVBGcGFMRlliNFVMakJRMnBWOWxTY2U0bTNaTFFmNkxWWmxDbjNqSUhjbkhHdGJ2dzh4MjRzPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/admin-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWjJHN25oZlBDQXZHN01UOEZ6TjdrekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEUzV2hjTk1qWXhNVEl4TWpFMQpOVEUzV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREFUQlNvbE4zY1l0UUJxdG1BYXdkM2xLNmplNVJCYW85SzMrYThwTWcrUXlvaTNnSC8KRHA5SC9aYW1MVXpsTElsS29iYTJXbXN0Z1BTLzhld3UzWlNLczNLY3lmUkphWDRQWUZUMFByd1N5YzFIN1ZGSgo1VkNOcHZjNXNSR24yRWFCaDluc2lTOHdiTDl1MkxtNFRUK05UaEkvYUZRc0k0RVFZQVV2OFk0NUJQZW5LV2hQClZQdWY5a1JDeUpjaW5XeTJRczJCS084SWZ2RUovQ2hJaGRQM1UzNFN4VUxGK1JTNURZMmpScTJYU0hGZFdkWTYKek1tUk9zN0xuN2JQUUM2bFdqYXhLNE9tM2IrMTNpWm4rL0E0SlE4d0RWaUwyaUs4cEYzWkpyN1Z2T1VjNzB4VQpMU096YjdVUUc0aUhFT2NocXZXRTJHbjF4cDdmL3pBMnRGTlBBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUrKzlGOEl4VGFEKzMzTHBTR1JVeEZFU3NBdzB3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMejRyVTY1SC9abENaMnZYd3EwMGJteEt3TUxFbUhMTWdBVVJTZVN2QmREQjI2L0hBc09iMXZWCjF1d0k5a25UNDR6WTYzNXNnZkc5NTlERUttQVpITU5iR0JLZGUzTlhUUWx1RFJMblhCVVZmeDJVY2lUczlFUDgKblREZmpDY2IzcFNLeU1DaGhOK2RZZ3R6b0NsL2owSitzL3N5ejRZTm43UU9KR2RZSnN3N0w2RXFUYUNzUlc5Vwo0eEYyVXhTMWx5U0xZaGdkL3JaU2FKZ2dpS2dJbzJsc1NEL2VmdTd5R1dyZXEwT3dRTjViVUQrTnptYWxhMDNCCnlnQ05Qd0ZUWWJSaGtHQ1h1bW5pKzg0dW5TWXNlaHRPRzBFdHF6QmVmcnpHcWZINW5Cbm8wb0JBclZNbHdlWkwKT2wyWTE1RkVUU0FjWGprV25mMFd2eUhKalJjNnZSYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lRRFV4RlZKNVMrUW1XVW1VMmM5eTA1VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEU0V2hjTk1qWXhNVEl4TWpFMQpOVEU0V2pBVU1SSXdFQVlEVlFRREV3bGhaRzFwYmkxak1UUXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3lnQnBsRW12a1RNeGFySlVwazcyTkVjeHhxYVBIZEZCV3dHMFR0elNnOUtMQnZnRlcKR0cxOXJDQXU4WFVwRVF0UGhsemk1eW80dE5YbkNkd2ZxaXB3dkJHK1FxVkVQK3R4YTRZY3lPcXBBQldTT2s2QgpwU0lmTWZiQnRrR3MrZi9Sc3F1MFJYcGYzOUw0VFQ3MjZvbGVNajRYaTJhUU5DakE2SWQ3Z2FZMFNGdHVma3hCCmFjMHB4ZnJhWHc5VGVoRVhkT3JwNENjd1BHYzE2N1VzbHo1NFFXb1pXZHo5aWV5QWZDd2ZFdmxVQWlFSzJMMHAKeGJnRnRTYUVSeHBieitjWTBLVVBIc3Y4V3ZneUxTTkorVmlqd1dlVkxDRlZpV2RyUThmcWgxYnpQS1dCd2s5awpiUmZyaVZzZ3VaSkNSZkZUdEc3alh2TnN1VU8ra3FNU3RuYnRBZ01CQUFHamRqQjBNQTRHQTFVZER3RUIvd1FFCkF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXcKQURBZkJnTlZIU01FR0RBV2dCVDc3MFh3akZOb1A3ZmN1bElaRlRFVVJLd0REVEFVQmdOVkhSRUVEVEFMZ2dscwpiMk5oYkdodmMzUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQ2xubHl3dEpBbXNMNGdlTmFIcWJRWjF6L1BuCmt6ODQ0RkNOK3pwNVlXVXNNN0VNSERVVVlZT3N1VXdxNGttNWYrTVJZd2dja3R6NjFlMm9BSEdWYWg5aTNMSVgKU3JBbnc5RjRNTXltM3M1Y3hqdmxUY3ZaM29QUi9JN1JGdEVacGg1RzlLNHQwTEFTRDUvN3RJWlEzUzlvcmhVaApCTlNKdVR5d2hwc2wrT0xscmNVa1lFMXNSZ0ZReG5rbGphNHhCcVFteWprazFON01wZ2d1UXoxbnhvN1JKZFZXCnlqdHZHWHVmV3ZxbDlSSnNBVjMyN2lQLzBQT0J3dUVmMHpVTjAzZGZtZXB4bVUxalpJd2ZEUlROaVE4Wi9KUUwKVnBTRWRVTFZJQ2ZzYURWYUQ3THFYU3pENGRrY0RyTGhJVytJQThuNGRWRXhHTlE3emJVSW5rTUp1NHc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBc29BYVpSSnI1RXpNV3F5VktaTzlqUkhNY2FtangzUlFWc0J0RTdjMG9QU2l3YjRCClZoaHRmYXdnTHZGMUtSRUxUNFpjNHVjcU9MVFY1d25jSDZvcWNMd1J2a0tsUkQvcmNXdUdITWpxcVFBVmtqcE8KZ2FVaUh6SDJ3YlpCclBuLzBiS3J0RVY2WDkvUytFMCs5dXFKWGpJK0Y0dG1rRFFvd09pSGU0R21ORWhiYm41TQpRV25OS2NYNjJsOFBVM29SRjNUcTZlQW5NRHhuTmV1MUxKYytlRUZxR1ZuYy9ZbnNnSHdzSHhMNVZBSWhDdGk5CktjVzRCYlVtaEVjYVc4L25HTkNsRHg3TC9GcjRNaTBqU2ZsWW84Rm5sU3doVllsbmEwUEg2b2RXOHp5bGdjSlAKWkcwWDY0bGJJTG1TUWtYeFU3UnU0MTd6YkxsRHZwS2pFcloyN1FJREFRQUJBb0lCQUYzY0tJVHZHOWFQWDRGcQpjSUROVkFYQ3p5c1JWYktDZ2VBc0RPOHFEYjE1QmNBMGhnVmNrTzVkUFFzU0lsWTJ4U2pLOFRySzdST21XemZDCm9vSHYrNk1OOFpLRy90b1ZkbHRNZTlmVStqZGxlUEpNUUkzQlpHRGM1L0RTUWxTUG5Lb0tkbWt6ZzNhNGZmbmMKdkhnZnVaM1RjM3p6NnpsMmc5dDBLaEdTaWUvQkhvRmJVbEp6NEVxYXVZeVJHQ2lpWU94bjRYMFdDbmJiMStQYgpGTE1GTXJtbkF5dzRpV1VGcURMNDZZbXo5NkZwdkliUTZrY1llUi9PWkt4R1htaUhTZzBveGVLR05lNTMrNXlqCnJ2WVhBV1JtVENWTG1HUENWOEo3WU12ZEpIZTUxc09qRU9reUhScDJFblBpWitxZ3ZMV0VNVVlwZ0tNZy9NaE0KeGtwMks2MENnWUVBN0tYbXd2RmlMVmZOTFJydFVwOWQ2ZnVWVGlIVHY0eHpLb2pFaXBBYUJVdGdvYXppVGZ5Rgp1TGN4VDg2d0h2NDhndy9xb1VneVhmTVA1OE14c3lzMFQzL3NPbUJycGZIYkJ2RmkzYWkwSkFpc2g4ZzlPeEZOClhoaGI4VEZmczFucFdnTjVHWVNESGxBZStUUW03S1V0bGxCU3pwZzZCMGcvZll1RlYzcFdkQU1DZ1lFQXdSanAKaFpINjdqbjNTWUFMQjdhSkFFMlNwdW9YRnpQa2xYbEZjUkJ2MXJkeWcwU3dSYVlpS3dBNzhvc2l5UTkrYThmTAprSmZhNnc1enJXZ3hEaFZpUm9vY1I3YWdJTFdvU1hpMzhPS2JHM1RvWnV5SGdtU0RuM0d1Z0lpcEs2MjQ1cDJaCllsc1BJM2FtVVZ2RU9GUjVrSmd0dnVsMWFldWF2R2dCeE4zbGprOENnWUF4NWkySmI1S1BFeE45Yms4YWUrWTIKbjBqMVI2YTVuaWp1a0JZNVRYZGZKR3pFeW9xUmZTekpMVCtsbjJSOXRJZ1g3clEvdTlSN0FQU2Fud3NNeDVCcApMd1VscmcwazJhR2dqaWVWcTZ3SWFSZlFMY1hUZmF0OXFzOUFSWFB6Z29MMDZ3U08vK1VSOEQwSHVScDREY0JXCkVLdlZTajM2S1I3U0h5aEhzTkVuOXdLQmdCV0M5Zmo0WTFFSXlpQzVFQUdDOTA0K1Zoa2NPUWhQc3Fab1JURXMKV0prK0JKYlZIeUlUT1BrN1pISkh4ODlJVjVnZ1FQQlJ5b1NuTG9IaCtwME1Dcys2OFIyWUhjeW5FQ0ZuUG02cQpnQWNXQmhINVJidGtBVG5SQzFTc1pOUkYzVFJyMkR1WjAxenJDZXBFWTk2Mm9uaFdTN3BaL2NlWUJMdjZoai90ClRIYUhBb0dBSjhwZ2lNUlVPb0JTZDJjWnJsM3FsV2FtVkplSnZjL0dxU3lXZWUyUkU2MElYQ0syamEwak1vaEMKZGJxb2pXcjdieUJnYllrTGRZRmNMQmpOR3BPSkRxNDkxVzZtZHB2b2V1bDYxYWtYT21ub0JNYms1TWllSGd2WQpMOVFxbzNnUUJvVTNxVy80L1NtbVhnMGJicmw2b2V2cWdxYTJyN2Y2Y2JKUzQxNFJDaVU9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-ca-cert
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWjJHN25oZlBDQXZHN01UOEZ6TjdrekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEUzV2hjTk1qWXhNVEl4TWpFMQpOVEUzV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREFUQlNvbE4zY1l0UUJxdG1BYXdkM2xLNmplNVJCYW85SzMrYThwTWcrUXlvaTNnSC8KRHA5SC9aYW1MVXpsTElsS29iYTJXbXN0Z1BTLzhld3UzWlNLczNLY3lmUkphWDRQWUZUMFByd1N5YzFIN1ZGSgo1VkNOcHZjNXNSR24yRWFCaDluc2lTOHdiTDl1MkxtNFRUK05UaEkvYUZRc0k0RVFZQVV2OFk0NUJQZW5LV2hQClZQdWY5a1JDeUpjaW5XeTJRczJCS084SWZ2RUovQ2hJaGRQM1UzNFN4VUxGK1JTNURZMmpScTJYU0hGZFdkWTYKek1tUk9zN0xuN2JQUUM2bFdqYXhLNE9tM2IrMTNpWm4rL0E0SlE4d0RWaUwyaUs4cEYzWkpyN1Z2T1VjNzB4VQpMU096YjdVUUc0aUhFT2NocXZXRTJHbjF4cDdmL3pBMnRGTlBBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUrKzlGOEl4VGFEKzMzTHBTR1JVeEZFU3NBdzB3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMejRyVTY1SC9abENaMnZYd3EwMGJteEt3TUxFbUhMTWdBVVJTZVN2QmREQjI2L0hBc09iMXZWCjF1d0k5a25UNDR6WTYzNXNnZkc5NTlERUttQVpITU5iR0JLZGUzTlhUUWx1RFJMblhCVVZmeDJVY2lUczlFUDgKblREZmpDY2IzcFNLeU1DaGhOK2RZZ3R6b0NsL2owSitzL3N5ejRZTm43UU9KR2RZSnN3N0w2RXFUYUNzUlc5Vwo0eEYyVXhTMWx5U0xZaGdkL3JaU2FKZ2dpS2dJbzJsc1NEL2VmdTd5R1dyZXEwT3dRTjViVUQrTnptYWxhMDNCCnlnQ05Qd0ZUWWJSaGtHQ1h1bW5pKzg0dW5TWXNlaHRPRzBFdHF6QmVmcnpHcWZINW5Cbm8wb0JBclZNbHdlWkwKT2wyWTE1RkVUU0FjWGprV25mMFd2eUhKalJjNnZSYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBd0V3VXFKVGQzR0xVQWFyWmdHc0hkNVN1bzN1VVFXcVBTdC9tdktUSVBrTXFJdDRCCi93NmZSLzJXcGkxTTVTeUpTcUcydGxwckxZRDB2L0hzTHQyVWlyTnluTW4wU1dsK0QyQlU5RDY4RXNuTlIrMVIKU2VWUWphYjNPYkVScDloR2dZZlo3SWt2TUd5L2J0aTV1RTAvalU0U1AyaFVMQ09CRUdBRkwvR09PUVQzcHlsbwpUMVQ3bi9aRVFzaVhJcDFzdGtMTmdTanZDSDd4Q2Z3b1NJWFQ5MU4rRXNWQ3hma1V1UTJObzBhdGwwaHhYVm5XCk9zekprVHJPeTUrMnowQXVwVm8yc1N1RHB0Mi90ZDRtWi92d09DVVBNQTFZaTlvaXZLUmQyU2ErMWJ6bEhPOU0KVkMwanMyKzFFQnVJaHhEbklhcjFoTmhwOWNhZTMvOHdOclJUVHdJREFRQUJBb0lCQUZpSWJwWnkrM1pFOWZEUwpsUkxmcys5bFA4WTYxallMOW03MWlNamZZT1h4akV2RFJNNEdFR1ZYcG0xWnUrWmpTODVWaDhhSytIOVp1TlZLCmIzL2dPa3hsYytZbHdOZXZ2djhiVGVHcHBITk4vN29XMCs4ZXFhaWQ3NExiT0JLN3F6Smx0bnFGYW5sMEIrcmoKMHhXOFV2OGVxNTRQelhrSTI1b0xhemY0a1k5RUl0K3JTUXFhZWhUZ0tEQm13c2hpOUlSWUpuN0I1YXhYWjQ5LwpoVlRGZnhxTzdWcTN4SzhzdmRyT0puc1IzejVvSW5XQ3lMaTVSdzZDTnhQVSttSWJvYjZEQmpDWm1SMENXQ0ZzCmthMGxsdW9EOEgweHByMy9SYTN0bWJLMEJqUWRzQW9BT3VNbHV6YmJISGJ3Y3JYQmhieGhEaityNUtHbytkLy8KK3UwLzBUa0NnWUVBNGJ4aU9QVXU0WTV1bzlXOHVtSTBMeG9ZVXJFdkNsbi9NeWhMQjhOblRrV0VNb1pOVHdpSQpKSTdnZWFjTGN5SXlzSDFzNUdXYlk3SGlJbU80YWFTVWZ2MGp1WXBXcjhGZlA2SkZaZ0VZaldJb0h6R2lPQUhaClZxRzVWZm1KSXBVbmlIL2RleVdLNlVpcHZNOTdPTVhJZTRaOU1uN1FRbFF6VEpCSFFTQXpoWHNDZ1lFQTJoUUgKSkpQd3NmWTVsaWUwSmlISjhsNGwwcnFHTkdxRFJhWmdjUmdMajRjTVRxWUZ4aWRkaUxmZG1pb1BwbGU3OUtIeAo1Y2ZXcUxrUCs0b2U0N0pBVjd0aGp1bXBIQ2xYRGh1RDR6ZEJKN3lqUzZIODkxTW11OXNXWi8yaXh6VW41ek5UCmZ2Q0tJU0RwN3JMVjV1dUIvL1QwTzNIdmNoWHF2N0ZNZzNQby96MENnWUVBZ0lENWVXczZNUFVnVHV3UjhCaVAKbEhES2YraVYydEs0MEtxVGErdjFGejNEcis5OGV3MWtVMHR5eGs0dDJuRVJZaDlFcWhDZGtQZG13Q1Q4aWtkQwpzYmZ4YW1JeVR3Tko4Yk95eGdyQnExckJkR0NROUVrNUxIUU1TY0V3TEJ1MDBhUFl0WTM5c2lmSFdORFVXTkZlCis5TG4ycU1PYzNQemNCYUNPYlRYSDVrQ2dZRUF5a3lINzhPWkpjMU8wRjhXZThVZWJFb3Y5aEwzeWdvQXFvelQKckRYdEM0RHd4c2kyVklKUi96RHBUa2kwYWMrN1dRMGRzOVcwNktGOEZSQ2s1UDZITjV0b3ZjVStEaFMvWUNQZwpMZGdsQmZLMDNNVnhRQkdQdmZaWUM3RzYzZWNPbENnRnpaemYxaW1OT05RSEg0YmErcERHTzVyT3o5dEsvL1krCkR6ZG9MZFVDZ1lFQWxhSzlYRm0ycUZSdlZIRm82eDMwQ1o0bTNPdk9qUmhkb21IZzJaWFFVVVlRSW1CWDRtdXYKNFdUS0R5djhNV1ZRQkVTNFF2OVBFYTVMZGdRZXdwODN0RU52emZCanAxdVF2OWV6V0duZlFmdjVCcjd1T3F1dgpMZVBGcGFMRlliNFVMakJRMnBWOWxTY2U0bTNaTFFmNkxWWmxDbjNqSUhjbkhHdGJ2dzh4MjRzPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/remote-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWjJHN25oZlBDQXZHN01UOEZ6TjdrekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEUzV2hjTk1qWXhNVEl4TWpFMQpOVEUzV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREFUQlNvbE4zY1l0UUJxdG1BYXdkM2xLNmplNVJCYW85SzMrYThwTWcrUXlvaTNnSC8KRHA5SC9aYW1MVXpsTElsS29iYTJXbXN0Z1BTLzhld3UzWlNLczNLY3lmUkphWDRQWUZUMFByd1N5YzFIN1ZGSgo1VkNOcHZjNXNSR24yRWFCaDluc2lTOHdiTDl1MkxtNFRUK05UaEkvYUZRc0k0RVFZQVV2OFk0NUJQZW5LV2hQClZQdWY5a1JDeUpjaW5XeTJRczJCS084SWZ2RUovQ2hJaGRQM1UzNFN4VUxGK1JTNURZMmpScTJYU0hGZFdkWTYKek1tUk9zN0xuN2JQUUM2bFdqYXhLNE9tM2IrMTNpWm4rL0E0SlE4d0RWaUwyaUs4cEYzWkpyN1Z2T1VjNzB4VQpMU096YjdVUUc0aUhFT2NocXZXRTJHbjF4cDdmL3pBMnRGTlBBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUrKzlGOEl4VGFEKzMzTHBTR1JVeEZFU3NBdzB3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMejRyVTY1SC9abENaMnZYd3EwMGJteEt3TUxFbUhMTWdBVVJTZVN2QmREQjI2L0hBc09iMXZWCjF1d0k5a25UNDR6WTYzNXNnZkc5NTlERUttQVpITU5iR0JLZGUzTlhUUWx1RFJMblhCVVZmeDJVY2lUczlFUDgKblREZmpDY2IzcFNLeU1DaGhOK2RZZ3R6b0NsL2owSitzL3N5ejRZTm43UU9KR2RZSnN3N0w2RXFUYUNzUlc5Vwo0eEYyVXhTMWx5U0xZaGdkL3JaU2FKZ2dpS2dJbzJsc1NEL2VmdTd5R1dyZXEwT3dRTjViVUQrTnptYWxhMDNCCnlnQ05Qd0ZUWWJSaGtHQ1h1bW5pKzg0dW5TWXNlaHRPRzBFdHF6QmVmcnpHcWZINW5Cbm8wb0JBclZNbHdlWkwKT2wyWTE1RkVUU0FjWGprV25mMFd2eUhKalJjNnZSYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtMUTI4RG1uMUdNV2MyNnd2a1RoZVF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4T0ZvWERUSTJNVEV5TVRJeApOVFV4T0Zvd0VURVBNQTBHQTFVRUF4TUdjbVZ0YjNSbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBCk1JSUJDZ0tDQVFFQXJSSkt5V3hXM3dyU3FRMUhzMXB6R2RRb1JPTCtNQ2NTM2ZmMHVQSytUYTd4dnNGU0V2WXQKOHdFRVlCSGZ3V1dIdmk1RWttOGFDeDUyTFhVd0xpR2tEYW56bmx3UDRwbDlib0t5WlNjdi90aE1ySHorV2NDZgpiTElXbXZYTUxkVWNCYTErREhOZWoxUlpxT1N3NmxQUEhZeDB4VVBsWHRJODVFMExkSUxGVXBHSnYrSXdzYytxCmxNS25jOVh5SVhUSVhRTU5NazZiYlBaWjNYL1IrZFJTd2NFeXNkMHN0a1ZlMjcvODA1QWNGM0xMOTV0L2s2eUgKSDNRS2VOUThMQVNuKzJoWWU5K0I5MjIyL01ETkZuckNZdzVPeVZoVENsaW45SGFjL041TlY0bGw2aTNxSjg3WQpGbmNXU0diY3diczJ5aGwvUU1MUFAxbEJ1WVZ2K3ZEVitRSURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DCkJhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXcKSHdZRFZSMGpCQmd3Rm9BVSsrOUY4SXhUYUQrMzNMcFNHUlV4RkVTc0F3MHdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUdOMTRnOXpiQ3hpZVVzRENHRHhVRmw3bk5PQ2xkajU1TTAxY0FVMnlNeVdyOXRxOWZrODdiUGYwcXRWCm1GM2Z1bWs0ZVhrN21HRkZ5WWE0dm1pTktjVlh3cTV5bHFxckN4Nmx1MW83T092VWx6Q245T0lFZXkwVE5tZEsKYUZCWWl3TmUraXNROTBHY2FzMkNOcDdOczdyUkxJdnVsS1czN0o0b0RBby9tbHovbzFZMk5oNVd3S2JnREN5dgpIMS84UFczeUN4bWNydjAxTG1IdHB2Y1ZRc0I2WUFaaUhpMXFyMDcyZy9GSXQ2eksrNDk3bEN3Rld5d0hBcmJxClBpb25sN2FLYXJlL1oyRno4eTFEd3hkSmZmY0gvMUx0TUJua29qbitYU2tXc1c5aDc2OVNCSk1oMStiNlJ6bkwKTzRwVGZlZU1UMnV0b2tFWkRBWktNNVpjQVdJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBclJKS3lXeFczd3JTcVExSHMxcHpHZFFvUk9MK01DY1MzZmYwdVBLK1RhN3h2c0ZTCkV2WXQ4d0VFWUJIZndXV0h2aTVFa204YUN4NTJMWFV3TGlHa0RhbnpubHdQNHBsOWJvS3laU2N2L3RoTXJIeisKV2NDZmJMSVdtdlhNTGRVY0JhMStESE5lajFSWnFPU3c2bFBQSFl4MHhVUGxYdEk4NUUwTGRJTEZVcEdKditJdwpzYytxbE1LbmM5WHlJWFRJWFFNTk1rNmJiUFpaM1gvUitkUlN3Y0V5c2Qwc3RrVmUyNy84MDVBY0YzTEw5NXQvCms2eUhIM1FLZU5ROExBU24rMmhZZTkrQjkyMjIvTURORm5yQ1l3NU95VmhUQ2xpbjlIYWMvTjVOVjRsbDZpM3EKSjg3WUZuY1dTR2Jjd2JzMnlobC9RTUxQUDFsQnVZVnYrdkRWK1FJREFRQUJBb0lCQUNmQlFlaU91RTIzb0xndwpVcjRDRXRwbC8zSURhandKWGE0YkhOMjI5THZIYWNSVmg5TFBOYkxTRXYwMlhkMkF3dk9Pa1RYSnk0T3VWWnNQCmhpZXlsb3FFOVc3MDJybEVaS21UNEFLWVE5QVlRMVNEeWJFNEsrYTk2YTlpc3FuOGY5bFdCdFE1VkFrOGFQUUEKeEJxdmNhM3A2NUM4amQyQUVYaW5zZS9yY2dRTEJVZFZlMVZHMFk3M05pNjZjKzk5MXRObHlKV21YaWpQbUhhVwpqSmJWSDYvYWdnWmE2S2VEWTl5UTBLemliUjlmWEpIdlRiLzhEdDB6U2o4UEFJUXBNQWpHdkVvOWZ4Q2lmbkdRCmVML2JiM1Y4RDYxOTZTQ1JXdUNZVU51cDVad0JhcStzdU5HTGVTYVQrWEp5ZGFkbklVT2R4UmlacHdtNDAvWCsKdFYwdXdRRUNnWUVBd3BuTVd4anB5TXh3QUwwc08xVjVxNWtpWlpMYXdzRW5NRTFLMThYcVVEM1pycXRzNndoVwp4T0ljQ2g4OU1Ibmt1UDZQeU5qQUEvZWJodS9kd2lsajc4RTNrazExa3BSVWdOODBOUHlCYjVVVEdUb2FBbEtVClNDMWJHQ2NaMnZrWmxTVFNKSjRrUlV3dTFGcHJsOFpRVXA2TmprakRHdTlpbHViRnZNV3FHd2tDZ1lFQTQ2MkoKcWdRekkvaXNXamxiSXpsM1B5bkRpckJ4R0VCZmU2RGptbkJKejBjNXdaSDRKWnorYlZxR3BNR3I1SXRyUDNpVwp1TCs1QVdIM3ZzYXIzU3FQeDJXVFNSdE5wbDBOVXNCcGErcHNiWTQ0RWFiUjZYeVVkbFB0SXlmMWVBUXdQTVZlCldSdERFUUR6NEViMG9yZnROYTU0azdSZldXQzdzcUc2VFo2U2IzRUNnWUVBa0lGWXlRVDFCZEVhRXRKbk9DQSsKMjNnNW5LZXlueENEbzFDaUZSeTQ1S0VwTnBYQnFiNWxnSXBQUEF6NmlUYmE2NnpNNU41ZnFCS0VnVzA1aFdicQorU3pIc1hLbnJoTkx0TzhLZTVaT0g2ZlpxTkFHWkZjaUdYN2t1RWpBNEdROTVReVVwL0J2Q3E2Sno5TGROclZqCkRCY0ZFdlZoUEcwckR0ZUxXcVNGcnRFQ2dZRUF6M0Fxa0hRWklEb08xbm1SbHV0aHdYUE16SXpyemZ2QXcwUVkKZTNxNVZSaUEvK045NHM5Q1pPSG84UzNmN25BMGUvVGo1bG9RTnJsSzMwL21BTEVwcExQZ1dPaCtmQWdsL25KKwoycXNRdFZTeHN5dDU3N0RwRjFKcUtmRGJUc2tLSmlSeFRPQnczNG90cVBjZEp6QksrUEVJdlJMSEdRandtdFdOCmgvRGxYSkVDZ1lCL1ZqRk1QQnRSaS9LdEFYSHJEa2M1UW5jKzF5akE4R3A2YzgrNVVsbzBIaTR1WHk1WndiTmUKU2RZMCt2YkJVRHB0ZkpsSnJIWEt4UjBweHJmcklQeTlUQUJocFkvemlDdHdQUVBlc0F2MmkrQ05MSmZxamZvTgpGRVFqTTRDaGNTWjgrU3pVNk5wdzliVUdVYkRTSnlFaEFiWHNLR1UxR0RBRjZqbkg4Nkl1c0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWjJHN25oZlBDQXZHN01UOEZ6TjdrekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEUzV2hjTk1qWXhNVEl4TWpFMQpOVEUzV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREFUQlNvbE4zY1l0UUJxdG1BYXdkM2xLNmplNVJCYW85SzMrYThwTWcrUXlvaTNnSC8KRHA5SC9aYW1MVXpsTElsS29iYTJXbXN0Z1BTLzhld3UzWlNLczNLY3lmUkphWDRQWUZUMFByd1N5YzFIN1ZGSgo1VkNOcHZjNXNSR24yRWFCaDluc2lTOHdiTDl1MkxtNFRUK05UaEkvYUZRc0k0RVFZQVV2OFk0NUJQZW5LV2hQClZQdWY5a1JDeUpjaW5XeTJRczJCS084SWZ2RUovQ2hJaGRQM1UzNFN4VUxGK1JTNURZMmpScTJYU0hGZFdkWTYKek1tUk9zN0xuN2JQUUM2bFdqYXhLNE9tM2IrMTNpWm4rL0E0SlE4d0RWaUwyaUs4cEYzWkpyN1Z2T1VjNzB4VQpMU096YjdVUUc0aUhFT2NocXZXRTJHbjF4cDdmL3pBMnRGTlBBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUrKzlGOEl4VGFEKzMzTHBTR1JVeEZFU3NBdzB3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMejRyVTY1SC9abENaMnZYd3EwMGJteEt3TUxFbUhMTWdBVVJTZVN2QmREQjI2L0hBc09iMXZWCjF1d0k5a25UNDR6WTYzNXNnZkc5NTlERUttQVpITU5iR0JLZGUzTlhUUWx1RFJMblhCVVZmeDJVY2lUczlFUDgKblREZmpDY2IzcFNLeU1DaGhOK2RZZ3R6b0NsL2owSitzL3N5ejRZTm43UU9KR2RZSnN3N0w2RXFUYUNzUlc5Vwo0eEYyVXhTMWx5U0xZaGdkL3JaU2FKZ2dpS2dJbzJsc1NEL2VmdTd5R1dyZXEwT3dRTjViVUQrTnptYWxhMDNCCnlnQ05Qd0ZUWWJSaGtHQ1h1bW5pKzg0dW5TWXNlaHRPRzBFdHF6QmVmcnpHcWZINW5Cbm8wb0JBclZNbHdlWkwKT2wyWTE1RkVUU0FjWGprV25mMFd2eUhKalJjNnZSYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURxRENDQXBDZ0F3SUJBZ0lSQU4yT0laWFpBd2MrZ08wODdWc285TEV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4TjFvWERUSTJNVEV5TVRJeApOVFV4TjFvd0tqRW9NQ1lHQTFVRUF4TWZZMngxYzNSbGNtMWxjMmd0WVhCcGMyVnlkbVZ5TG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUtuZk9TM3pzL0thNUVTVGZXdzQKUk5FOTRSN1llRGsvNUFDRzFHbU42Z1RoTENkUFBDL0V3WGNUM0hET3ExNW1JaFJER3FTdlgrT2pkNlFCdDF6VQo0VkN5ZVBZbzJSbnhyc29yNVNPdTFDKzJ6U2lveHcrd0FBc1M0b0J5TS9jMCtWbG5rbkhmcUJJS05zeVo1SjdYCkV1VUtDYmgxQmYvM1llNGdzRGtjTkl4aFlTSDIyVUVHaVFTNWxzb1FQMDhVeWJwdm0xZGpvNVYxMi83d21BNkoKNG1RbXozYWZ6ZlBYc3FXLzRxRStLWW9ST1Bybkh0TnRNa0RGK1E1d1QrMUtvZFlrckxBV2pLbERiS09yODJqWApKOEVCVHAvK0g3MHIxeFhLWGc2QW83YTZyTjVUNFpXWjc3R1hYUWFsdllKNlM3YzVGNFhzekVUMVpLbVkzbkZZCld3OENBd0VBQWFPQjNqQ0IyekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVSsrOUY4SXhUYUQrMwozTHBTR1JVeEZFU3NBdzB3ZXdZRFZSMFJCSFF3Y29JZlkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnlMbU5wCmJHbDFiUzVwYjRJUUtpNXRaWE5vTG1OcGJHbDFiUzVwYjRJbFkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnkKTG10MVltVXRjM2x6ZEdWdExuTjJZNGNFZndBQUFZY1FBQUFBQUFBQUFBQUFBQUFBQUFBQUFUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBZkp6anliUkRPZXVLTVJDdlVVL3J2TURWS2FCeVBMTGRmQjBjY2s0SUh6UGhvN0ppCnJ4NFBaSmJnQjBJTHpkQU1RMXl1Ym84andpcy9VZ2JBKy9kNFE5VUJWL3ZObjJoSnN2Z0c2U3crb3M3anRwQjUKNHUwZWNocVZ2U0lrVnFUTEJFalBZUE0xajFIczA2bkwvVWc1eTBuSVpWbXp3MUNnM2djbkd1Q29tVEowNVRSTwprcG1sN3V6b1lqckxmazRTWUNUN1FteWtkYnVwZmdCRVhhckpoRHd5L0xLNWh0cThmMlZGMmJ5Wll5R2V1NWVsCjFZMUg0R1hqanBVTDVoMVpwN1ZTZy8xb1BPVFQvSVBqR3A3b0E1SEQwcHhpWDNGcVMyQmtQYitzd25HeHhnanUKR3hvTE5ORW4wUnpsSzNLOXppcUtYclkxYzAySGUxL0RqZUJ1Y2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcWQ4NUxmT3o4cHJrUkpOOWJEaEUwVDNoSHRoNE9UL2tBSWJVYVkzcUJPRXNKMDg4Ckw4VEJkeFBjY002clhtWWlGRU1hcEs5ZjQ2TjNwQUczWE5UaFVMSjQ5aWpaR2ZHdXlpdmxJNjdVTDdiTktLakgKRDdBQUN4TGlnSEl6OXpUNVdXZVNjZCtvRWdvMnpKbmtudGNTNVFvSnVIVUYvL2RoN2lDd09SdzBqR0ZoSWZiWgpRUWFKQkxtV3loQS9UeFRKdW0rYlYyT2psWFhiL3ZDWURvbmlaQ2JQZHAvTjg5ZXlwYi9pb1Q0cGloRTQrdWNlCjAyMHlRTVg1RG5CUDdVcWgxaVNzc0JhTXFVTnNvNnZ6YU5jbndRRk9uLzRmdlN2WEZjcGVEb0NqdHJxczNsUGgKbFpudnNaZGRCcVc5Z25wTHR6a1hoZXpNUlBWa3FaamVjVmhiRHdJREFRQUJBb0lCQUY3dlE3TnNxVHFDV2VRQgpVV3p6blhJYTFQODZGeVpYa0lMQzExOE9VcVRiZXFPVllwdUhxRjkyR0JKclRkWjUyYjNkS3J5eXpqSVlIenJuClFxUjh6RmNmQnY3N0lTbWdxZ0NPdTRaUHBJSHQ5WVl0bk9JbGlFQ29Fekdab1hVY2crWDFQaUNwei9JVkJ6OGQKR21teTVQcGZ1OEw4azVmVGwwVlB1MnlQV01iQ2xCLzczSm1vc2h6L0VBNmI5bVdXQWh0NXc4Wkg0aXdRZWp1cApTYnZXS1JLbERtcFRSczdaZk9tNUQ0SThRWWFpR3dEKyt3N2x1V1RuMjhuZmMwRHFpaWlMV24za0t2RWZLL0lFCkUvNkE2ampRTmpQK1FhcUtqUjZPZ2FhcXZuSk5KUDVxenA0ZGorSHI5ejBCL3ZKa1B6VjRJUWY0QU81dnBnN3IKKzc4UFlURUNnWUVBeWFaTFhIajErUDRxZjdhYjh0YUdlV2lLRUpLamorbXQ3MHl1L3ZacUx0ejVoaklDa3RLUgorZFNLL1lJZlRyOXUzRWJLaVp5N2NwRXBKK3ZHRnBrOU40UlJPKzdodVUyM2NQY2c4SStldUlRcVJPVFBRYmQ5CkxpRWJveGljck9QbG1jVHlMdUxpa3A5bFUrdUVWcGFRNXE4WUd5V2tZbXNUblpFTXptd0pvSjBDZ1lFQTE2aEsKbUF0UExVQk1iaVB2Z1ByUGl1Vm55bnd6Y1lxVGNkL214NTk0ZWZoa24wazNLVTVCVWZiV3NlZ3JrRGg0alpTMgo4SzRWcndFazVpWGZHV0lvcHpTSGNVNGdIZDhUWkQ1ZmpNYlJTcFlVYldNVlZHdUJPdXNSU0NSQnJDcnE4V0p3Cklab25WaVFha2dueEJVS3pLSXZHYVZmREtIUWZySVIrWm5senpKc0NnWUJoSWxLdzg2K0F4bVlRYVJWTDc1eU4KUlJja2pvNXRWMklxb0dTM2VsbUJ3MzRLNzNJZjZZRFp1RkZQZG12QVVpU0R4VEh4QWVlbGMxbEEycWpyMzlzRwpNQjIxWWdlbmJGRk9BQzBFMUJuZnhnSmFkMkdDeFhGdVZCSnRDUUVIb3l2SlczNVJxWWI4bS8yQ1pETzJSZ2I4CnFDRlRpbGxaOHp4YXJURmZDZG5GWFFLQmdRRE00VzlzbjJIclJhalhBb0RwY2w1MlFKZW9nUEtHcmZhQ093c1AKSDJ2ZnhLSWp5ZlVENHZxZm1maENNS1lpYitQbjdoOFc3T3hneEo5L252OGpLR1FpNWY2L0lFL1cwVFdsQ0xUUwpFNWlHV2FxeWVXMnNOQzRrQVdyN3RLWkhvTVp2Nk90S29SODU4VGJsQTFqZGZJNmt1SllaUW0yQUkwSnNMYnZBCk15WldmUUtCZ1FDbHdQeHBGdmNJbUE5RVN5NTZiWWtCeFBnU2tMN09zeXlxQnJ2M0MvcngwdEpneUFYT09ETm8KYkE2L2s4a0cvQXFISTJiODJ5QXpJQkUvVzdsamEydUxEdm1nZ0YveVRnS0RTRVJwL2VFWG5ZNGJvOFFVUFdvOApKUWtaMHRwWDBGRDNWS21pVGE0aFMzdzl2dktDdHNVSTlxZkx1bjVKR3Rwbi9XaEIwZUk3QUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWjJHN25oZlBDQXZHN01UOEZ6TjdrekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEUzV2hjTk1qWXhNVEl4TWpFMQpOVEUzV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREFUQlNvbE4zY1l0UUJxdG1BYXdkM2xLNmplNVJCYW85SzMrYThwTWcrUXlvaTNnSC8KRHA5SC9aYW1MVXpsTElsS29iYTJXbXN0Z1BTLzhld3UzWlNLczNLY3lmUkphWDRQWUZUMFByd1N5YzFIN1ZGSgo1VkNOcHZjNXNSR24yRWFCaDluc2lTOHdiTDl1MkxtNFRUK05UaEkvYUZRc0k0RVFZQVV2OFk0NUJQZW5LV2hQClZQdWY5a1JDeUpjaW5XeTJRczJCS084SWZ2RUovQ2hJaGRQM1UzNFN4VUxGK1JTNURZMmpScTJYU0hGZFdkWTYKek1tUk9zN0xuN2JQUUM2bFdqYXhLNE9tM2IrMTNpWm4rL0E0SlE4d0RWaUwyaUs4cEYzWkpyN1Z2T1VjNzB4VQpMU096YjdVUUc0aUhFT2NocXZXRTJHbjF4cDdmL3pBMnRGTlBBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUrKzlGOEl4VGFEKzMzTHBTR1JVeEZFU3NBdzB3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMejRyVTY1SC9abENaMnZYd3EwMGJteEt3TUxFbUhMTWdBVVJTZVN2QmREQjI2L0hBc09iMXZWCjF1d0k5a25UNDR6WTYzNXNnZkc5NTlERUttQVpITU5iR0JLZGUzTlhUUWx1RFJMblhCVVZmeDJVY2lUczlFUDgKblREZmpDY2IzcFNLeU1DaGhOK2RZZ3R6b0NsL2owSitzL3N5ejRZTm43UU9KR2RZSnN3N0w2RXFUYUNzUlc5Vwo0eEYyVXhTMWx5U0xZaGdkL3JaU2FKZ2dpS2dJbzJsc1NEL2VmdTd5R1dyZXEwT3dRTjViVUQrTnptYWxhMDNCCnlnQ05Qd0ZUWWJSaGtHQ1h1bW5pKzg0dW5TWXNlaHRPRzBFdHF6QmVmcnpHcWZINW5Cbm8wb0JBclZNbHdlWkwKT2wyWTE1RkVUU0FjWGprV25mMFd2eUhKalJjNnZSYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRUitZZHdXNGJXekVoYTA5dzk1S2xHakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEUzV2hjTk1qWXhNVEl4TWpFMQpOVEUzV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEWW45bnRVNEdaOFlScE1lcDlDS1E0MXdGWm13NXUKQnVjN3dicjQyNWYrajFuYi9JNDhjK1VYQzJOaXJPQmg1Y2NOamNkOW1oL29uOEJDSHZkNjdJZWMzRWxEUTE1ZQpaTm8vZC9GMUFFVmN4RGtxcFprNWtlNWcwTzVXczNRRGhjNjI1WVlGVVV5WFhSeWQ2YVBVUWJTMm9aeHNyRW5jCnFzdDE5YTQ0aURSSCtPNXRaMFRHeU9TSHpIeG5KZ3hmT0VLdEdCbjE2dFNDV21kYitmeGFYVXZqaWw3M0wwcGkKaHM1RGQrYk5oQTcxSEYvbE91SUJ3cm5IY0ZsemhURWJoZ21RQ0dQQlFpSUpJbWttTHBvWVdsOHRaeGRqRk5IZQpGUUR6VEJQT3ZKUDFROFlGa3ZBQXp3T2ZmQkNCY0ZtL1VBK2FhbDlLK0c5U05ZOUZJREVhaEJ4bkFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZQdnZSZkNNVTJnL3Q5eTZVaGtWTVJSRQpyQU1OTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFoL3NVTFJQb0VTNG41VXhZWGNtY2hzUWg2dnJjT1Jad0tMV1VhdW9tc3dYSC9UNzUKN1d0R0xkQ1FsQy9jVDJNcEtaRFNDMzZmVkdtK1l6V1pJTnp5Qnd4VG81bDAzaWpRVVhISUp3WFNKcmgzN3dKdAo5VzFPallTd1VQT2lRZW9qNlpSbDlTZWhSUUlpS1RCYmt1S2hVZW1QZTB5SWh0R1NwRUlKOTVoU3dScGttRGpxCngwVExyemtobkMvYVd4bkxvcW5ZUEYxdFU5eDZRdXNEZWYydzVMSmlXVjgzTGZsTEJvaTVRZFgvTVVNamZBb0EKdWZiRUd6WnB5RWxIRzJscGxiSjVoYXFSU3ZBWk5JODVyVXoxazZOTnNnaW1MdUpnZ2VEN1NDL2ZidVBqOWV1bwpISmlBclp3dmpWeTJWcktyVkI1Uzk4ZDJBMFNBZG5oLzhOdElmdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMkovWjdWT0JtZkdFYVRIcWZRaWtPTmNCV1pzT2JnYm5POEc2K051WC9vOVoyL3lPClBIUGxGd3RqWXF6Z1llWEhEWTNIZlpvZjZKL0FRaDczZXV5SG5OeEpRME5lWG1UYVAzZnhkUUJGWE1RNUtxV1oKT1pIdVlORHVWck4wQTRYT3R1V0dCVkZNbDEwY25lbWoxRUcwdHFHY2JLeEozS3JMZGZXdU9JZzBSL2p1YldkRQp4c2praDh4OFp5WU1YemhDclJnWjllclVnbHBuVy9uOFdsMUw0NHBlOXk5S1lvYk9RM2ZtellRTzlSeGY1VHJpCkFjSzV4M0JaYzRVeEc0WUprQWhqd1VJaUNTSnBKaTZhR0ZwZkxXY1hZeFRSM2hVQTgwd1R6cnlUOVVQR0JaTHcKQU04RG4zd1FnWEJadjFBUG1tcGZTdmh2VWpXUFJTQXhHb1FjWndJREFRQUJBb0lCQUcvblM4MjBxS3VjdnhrVQpoeHltSFNlYnNmL1hBTUpINEtYVzh6NWhPZ2h2aHkwRUwzbjlLS2daNHZKemVjbzR4L1l4ZW85ZzBnRDZuWGZLCnhXK0R4cDU2a1lJa3lCZ2RJejFNT2JpR05rNndzeE5iem1hV0F6MlNVTDBMSVBBODdFZEJGRldrNU5zQVo2c1AKcWVrWk5FQndCZjJCbHZwZVpKS0FJc3JqV1phZmh5WG45TGZpWHZVRm0yQUhBWllkS2NqeFJaOEQyY1RqbkhPKwo0WmV2T3prTnM2alZpSWd1YUM0cHBjRGxSRUE4S01XVy9BVFJTYXIycFJ4dWtNUlJkWWNGNlc5SXE1dDJaeG5PCnlaUWxkOEc0dWdwVzJjbVFVTWhkbElYK3JUV2o2STBwdHd6MkhjdzZxdFAvYm9hZGxpVk1RdUhRRyswNWR5UFUKK0FtRDVHRUNnWUVBNUFtckEzZS90REdlcDkyY01GV3ZheDRJQUdVdzJFSnY1SEpwWTdyRHY2bHdOcitsNnlWYgpaKzZGalQyY3V2Nmw1OGZ0cGhKcUZSYnRyVnBUZWEyWVdVU1RNYjdTZ2NNYlFNWVliYk82elBDckNDYjl4RzRyCjNRTDBJMXBsTm1CNFlDcElkS29oaEFobytJWnJQWERibjBhSHR0SDExMW84enhNaC8zNDFBMWNDZ1lFQTh5L28KTHdLKzRhOVJ0UkdDYUJuWTBKM094VHBjZU5DYkJVZStKeExCOVQyN2VzOFVFTEs1T3lhREJ4a2VDd1RvOWRKRwoyUFJON0w0ZWVzMnB5Vi9GZGpleUk0eldHRTVyM0JHc1RMZzdkS0hGRlJaQ2gvU2gxc0IzeUVLSDlubkF6WE5vCkp2SUNFZUFhQVMxWFFha2tGeU9HaG9VeEtRbGNUQmxQbExlMGxYRUNnWUE1VjdVSlNqT0t2RytKQnRFZjFtd20KSTRjZmtsS1dEeDdUODNGTkFzbjJpRVVQZjJIWm42czhsMTQrQmlCRFpZV1NvMU8vVHlJZDY0WVk4WDNNT3pyMApONnBMK0JBM1VUaXBNU2N6YnQ2cWFscVgwalkrRHZZNHZXVm0vblExR0UwczRYVVc0VEZNWWxFRExjb0p5VGR3CjlldHFyYUdFWmN5a3hjcm0xSFhBUVFLQmdGL1YrbGRFYXJyLzMyQlBCU2hIUDFWL1N6UVllc2ExMXRHdTR6WDgKdzJrRktmUU0xV2g3Tmxva0pERFE2akVIZjFNWXlnakh4a25NNXJBWWlwZXNZV0hrTXhTbGROM2hVY3BKUUxCLwpUaGI1aFhSNDhFRXAyL21Jb2V2T3BFd3kwUk5tTHA1aWN3UmVYNEVsUUNURkprN2tGaWkvSm85NGUrSVZlM0l0CkwwSlJBb0dCQU1LR3ZFMFBEN21UL1BheEpNd05DcldsaWdMY1JVcWlqWVByMmc1bTJKVlNLYUxObzA1cEx0ekwKc0JpTkhKMXdFdEVuOWF0TVlWenI0VGgyUlROV2JrWWR3SUM3ZzdrUzI3emo1ajF2Q0dHOG1EYWhMU2x4aXFmNgpRRFNidlFOYTBTdjY1NGRpSlY0NHk5bmxTU3gvTE9QcEZSVnZtYUwxTVc5b2NXUk5WKzVkCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWjJHN25oZlBDQXZHN01UOEZ6TjdrekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEUzV2hjTk1qWXhNVEl4TWpFMQpOVEUzV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREFUQlNvbE4zY1l0UUJxdG1BYXdkM2xLNmplNVJCYW85SzMrYThwTWcrUXlvaTNnSC8KRHA5SC9aYW1MVXpsTElsS29iYTJXbXN0Z1BTLzhld3UzWlNLczNLY3lmUkphWDRQWUZUMFByd1N5YzFIN1ZGSgo1VkNOcHZjNXNSR24yRWFCaDluc2lTOHdiTDl1MkxtNFRUK05UaEkvYUZRc0k0RVFZQVV2OFk0NUJQZW5LV2hQClZQdWY5a1JDeUpjaW5XeTJRczJCS084SWZ2RUovQ2hJaGRQM1UzNFN4VUxGK1JTNURZMmpScTJYU0hGZFdkWTYKek1tUk9zN0xuN2JQUUM2bFdqYXhLNE9tM2IrMTNpWm4rL0E0SlE4d0RWaUwyaUs4cEYzWkpyN1Z2T1VjNzB4VQpMU096YjdVUUc0aUhFT2NocXZXRTJHbjF4cDdmL3pBMnRGTlBBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUrKzlGOEl4VGFEKzMzTHBTR1JVeEZFU3NBdzB3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMejRyVTY1SC9abENaMnZYd3EwMGJteEt3TUxFbUhMTWdBVVJTZVN2QmREQjI2L0hBc09iMXZWCjF1d0k5a25UNDR6WTYzNXNnZkc5NTlERUttQVpITU5iR0JLZGUzTlhUUWx1RFJMblhCVVZmeDJVY2lUczlFUDgKblREZmpDY2IzcFNLeU1DaGhOK2RZZ3R6b0NsL2owSitzL3N5ejRZTm43UU9KR2RZSnN3N0w2RXFUYUNzUlc5Vwo0eEYyVXhTMWx5U0xZaGdkL3JaU2FKZ2dpS2dJbzJsc1NEL2VmdTd5R1dyZXEwT3dRTjViVUQrTnptYWxhMDNCCnlnQ05Qd0ZUWWJSaGtHQ1h1bW5pKzg0dW5TWXNlaHRPRzBFdHF6QmVmcnpHcWZINW5Cbm8wb0JBclZNbHdlWkwKT2wyWTE1RkVUU0FjWGprV25mMFd2eUhKalJjNnZSYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUakNDQWphZ0F3SUJBZ0lRVDFmdkRBRmw4QkoyQnFveTRVQ3psREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEUzV2hjTk1qWXhNVEl4TWpFMQpOVEUzV2pBbU1TUXdJZ1lEVlFRRERCc3FMbU14TkM1b2RXSmliR1V0WjNKd1l5NWphV3hwZFcwdWFXOHdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQy9WZTdzUXRESE90THZzUUNBbFFIMXhha1kKWjVzUlo5N1p3S1NRMmMvUm0vVGs2bGRJeVhKanhpRHdIYjJRS3BZWmdSR0s1c0FVbE53QnBHV1ZzVms4UmdnZApBRFo5b1pVTEEwTWx1ZG5aeWk4ejBhWGlLVVY0amt0enRkVnBVaXUyTncxR3lzRW9ZdkNOcGpuYmtEaTJzd1RMClJBcUJMMEdtL2wyRFRCYWxMR1BpSjNqdFQ3aVhCd002cHJaSWhOUkplTmNZUTV5alp6ZTNxdXpKbFpFT0ZTN3QKaDZ0S29RR0d2bC9TYXpUUVlXL2ROQytHUTBrTUpZajhERWdvZE8xd1VYVFdNWmZnbzJIQXo2WDdFbGdubGlUbwpjV0RzRUh2L0hYVG1WUzY2NUlFRVgwK3g3QUxyS0xKdHZTdForMU5aVC9BZHcwQXNOVi9vWHdLMHVYOHZBZ01CCkFBR2pnWWt3Z1lZd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGUHZ2UmZDTVUyZy90OXk2VWhrVgpNUlJFckFNTk1DWUdBMVVkRVFRZk1CMkNHeW91WXpFMExtaDFZbUpzWlMxbmNuQmpMbU5wYkdsMWJTNXBiekFOCkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVM3UTU0ZVV4OVNMNVlieUpOdk8zb3docGFXLzBBRjFwU1hxVis1OTcKbVRhV3lMS3JNY0h0dlpEUDFZdW5DcW5mZHlwZzZTTWQwWlR4RE5nclV6c245MzVwM3pCU1B2Z2RlaEcyT1I5RgpOK0NyNFozT1BVRmdPN2FVald0Z3ZrMDJwMHZlTlYrR0Nuc1RJVWhMV0xKTHRpamdpOHZkRGxweHZUL0NsV0N3CldjR2l0S2Zob0xaNlljN2E0TGxEZm9pbW8yNDZ6ZWg3aVpDcS91V00zd01Ha3NVbHpseU5ISTl3T29qdkhtYlcKZVZMUUdhWkxVaURJZjAyd09EZDVOUFBwOUlzVzk2TDM4UVlwQ0I1NVFEVzI2MFdxcm85T2JpRGIwMVZwTnhVWAo0c2xFQ09EYVRwaTd2THFJdTFxRUgwdjJYQm1xZ3QrT1BBbGZCTVFBeDNzQ0V3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdjFYdTdFTFF4enJTNzdFQWdKVUI5Y1dwR0dlYkVXZmUyY0Nra05uUDBadjA1T3BYClNNbHlZOFlnOEIyOWtDcVdHWUVSaXViQUZKVGNBYVJsbGJGWlBFWUlIUUEyZmFHVkN3TkRKYm5aMmNvdk05R2wKNGlsRmVJNUxjN1hWYVZJcnRqY05Sc3JCS0dMd2phWTUyNUE0dHJNRXkwUUtnUzlCcHY1ZGcwd1dwU3hqNGlkNAo3VSs0bHdjRE9xYTJTSVRVU1hqWEdFT2NvMmMzdDZyc3laV1JEaFV1N1llclNxRUJocjVmMG1zMDBHRnYzVFF2CmhrTkpEQ1dJL0F4SUtIVHRjRkYwMWpHWDRLTmh3TStsK3hKWUo1WWs2SEZnN0JCNy94MTA1bFV1dXVTQkJGOVAKc2V3QzZ5aXliYjByV2Z0VFdVL3dIY05BTERWZjZGOEN0TGwvTHdJREFRQUJBb0lCQUV5ZDJZMkw5OVEvanVYaQpSK1ExUnRLbXN0Nk41ajlqQzQ3QW9HVk1ndlpaY0FnV2Vwc3Y1M2xpaGlBQW1MN1kvci81dWcrWDlRU0kwMHhwCkN6Q1ZFcm1iQlhhdmRpSjZpSmNmV0UwTURkc3pKaEdtK3JrRWM4Z2htcjhiNmZoQnFqVk4rQ2dIMnE4VVoyVWgKVWZ2RTFhRDdNSWxBbHNCQ0x4VHl1SGx5QjROZUFLQjFTb1lVMS9LUTJHMVA0QXRKb2xUMW5maDNNeFREbHk4Rgo3ci92UGwySm9MY3F0clhqU0hpYzlOa1kvRDJSUmc1b1ZiakxTcHRxVEcwaG1IS3RZY0tDdVU4b3ExQ21CTStICnlTaC9NY3ZjVGtvQ0hsRzVoT1ZUYkUva3BCcCtvU0JwUzZUbGNQa3FVUjczUVc4YTRBWDA2QmgzOEFISjBCdkoKcWYxdnNURUNnWUVBMFd5Snh5V25yRXFDYmRXSVUwVHcwU0lwWS94N0ZWNnpFVzBLdXZVVmg1bmZrM1B0czByZwpQQWJ5QkpQaThWTWFidWtHUlcxT3pUNTFwTjBzVURDZmRaMHN5YVh5ZUY2UkVYMXM2am1yNzcwbGsrbThjMzgxClJBWEtlZi9GR01JTkR2N2E0QUhOWnAxRldaWHl0aTNwVDJHMVd0MFA4T2NaK2ZiRFNiV2FXMGNDZ1lFQTZlT0wKc2xvUXZQeWxhTDZ5SE4xRGhKWXRITitwWlJqV3VNUXVkQ3BPRnFlUng1bEtpMzBPU25Oc3ZrdTdmbFgxc3hvNApUOTYxTi9oZHRQaDRKQVRaUWl4bGlBWGNnOTAvZzMyMGREV3REUFBZN3Zpc2wrOGdQU1ZFYU9BT2hTcnlIb1M4CjJVc2xHVkYwb0EweUdibTFydTlHRmJqaHFTS3hkY291VFp6YzROa0NnWUVBcTZ3WXFWcHh2NmQ0a2NhNE1PSlQKc213WmwvQVJpYXdPaUZ0bHIycFcwc2pOWU5kb1pGQWR6cmMyejQvWE9sSVFXaGpGWGtaRGtiWUF4RHZXSm9vbApQVW14dkQ4L3EzS0I0dDk1Vit3Y3lMSzV5aTJSb1BBSFh4S01MMFArY3RRbjFrSU9kQkNtS3RjRFVYTzgrYUJiCklBcU5tc1dhV3JWbk11UVlwQ1N0T3VNQ2dZQitRZGw5aytVSlFCRkNzLzZPV2x0Q1RaZFl5TncydU92Z25mYTkKdXNDZ3RpQ1o4UVF1dkhsa2MxNjJjMGRwY1puSzcxS0t1eHgwZEZ5UmZyZk1LZG5tUVBVbU1wUFJrelBnRlpHKwpVZU55NUllc3FRenlqNkdGb0lLSFlyd3o0dlVFeUg3eGhnRW00N1BqV253N0t1Y0s0aHVoU2taMitVVjI0b2VRCldpZGFNUUtCZ0I1clZtT2JsWmlETEpFSlZQc0RaUDk3dTZlOHRlUzV0ZE1KY2dXRTEzT2dRbE9NZ1JZbVFwVUcKM0xpY0RFWG9ScTd4Ny9GSkJob0RhMDhYMTdab1hxMFN2amdmU0hJclBTeUJiSTVhQi9TTzQyMDQ1bE5tejlacwpLWWpzdU1uTUFmRDJMMmRxaXQzdDNSeUhlVEd6dkNiQlR6S2xCOEJDWGtwRitYb1BteC9kCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: c14
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "114"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-wireguard: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "false"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  ipam-cilium-node-update-rate: "15s"
  cluster-pool-ipv4-cidr: "10.14.0.0/17"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  cnp-node-status-gc-interval: "0s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "true"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"

  external-envoy-proxy: "false"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: c14
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/clustermesh-apiserver/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumexternalworkloads/status
  - ciliumnodes
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumendpoints/status
  verbs:
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumexternalworkloads
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver-metrics
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/component: metrics
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: kvmesh-metrics
    port: 9964
    protocol: TCP
    targetPort: kvmesh-metrics
  selector:
    k8s-app: clustermesh-apiserver
---
# Source: cilium/templates/clustermesh-apiserver/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  type: NodePort
  selector:
    k8s-app: clustermesh-apiserver
  ports:
  - port: 2379
    nodePort: 32379
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.14.2@sha256:52f70250dea22e506959439a7c4ea31b10fe8375db62f5c27ab746e3a2af866d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/clustermesh-apiserver/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: clustermesh-apiserver
        k8s-app: clustermesh-apiserver
    spec:
      initContainers:
      - name: etcd-init
        image: "quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args:
        - |
          rm -rf /var/run/etcd/*;
          /usr/local/bin/etcd --data-dir=/var/run/etcd --name=clustermesh-apiserver --listen-client-urls=http://127.0.0.1:2379 --advertise-client-urls=http://127.0.0.1:2379 --initial-cluster-token=clustermesh-apiserver --initial-cluster-state=new --auto-compaction-retention=1 &

          # The following key needs to be created before that the cilium agents
          # have the possibility of connecting to etcd.
          etcdctl put cilium/.has-cluster-config true

          etcdctl user add root --no-password;
          etcdctl user grant-role root root;
          etcdctl user add admin-c14 --no-password;
          etcdctl user grant-role admin-c14 root;
          etcdctl user add externalworkload --no-password;
          etcdctl role add externalworkload;
          etcdctl role grant-permission externalworkload --from-key read '';
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/state/noderegister/v1/;
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/.initlock/;
          etcdctl user grant-role externalworkload externalworkload;
          etcdctl user add remote --no-password;
          etcdctl role add remote;
          etcdctl role grant-permission remote --from-key read '';
          etcdctl user grant-role remote remote;
          etcdctl auth enable;
          exit
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      containers:
      - name: etcd
        image: "quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/local/bin/etcd
        args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        # Surrounding the IPv4 address with brackets works in this case, since etcd
        # uses net.SplitHostPort() internally and it accepts the that format.
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=clustermesh-apiserver
        - --auto-compaction-retention=1
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - name: etcd
          containerPort: 2379
          protocol: TCP
        volumeMounts:
        - name: etcd-server-secrets
          mountPath: /var/lib/etcd-secrets
          readOnly: true
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      - name: apiserver
        image: "quay.io/cilium/clustermesh-apiserver:v1.14.2@sha256:0650beac6633a483261640b6539c9609f5a761f4ab4504fd1e6ffe7f2bb82e9a"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt
        - etcd.config=/var/lib/cilium/etcd-config.yaml
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: identity-allocation-mode
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: enable-k8s-endpoint-slice
              optional: true
        ports:
        - name: apiserv-metrics
          containerPort: 9962
          protocol: TCP
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: etcd-server-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-server-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-admin-client
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-admin-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-data-dir
        emptyDir: {}
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "clustermesh-apiserver"
      serviceAccountName: "clustermesh-apiserver"
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: clustermesh-apiserver
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.14.2@sha256:a89030b31f333e8fb1c10d2473250399a1a537c27d022cd8becc1a65d1bef1d6"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.12.0@sha256:1c876cfa1d5e35bc91e1025c9314f922041592a88b03313c22c1f97a5d2ba88f"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.12.0@sha256:8a79a1aad4fc9c2aa2b3e4379af0af872a89fcec9d99e117188190671c66fc2e"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.

# Only create the namespace if it's different from Ingress and Gateway API secret namespaces (if enabled).
