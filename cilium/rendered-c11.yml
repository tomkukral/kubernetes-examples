---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSFVYMnR6K1dtWEY4b1pDNElkVHdwekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOek15V2hjTk1qY3dOakV4TVRreQpOek15V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQytJdFBaUHRyUGExVmdnNmpCUUZWT0l0UzVoYjFLOVZOWnlFUzc4aC9CbVExZzdrREsKZW5qN0g4U2Y2TTI4Yi8yZm9OTjRGaGVHd2RLNnd6VU5Rd1E0NXpNRTd3Smg2c25uRXJ3MlhXdHJDZTFyY2ZGUQpVOGExMjN0elc4azBZaWU3YXFwSU43cWtTZVoyTlVZU0V6NkhnK1NlY1ZWUzNlRTFIU0M4YThKQnVuVm85TmZ4CnYrY3R4YkhkNnRpTGxUSzRsOVZIMGNMOGIvYnROb09JUU10bGhiQ1BOOVVXaFltWkVxY2VGbVFaMTFVTmk5a1gKK3NvSTZzbkZSV1NOUVJVVGhTWTdwc21jcXduaUFhUEVTOHhBV0t4ZWxGSnZzRXRKNjBoMmk4ZzEyVHQvaEhWQgpFZG8xQXAzYlprOGZVbU5nWWl6TUUwME9DMi9Yckx4NnlScC9BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVqNklsdTg5c2NYOFZVYWFlc2NRa1hrbHJCbW93RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFMklOeHpIOG1nMXRlRnpPeWhGY1ZGYXRoYkhyN3NhRnF4c2E3SE1VMkRDWjFQRW5XOW80UTJlCmFWOCtMSlJLNVdzSjZrQ1pFeFZlOVE0Q2xUT0ExWC9acFFuSWxNWUp0T0hockViZmZCVWp1Ym9tYlJvMHdWTU8KQ0syL29tYUlab1ZwRGViKzdFYkYxWTlLK0RiQmw3TFVtRzFEMURtNjdpcVJXSm1VaU5YRFVxL3NrQTNHejRBMAo4UVgxZ3VtQyt0QnFMOFdCS25PbS9ZczJmUlpkRjMvaG1kQ2ZWNWxyUTN2TXROM1I2Mk4yRzdtOXJ5RVlMSXpiCmw4OTlnSDZ2LytORXF2a3dOenF2TEZ3WU05YTgxdUd6ZEdFTGYxOFF2TnRmQnpVMGRvaW1pM1pGSkNlaWxKWXAKVnN2bjU0aHhRcktqUUFwOEcwOVpBOW1xQ2VtZmtUaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdmlMVDJUN2F6MnRWWUlPb3dVQlZUaUxVdVlXOVN2VlRXY2hFdS9JZndaa05ZTzVBCnlucDQreC9FbitqTnZHLzluNkRUZUJZWGhzSFN1c00xRFVNRU9PY3pCTzhDWWVySjV4SzhObDFyYXdudGEzSHgKVUZQR3RkdDdjMXZKTkdJbnUycXFTRGU2cEVubWRqVkdFaE0raDRQa25uRlZVdDNoTlIwZ3ZHdkNRYnAxYVBUWAo4Yi9uTGNXeDNlcllpNVV5dUpmVlI5SEMvRy8yN1RhRGlFRExaWVd3anpmVkZvV0ptUktuSGhaa0dkZFZEWXZaCkYvcktDT3JKeFVWa2pVRVZFNFVtTzZiSm5Lc0o0Z0dqeEV2TVFGaXNYcFJTYjdCTFNldElkb3ZJTmRrN2Y0UjEKUVJIYU5RS2QyMlpQSDFKallHSXN6Qk5ORGd0djE2eThlc2thZndJREFRQUJBb0lCQUNiY2tYWSt2WlJWZU03UQpPaWE5a25IMDlvdXd4UjdVQTZRL0phVlFlS01tT0RET29abUE3TWRQRis0ak5DSEd0Z3p4WHllVlJGdTdzK21PClNvS2FadnVHYmN3ZFdkeFBrOUxSNW53cUhmRnp4djRGL08rUkgvVTlsZjdmRE1IVEtoSEpYR0tFV1hhSTBEenEKNkpaN0xuV2VSSlVKendtdjVmN29KQysreXFhS0xuY2Z5MytZRy9OeDNwTElEanFNd1ovbGdsamwzTzd3UjBNbAp1YlcwOVB2Ty9US1R4djVQenpYTW80TnRURUxRcWN0em9CTUVKaE9LL09UMjhWekFZZWg3c0NsTWhyNncwbzdoCnl1VFc3ajRrTmQ3dklNRU9LUlJIc1NML3FwZmVyQU5KaDJ0Qk9TcGdQYUJLMTFLTWlLWWNmUXpiZkg4cUQ3RTMKOXpCN3hBRUNnWUVBNThxSDB0SkU2dlA2c1R0Tnk3UGEvMjR4Z3NpWmFpdHl5MHJ4STIvQUhWM2xPdmVzQUszNgprZWRJaWxFNytSQTlCK0dTR1hrRElGeHh6SUEzRE9vaVIyWE1CYlh5b0RMdXIrNHhNdFZ2Q3E3UEUrcjlqMnl0Ci9MYmhXSkl0aDZOKzFjVUdENHN0ZVgySXFTckIwbDU5S1lpdEk3Tk1UdjVOd2NUTUFQK3V4SDhDZ1lFQTBmNk4KWWhmd1Z0ZW9obGpCRTBwMFlkOUxzZk9mK1Nxak1HdzVQZ0x1bUxtT2I5M2xnblRDU1NMenhST2dpUGJSUmg0Tgo1cllINStneDlsVkk3cW0zL1U2cmN5NGo3UFY0RDVOZXpzd1ZJa0Mwc1NRVnF6YmNSYks2OE5xQ3BnWmt5OXlZCi9MY3BDYXZGdHRXc0FXc29oNWh0RHVHSTFhOXlMRGxnQzh4aXFnRUNnWUFEdDVqRUJjRTdMMXgyMlNlZk82d28KYW9ENnd2TEs1QlY4TXlCNDNBTHR0YUxHZGxCWTFuRnRRNU5EUEpoRW4wRUxUay9FZnM5UkJvcUFxQkc1OEV0SwpiOVI4eHZVMEluejNiMDkwckQyU28wa0kzYnpoUHZIdldwTjBreXVOd0U1NWFTWjJ1MW1vV0I0SDhIcVpRQkNyCnlOaFYrVHNoRFN6OERZYmtBVFd4U3dLQmdFSGxBODZWUG5peHdaTXV4SjllRExrdGpaNHdtYkZoWE1YMEg5NUMKbzBaUGE4L1VySkZNUEM4aEJhZUE2aTR3YlNqNGcxb3pJclgxMmIrM3NXUWE0NzViOGxiNVVwS24wRjNxMjZRKwp6QjdzZVFiaEVOK2lIbXJNay9iQ1NwNzRnS2FyK1dITHc5ZmlDKys4aXZZQy96dlZhOXR3a0RTbGtra29VK2cvCjRYSUJBb0dBRTlsREUydVVNRHVTNzFjaDBjZFBsMTBvV0F6dHh6Skk2NzN1TXdZS0UzWStkUmNTdVBFcHg0Q3UKNEE0MmxnSXFEbFphZzlIWk5UY05nSW82cHI5SGNvbWNvTFBHMVd1bWExSDNPTDF1MHJxQS9DRzJWa0x2NUhFUApENDdsRU9lUlIwZDhZcGtZbHc4Z2tmc09sWVpnMzhKZnBDQUx2MC96U0VNa1VNMGdyZjQ9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/admin-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSFVYMnR6K1dtWEY4b1pDNElkVHdwekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOek15V2hjTk1qY3dOakV4TVRreQpOek15V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQytJdFBaUHRyUGExVmdnNmpCUUZWT0l0UzVoYjFLOVZOWnlFUzc4aC9CbVExZzdrREsKZW5qN0g4U2Y2TTI4Yi8yZm9OTjRGaGVHd2RLNnd6VU5Rd1E0NXpNRTd3Smg2c25uRXJ3MlhXdHJDZTFyY2ZGUQpVOGExMjN0elc4azBZaWU3YXFwSU43cWtTZVoyTlVZU0V6NkhnK1NlY1ZWUzNlRTFIU0M4YThKQnVuVm85TmZ4CnYrY3R4YkhkNnRpTGxUSzRsOVZIMGNMOGIvYnROb09JUU10bGhiQ1BOOVVXaFltWkVxY2VGbVFaMTFVTmk5a1gKK3NvSTZzbkZSV1NOUVJVVGhTWTdwc21jcXduaUFhUEVTOHhBV0t4ZWxGSnZzRXRKNjBoMmk4ZzEyVHQvaEhWQgpFZG8xQXAzYlprOGZVbU5nWWl6TUUwME9DMi9Yckx4NnlScC9BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVqNklsdTg5c2NYOFZVYWFlc2NRa1hrbHJCbW93RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFMklOeHpIOG1nMXRlRnpPeWhGY1ZGYXRoYkhyN3NhRnF4c2E3SE1VMkRDWjFQRW5XOW80UTJlCmFWOCtMSlJLNVdzSjZrQ1pFeFZlOVE0Q2xUT0ExWC9acFFuSWxNWUp0T0hockViZmZCVWp1Ym9tYlJvMHdWTU8KQ0syL29tYUlab1ZwRGViKzdFYkYxWTlLK0RiQmw3TFVtRzFEMURtNjdpcVJXSm1VaU5YRFVxL3NrQTNHejRBMAo4UVgxZ3VtQyt0QnFMOFdCS25PbS9ZczJmUlpkRjMvaG1kQ2ZWNWxyUTN2TXROM1I2Mk4yRzdtOXJ5RVlMSXpiCmw4OTlnSDZ2LytORXF2a3dOenF2TEZ3WU05YTgxdUd6ZEdFTGYxOFF2TnRmQnpVMGRvaW1pM1pGSkNlaWxKWXAKVnN2bjU0aHhRcktqUUFwOEcwOVpBOW1xQ2VtZmtUaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLVENDQWhHZ0F3SUJBZ0lSQU9URHE3b251TVBCWDRmOVk1ejlsVEF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URTVNamN6TTFvWERUSTNNRFl4TVRFNQpNamN6TTFvd0ZERVNNQkFHQTFVRUF4TUpZV1J0YVc0dFl6RXhNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE0VWp0dXNRU2FkYkEvY0dsblcySFAvcDIyMWxFNmFLUjNvK1N4SmFjbG5KQXAyOVUKRDl4citYcUdVS2J6akxzRjlQRjMzZFZRY1Ivc1A1YkxVWUZNMENBT1UrU0x0NThJb0F2MDlVSDAycmtMejFlZQpBZkM1U09OMW15ejRhZjRZZDk5c3ZCcERXdWxVUkVpOGNHMS9MVTRiRkJWQUJQQjZBTm5LWGQwalU0QzMya0YwCjJuZENDYUlFY21MczB2MTJIRlM2bVRkZ24xaXlCVXAzTWQyVm5xb01JTlU4aVNVZ0haM1VPd094Um15Y3A5VisKeG1rRjJEUU5lS3Q4WGN0MXREaHJsS09aQVRydFozTitFRVpyak9pWkVQdWswTUhTTkFGVTJ3U1FsRjVla3crQwpSK0JqakxQY2JBRFNKKzg2dEM5czZPQjRWTFE2THlCelZVRU10UUlEQVFBQm8zWXdkREFPQmdOVkhROEJBZjhFCkJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUMKTUFBd0h3WURWUjBqQkJnd0ZvQVVqNklsdTg5c2NYOFZVYWFlc2NRa1hrbHJCbW93RkFZRFZSMFJCQTB3QzRJSgpiRzlqWVd4b2IzTjBNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJOcGFMdkw1MEtyeXU2YnBuRDJlMStCQVdCClZjN0N0WjNRZUxvWmt4NWZBZEtNZytNNGRqK0VteEYwMkRCYkRRdVBOZU9tcEM2QnNzMlZDWmxBR1E5dXRiTTYKUFNpUzZNMk9vVDl1SGVMMXYxMys5WktDNlVvQytEb0xORnpIRSs5aUF0N2VIWlFJZmtkL3o5RG4vbGFMOFFkRQpuakY2WGZxNjVlM2dWUjV4T1U1MnlZUEtiUXdTVEY3QXRwK3MwMHM4NU1uRjcwNUZQV3FzamdXWFIwNitGSlVnCmdXU2RYd3luU2tyN1VZcDg4R2p4VmlhYzdMSkNYNVhDOE53aUlETnVBRGlqL3ZnMTJ6bnU2S3pRczRudWxJYXQKcWp2RElsc3Y0Ym5ZNnh0bjIybDZUOVNWY3ZadEg2VmY1SU1lSmZiTWFpTTl5RHF0c2JDazZubi9zWVY5Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNFVqdHVzUVNhZGJBL2NHbG5XMkhQL3AyMjFsRTZhS1IzbytTeEphY2xuSkFwMjlVCkQ5eHIrWHFHVUtiempMc0Y5UEYzM2RWUWNSL3NQNWJMVVlGTTBDQU9VK1NMdDU4SW9BdjA5VUgwMnJrTHoxZWUKQWZDNVNPTjFteXo0YWY0WWQ5OXN2QnBEV3VsVVJFaThjRzEvTFU0YkZCVkFCUEI2QU5uS1hkMGpVNEMzMmtGMAoybmRDQ2FJRWNtTHMwdjEySEZTNm1UZGduMWl5QlVwM01kMlZucW9NSU5VOGlTVWdIWjNVT3dPeFJteWNwOVYrCnhta0YyRFFOZUt0OFhjdDF0RGhybEtPWkFUcnRaM04rRUVacmpPaVpFUHVrME1IU05BRlUyd1NRbEY1ZWt3K0MKUitCampMUGNiQURTSis4NnRDOXM2T0I0VkxRNkx5QnpWVUVNdFFJREFRQUJBb0lCQVFDR05nOUNlN3JJaU9MeQppZUhqVnJRRGZuQStud0Q1K3hyUnIxRHRneGlJWEVwK05VbXNKVkhDRDZkaTl3TVRMUHdRZjZZOFp1K0VaVk0yClV0eVBrdXN5OWxYeXpxNFoxMG1wSjFab29rRi82RXZMMjFQTHJpQ0Q5dFpDZXRrSE5CUlpuYVpHclpMQTMwNlAKVzVHL25NdnVMcURkSndlN3FaUFZXK28rWHhiRGtFWFU5TDljNmc5R3VTdWR6NURSdmlienV3NVNMWExya1Q3TApLeTFrWEFLdHpWZXVad3pCQ1oxQndsTjRiYW9qak9qcjFrdHozcjlhSzcyUVBiRHZRakI3Zml4cFRic0NNRW9GCnJBcm9XRjRaVFlBaThPekdEeE1xSUk1TldCQ0VCaFF1SkhZa3NLTnRJeCtWdUFwb1FCUXQ1QnhSZUVtVklQM3MKbENHOUZhc2hBb0dCQU9KeWwwV0FMaEV0V256K05QUG5KdkozMEZzOE83cXpvOEdFL3Nmb01qSmhXL284eUd1TAp6NVI4eGtwcFUvOG1pQkFWUFkwWXhxUGhaMnRBNFBsVmhWdnF3OWdXN2NFZnF6TnhxUUJaajI4TzJPY0dGRENICnNFR3BXZktUaytuaDQvbkNHS09HdHBVV2ZYZHFteHBsakNTY3VtMWlqTzl2MEVZTEtnalVuanROQW9HQkFQNnYKZmRVS1grQmJTaWY4WW1KRXZIanFseC8wNjUydHV1cTkwMVlRbStNUGRZdXZ1SzhoR3lYaUFjTmJkVnkwNzgzZQpIVHJ6UXF1b1JGN1c4Y0tZVUgwUFlWQUxQdjNKY3luTkM5QTZ2RklZTlovRnNpZkE4dXhDQVduY0JkK1hNT2piCmJNWWg2djlZUUNJaUNJbUp1NFFhWVNZc2Rkd1F1Q2p6elUxbTAxTUpBb0dCQUx2VnhiajIzRCtQV1ZINUl6OTEKN0E2UWFCcGwyajNDS1FHcktoUDBmVDdoRjRSNHl0NjZ1Rk01Tk5vZ2lIWkxKZTRCVUc4cnNBbmNQUWJ3YUMwcQpUVmF6WkFSbzhJcVRsRlUxNExQVGxuRE81Z2lzT0M4UlBwa1l1dTNHa0prZXNSWkpkRnFnc2U3MUd0bmxhZ2I1CldNZzk0VDQrMHgwQnFNZVJGeXNBQXNpNUFvR0FEeFFFdHlBdUhQSktxYU5majhIU0JyYWN5OStNTTRHZGwxZzEKc3RxNDMvQ0NYUXJDUEZ3UloyVENCZmJjTStqaWFhWEV4VUN4cWNnRWhEamxoMGZOUEJvMUFMQXB3b3l5ckw3ZQovQ3orQ1Q0MXJvZmR6RXk0RlJTelVMa2QvK2JMbG4ybkt2UEhIZWJ6cFJHdXY3WFB6RHBqbGdiNzAxT0tFNktiCmZRR2hjVUVDZ1lFQTRFMEVmTlVmM2dRVmo1dFVrdEVUcTVrY3ZqNGNodk1La0ZNaHVja2d6WjN3UTZ2TmR0M0oKM3FKaldDRkNsTytMYkgxaFk2blZBT2pobGUxUmlKb0VGNVF3RW9JZVRDK3p2N2R1NVhsU1JjVHIzYnZ3cFNrUApFdjJGYVVjenUxQXRxbmpOeXZhQXBDY293OXFmNVY5M0pRekxBM0xVdm4ra21qWU9ab08rVmdrPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/remote-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSFVYMnR6K1dtWEY4b1pDNElkVHdwekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOek15V2hjTk1qY3dOakV4TVRreQpOek15V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQytJdFBaUHRyUGExVmdnNmpCUUZWT0l0UzVoYjFLOVZOWnlFUzc4aC9CbVExZzdrREsKZW5qN0g4U2Y2TTI4Yi8yZm9OTjRGaGVHd2RLNnd6VU5Rd1E0NXpNRTd3Smg2c25uRXJ3MlhXdHJDZTFyY2ZGUQpVOGExMjN0elc4azBZaWU3YXFwSU43cWtTZVoyTlVZU0V6NkhnK1NlY1ZWUzNlRTFIU0M4YThKQnVuVm85TmZ4CnYrY3R4YkhkNnRpTGxUSzRsOVZIMGNMOGIvYnROb09JUU10bGhiQ1BOOVVXaFltWkVxY2VGbVFaMTFVTmk5a1gKK3NvSTZzbkZSV1NOUVJVVGhTWTdwc21jcXduaUFhUEVTOHhBV0t4ZWxGSnZzRXRKNjBoMmk4ZzEyVHQvaEhWQgpFZG8xQXAzYlprOGZVbU5nWWl6TUUwME9DMi9Yckx4NnlScC9BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVqNklsdTg5c2NYOFZVYWFlc2NRa1hrbHJCbW93RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFMklOeHpIOG1nMXRlRnpPeWhGY1ZGYXRoYkhyN3NhRnF4c2E3SE1VMkRDWjFQRW5XOW80UTJlCmFWOCtMSlJLNVdzSjZrQ1pFeFZlOVE0Q2xUT0ExWC9acFFuSWxNWUp0T0hockViZmZCVWp1Ym9tYlJvMHdWTU8KQ0syL29tYUlab1ZwRGViKzdFYkYxWTlLK0RiQmw3TFVtRzFEMURtNjdpcVJXSm1VaU5YRFVxL3NrQTNHejRBMAo4UVgxZ3VtQyt0QnFMOFdCS25PbS9ZczJmUlpkRjMvaG1kQ2ZWNWxyUTN2TXROM1I2Mk4yRzdtOXJ5RVlMSXpiCmw4OTlnSDZ2LytORXF2a3dOenF2TEZ3WU05YTgxdUd6ZEdFTGYxOFF2TnRmQnpVMGRvaW1pM1pGSkNlaWxKWXAKVnN2bjU0aHhRcktqUUFwOEcwOVpBOW1xQ2VtZmtUaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRS2FxaVFpZTVURTlUdkQvYWk4eFdTakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOek16V2hjTk1qY3dOakV4TVRreQpOek16V2pBUk1ROHdEUVlEVlFRREV3WnlaVzF2ZEdVd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFDNGN3WmI1NFJJcWZHZFhOSjBlQ1JCUk83dkMwVFhveU5sMnVsNEtxd0hxTGRQSlVGQ3N2alIKT2tGTHlGWUFGNnVpYVU5cFkwRmhUcG5ZMHFKTUlRcSs4RUZiQVpaVmFtOWE5YzhNSWVJUWRoRzFDYU1aQWhiNwpqa1JXaVhjQ1VoMG1PVENLNU1qWnRNRklJVGpjaTkzRVVELzNJeUxCT0FtOTJDVGQzMStDRGVnbG1WbzV6aWt5Cm8xbXBNekhzNVF1elhOajJaRkRWa3JUTXJUc1EveDRIOG9PeEw5bFM0NmMvTDVLRERLOUszS1ZLbGxWYmNyYzcKaFQyWVIrNVdtN3EwUVNTdytmQ1c5ZDEzRzhwQTVVK21EK0oySEtSa2RKaTV5MWF2M0JzWng4R2ZHK2pFWGc0SApVTnF4R2tGZm41aFc0aGdtb2dEaHpMd3ZFcVlDVlZlZEFnTUJBQUdqWURCZU1BNEdBMVVkRHdFQi93UUVBd0lGCm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWYKQmdOVkhTTUVHREFXZ0JTUG9pVzd6Mnh4ZnhWUnBwNnh4Q1JlU1dzR2FqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBai9SOUVsTjc4RTV1WmJJSjBjM2Q4ODhaNXJVbjZPMUZZckZkODRod1l0V3Y1UHNhb25hUytWeE93R3hPCi8rQ0JNWm9iR0M5dUhGWDdvVk9RNEtGcS9uSGM3UElvYW1qWHdodkJFd1Ezd0RPd3h0Um8rR2U0RHhzRytSMGoKYXFpNjdIeGM3dzFueTNyUFVvMXhJcllDbFYwUm9majUxbWd4SEdkVFJEcENtb1Y0bjgrbmtqQit4Y1lnTGIyRgpSN0JTSklRNitvRjBDWE5mZHl0Yk9zRDFSOEZQR2l2dnVwdmVTaG0wbWVkUk1XQ1R6NkVoQmtPUWVWd1FDYVIwClAvbFB4RUpHR1Y0RTJCYkMvTklVci9KcVo4V2lXWS9LdExQRFFVRjlzRnBEVnVXdXhhNG5ONElmbmgxSlJWVVkKelIwTHpWYUdWT3ZEVFFuK1dOTldOSHl2b0E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdUhNR1crZUVTS254blZ6U2RIZ2tRVVR1N3d0RTE2TWpaZHJwZUNxc0I2aTNUeVZCClFyTDQwVHBCUzhoV0FCZXJvbWxQYVdOQllVNloyTktpVENFS3Z2QkJXd0dXVldwdld2WFBEQ0hpRUhZUnRRbWoKR1FJVys0NUVWb2wzQWxJZEpqa3dpdVRJMmJUQlNDRTQzSXZkeEZBLzl5TWl3VGdKdmRnazNkOWZnZzNvSlpsYQpPYzRwTXFOWnFUTXg3T1VMczF6WTltUlExWkswekswN0VQOGVCL0tEc1MvWlV1T25QeStTZ3d5dlN0eWxTcFpWClczSzNPNFU5bUVmdVZwdTZ0RUVrc1Bud2x2WGRkeHZLUU9WUHBnL2lkaHlrWkhTWXVjdFdyOXdiR2NmQm54dm8KeEY0T0IxRGFzUnBCWDUrWVZ1SVlKcUlBNGN5OEx4S21BbFZYblFJREFRQUJBb0lCQUhZYTBQdVFKeGdRR1hIVgp1Ynh5SVdUWnF0VE50bXNOUHVFOVp6bFd1WWk5ODRKdUxIZDArZldmQTZodXd3S1VKWVo5UUNnUE1oSUlybUl6Cm5WQjU1OU9USzRZR1lpaVhXbTQzN3plcGlvTlgxc2JCUVBvR2FJank4N2NsbGxxYUVhZ2ovbjB4T1pxTkx5WHMKZitoWWRzdjVScndNZDNpWlZVT0dYelRpanRsS3p1cFUrY2liVnVpVHJQelNPaElxVFdIOFZNZUFnTERBU0J1dgpNdG82TVRoRFlyWE1IZXV5RzdjN0kyVnQxQUkwa29oYlJjcmQxMFhpL2xIVnlyaXM4UGg0SjRZVUZwRWp0WW50CnVRbElQK1BJaGVpZzlZTlJqcjdMM0hBaDU3cmRyMEMvSUdPWHBnS1hJTkl5Zlg5YXNvRzltVG5kb01xNG5NK0gKb2kvV3FkRUNnWUVBN2VmSGUzNjhSU3NKK1U3R0E3b05UYjZYY2JnVVhKVG4rbUQwMTg3WVFNZkdlT3lwMFFpRwpUeTAzdGRPVGhZSGlHQlpBOEhCdVUxbXpmemJ2WGRUdkdpRldsNjMyaUpaam1wekdUYVFsQ1I0aEZsM3dyOVZEClg5TzRLSTl2RlUvdkppZ3hlTXhLNXA2ZkhkK3VQUFcxa2ZpRy9HeGR6Q25OL2F5cVZIcnFUR3NDZ1lFQXhucHAKQ2ZZUkZxUEJYSXNqTFNXZFdlSGZwSkQ2WUNabmthdDhrREtzdGozVFpYWlNubzd2QnRwRUIxWWhiZ015c2g1bwo0TkZTLy91R2FmSGFaMGJYN2paSHBOejVJUTc2bkpHTU03cmhLWDRZcVJoWmM2U0FNdElNcTJmb3QyM3FhR0JuCkdYOGprUTR1U2MzUWpnZHRVZW9CMUFPSEg4RmhtVmd3aG52MzdoY0NnWUVBdVJvZ2hINnNINmtIL3BrQ3lqMkYKUWxzclhBaWNseGdva2cvRUVQRllJcmNOUG1MdEViM3ZPa1YxVmh5RGFGb1JQeXA1Wmxva0RPZjdGOXozU3V0MQpDY0NzcmlGbGN3cUgvdkZCL1lEY2JBYXNPY25uamZlQmoxcWNxN3BGOUxBWDQzbGNYSitmRzJhSmFPWHpuR3lVCjFEa3BWZGMrOTY0REh2K3NHMFR6YlhjQ2dZQiswdmROZ3l1V01OczhuRGZGQUhVVVd3MkI1WlhuWElMdmhRbWEKUnBjditEK2RaTWNVUkRjZVJOZ1ZiQWIrZWhLcDJGNmgwWC9jekVjdWFYbHFaczFSak9Pb3gvNTFEbEk3TzVHLworRmtxSDBYNHZ2Tmh2cXFnVHJJRDBPaldWT2prK3p6R0FRU2tDdEN2SGxGMmYrNXQyajZDMENKR3UxWDNHM0FlCmJ4YVV6d0tCZ1FDK1hTVENNMHl5SzByN1ZTZ1UzQ1RvM1ZzUkJjNmxwclZzWHJtNWhEYzh6VEZIVkxpeCs3bTcKakR0Y2FSYU5MTGRBeTdYaFRESGgvc1FlcXh3dGlLdisvWEZpc2x5aHpoYkJhQmE2S0c2WFdsdjZPeTJTZWZEVwpEU3Z0UlZYWHdOUjBCY3cxUXBsdmlwVDZ0UjVEKzlKaXhOY0l0bkJWRzM0MXdmVHFSTitMdlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSFVYMnR6K1dtWEY4b1pDNElkVHdwekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOek15V2hjTk1qY3dOakV4TVRreQpOek15V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQytJdFBaUHRyUGExVmdnNmpCUUZWT0l0UzVoYjFLOVZOWnlFUzc4aC9CbVExZzdrREsKZW5qN0g4U2Y2TTI4Yi8yZm9OTjRGaGVHd2RLNnd6VU5Rd1E0NXpNRTd3Smg2c25uRXJ3MlhXdHJDZTFyY2ZGUQpVOGExMjN0elc4azBZaWU3YXFwSU43cWtTZVoyTlVZU0V6NkhnK1NlY1ZWUzNlRTFIU0M4YThKQnVuVm85TmZ4CnYrY3R4YkhkNnRpTGxUSzRsOVZIMGNMOGIvYnROb09JUU10bGhiQ1BOOVVXaFltWkVxY2VGbVFaMTFVTmk5a1gKK3NvSTZzbkZSV1NOUVJVVGhTWTdwc21jcXduaUFhUEVTOHhBV0t4ZWxGSnZzRXRKNjBoMmk4ZzEyVHQvaEhWQgpFZG8xQXAzYlprOGZVbU5nWWl6TUUwME9DMi9Yckx4NnlScC9BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVqNklsdTg5c2NYOFZVYWFlc2NRa1hrbHJCbW93RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFMklOeHpIOG1nMXRlRnpPeWhGY1ZGYXRoYkhyN3NhRnF4c2E3SE1VMkRDWjFQRW5XOW80UTJlCmFWOCtMSlJLNVdzSjZrQ1pFeFZlOVE0Q2xUT0ExWC9acFFuSWxNWUp0T0hockViZmZCVWp1Ym9tYlJvMHdWTU8KQ0syL29tYUlab1ZwRGViKzdFYkYxWTlLK0RiQmw3TFVtRzFEMURtNjdpcVJXSm1VaU5YRFVxL3NrQTNHejRBMAo4UVgxZ3VtQyt0QnFMOFdCS25PbS9ZczJmUlpkRjMvaG1kQ2ZWNWxyUTN2TXROM1I2Mk4yRzdtOXJ5RVlMSXpiCmw4OTlnSDZ2LytORXF2a3dOenF2TEZ3WU05YTgxdUd6ZEdFTGYxOFF2TnRmQnpVMGRvaW1pM1pGSkNlaWxKWXAKVnN2bjU0aHhRcktqUUFwOEcwOVpBOW1xQ2VtZmtUaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURxRENDQXBDZ0F3SUJBZ0lSQU5IZGdIR3BtcWNOaStXOHVxNzNhM0V3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URTVNamN6TTFvWERUSTNNRFl4TVRFNQpNamN6TTFvd0tqRW9NQ1lHQTFVRUF4TWZZMngxYzNSbGNtMWxjMmd0WVhCcGMyVnlkbVZ5TG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUt2YzBHTVZLbmxnVDROTVRiN0IKUk9kM3lMelprbUFqUXlUdjJycHV6TmQ0Q3BNVDZHcHlYQU1iQzZBOUZkUnlwQ0h1M0pwWTFtL3ZURSszZDNhRgp1bWxlZ3hGbDBmbFVoaThldGZXelNtc0lGT3RUOUl3Z2pMZWpWWS9acnZHV0JzS1B6RGFKOGdzZXJkTjI0WUFPClU4eUMxVU1CeFRwam9JL1VFVTdIZ1hudGtDUWpPMmwxT0Z1UHZ5cmZUYWVtck16bEo4RDlwYzJQbmNFTHAxSm4KOHY4WXJKcGhMOEhBTWp6NWpLd3lHS3Y5V044Wm5pa2tJaVRkU0tFNjlhdGcxdGhVbjd3bkxrMnN4L0NJeXdVSApxNDBWWXBCVjJZOEo5Wi9hMVZXWWttamN1YmpLTTNqQmltbEUvQ2g2c3RhUm1ERkNNVE1kdUVWeGh4SE5zb2xRCm1ha0NBd0VBQWFPQjNqQ0IyekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVWo2SWx1ODlzY1g4VgpVYWFlc2NRa1hrbHJCbW93ZXdZRFZSMFJCSFF3Y29JZlkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnlMbU5wCmJHbDFiUzVwYjRJUUtpNXRaWE5vTG1OcGJHbDFiUzVwYjRJbFkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnkKTG10MVltVXRjM2x6ZEdWdExuTjJZNGNFZndBQUFZY1FBQUFBQUFBQUFBQUFBQUFBQUFBQUFUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBWXNWMTZ0YnFJYjRrUlduR2ZHS3lmUzB4MHVzOGtnSDZ0bTI2V0kxK1BXMStIeEp5ClpZZVRZZ0FUd0xKVC80K0VkL0tyUjdibmI5eDZBNThVRUc3WXVRMExSNzdFTUJBZFlXakpzWjhEVHM1VjdHUXYKM0lLeU85Zms4L2FJRCtUenM1d3BCclFtOGNJeXdKQWVCZEZiYWgyT1ZQQk9YVUtGRktmcno3OTVUV0JmWTRMbQpLUXJRZkZSaDdEb3RWUGtIMGt3cjVrV0VqTVBDR05Td1JXa3BLN3BwK001dWlkMHhlbEplUUgwaTAyaXMyMHF4Ck5EMnZnQU9nc0RGM09pa0R4cEUzS2xvOHB5TUdZRHp3M1oyZVowKzg4QnVmV2M4WTl1QzE5TW9VMy81aC9remwKeVhjbFhtdVhsRVU0RjY0Qnd3SVNMS3pzcnc5a210akxFSGJWZVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBcTl6UVl4VXFlV0JQZzB4TnZzRkU1M2ZJdk5tU1lDTkRKTy9hdW03TTEzZ0treFBvCmFuSmNBeHNMb0QwVjFIS2tJZTdjbWxqV2IrOU1UN2QzZG9XNmFWNkRFV1hSK1ZTR0x4NjE5Yk5LYXdnVTYxUDAKakNDTXQ2TlZqOW11OFpZR3dvL01Ob255Q3g2dDAzYmhnQTVUeklMVlF3SEZPbU9najlRUlRzZUJlZTJRSkNNNwphWFU0VzQrL0t0OU5wNmFzek9VbndQMmx6WStkd1F1blVtZnkveGlzbW1FdndjQXlQUG1NckRJWXEvMVkzeG1lCktTUWlKTjFJb1RyMXEyRFcyRlNmdkNjdVRhekg4SWpMQlFlcmpSVmlrRlhaanduMW45clZWWmlTYU55NXVNb3oKZU1HS2FVVDhLSHF5MXBHWU1VSXhNeDI0UlhHSEVjMnlpVkNacVFJREFRQUJBb0lCQVFDTXNXazdJL0d3aWFLdQpOd0lTWGovZFNkZGdtckRVMlNrM2pNKy8vY0xkeGR6S1NPcmtjWmhYeG9VKythTHNWNmw4U2dINHJTOW5WVHhnCnFpNDNMZ1RNQzk0Nm1PTkxQT0hZbzBpTXl1anFOQ1NEL2lmZHF5dm5qZVFXcmpza2RSQTFxT2loNFUzdnduN0UKOWJablVkTlNRZXo2UFBITCtoRlFqV2haMk1Ockh6TjhDMW5vY21pdnpUY2d4OE1OOGtWa1FqM2NDY2ZQRG9JQQphWjdzTWtyeDAvR1hDZi9MbGRiSTYrV1BIZElJeEZOVnhlaE5hdG9QUFFQcktFek42NGVWZlZpN0Z4aFRVNCtwClJxTmFmcm9oWVdtVE5jdXA3RGRveGdES3JWZXZ3ekJyVUZwMGJsRjlKY2phbjFkR1c5T05Oby9POGxBNGRMODEKOSt0SlpXb0JBb0dCQU00Tzk2MVNpbFA1REc2bkllaVhyVEZYWUc4U01xRmM2bVdZRWRPZS9PdWtXV2lPV09RdgpRMnN6QnB3aHI4cFVPdk1TUFJtNW9mamNJSjh6RmhWdVoxaU8yL2VZaDZoQzhXL1l3UTFxNzRWY3VLdnZ4bnBrCnFvQS9UcmVFaC93MkcxZXVmTkpHOFRiRmxrQTBnZ1ZKVC8vZnVXMUNsc2hyZkhpeUpIL21Ya0RCQW9HQkFOV0UKSTRaU2hjbFg0S2dQRFNjSzlVTTMvR1JlSGV5Y2pVeVdheXRoSm5jWmVpdmRYa29WNFI0RmFHLzlhQ1hETXdWUQpURlJTZTNETG5JbnYzMmxWaXJiRGFNdUY2ZXBSeFlsSXJGV2VlV2o1NkFQY25RWVp2cGU1RjNCcUNuM2VFeVNqCkhQa2M5OE9pdTFFY1V0N3Q5T0g3WU1qQzNnV3Y3eUdsdnNtNDZDcnBBb0dCQUtKSVMydW5XK1h5ZUlZVS9yR04KOHdxdkEvVzE0VVlRUlZJcHg3Qmd3RlJkSlVVaEJvVC9iQnRiSGxPTWZFUGV2bVo4OEwzMzRzWjVwdjk2WG1RVwpoVEhMb1JXSWZSNVpTb2lKcnRFQWJROGREUnZzUk9aVHJhdy9MNkY4c1JSREVKbW5oQXFmY0kxd1kzckJYNzBHCkZna3dpM3F2UE0wdlNlSk1lazU0Z2JhQkFvR0JBSzFCK0lHNjNRMHczZ0FCbHE2ajJibWQ2SlNaT3JjUm9pY1AKdUE4UFdtTXlyVXlDNlV3OHpOdkxqNSt3aFo1Kzh4dlF1TitEdnQ4Y21mM2tRK241bkFJS056TlBpeXkxQmhJTQpncXRIV1VXeDVHK2R5VjExN282M2h5bVZJc1pZT2poMGs4SWhtM3VJeFc5Z0NHOFZzS3pmaXYzZUFzT2lxKzBsCnpkZHEwQnBoQW9HQVloWGtJWjNMSmp3em9FYWpvd0Q3YU4yV056YkRGUDArL3E3bFhZQlY1TzRLcGVTMlV3ZVgKVnY4c1BvU1l1Q2h0aUpvNFdjQ2lsbHY0amc1QVBYTHd0SThScUFDOUVKakgzeU1rd2xvK1dnclRERXJ3cHI5UQpteDNrWWNwQ2d4V0RLWmdSZmhvK0pyTyt6alVCVG5RNGRwbERobDJDbmN6MzIwYzZKK0I2b3VNPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSFVYMnR6K1dtWEY4b1pDNElkVHdwekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOek15V2hjTk1qY3dOakV4TVRreQpOek15V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQytJdFBaUHRyUGExVmdnNmpCUUZWT0l0UzVoYjFLOVZOWnlFUzc4aC9CbVExZzdrREsKZW5qN0g4U2Y2TTI4Yi8yZm9OTjRGaGVHd2RLNnd6VU5Rd1E0NXpNRTd3Smg2c25uRXJ3MlhXdHJDZTFyY2ZGUQpVOGExMjN0elc4azBZaWU3YXFwSU43cWtTZVoyTlVZU0V6NkhnK1NlY1ZWUzNlRTFIU0M4YThKQnVuVm85TmZ4CnYrY3R4YkhkNnRpTGxUSzRsOVZIMGNMOGIvYnROb09JUU10bGhiQ1BOOVVXaFltWkVxY2VGbVFaMTFVTmk5a1gKK3NvSTZzbkZSV1NOUVJVVGhTWTdwc21jcXduaUFhUEVTOHhBV0t4ZWxGSnZzRXRKNjBoMmk4ZzEyVHQvaEhWQgpFZG8xQXAzYlprOGZVbU5nWWl6TUUwME9DMi9Yckx4NnlScC9BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVqNklsdTg5c2NYOFZVYWFlc2NRa1hrbHJCbW93RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFMklOeHpIOG1nMXRlRnpPeWhGY1ZGYXRoYkhyN3NhRnF4c2E3SE1VMkRDWjFQRW5XOW80UTJlCmFWOCtMSlJLNVdzSjZrQ1pFeFZlOVE0Q2xUT0ExWC9acFFuSWxNWUp0T0hockViZmZCVWp1Ym9tYlJvMHdWTU8KQ0syL29tYUlab1ZwRGViKzdFYkYxWTlLK0RiQmw3TFVtRzFEMURtNjdpcVJXSm1VaU5YRFVxL3NrQTNHejRBMAo4UVgxZ3VtQyt0QnFMOFdCS25PbS9ZczJmUlpkRjMvaG1kQ2ZWNWxyUTN2TXROM1I2Mk4yRzdtOXJ5RVlMSXpiCmw4OTlnSDZ2LytORXF2a3dOenF2TEZ3WU05YTgxdUd6ZEdFTGYxOFF2TnRmQnpVMGRvaW1pM1pGSkNlaWxKWXAKVnN2bjU0aHhRcktqUUFwOEcwOVpBOW1xQ2VtZmtUaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUt0QSs3U0ZTbFFHWCsxNEU2L001OUl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URTVNamN6TWxvWERUSTNNRFl4TVRFNQpNamN6TWxvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTVHdTZVWXhCMHZxUjhVaGo2eVo2SkxpdnRJb1UKc01jSlFoalVod3FrZk1Gb1Z1dkZjdnZ2RHVKMGN3UHVNSHliOWwzN0RhOEpqYzJzYlQxMUJ6alpZb2l1TUZLdwpoNURIQmZRSFMvb25JS1JWd0FMa1dVUVZXUmpUR1FMWWoybER0WGIzajZKZFpST1JkVW41a1c0ZlhsVDR6dXd3CkJVNC9uQzdUSml0WUt1Wk9PM1B3OVZWSnhObFBKWjhrU2FZdTVlYUU5cnpLY2YwdE9jazBkMGxlaHBHOE9tZTIKd05FcFg1QjZwcTBPNkpTNHphU3hsRTdiQW0vVHN2R0pxRklhb2YySGRZamEycUJHUStBSHNPT3ZlTlkydXFLSApGWm1xU3NzTjNuanRiMHBFVHg0MUR0bkR4VTNMVmVYenNqTTArdllOaVhJMk9sVy9oYWM5cis4a0R3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU1BvaVc3ejJ4eGZ4VlJwcDZ4eENSZQpTV3NHYWpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBS29NK0xKUFg3Qm9GcXR0eFFlREY1NnZVQjk1Tm1TcGdHZ09GQ2dvcUJmQ3NoWGsKTUZENlpDRXlkVlUvK3pEbVFaSHJidG1Ba3hBZ3E2U3hha1NtanpKczN1R25YRVp5REw3MGRNM1FpVE9VWlJIWQpuRkJlc0xSWEgrOG1NNGpBemh2Y3JvUmEzU3BWaHR1ZkVkNWZJaEwrT2VRNU0wVTVnSFVPL2d1RG80U1I1SWtCCkIrcVkzWStHdlM5VVVId1lTVGpUZFJOb0pXOFhKNUY4Z29IeVBFUkY3dWE3bXl2cGlhNFdXVFh3bGdROE11ZFIKQVZPbUxMdWl5UXFnOUYwVDNjNWQ2LzZZOFN1aDRqbUM0Y1JDSnhOeUhKelBkbjE3QVQybHcyb1c4T2tiK3hrYwpuK2l5MzJnRWc4aFVaMFMzc1FOaytralVYUUtHNlNJT08vRXlDVjA9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNUd1NlVZeEIwdnFSOFVoajZ5WjZKTGl2dElvVXNNY0pRaGpVaHdxa2ZNRm9WdXZGCmN2dnZEdUowY3dQdU1IeWI5bDM3RGE4SmpjMnNiVDExQnpqWllvaXVNRkt3aDVESEJmUUhTL29uSUtSVndBTGsKV1VRVldSalRHUUxZajJsRHRYYjNqNkpkWlJPUmRVbjVrVzRmWGxUNHp1d3dCVTQvbkM3VEppdFlLdVpPTzNQdwo5VlZKeE5sUEpaOGtTYVl1NWVhRTlyektjZjB0T2NrMGQwbGVocEc4T21lMndORXBYNUI2cHEwTzZKUzR6YVN4CmxFN2JBbS9Uc3ZHSnFGSWFvZjJIZFlqYTJxQkdRK0FIc09PdmVOWTJ1cUtIRlptcVNzc04zbmp0YjBwRVR4NDEKRHRuRHhVM0xWZVh6c2pNMCt2WU5pWEkyT2xXL2hhYzlyKzhrRHdJREFRQUJBb0lCQVFDSENLUjV4dmUyMk1oawpJazVuV2pURTlxVndqbHlTOE9jcE92S1E3cHEwNGNWajlUZWh0UXZxK2JhcnM3d2d6OW1IZUtHTXdsaGNpeVVPCjQxRUd0dlhVQ1Vjb2JBbk42cW10ZkVqQUFwOFU3ZkYvZEhZM3kwYnZoL3hyZ2NJeWJhRklhbzhKUzR2NHordWkKc2R1bXZMb3drdjBQbnBMNDMvdzh3WFd6ejlYc2JXSUNONXJ6aEpKTThzZE1LOW9TU20xSlltNFhoc1crSXRaQQoyNG1lMGZPalNOaWlKTGg2VllYYTFEamhJNGNVVVBHMG1Qc3RDeFdlNEZIUjhCTTkvQU5QWW9MMllpSFFuT3UzCmNNSWFSazBTTTFWRjlyS2lUZWNQc2h5d21nVVlJK1U4ZmtOcGhWSTdlUE5odjd0YTlqTlNUR01Wbk1XYy9Fc3MKQXVaUDdINzVBb0dCQU95eFRJSExCVC9NU2FqdldoT0NxQjNvdjd5VnhDZGN4Qm84MFA2Q0F1UXZZMk00WmNJcAp5aGlmL0dCN2RjZEtQWVhuOXlWYWRSK2laSWJGSWJDZmp1c2lpYWpQYzVCSDgwRzd6ZHUxREdMOXd4VURSQktwCjljMG1ieDBqYkpTbHY3aGxRR3d5cHVyZU9JMHFDU3Y4bEdlTUlXdUlWcFRyd2hRSVNYdkJ1NHFqQW9HQkFQY04Kc2VxSkt5WlFka3o3a1FUUkNHUHFnMkVPS2tXYTZ3L09KK0c4RlJVdENuZjl2SnhXZjFFVCsreG9rbVFockl5MAphQ0xOQTZjdXRqeFY0RnZ1YU5MMGhYMXh3Mkd4M1oxZ2o0eGMxcXpqdkxhNjNWWmgwVTFjd1Jadmpzd0dCeFFPCkRaa2d3VFE2Y1o1akluYXg5TDFZdkk4RGt0THM0OWlVQ1Y2Qm82T2xBb0dBT1IvZFVDSDRoVm8vbU5jVGpVdm0KV1RtWU5PS01jZGVRdUtoZTVGM3Facm9OS2FBdDV2dUEvQXA0dGF4MlUzL1djMS8xcFAwODhVS1hNbk9YV3ZKWApZdVoyQk5qMGtpamJTODBRdE9yd0wyQUJXaXZzblBpS0MxWXdVUDhBc0t1RUp2UEE1WndmN3VWdERwekxrK01rCnlnem03L1g2dDN4aTNjVFdQMWtWY3pNQ2dZRUFyTG9LZGl2STIxVE9JU3lSUzRqS0VQRlpRWFloMytCY0VBVFcKcFdCV2JTTzhlZ0FRNmswZlhwUldRZ2Nxc285SWtHZGhsMU0zQnFBR0VWRUpONzBMMU5IWXNzZmpEbDdJenN0QQpFYWFuQU9HSWcwbEtqcVo5SzFWNk9qRnM2UUFkMnN1b2ZqTUVZWHVyREUzTFBxbFVyejFuTjZZTDlTUmllSDJuCnYwZHNIWEVDZ1lFQXhNeGJzVkp4ek5kZnhtK1diWjZHZHNjcTcwWlVjKy9BeEdQNU03d2xpbmpZOGM4R3lkOUkKb0FuQVdwdzdnbXErYTE2RXFTa3ZKZEdrY0lPSFRwNFNCMi9YYmptaGJRK3VhNEVSN0hQWnRpSUxqaFc4UFdabQpUVVBjVHlyN2tYTEVVUWtzT2xua09xNGQzeXJUbVBNcUdqbVlPc3dsenZ2bkEvdUNBZzF1QzJvPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSFVYMnR6K1dtWEY4b1pDNElkVHdwekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOek15V2hjTk1qY3dOakV4TVRreQpOek15V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQytJdFBaUHRyUGExVmdnNmpCUUZWT0l0UzVoYjFLOVZOWnlFUzc4aC9CbVExZzdrREsKZW5qN0g4U2Y2TTI4Yi8yZm9OTjRGaGVHd2RLNnd6VU5Rd1E0NXpNRTd3Smg2c25uRXJ3MlhXdHJDZTFyY2ZGUQpVOGExMjN0elc4azBZaWU3YXFwSU43cWtTZVoyTlVZU0V6NkhnK1NlY1ZWUzNlRTFIU0M4YThKQnVuVm85TmZ4CnYrY3R4YkhkNnRpTGxUSzRsOVZIMGNMOGIvYnROb09JUU10bGhiQ1BOOVVXaFltWkVxY2VGbVFaMTFVTmk5a1gKK3NvSTZzbkZSV1NOUVJVVGhTWTdwc21jcXduaUFhUEVTOHhBV0t4ZWxGSnZzRXRKNjBoMmk4ZzEyVHQvaEhWQgpFZG8xQXAzYlprOGZVbU5nWWl6TUUwME9DMi9Yckx4NnlScC9BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVqNklsdTg5c2NYOFZVYWFlc2NRa1hrbHJCbW93RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFMklOeHpIOG1nMXRlRnpPeWhGY1ZGYXRoYkhyN3NhRnF4c2E3SE1VMkRDWjFQRW5XOW80UTJlCmFWOCtMSlJLNVdzSjZrQ1pFeFZlOVE0Q2xUT0ExWC9acFFuSWxNWUp0T0hockViZmZCVWp1Ym9tYlJvMHdWTU8KQ0syL29tYUlab1ZwRGViKzdFYkYxWTlLK0RiQmw3TFVtRzFEMURtNjdpcVJXSm1VaU5YRFVxL3NrQTNHejRBMAo4UVgxZ3VtQyt0QnFMOFdCS25PbS9ZczJmUlpkRjMvaG1kQ2ZWNWxyUTN2TXROM1I2Mk4yRzdtOXJ5RVlMSXpiCmw4OTlnSDZ2LytORXF2a3dOenF2TEZ3WU05YTgxdUd6ZEdFTGYxOFF2TnRmQnpVMGRvaW1pM1pGSkNlaWxKWXAKVnN2bjU0aHhRcktqUUFwOEcwOVpBOW1xQ2VtZmtUaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUakNDQWphZ0F3SUJBZ0lRZklHdUtFZjExRzRGTEZWSEQvbEt3REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOek15V2hjTk1qY3dOakV4TVRreQpOek15V2pBbU1TUXdJZ1lEVlFRRERCc3FMbU14TVM1b2RXSmliR1V0WjNKd1l5NWphV3hwZFcwdWFXOHdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ1o0R2FyTzZTOURqdjlnc0tzaWtwUUE0dGIKWktrb2FFNldUOXc5WUpjLzQ2OFhEN1pNUUFrOUZJQmhmc3Y0ZzZUU24xQlpCbnJtcHV1dTlTUFhaZzZLa0lGeApXdzNGRHRkRW1XTW9aajVMU0g2OTBYSWdjRnZ5c0Q5VGh3aGdaOW81Mnc4SHRSSmtkK1VldkhzdWZtRDVMcGpXCmpQREpZRENMWFk3c29sVXR1Y0tycjdFcUxsVFZQVnBGaG4vQjBTYlBLOGFaN1JnRlJsTkErYW9aT2VhZkhwM3UKWkJnNk9qbWpoUXJ0S1AvVnBqQkJvV3dJWUxpa21HUkdGQ0VXNk9XVWJVZVRqYUpYd0VQQ3lLTUFncGw2MUhvcApHaWtlYUl0bEtqcmRVaDBRem51aTBKTWlkbFJDeFZuN3RqSk1vWWE1a0JxTkViNHZEdXltODM3eUVpaVRBZ01CCkFBR2pnWWt3Z1lZd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGSStpSmJ2UGJIRi9GVkdtbnJIRQpKRjVKYXdacU1DWUdBMVVkRVFRZk1CMkNHeW91WXpFeExtaDFZbUpzWlMxbmNuQmpMbU5wYkdsMWJTNXBiekFOCkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVBsdFJPQkI3d0QvNEJzc1pDSUZIQzdiWjFmWWZhV0t6ZGVPcWRQdWgKeUJiNXo4Y2FQb3poQnpQTytuK1lkSTlMMThSaEV1amw4UzIwdU1LWm1VT0J3MmY3YXdsKzBQSTVGaHZUd2k1SQpXNE5lcVlTQkUya3FKaWtGV3RMMTBsSUZFcEMyc3pCSEd1K21sT1hWY3NCYTJSaFlMcUEvWXdCeFNkTmRrNGplCkExaTdOdWl5eTRGYU9iVWNHKy84T0ZIeDBCZzZ4enVWeCsyUDgxM2NiK0FkajdkZDVVNzYzQUtBRFQ4UTRrNVQKY0tITXJJUlpNQ0VralFhbjRkZmt5Qi9SOENmSlhsZzNDdGd6UkZyZnYzb25GekFWd3dEM2ZGZVpWTEFBTnMxbQpYNXhOem93anVZMUQrTnNELzM1aHBNdWlEa1l2anUyTWNLckhWdlNBaWZ5Q2R3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbWVCbXF6dWt2UTQ3L1lMQ3JJcEtVQU9MVzJTcEtHaE9say9jUFdDWFArT3ZGdysyClRFQUpQUlNBWVg3TCtJT2swcDlRV1FaNjVxYnJydlVqMTJZT2lwQ0JjVnNOeFE3WFJKbGpLR1krUzBoK3ZkRnkKSUhCYjhyQS9VNGNJWUdmYU9kc1BCN1VTWkhmbEhyeDdMbjVnK1M2WTFvend5V0F3aTEyTzdLSlZMYm5DcTYreApLaTVVMVQxYVJZWi93ZEVtenl2R21lMFlCVVpUUVBtcUdUbm1ueDZkN21RWU9qbzVvNFVLN1NqLzFhWXdRYUZzCkNHQzRwSmhrUmhRaEZ1amxsRzFIazQyaVY4QkR3c2lqQUlLWmV0UjZLUm9wSG1pTFpTbzYzVklkRU01N290Q1QKSW5aVVFzVlorN1l5VEtHR3VaQWFqUkcrTHc3c3B2Tis4aElva3dJREFRQUJBb0lCQUdyOW5HVnpFeGhnelZWMwpsZVJpUTBsZkxZWmVkeitoUndNOGcrWXBRd0VwVHBTNldBYXNmNy80Z1V0STNvbnMvcTEwR0duT0Y2WklhWmM4CjI2N3BSek1SUnUrS1lBaWtTUWxwblloNWp0YkprVlpxU3ZCREw2dU80SGt6YXArZGxoNmtNYzhxRjUvRHZZdWgKZ2dUUjJwdG55dDFqSWdqaTJONE9MMUpaak9BOU5QbXFYQm9DOXhyNEF4Y0RhZVZRTTYwQXBibkZ6dm4zSG5PbApxVVh1U2dRNTVDdmxxclVpNUZCOEpFSDZ1U2RJaUoxV0Z3eEswTnpwM0ZYaXhJTWljWjY0WWdvZFhvbmd6MmJ1Cmh4MCtLeHJYbVpIejcrMHM0VUZIVjA3QmNmVkVZMitIVkh6Rm1qbW5tUWppQTd6RkZBUWorNkV2MDNBQnVzVjQKeWNjTzhBRUNnWUVBek5vcEltcW8rSlhvOGRkUnlTVXdvVWJMbmppblpMOXJkMFFnaVJ6U1hTejZRbkVCU2UwKwpZNVZQT0ZDblpUTEtCRjBNaDYyeC9ldXdNTjh6SjJDbXFtN1dHWStpK2NiMUR1eXlaSHovTlBIT1U4b0RJNXc4CjRQYndjNjM2dHdVMEYxRml5dmJlb21Ua0duTG1qVjd0QVd5bk5zRDdSZUpPNHRRMDE2OUtXYlVDZ1lFQXdFdjAKMFQyTWRJZFZyV0U1dmU3L1RYVmlrY0ozUk9SaDZjVVlQMDJIem80cVBpZGw2akh3NkJxY3Q2ZldmRDR0S1NuTgphQjI2YmtZOWM4TkowTjZyU0hHVVRKQWxDV3g3bW91cjZ3Z29ZU2ltTndsdzVncWpVS1NtT1dYYW9XeGdYWTN6CjN5aVIwQks1TzZxaS9UUjhzakZFNzZJaXdqQTZDNVNjeFJxN1JpY0NnWUJjWEJBbndFY21yUkExMllxNlVkWTMKSUtBMVdmMis0cjhsS3NZd2k1b2RBR1psQm1ZNldvakNoVk1PWk83VUphNEhnWnhnbitPY1JHTlA1Wkkrc3NqeQpGcjdaRDNXL2dBQ0ZGaHJvUzZNVXorRGl6alhVSEdFbVhLL1V1Q0JOM0Q2OE5LbUNNUVAzMjkwc1A1bkxLMzFZCkl4RFJFdmszYk8xOFA0a0RwYml6OFFLQmdRQ0lzRFZJMnNCUlFMWDFOV3d2QjRqd2pXVlFpUFB3dzRxWitpRGYKTm9RM25qU0cwOGlNN1l6NTM1alFyM3cxK3BodGJ5cDBQTlY5ZDI1Tk1GN3pHcVNVTFRBbU1Ed3pjNnAwMDUyVAp4c3UxTElqaURGTDFJbEN1alNzZkY3aU9FQlI3eStDekd3cHk1aXhITG1jSEoxMFA2UmZBWXZia0pCWE9qNGZVClQ4a1k5d0tCZ1FDVTFBRmxWRHdGeVh0VHdIUk1DQUJkSElzM2lZc2NmbGg0OWZOL2hqM0NORGhPRHMyR2FnZWkKSVVXWGdLMzRYcmRDekJyOUNrUXBlREFucHMvTzd3T2pWS1JxYUI1MVZqWUdsZTgvWGlRaWoxR25UeDV3dm1vWQo0YTB0OTZhaUxaQWhFaXpJZ2Z4NG9KZTJGTWRMaEdac0cySnM5amtETkg2VC9aY0pXeERhTkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  policy-cidr-match-mode: ""
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":9963"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: c11
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "111"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"
  service-no-backend-response: "reject"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-masquerade-to-route-source: "false"
  enable-wireguard: "true"
  wireguard-persistent-keepalive: "0s"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "false"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  enable-health-check-loadbalancer-ip: "false"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  bpf-lb-acceleration: "disabled"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  hubble-export-file-max-size-mb: "10"
  hubble-export-file-max-backups: "5"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  ipam-cilium-node-update-rate: "15s"
  cluster-pool-ipv4-cidr: "10.11.0.0/17"
  cluster-pool-ipv4-mask-size: "24"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "true"
  bgp-secrets-namespace: "kube-system"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"

  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  # default DNS proxy to transparent mode in non-chaining modes
  dnsproxy-enable-transparent-mode: "true"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-xff-num-trusted-hops-ingress: "0"
  proxy-xff-num-trusted-hops-egress: "0"
  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"
  proxy-idle-timeout-seconds: "60"

  external-envoy-proxy: "false"
  max-connected-clusters: "255"

# Extra config allows adding arbitrary properties to the cilium config.
# By putting it at the end of the ConfigMap, it's also possible to override existing properties.
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: c11
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n            return 200 'ok';\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/clustermesh-apiserver/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumexternalworkloads/status
  - ciliumnodes
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumendpoints/status
  verbs:
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumexternalworkloads
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-bgp-control-plane-secrets
  namespace: "kube-system"
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-bgp-control-plane-secrets
  namespace: "kube-system"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-bgp-control-plane-secrets
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver-metrics
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/component: metrics
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: etcd-metrics
    port: 9963
    protocol: TCP
    targetPort: etcd-metrics
  selector:
    k8s-app: clustermesh-apiserver
---
# Source: cilium/templates/clustermesh-apiserver/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  type: NodePort
  selector:
    k8s-app: clustermesh-apiserver
  ports:
  - port: 2379
    nodePort: 32379
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
              divisor: '1'
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                    set -o errexit
                    set -o pipefail
                    set -o nounset
                    
                    # When running in AWS ENI mode, it's likely that 'aws-node' has
                    # had a chance to install SNAT iptables rules. These can result
                    # in dropped traffic, so we should attempt to remove them.
                    # We do it using a 'postStart' hook since this may need to run
                    # for nodes which might have already been init'ed but may still
                    # have dangling rules. This is safe because there are no
                    # dependencies on anything that is part of the startup script
                    # itself, and can be safely run multiple times per node (e.g. in
                    # case of a restart).
                    if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                    then
                        echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                        iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                    fi
                    echo 'Done!'
                    
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: write-cni-conf-when-ready
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.15.6@sha256:5789f0935eef96ad571e4f5565a8800d3a8fbb05265cf6909300cd82fd513c3d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        ports:
        - name: prometheus
          containerPort: 9963
          hostPort: 9963
          protocol: TCP
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/clustermesh-apiserver/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: clustermesh-apiserver
        k8s-app: clustermesh-apiserver
    spec:
      initContainers:
      - name: etcd-init
        image: "quay.io/cilium/clustermesh-apiserver:v1.15.6@sha256:6365c2fe8a038fc7adcdeb7ffb8d7a8a2cd3ee524687f35fff9df76fafeeb029"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - etcdinit
        # These need to match the equivalent arguments to etcd in the main container.
        - --etcd-cluster-name=clustermesh-apiserver
        - --etcd-initial-cluster-token=$(INITIAL_CLUSTER_TOKEN)
        - --etcd-data-dir=/var/run/etcd
        env:
          # The Cilium cluster name (specified via the `CILIUM_CLUSTER_NAME` environment variable) and the etcd cluster
          # name (specified via the `--etcd-cluster-name` argument) are very different concepts. The Cilium cluster name
          # is the name of the overall Cilium cluster, and is used to set the admin account username. The etcd cluster
          # name is a concept that's only relevant for etcd itself. The etcd cluster name must be the same for both this
          # command and the actual invocation of etcd in the main containers of this Pod, but it's otherwise not
          # relevant to Cilium.
        - name: CILIUM_CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: INITIAL_CLUSTER_TOKEN
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      containers:
      - name: etcd
        # The clustermesh-apiserver container image includes an etcd binary.
        image: "quay.io/cilium/clustermesh-apiserver:v1.15.6@sha256:6365c2fe8a038fc7adcdeb7ffb8d7a8a2cd3ee524687f35fff9df76fafeeb029"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/etcd
        args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        # Surrounding the IPv4 address with brackets works in this case, since etcd
        # uses net.SplitHostPort() internally and it accepts the that format.
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=$(INITIAL_CLUSTER_TOKEN)
        - --auto-compaction-retention=1
        - --listen-metrics-urls=http://[$(HOSTNAME_IP)]:9963
        - --metrics=basic
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: INITIAL_CLUSTER_TOKEN
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        ports:
        - name: etcd
          containerPort: 2379
          protocol: TCP
        - name: etcd-metrics
          containerPort: 9963
          protocol: TCP
        volumeMounts:
        - name: etcd-server-secrets
          mountPath: /var/lib/etcd-secrets
          readOnly: true
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      - name: apiserver
        image: "quay.io/cilium/clustermesh-apiserver:v1.15.6@sha256:6365c2fe8a038fc7adcdeb7ffb8d7a8a2cd3ee524687f35fff9df76fafeeb029"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - clustermesh
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt
        - etcd.config=/var/lib/cilium/etcd-config.yaml
        - --max-connected-clusters=255
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        - --controller-group-metrics=all
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: identity-allocation-mode
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: enable-k8s-endpoint-slice
              optional: true
        ports:
        - name: apiserv-metrics
          containerPort: 9962
          protocol: TCP
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: etcd-server-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-server-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-admin-client
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-admin-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-data-dir
        emptyDir: {}
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "clustermesh-apiserver"
      serviceAccountName: "clustermesh-apiserver"
      terminationGracePeriodSeconds: 30
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: clustermesh-apiserver
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.15.6@sha256:a0863dd70d081b273b87b9b7ce7e2d3f99171c2f5e202cd57bc6691e51283e0c"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          livenessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          startupProbe:
            # give the relay one minute to start up
            grpc:
              port: 4222
            timeoutSeconds: 3
            failureThreshold: 20
            periodSeconds: 3
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.13.0@sha256:7d663dc16538dd6e29061abd1047013a645e6e69c115e008bee9ea9fef9a6666"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        readinessProbe:
          httpGet:
            path: /
            port: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.13.0@sha256:1e7657d997c5a48253bb8dc91ecee75b63018d16ff5e5797e5af367336bc8803"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
