---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5aV3lLWXAza09FVFg2czBjMU5KWjR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4TTFvWERUSTJNVEV5TVRJeApOVFV4TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3TUQyZ3RReERSVXY1dEdEZnUzVDBHM0RaZWlPNHlYalE0VStYYUduSGlYc2VmWjkKcW5UZk80bk41OWFPcS9VNHJveDc2WUdwYWkrdUhFNEZZK1paU0VFVVJ4RDNjZEpTNi9rWThScEovckpmTGNUaQplMGs5Y3BEdVl4QStGeTJsR25hSzVWOFlKYnhRM3g5cnJNeWQxaDVwb3JyWGFsbU5mckR4TmlWR2lDbmJRNlJ5CkM5UTc1dG9TbmZCN2ZQbnJieWo3U25tVmpwNjkyc1FHWUhLOEQ1TjNhMmx0Q0xwYVNoYm5kUzB3MklpbW9MM0IKUzkvckxXcFFTa0tQZ1RDQkpyOWhIZnFnaGROSThVaEZIZUZGVERtM2UvVDV3VDFPbXZYKzNac28vRFpqUExzbgpLNUxrdWRMODNkdEY0cUREcXpaZVloVVRWSmRHS0JvbTRuYVlCd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUDZ4WTBxWUdOUy9NUzkzeTFQcTQ0dXEwZ2IwTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQnJzcU5RMGExNVNtT21EOFlaN0RVVmhsc2I2WFhpbFdTUjRyY25FMC9PUDFQdzFPU1ROYXZ6CnF6dHM2ZkNsblEzRVlBWEwzQ2Z6cXNmeVJacFFuUnNaSGEzK08wYzdrekpTMnE3eHFPRjFuRTZTbVdIWXNnREsKazhhWTZLSndmYzZrcmRjL3dPSDM0enl5N1JSSDdTcHI1RDVYOU5pMjNXdS84RDQrSHVHUXJOOWtsemF2dXJBZwpjT0pBWkJ4MnIxWERtZzZFY2VydFZvZ0EvM3dlNFYrN3pmT0hnUHcwV0wxWXBhanJTcTFaR3pZUGNhbGxaSTlZCmFoUVR6TTIxVU53Mi93S05Nd2UvTDBRUHJieWtCNjdoQW5iaDVmdUFpc1ZKbnF5eVRZZkJRVUcxSmtvbzFjR2gKeWdCM3pZcGM5SDAxWitGejhESDVvdkc2elBtWERIRk4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd01EMmd0UXhEUlV2NXRHRGZ1M1QwRzNEWmVpTzR5WGpRNFUrWGFHbkhpWHNlZlo5CnFuVGZPNG5ONTlhT3EvVTRyb3g3NllHcGFpK3VIRTRGWStaWlNFRVVSeEQzY2RKUzYva1k4UnBKL3JKZkxjVGkKZTBrOWNwRHVZeEErRnkybEduYUs1VjhZSmJ4UTN4OXJyTXlkMWg1cG9yclhhbG1OZnJEeE5pVkdpQ25iUTZSeQpDOVE3NXRvU25mQjdmUG5yYnlqN1NubVZqcDY5MnNRR1lISzhENU4zYTJsdENMcGFTaGJuZFMwdzJJaW1vTDNCClM5L3JMV3BRU2tLUGdUQ0JKcjloSGZxZ2hkTkk4VWhGSGVGRlREbTNlL1Q1d1QxT212WCszWnNvL0RaalBMc24KSzVMa3VkTDgzZHRGNHFERHF6WmVZaFVUVkpkR0tCb200bmFZQndJREFRQUJBb0lCQUd2OHJ4NWttb1psMUV4UQpISWREM21McTI0bUFYR3pOa1NFR3lRWFR4cmlSTG9hMW5YbWR1R0sydFhDcE40MEcrUlp4QmdxdjVhWGp5SHQ3CkNuSUpYd09uMGlCdVZQS2pqbWs5U01mcW5vSGVsSXdqdlc2c2ZZeHR2ZUFwL1Y4bTUxU0lEUkNyMGU5eUxTeVQKZ2ROeFh3dlNSZ1F4QVBaSDdZbUl2OXBCejkzLyt4ZmRVQzc0QnJuZGFybnMzek1FcmYvRXg1NGJNYVArblk1aQpIMXR1cTBncW4wdjhuY1FyMjdoVjM1M2x5MGt3R2NjSFdxd0J2WkJScS9SM2RzWjF2VVE4NmFuM2pBcHRSenlOCk5QTHhBaGhqVDRSWFR1R0c2bi8vdGFFMTZsK1h5Y2tBZDAvQVJBRFZlNHJONkxpZDNXME83R3drMTduaCtSMlcKOGxYVGpFRUNnWUVBOUhuc1dPWGdQTlFRcTlPSjVnQU5FazRNOXNVcFNNNWdobytqU2Exby9WZCtPVVRCcDBkKwpLWXZCYVhDVXJXalZyMHk0dTRGb0JQZTNLYzJySitFd3BsK0ZoSDRaaVFodmtYaW4vWndZS2srU2dLaUEvUmdWCkd6MXVhemdNSDE2WmYxeVNNZFdTSzJQOStPMERzSUNrcDQ3TmYwOG11U245Y05jVVpKbzBGUzhDZ1lFQXlkYm8KZkpLLzR2S0ViUklHUHJJandZZ1BHK1p2SHFla2VoVWJrTHY1L3dwNzRYdXA5cXIrNDdYdGsweW5MTmlEVm5BMQpVTmkrdW0rM1A0dHV6WGNHbXhlV3pob09TWHQ3MjR3NndBdWhoY3VBYTVGajlLMnd4c3hSOWhkUy9tdmV6OWhrCkZSblIxOCtrNXlnVTQzVFpIeSswK09EalZpL2pXNDJLOWZ3R0pLa0NnWUFFOHo4TTRjS3ptSnVwendPNHk0RjQKUUdwVXlOTTRMUzJaSytsamdZWmhzdGJVZEFienl5ZkwwWStlQWZDUXZsR3RWZ0Zia3BnM21ZaDA2VHd3OTRkVApweFYrQkV1aUViQ29vbWZNWTgrOWM1VUUwK1NndTA4YUdSbFdSSEZDWlZqNFVqaUhsOHA0NUhKdEN1ZUxPRitkCklQQWFSdEVDNk0yLzdpcjBpb2JKY3dLQmdRREVJR0gwZXB5ZXFFMXB0clAreEJiZWZabEE0UjlreUQyWXExNEgKdThEbXhJY3Z5WHlVUmdBN3dKSkVLWjNnZzlyTGFXbEZUL2UxTGMwQW9EcGd5S0hRbnBGWllCUTE3eG1oY3BlNworUkZROHplc1RyQzBGdnJKa2N5cXRtdGM4ZkNtUW55dHpGTU53NlZYUUtsYmhEVmVpbnJ0dzRqa1BOQk9MREcxCmFObUhVUUtCZ0hxVWNub2JKOEYxcFVoYi9jTEFQZi9FRWt3NDdZVU9NTEk1SFFDOUJxRmVLMlRWTGpSbkZNc3IKR09UQXk1a0VOdjhZVm5WenZoRGNHVkRJSjZWQ0wwaHRBUjRmQUZsdjRDZVJRU2JTOXhVd0hMSnJBWUpROC9vYgoxSjNjK0s1YTJPVUxuR291eWpXMEtWN2ZIVVNhNXRKUHJrV1U1ZUJvWnhFcW9xUkVzU3A3Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/admin-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5aV3lLWXAza09FVFg2czBjMU5KWjR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4TTFvWERUSTJNVEV5TVRJeApOVFV4TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3TUQyZ3RReERSVXY1dEdEZnUzVDBHM0RaZWlPNHlYalE0VStYYUduSGlYc2VmWjkKcW5UZk80bk41OWFPcS9VNHJveDc2WUdwYWkrdUhFNEZZK1paU0VFVVJ4RDNjZEpTNi9rWThScEovckpmTGNUaQplMGs5Y3BEdVl4QStGeTJsR25hSzVWOFlKYnhRM3g5cnJNeWQxaDVwb3JyWGFsbU5mckR4TmlWR2lDbmJRNlJ5CkM5UTc1dG9TbmZCN2ZQbnJieWo3U25tVmpwNjkyc1FHWUhLOEQ1TjNhMmx0Q0xwYVNoYm5kUzB3MklpbW9MM0IKUzkvckxXcFFTa0tQZ1RDQkpyOWhIZnFnaGROSThVaEZIZUZGVERtM2UvVDV3VDFPbXZYKzNac28vRFpqUExzbgpLNUxrdWRMODNkdEY0cUREcXpaZVloVVRWSmRHS0JvbTRuYVlCd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUDZ4WTBxWUdOUy9NUzkzeTFQcTQ0dXEwZ2IwTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQnJzcU5RMGExNVNtT21EOFlaN0RVVmhsc2I2WFhpbFdTUjRyY25FMC9PUDFQdzFPU1ROYXZ6CnF6dHM2ZkNsblEzRVlBWEwzQ2Z6cXNmeVJacFFuUnNaSGEzK08wYzdrekpTMnE3eHFPRjFuRTZTbVdIWXNnREsKazhhWTZLSndmYzZrcmRjL3dPSDM0enl5N1JSSDdTcHI1RDVYOU5pMjNXdS84RDQrSHVHUXJOOWtsemF2dXJBZwpjT0pBWkJ4MnIxWERtZzZFY2VydFZvZ0EvM3dlNFYrN3pmT0hnUHcwV0wxWXBhanJTcTFaR3pZUGNhbGxaSTlZCmFoUVR6TTIxVU53Mi93S05Nd2UvTDBRUHJieWtCNjdoQW5iaDVmdUFpc1ZKbnF5eVRZZkJRVUcxSmtvbzFjR2gKeWdCM3pZcGM5SDAxWitGejhESDVvdkc2elBtWERIRk4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLVENDQWhHZ0F3SUJBZ0lSQU14SUVaWVY4aVJFRUJ4ekxKeTJEKzh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4TTFvWERUSTJNVEV5TVRJeApOVFV4TTFvd0ZERVNNQkFHQTFVRUF4TUpZV1J0YVc0dFl6RXhNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFrNHFCQUx3WkR1L3VnVkNuVDlMQkozVnVCS09oaFpJQ040cThGUGxuUSsxak1UM1IKTmVBUzNMNjk2N204WkJNUkJDZllLVjdZZXN2ODVhbEhWeHQ2Y21LblFLUU1KT053UUpkTk9rUzNuSE1LMms5VQpUNXVDK0FybWRnSDVmaHFyMk9WL1ozSTdTN2plY1o1akVpbi9VWkpoK1VNcVJ3d0xmOEtFOTVqdzJFbnpFNjc2ClNNZ2YvSmIxb2pNWHJZRFlwcWxnOGszZVB6RnZmaTRQeEVoNVJVRTZZdU1JWHVkS0FPOERtV0M2Rk1EMGM3NTAKWFNxb2RjMXNVRzFtRTJoVHhxLy96L051Q1BwY3orNjFYSTBMOG1vNjl2REloOUlZN0xpRkN4ZGxiRjRERlVzMwprL2RDeUMxdHA5RU1wYmFYZjcrVjg4dVFEOVRRVHloeW9Ea1pjd0lEQVFBQm8zWXdkREFPQmdOVkhROEJBZjhFCkJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUMKTUFBd0h3WURWUjBqQkJnd0ZvQVUvckZqU3BnWTFMOHhMM2ZMVStyamk2clNCdlF3RkFZRFZSMFJCQTB3QzRJSgpiRzlqWVd4b2IzTjBNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUE0c2ZFV25uQkQzSFV2V0RNSFVqRk5oVzhkClg5UnI5cnUrNmQ5NjhQeFM5aHdXd2VWR2I4TkRQQ3RvMkpWSHBuWDg0dDVuMkpERGNHSmdFSFllRlRVSkloQjkKVDQrUGhIMnAzcWY2STNhNVRJaVBjSFF4eis2czYvb1BXMmkwR2NzbEFTbGh2eTFRbWl0SXM2UGNncC9rOFg3UwoxNVVUOGxnZDdReUpUSmE4djlrbXBxN2lYUFJwd2F3LzdJTmc2Uy83aUhQUVNiZm5XWU43SUl4QzJsWGFUbnh0CkxmZWZxUlpGVzRWNjQ3MmVWcmY0SElMTjlnV2pLdmhsbjJxVXh6a25jeWJGY3RNMVJ2Q21Yd1BjOTBRUlMva3AKUGhNRnorTGNSK2J0aW81aXUraUFYcGlyZjhhK1AzSUV3YzJVSmt1VnpFRGdxVE10SWh2VjdZSFBDdEQ5Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBazRxQkFMd1pEdS91Z1ZDblQ5TEJKM1Z1QktPaGhaSUNONHE4RlBsblErMWpNVDNSCk5lQVMzTDY5NjdtOFpCTVJCQ2ZZS1Y3WWVzdjg1YWxIVnh0NmNtS25RS1FNSk9Od1FKZE5Pa1MzbkhNSzJrOVUKVDV1QytBcm1kZ0g1ZmhxcjJPVi9aM0k3UzdqZWNaNWpFaW4vVVpKaCtVTXFSd3dMZjhLRTk1ancyRW56RTY3NgpTTWdmL0piMW9qTVhyWURZcHFsZzhrM2VQekZ2Zmk0UHhFaDVSVUU2WXVNSVh1ZEtBTzhEbVdDNkZNRDBjNzUwClhTcW9kYzFzVUcxbUUyaFR4cS8vei9OdUNQcGN6KzYxWEkwTDhtbzY5dkRJaDlJWTdMaUZDeGRsYkY0REZVczMKay9kQ3lDMXRwOUVNcGJhWGY3K1Y4OHVRRDlUUVR5aHlvRGtaY3dJREFRQUJBb0lCQUQxdjNVd0xCM3c2Mk53cwpVNTlmcVdMZStWTWhPQzlBbjMrMVc2QjRRbEg4MWVNNVZKYlVtY1lsL3p2YmVlRktOem05eGJ0a2JVeWxDTWd4CmR5MkVtYlpyOGkxdW9rZnlGVm93SnM1dXN1NkkwU29iQW9hcndSdThuajdoajV5OVNuWGxDdXB1bk5acFF1ZVoKQnJRWG5PUEF5dDlhNG8zM0xBcWxXMjBtMkpPWGhheW1ZVmdId0xOMWFFTEdPS0pIaHZqbG91eHhVNGsvRnpNTApWdTFnRzAyTExubG1QSnBJMlRIczhOM1QwcndxRkVjeFl0TXc0cisvZnpYeVR2QzJKOXR5U1o3ZnlhWjJHNHppCmdyaGJjc05UUlNwL2pLZWZybWM0UFlRV3lseUN3S2ovUHgzZEIwd2R1TUpnZE9UcFdsNTZZWnJHSENEMXlDd3UKV0IrbC9TRUNnWUVBd0FvSU1PRllQN0hmRUxlbE93TnFWNEFGRWF2NGVqMW5YeDhrNEN1Sjhsa0ZraDZ6a0NScwpzSUIxcXA1aEwvNGdtSHVIZUl0Y1JtQ0JpeVhEVWxZWmhZQzhtZUZJM0g1eDFlNHVRcTV0aDNOUTZQWUN6aVNtCmtQUmhSeDQxemU5MTlnWHVheFZ5Yk1XMHo2Zm92L2ZQQU0yWE83TzVMOS9GcDZ0d0o4amhBcHNDZ1lFQXhLNWwKTWw3YVRaRGltUS9kdkNvMVZpb2JZK2xlUTlnd2RiTllSQVZyYlJ3OU1oQlNkYkRVeno4RGwrRmg0YlJZcGhwWQpVcFg2aDRaczl6dy9sQ3U2T240M0NyMmhJR2hDSnc3TUk5cnNnM0JHN01BUWhwNUQ5VkoyK3JmOVpGbkxGMU1xCjBUWXhMOER5VlZFZFJSc0pwYjZEcnJqbDhLMnEvOThKNjZvWEpna0NnWUVBakpCTFFvd1BMa0FoeUhqRGhwaVAKWkJDZXBUcTlHNnlLVjRQU1dBdEdZNDlwbG5UR2RrRlRGVFpSNmxzWFJDdTg3Qit2SHpyU2hlanBxVkl3ejdtWgo0TEJFWEZZY0lOaWt0alFxeEVBc2g3S09qSlpWbzFJTVlabWZBcEZJVEw1MEYycHNBeEdsdVp4VkpwSCt1VlRICnZneStIOE1EVDlsNU1hczQ0c1lVZlBVQ2dZRUFodmtqYTNqYW1XWjNpeER2VzBVZ0N6eWtSV0dPbGtLVHB3Sm4KN1c1R3RiOHVZOS85cHRTdWhuYzVFUTdUN0YrbWduOEw0OGtXLzlDSmtQV2dzQjkrRXN3eEc4YmMvMjl0RG43QwpLMHovQ0lpUnM4RnUxZU5nd2NkUTdXZzhsWlJsb21FcHZoOVJpL0wrbXZ3cWVSVS8vcVdLbXVvNnFudVVJVHBBCkJhRlpkM2tDZ1lFQWtFQ1JUaFUrRlpKRllKTWZUZS9TVXNORi8yeDJERGRaSFJzL2QyQWxnTWJrVE9Sb1Y3U1gKVEROWEMwUjdoNGgya3lyL3htekFMLytMK0xHWmxsWUVETm1sQzcwTWVSTWNIV3hPN092OE9IazNmS0hLeWViQQpnQVJwLzN0QVNIb1drNEFrZDhHdURrUGlWankwUkZidVJuZnk3dGF5NmhzMU1nSTVBWEF0VkFzPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-ca-cert
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5aV3lLWXAza09FVFg2czBjMU5KWjR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4TTFvWERUSTJNVEV5TVRJeApOVFV4TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3TUQyZ3RReERSVXY1dEdEZnUzVDBHM0RaZWlPNHlYalE0VStYYUduSGlYc2VmWjkKcW5UZk80bk41OWFPcS9VNHJveDc2WUdwYWkrdUhFNEZZK1paU0VFVVJ4RDNjZEpTNi9rWThScEovckpmTGNUaQplMGs5Y3BEdVl4QStGeTJsR25hSzVWOFlKYnhRM3g5cnJNeWQxaDVwb3JyWGFsbU5mckR4TmlWR2lDbmJRNlJ5CkM5UTc1dG9TbmZCN2ZQbnJieWo3U25tVmpwNjkyc1FHWUhLOEQ1TjNhMmx0Q0xwYVNoYm5kUzB3MklpbW9MM0IKUzkvckxXcFFTa0tQZ1RDQkpyOWhIZnFnaGROSThVaEZIZUZGVERtM2UvVDV3VDFPbXZYKzNac28vRFpqUExzbgpLNUxrdWRMODNkdEY0cUREcXpaZVloVVRWSmRHS0JvbTRuYVlCd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUDZ4WTBxWUdOUy9NUzkzeTFQcTQ0dXEwZ2IwTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQnJzcU5RMGExNVNtT21EOFlaN0RVVmhsc2I2WFhpbFdTUjRyY25FMC9PUDFQdzFPU1ROYXZ6CnF6dHM2ZkNsblEzRVlBWEwzQ2Z6cXNmeVJacFFuUnNaSGEzK08wYzdrekpTMnE3eHFPRjFuRTZTbVdIWXNnREsKazhhWTZLSndmYzZrcmRjL3dPSDM0enl5N1JSSDdTcHI1RDVYOU5pMjNXdS84RDQrSHVHUXJOOWtsemF2dXJBZwpjT0pBWkJ4MnIxWERtZzZFY2VydFZvZ0EvM3dlNFYrN3pmT0hnUHcwV0wxWXBhanJTcTFaR3pZUGNhbGxaSTlZCmFoUVR6TTIxVU53Mi93S05Nd2UvTDBRUHJieWtCNjdoQW5iaDVmdUFpc1ZKbnF5eVRZZkJRVUcxSmtvbzFjR2gKeWdCM3pZcGM5SDAxWitGejhESDVvdkc2elBtWERIRk4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd01EMmd0UXhEUlV2NXRHRGZ1M1QwRzNEWmVpTzR5WGpRNFUrWGFHbkhpWHNlZlo5CnFuVGZPNG5ONTlhT3EvVTRyb3g3NllHcGFpK3VIRTRGWStaWlNFRVVSeEQzY2RKUzYva1k4UnBKL3JKZkxjVGkKZTBrOWNwRHVZeEErRnkybEduYUs1VjhZSmJ4UTN4OXJyTXlkMWg1cG9yclhhbG1OZnJEeE5pVkdpQ25iUTZSeQpDOVE3NXRvU25mQjdmUG5yYnlqN1NubVZqcDY5MnNRR1lISzhENU4zYTJsdENMcGFTaGJuZFMwdzJJaW1vTDNCClM5L3JMV3BRU2tLUGdUQ0JKcjloSGZxZ2hkTkk4VWhGSGVGRlREbTNlL1Q1d1QxT212WCszWnNvL0RaalBMc24KSzVMa3VkTDgzZHRGNHFERHF6WmVZaFVUVkpkR0tCb200bmFZQndJREFRQUJBb0lCQUd2OHJ4NWttb1psMUV4UQpISWREM21McTI0bUFYR3pOa1NFR3lRWFR4cmlSTG9hMW5YbWR1R0sydFhDcE40MEcrUlp4QmdxdjVhWGp5SHQ3CkNuSUpYd09uMGlCdVZQS2pqbWs5U01mcW5vSGVsSXdqdlc2c2ZZeHR2ZUFwL1Y4bTUxU0lEUkNyMGU5eUxTeVQKZ2ROeFh3dlNSZ1F4QVBaSDdZbUl2OXBCejkzLyt4ZmRVQzc0QnJuZGFybnMzek1FcmYvRXg1NGJNYVArblk1aQpIMXR1cTBncW4wdjhuY1FyMjdoVjM1M2x5MGt3R2NjSFdxd0J2WkJScS9SM2RzWjF2VVE4NmFuM2pBcHRSenlOCk5QTHhBaGhqVDRSWFR1R0c2bi8vdGFFMTZsK1h5Y2tBZDAvQVJBRFZlNHJONkxpZDNXME83R3drMTduaCtSMlcKOGxYVGpFRUNnWUVBOUhuc1dPWGdQTlFRcTlPSjVnQU5FazRNOXNVcFNNNWdobytqU2Exby9WZCtPVVRCcDBkKwpLWXZCYVhDVXJXalZyMHk0dTRGb0JQZTNLYzJySitFd3BsK0ZoSDRaaVFodmtYaW4vWndZS2srU2dLaUEvUmdWCkd6MXVhemdNSDE2WmYxeVNNZFdTSzJQOStPMERzSUNrcDQ3TmYwOG11U245Y05jVVpKbzBGUzhDZ1lFQXlkYm8KZkpLLzR2S0ViUklHUHJJandZZ1BHK1p2SHFla2VoVWJrTHY1L3dwNzRYdXA5cXIrNDdYdGsweW5MTmlEVm5BMQpVTmkrdW0rM1A0dHV6WGNHbXhlV3pob09TWHQ3MjR3NndBdWhoY3VBYTVGajlLMnd4c3hSOWhkUy9tdmV6OWhrCkZSblIxOCtrNXlnVTQzVFpIeSswK09EalZpL2pXNDJLOWZ3R0pLa0NnWUFFOHo4TTRjS3ptSnVwendPNHk0RjQKUUdwVXlOTTRMUzJaSytsamdZWmhzdGJVZEFienl5ZkwwWStlQWZDUXZsR3RWZ0Zia3BnM21ZaDA2VHd3OTRkVApweFYrQkV1aUViQ29vbWZNWTgrOWM1VUUwK1NndTA4YUdSbFdSSEZDWlZqNFVqaUhsOHA0NUhKdEN1ZUxPRitkCklQQWFSdEVDNk0yLzdpcjBpb2JKY3dLQmdRREVJR0gwZXB5ZXFFMXB0clAreEJiZWZabEE0UjlreUQyWXExNEgKdThEbXhJY3Z5WHlVUmdBN3dKSkVLWjNnZzlyTGFXbEZUL2UxTGMwQW9EcGd5S0hRbnBGWllCUTE3eG1oY3BlNworUkZROHplc1RyQzBGdnJKa2N5cXRtdGM4ZkNtUW55dHpGTU53NlZYUUtsYmhEVmVpbnJ0dzRqa1BOQk9MREcxCmFObUhVUUtCZ0hxVWNub2JKOEYxcFVoYi9jTEFQZi9FRWt3NDdZVU9NTEk1SFFDOUJxRmVLMlRWTGpSbkZNc3IKR09UQXk1a0VOdjhZVm5WenZoRGNHVkRJSjZWQ0wwaHRBUjRmQUZsdjRDZVJRU2JTOXhVd0hMSnJBWUpROC9vYgoxSjNjK0s1YTJPVUxuR291eWpXMEtWN2ZIVVNhNXRKUHJrV1U1ZUJvWnhFcW9xUkVzU3A3Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/remote-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5aV3lLWXAza09FVFg2czBjMU5KWjR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4TTFvWERUSTJNVEV5TVRJeApOVFV4TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3TUQyZ3RReERSVXY1dEdEZnUzVDBHM0RaZWlPNHlYalE0VStYYUduSGlYc2VmWjkKcW5UZk80bk41OWFPcS9VNHJveDc2WUdwYWkrdUhFNEZZK1paU0VFVVJ4RDNjZEpTNi9rWThScEovckpmTGNUaQplMGs5Y3BEdVl4QStGeTJsR25hSzVWOFlKYnhRM3g5cnJNeWQxaDVwb3JyWGFsbU5mckR4TmlWR2lDbmJRNlJ5CkM5UTc1dG9TbmZCN2ZQbnJieWo3U25tVmpwNjkyc1FHWUhLOEQ1TjNhMmx0Q0xwYVNoYm5kUzB3MklpbW9MM0IKUzkvckxXcFFTa0tQZ1RDQkpyOWhIZnFnaGROSThVaEZIZUZGVERtM2UvVDV3VDFPbXZYKzNac28vRFpqUExzbgpLNUxrdWRMODNkdEY0cUREcXpaZVloVVRWSmRHS0JvbTRuYVlCd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUDZ4WTBxWUdOUy9NUzkzeTFQcTQ0dXEwZ2IwTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQnJzcU5RMGExNVNtT21EOFlaN0RVVmhsc2I2WFhpbFdTUjRyY25FMC9PUDFQdzFPU1ROYXZ6CnF6dHM2ZkNsblEzRVlBWEwzQ2Z6cXNmeVJacFFuUnNaSGEzK08wYzdrekpTMnE3eHFPRjFuRTZTbVdIWXNnREsKazhhWTZLSndmYzZrcmRjL3dPSDM0enl5N1JSSDdTcHI1RDVYOU5pMjNXdS84RDQrSHVHUXJOOWtsemF2dXJBZwpjT0pBWkJ4MnIxWERtZzZFY2VydFZvZ0EvM3dlNFYrN3pmT0hnUHcwV0wxWXBhanJTcTFaR3pZUGNhbGxaSTlZCmFoUVR6TTIxVU53Mi93S05Nd2UvTDBRUHJieWtCNjdoQW5iaDVmdUFpc1ZKbnF5eVRZZkJRVUcxSmtvbzFjR2gKeWdCM3pZcGM5SDAxWitGejhESDVvdkc2elBtWERIRk4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUsrL2hCYjJmM2I5OVNWZUdocVNMUEV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4TTFvWERUSTJNVEV5TVRJeApOVFV4TTFvd0VURVBNQTBHQTFVRUF4TUdjbVZ0YjNSbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBCk1JSUJDZ0tDQVFFQW8wdmxkSTlyblJjNWpEVTdWdUUxcldpcUxMZ013RnFkcnkyRW1KVTRZcEw3WEl6dFZldnEKaEh0S2FwV0FUakY0NmZZeSszaVVZWW5hSXZYUjhZVXkxMXowQlFmanRMdE9FSk9sNDA2ejNnc1JVcCtyUXZMUgovRUhsRU4zWlFoN0RaNGIvczcwU2pCY3pQMXlzdjdScEY5bjNKUVhGVWVwYW5iK2d6TlQ3Y2kvWVVjUzNWcFpkCldUdUU5bTZxSFgvRHVDRmZBMkFCWGI4ajNGZzJDSWx3NXpwT2FKS1BXWEp0Ly8ySGZFRVZVRVdLcUdXUUt4cUQKK3YvYWtOTnNWSUU3REIvZ1ZodE9QZUpWckRnc0JOQkhWWkd0QUo5VUxRNTd1VmhTaTRGVVdrUXBIMWVTOGZEQQpIV3NWbHREOEpVc2g0UE1sMmNoZ0JrSDZwSWowZThLWU53SURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DCkJhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXcKSHdZRFZSMGpCQmd3Rm9BVS9yRmpTcGdZMUw4eEwzZkxVK3JqaTZyU0J2UXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUxpWnJiWmZ6NCtpTGl4RjBIR0ZWN3dIaHlzT1FITDdoYXVWT3FHUDBDb3dENENQK2lqOFptUWgvdFVXCkJqdXJSNjN4M1dEV3JyUVAvYmFhZ3ViWVdqa0Zsd2x4WVR5MCs1MFN6WFRvcUtaN2hGelZIcWJUZUFhSVJxT1EKdkljNlY4MzBRdC95eUtXaWd4UTZEWHZlVzdhREhQSlhKbVBjY1NZazFYUGo2TVhJelNNdFpLcUx5d2tWVXZQVQp2cklqNmNaalpMeDEyRGcvY0dBblpXVXZGaW44dGpOaUdWUUo3M21XLzJIMGF4elhNNWttQkFhc2ZBeEpFYVJRCnpudFFEcDFRUFJuZVduSk1wd1U3cE1UZXFxVHV3WEpKUXc3V2ZPR2ozdi8xR1hDZmFYeFY4bTlWVmRuRzI5a24KU3pBQ2dNT2xVYUpObzg5dGF1bk5NcitnVFBvPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbzB2bGRJOXJuUmM1akRVN1Z1RTFyV2lxTExnTXdGcWRyeTJFbUpVNFlwTDdYSXp0ClZldnFoSHRLYXBXQVRqRjQ2Zll5KzNpVVlZbmFJdlhSOFlVeTExejBCUWZqdEx0T0VKT2w0MDZ6M2dzUlVwK3IKUXZMUi9FSGxFTjNaUWg3RFo0Yi9zNzBTakJjelAxeXN2N1JwRjluM0pRWEZVZXBhbmIrZ3pOVDdjaS9ZVWNTMwpWcFpkV1R1RTltNnFIWC9EdUNGZkEyQUJYYjhqM0ZnMkNJbHc1enBPYUpLUFdYSnQvLzJIZkVFVlVFV0txR1dRCkt4cUQrdi9ha05Oc1ZJRTdEQi9nVmh0T1BlSlZyRGdzQk5CSFZaR3RBSjlVTFE1N3VWaFNpNEZVV2tRcEgxZVMKOGZEQUhXc1ZsdEQ4SlVzaDRQTWwyY2hnQmtINnBJajBlOEtZTndJREFRQUJBb0lCQUEwc1owTmkrcFIrdGliSQplSlFHc1JUZk43TkoyY1YreWUvQzVVcUY1em1Vai9Da2NkVVhwaUN2N1kzeHA1c25SSkRqU3JPY3c2T213bEZGCnNYMGhlTHVGQlM2T3QyRHlKMWNSQWpYM09HMTJTUng0UXhHd2t4NGRsc1Fva1lsVEFBS1BFbnZHaWdPQkw2SXgKOE1HNlpTd0dhbml6SVhyOVEvZ3I2R1g5M0pjV2dmMmhVS2JhYzYyT3dSNkdWQTRJSWV1d25vaFhiVzRaeTMwMgozV0tzSEdrd3g1WXYvaDJPbjI4dXBOSlVwamh6Tm5VN3BWUEJUV2wrU0VaQWZMMjJGSS85NVN3Tzc3WlRXSzhMCmVOTjFxQTYvT1lCUTE1ZGNCbDRPU3MvWmR1UU1xRzdOQXV2ekZ5dDYyaXgvQTFodEpEVlJVUkZkdndZRnVvaVcKNEFrVENzRUNnWUVBd2pHeFpNcTVyME91Ui9ldExKaXE5SnEzamQxRTJiNnh2K0pKMkwzN2xEcm9NYWxoTTlEbApJNVVNdUk2N21DQ2hSNHlNbUtrL0wzRlhTZFloQWl5MitEbjRVdXFmN2NzTkxvTkpWN1l6N0lwaUo2K3NyZ1dECnJ3OG9jWTkvMjhtWHorOVJxOWpJYUtTMUphbkNlV250empWSEMyY3cydDJ1MUg2bGRXMDFpaGNDZ1lFQTEwVEQKZHBBcW5JNHg3cnZkZjNBeDdKeVdtR2JZcnl4dUFuVUhCaHVvcnRwRFFnaEhxakM2d2hNYUVBR2tRZ0xoUnRESwpYWFkwajdlNHB2b1hVdHNBNmlqQnc2YzZUMzBZVDl6YlJnenQwbE1qSFBHSzQxa3hJenl0RFhuaTFWQnczVTRxCjZOZml6Y2l6VnRuNFN4TkYzRXFjbzNIc1NTMHZ6N09sQU9BRDF1RUNnWUJwR2hnV294bm9YOHNkckZFUHgva08KdGdZT1ErbVZwLzN3Q250SlVWbXVHa3U5UlIwVXZFU29BMjJGSGNzdVJNckZQSzZEbVdaWE9SS3pKYTlyeStPagphVXliSTkwM0NDUzBQZDRlR01EMWp0Z2MvcG1JL2ZjTmNqakRiWlVYMFgzV3pvSDNiamJaVy91bXpNQXlra0JnCjBMa0kxT3ErS2lrTFhSZ1QrKzEwTlFLQmdCRjhBVkJBOTJVTjI1cGpZZU0yN3Fja05Nc2VGMTFyQTJocHJ1OWQKRWI5WjlQcUpCNkVZSWlNZlFBK3F3bmVtR2p3Uk8wNktDa3plQkQ1enM2OUVJSGZrWlpDSnBaL05Ma3RXU2UwUApvY1ZpZ1VpWmljbGJkalZCZVdETjFKRzAzZVhyc21xRkZtUFdlRktHazdjdFVwQkk4eDRIWThTeHlkOVozUDRNCk0rT2hBb0dCQUlEaFk2ZHR2ZmZSQmpzeEs3Q2cyKzFNQy9VUzNZQ0F5WHJDMXpGZ1RIbStHRE1yZXNvb3U5WGUKUFN5aTlpZUd3cURlTDNBOGNIeHVpeEQ1NlFrRzl4UzU2TW54cHNhY2NTNEpzblQ1cVp3NlRKYVM4NXRBNDl3RQpxczM5SlhMUTlTTVR0L2tTd2dWVlNHMkdjblhXaFl2c3oxdHdrVGRCak40OGx0aFJzRmVtCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5aV3lLWXAza09FVFg2czBjMU5KWjR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4TTFvWERUSTJNVEV5TVRJeApOVFV4TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3TUQyZ3RReERSVXY1dEdEZnUzVDBHM0RaZWlPNHlYalE0VStYYUduSGlYc2VmWjkKcW5UZk80bk41OWFPcS9VNHJveDc2WUdwYWkrdUhFNEZZK1paU0VFVVJ4RDNjZEpTNi9rWThScEovckpmTGNUaQplMGs5Y3BEdVl4QStGeTJsR25hSzVWOFlKYnhRM3g5cnJNeWQxaDVwb3JyWGFsbU5mckR4TmlWR2lDbmJRNlJ5CkM5UTc1dG9TbmZCN2ZQbnJieWo3U25tVmpwNjkyc1FHWUhLOEQ1TjNhMmx0Q0xwYVNoYm5kUzB3MklpbW9MM0IKUzkvckxXcFFTa0tQZ1RDQkpyOWhIZnFnaGROSThVaEZIZUZGVERtM2UvVDV3VDFPbXZYKzNac28vRFpqUExzbgpLNUxrdWRMODNkdEY0cUREcXpaZVloVVRWSmRHS0JvbTRuYVlCd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUDZ4WTBxWUdOUy9NUzkzeTFQcTQ0dXEwZ2IwTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQnJzcU5RMGExNVNtT21EOFlaN0RVVmhsc2I2WFhpbFdTUjRyY25FMC9PUDFQdzFPU1ROYXZ6CnF6dHM2ZkNsblEzRVlBWEwzQ2Z6cXNmeVJacFFuUnNaSGEzK08wYzdrekpTMnE3eHFPRjFuRTZTbVdIWXNnREsKazhhWTZLSndmYzZrcmRjL3dPSDM0enl5N1JSSDdTcHI1RDVYOU5pMjNXdS84RDQrSHVHUXJOOWtsemF2dXJBZwpjT0pBWkJ4MnIxWERtZzZFY2VydFZvZ0EvM3dlNFYrN3pmT0hnUHcwV0wxWXBhanJTcTFaR3pZUGNhbGxaSTlZCmFoUVR6TTIxVU53Mi93S05Nd2UvTDBRUHJieWtCNjdoQW5iaDVmdUFpc1ZKbnF5eVRZZkJRVUcxSmtvbzFjR2gKeWdCM3pZcGM5SDAxWitGejhESDVvdkc2elBtWERIRk4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURxRENDQXBDZ0F3SUJBZ0lSQU1venptaXoxeWhUeFBUS2RBTTFTSG93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4TTFvWERUSTJNVEV5TVRJeApOVFV4TTFvd0tqRW9NQ1lHQTFVRUF4TWZZMngxYzNSbGNtMWxjMmd0WVhCcGMyVnlkbVZ5TG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUovWVpGY09xNHFtbXc4MkptYngKVFZsZ3poS1lmSXdYbkNGaDBuMHovWmNOeEFKQ0Q4a1ZtSlBiZ3RETXY0Y0Fwam11UFhINjN2eE1OUklFWDlqcQoxZXFuU2FFRVhJQzZXKzhoUlE2UTc5VHJwUmZMYW9LdkY3Um5JTkY4aFR5b3BEWEJURXBRVk5MejFEcjdDaDBFCm1zM201ZGllY2lDOXNGdDNmOVJQY09yek9vdVVjWkpPdUo5NjVLcEpZU2ZIaXdMSndaWnlYL0I0RU1wTVBRcXoKd0FOVzhuR3JSeFNwV2Y0RFlsdzB3QTB4eUtBVldnZGsxWTQyUWxoUmhrMCtzOUhwbFdZb1p1Tk4zU2xXZ0V6RwpMZ1NmWFdoUE5DRFZiVlVhT1YvS0ZXMjh0c2dGWUI5bjFxV0RQSXp2WVJCV3BpcFlHb2E1L1JsVERaU3hGbDlZCmFtTUNBd0VBQWFPQjNqQ0IyekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVS9yRmpTcGdZMUw4eApMM2ZMVStyamk2clNCdlF3ZXdZRFZSMFJCSFF3Y29JZlkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnlMbU5wCmJHbDFiUzVwYjRJUUtpNXRaWE5vTG1OcGJHbDFiUzVwYjRJbFkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnkKTG10MVltVXRjM2x6ZEdWdExuTjJZNGNFZndBQUFZY1FBQUFBQUFBQUFBQUFBQUFBQUFBQUFUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBZ0RndmJOZlVmY2V6eHkzYmhqTDVlWG03RUYxdGM4R2djSzVHU3hWdkdMTjFaaEpyCndzQ2FzKzFWZnNTZlowcGllVXJaa2NvQno4cWV2SlZ3TW5sT1dXRk1rL3o4UnhmNzlqdGFNU3lURlhOL0tzNXMKMnRTSEs2MElyRnJzWWZ3V2dOVDJWR3Q5N2pEcERiMk5pZ3BNb2l4YW54SExBdEZONE42OEl2YnluR2Rvek0wMQp1YmlDL3RqRzU5UFJQYVFCUnFLMVl0VTFZZVFBdFQ3WDQxRzE2Z3Y5NTl4NGE0MjFMU05zVEZHOVNZWHM0RlBBCmtldkdmUUNFNmx6OXhxeWpZUzVxUWphU1ZWSFZpazdKSDhjazhVNlgzSENxU3N6SW9pNUlENVlmajhRZGJOU0sKVlBBcDJBeHkxS2lTVkFQSkI1azZJT1M0RUErTFRpNjFaWTE5Wmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbjloa1Z3NnJpcWFiRHpZbVp2Rk5XV0RPRXBoOGpCZWNJV0hTZlRQOWx3M0VBa0lQCnlSV1lrOXVDME15L2h3Q21PYTQ5Y2ZyZS9FdzFFZ1JmMk9yVjZxZEpvUVJjZ0xwYjd5RkZEcER2MU91bEY4dHEKZ3E4WHRHY2cwWHlGUEtpa05jRk1TbEJVMHZQVU92c0tIUVNhemVibDJKNXlJTDJ3VzNkLzFFOXc2dk02aTVSeAprazY0bjNya3FrbGhKOGVMQXNuQmxuSmY4SGdReWt3OUNyUEFBMWJ5Y2F0SEZLbFovZ05pWERUQURUSElvQlZhCkIyVFZqalpDV0ZHR1RUNnowZW1WWmlobTQwM2RLVmFBVE1ZdUJKOWRhRTgwSU5WdFZSbzVYOG9WYmJ5MnlBVmcKSDJmV3BZTThqTzloRUZhbUtsZ2Focm45R1ZNTmxMRVdYMWhxWXdJREFRQUJBb0lCQVFDRFAzY0VWTE5kNFhjbwpnbG45NU55U0t2NktIbE1GNU16NlRBdzlhZGNybE00QTNLV0JndzRKT2hDcnliTHA4d3FLQ2h2QjN6QUJFY0h4CnpVMjJHdjBTODlGdE9OdUxoM205WENBTDJjNVRram00MC9uYzNGQW1mUmRoYTFFcmdYMXo5Z2ZpYlJ0NUsyUjAKR1hVd1pudUYzYldVckdVaHBSK051dzFuRXVPd3hrSnpuSkRaOGMzUHJGU0hETSs2VlBpdnRlWGlXR3V0c2dKNQpPaHhsMUJlaWpKeUxHU1Ivdko0OTAvRGFWNGxXVzVLOTdqaUpnREt2WlhNdmdRZUE3RzZJeHVYKy9tM0dOWE9lCnpnMDIxS0ZNOTVHL1NQdnhCN3B5NFcxZjl6cXk2RnZrbC8wdUNYWGlyWnNldldpNnN5Y3ZSbXpLQWJOVGlheDMKVzdPYU16eGhBb0dCQU1rZXhMWHdxQnBZcHk5LzVORDBPK3hpWjNSUXMxU2cweUVacVNGRU5JcEFORlBHTmljUApjNVJQdzRnaXp5ZCtrVTJwUTI5VllZWk1Ga1dsVWY2WjlzOW9IU25uZzgrZjRxdDdjdmdwb3ZybVo1ckdrVUNwCkRBVVJNY3JrWnZQWUdKVjYwSDF3YzYrR0xCZThiWHB0a0c0THNvbmh1WVN2bjlza2U1cWVRMEozQW9HQkFNdDIKWG1scHpuZHpOa0pPNTB5L01veHVhNFgvVThSU2M5dncrTjJNMWdpSlNRWnJISnBrbmdFNi80VmNzYmJjbGRHWQoxSU1WSnRFMThoT01lMlZjd1Z1NGZ4d3NCQjBtWFdPaE5SZEZVd0FjdGRxZE16WjF6eXoxTkNYSXBKa1l5NEhaCjdaeldLUTN0VllTTWZwZWxJbTBDWmxTa3RGMi9RQ1Y1ZWJCbUpjWjFBb0dBZWV4dk1DVU9vN291MERybVNrNWwKclc0U2JZOG15QjBmSVNmZlFrMkkxRzhMeWVXVm1xUmhXdjNuK2JXd2c2N1ZBNUdqVWZFZXlEMkVHd0NYN3BNRAo3c1NkT1hRaWtsSEpKbEFXYUo5Rk1IbFJRYUV6R1ZIaCtZaHMrU1R4ek0ycVNhUkVsR2NCbXR6cUNoR3ZCTk03CkJadU54c3pTbkwralYwU01zalZUYlEwQ2dZQnBLY3R1ek9PTTFoNExjK0VWeUJXR2hHUkxKRWZWeDVCZTlGU04KbndmWjdhdXpCNVlITDA2RDhFeTJUODBEYVV4K3czSEVOeUNUTGtEclhjZENBd2xtTVJ4eUlVWVhFd2RlUWFyQgpWbkdxTXl6RHpGRDJLenBrVUhFZHZuRmxPRzJudGs2Y3JBMFlSNzNWL3hCSHJYRDN5eSs5UEV5RjBCNkZ3QjNuCjBVUmhLUUtCZ1FDa2o4SlMvWVFqek0vZUt1QUpDcDRiVXJBM3U5b0UzVVczS2VpZU81cnR3WjdmMFBNckRJb2cKV3d0UUlWL2pFcGxyenZTYzZ2ZFg5eXdlOG9ZUm5LMGJ5NkxsZkVKTVo0Q1Z0cm1IVFhzRFZrSjNYMFdrVjBwNAppSE9iUnZiT0F4ZGd5WTQ4aWdBd2hoM0pFNmhCYzZYMms3VHlhdHRESHVqVjFReUt2anN5amc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5aV3lLWXAza09FVFg2czBjMU5KWjR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4TTFvWERUSTJNVEV5TVRJeApOVFV4TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3TUQyZ3RReERSVXY1dEdEZnUzVDBHM0RaZWlPNHlYalE0VStYYUduSGlYc2VmWjkKcW5UZk80bk41OWFPcS9VNHJveDc2WUdwYWkrdUhFNEZZK1paU0VFVVJ4RDNjZEpTNi9rWThScEovckpmTGNUaQplMGs5Y3BEdVl4QStGeTJsR25hSzVWOFlKYnhRM3g5cnJNeWQxaDVwb3JyWGFsbU5mckR4TmlWR2lDbmJRNlJ5CkM5UTc1dG9TbmZCN2ZQbnJieWo3U25tVmpwNjkyc1FHWUhLOEQ1TjNhMmx0Q0xwYVNoYm5kUzB3MklpbW9MM0IKUzkvckxXcFFTa0tQZ1RDQkpyOWhIZnFnaGROSThVaEZIZUZGVERtM2UvVDV3VDFPbXZYKzNac28vRFpqUExzbgpLNUxrdWRMODNkdEY0cUREcXpaZVloVVRWSmRHS0JvbTRuYVlCd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUDZ4WTBxWUdOUy9NUzkzeTFQcTQ0dXEwZ2IwTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQnJzcU5RMGExNVNtT21EOFlaN0RVVmhsc2I2WFhpbFdTUjRyY25FMC9PUDFQdzFPU1ROYXZ6CnF6dHM2ZkNsblEzRVlBWEwzQ2Z6cXNmeVJacFFuUnNaSGEzK08wYzdrekpTMnE3eHFPRjFuRTZTbVdIWXNnREsKazhhWTZLSndmYzZrcmRjL3dPSDM0enl5N1JSSDdTcHI1RDVYOU5pMjNXdS84RDQrSHVHUXJOOWtsemF2dXJBZwpjT0pBWkJ4MnIxWERtZzZFY2VydFZvZ0EvM3dlNFYrN3pmT0hnUHcwV0wxWXBhanJTcTFaR3pZUGNhbGxaSTlZCmFoUVR6TTIxVU53Mi93S05Nd2UvTDBRUHJieWtCNjdoQW5iaDVmdUFpc1ZKbnF5eVRZZkJRVUcxSmtvbzFjR2gKeWdCM3pZcGM5SDAxWitGejhESDVvdkc2elBtWERIRk4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUlGMzFteDRNcHFKQUg0ektDR2o2TDB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4TTFvWERUSTJNVEV5TVRJeApOVFV4TTFvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQW4wR08vN2FQVXFSREhPeGV6Y3F3VU8zYjAwREMKYnJ6MFB0aEVDem4wcUhUaWhMNWFyNW1UQmhOTDhsaS91SmNyS2JYaW95RVZYVVVxY2hHQWFDcXExc0pVR3FsZgpDQU9WTm5UYUZQMUQrQzhET0dkcXlXS0prZ0xNV0FDN3E0SHhUYVU5SzIvRU52QUpOWjF4N2NMdmFrWnBrZVVICkNDZlRTZ21pSjR6aEt6aDlpNTM0WFMrSk84R0dFSGs4cGhDTFpld2NUaHlkNW5hdXFCamZHL1ViYmt3a3ZkdkUKMzZNYnVtUTJjMUN6bVV5RWY4VUEyQ1Q4cUxOd2NrdUowQVJSeWRkSFYwclFZM2hvYTcyNk1qTXRTNGNrTnlkVwp2eDdjaVVISTlmOU5URmI1MFJLL1UxWkVmMG9JenJQa2N4UElkZnJHSCtURGZ3dS9KN0VvcGZCS1p3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVCtzV05LbUJqVXZ6RXZkOHRUNnVPTApxdElHOURBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBTFhTR1NaU1dFcmhmeUJDUjhlaVhBNnFyU1FTM2luN29tdjFlc1pwVXhmbkJ4ZmsKOVBaTFZjbER5UndLMnltRHJoQjlHSk5uU2dSd0Z4dXVHV3VRRThCcmU2Q0o1cHF5TGZpTTY1Wk1HVjFrbmI4UgpHVTdzaGlrcUttb2szMFRMYXBPWVhOLzV1Z1NWUjNYRjJMdkQvVjMyVTVmcHhickpFTlhyVms2Um5ZSVhTZ0QrCk0xcE9KOHd2Y280TkZWODdBQ0VCckxSaGVlVURmQ0VYZTNSVzdMaWFvQ21FdWtkOGFycG9qZmwyWWJSdEE5NFMKUEFrK0hIeTI4YnQ2ODMrVTRYM29kdVRkYmx5b0xhYW9FTjBmUXAvWWFMQnIwWGhFck9KVE95ZXZ1THpRZFNKbwpVOW0vbXlxVUZEM1luR2czdlJ6MGdyMlVIb0xrcFltYWZRRDRmZDA9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbjBHTy83YVBVcVJESE94ZXpjcXdVTzNiMDBEQ2JyejBQdGhFQ3puMHFIVGloTDVhCnI1bVRCaE5MOGxpL3VKY3JLYlhpb3lFVlhVVXFjaEdBYUNxcTFzSlVHcWxmQ0FPVk5uVGFGUDFEK0M4RE9HZHEKeVdLSmtnTE1XQUM3cTRIeFRhVTlLMi9FTnZBSk5aMXg3Y0x2YWtacGtlVUhDQ2ZUU2dtaUo0emhLemg5aTUzNApYUytKTzhHR0VIazhwaENMWmV3Y1RoeWQ1bmF1cUJqZkcvVWJia3drdmR2RTM2TWJ1bVEyYzFDem1VeUVmOFVBCjJDVDhxTE53Y2t1SjBBUlJ5ZGRIVjByUVkzaG9hNzI2TWpNdFM0Y2tOeWRXdng3Y2lVSEk5ZjlOVEZiNTBSSy8KVTFaRWYwb0l6clBrY3hQSWRmckdIK1REZnd1L0o3RW9wZkJLWndJREFRQUJBb0lCQUgyTFlQK1ZHMGM2MXUxbQpLUlp5UXF5SjFsR2pLNlBBc1lzWlVnckhsV2QzUFZzSDlOV1phNTNPZUlDRUZoK2VqQmhGbW5TZkVBaUhEZjcrCmJRdXhGeHhWOVpkUERldHpaNTJXWUpWTFV0bkR0Zll4RUszUlVFSWFrcHlOZDJTcysxMEtkajVYelliQms0RUEKclYrUjNNc2ExdjU4WGg2L3hvRUhOeDJXb2FzL2p0d2U2dWFGSVNacVY4TVI0UEJOTmFtN0xlUERPa1VFQVdHawpSaHlHT2ZiS3FkZExTOFVlVUV6bU9rVm1zaHZ0YVdQcjFsZWZrbHlMallhWGUzcmFydFk5VDU1MzRPb29jT0dnCmoxRk93Y0ozWUxaOHVIa1dnUjVSV3NBUXdNMHl0V2RFMFNkTEFGcVZjY3lRUnBROExuSUFOSWhQMkNzSFF5K0QKZVkvdnRZRUNnWUVBeUNnNWFLdndGMEVxVWxvVVRUdWllelBpU2pjUmU4aEhUQklYK0NnZ3dxV0VwMVU1TG9FbQpQQ3VPNlY4ZDZjb3d2eXF4cUtEYUovOXk5c2puTVJrYlJlMTZHVE9WK1hjdVYwcXRYMDYzZE94eE1qSmN3SmNzCmJVUWxJNlp3YmxvQzBGUUJRQXI2Y3VkNWtBU3JUZSt5MEFYd1FsMHVGbzVFWVhFb1ZPU3hJak1DZ1lFQXk3QVIKcldWZ0VqcVgyR1NiZGdaaXhwWjczbmFTZWdBUkVWK3E3QzViZlZrTWRpODF0L3QrbHpLWXNjbS9qaGpYdUkrMwp6WWtVM3F0N2FTa1c5U0FXSEFlWGJGRXRSVzVzVjFLYmtaVm1pVzVETXdwR1JWYmpBT0xlcnBSbGo1aVFqOHFpClljOG9Bbyt5NnZIU2xPZThTaHRMdXlMY1FLcmE5UnR0UllIR2l2MENnWUFySWhmMUNaQnN3bnRIVWVnc0dKelUKSmdNdThSMFFhc0dLa0IrZ042MlBwTEdvaWNJUDFuOFIybVVxdjNlbnlRMm1OS0lpYjc5emZTWWVMbjg3NG1neApNcExzV1dTSlpQaVVrU0E1ZUxJcVBVWExoblRjZi9kditJNTBWMHJGVFJwc0lKNUFXZDFNNDdzYm9SWDFicUUvCkdQaUVwS1hvOEhHbCtnZXgrN0o4WndLQmdGSlAwSlQxeHFFWE5JMnArbmp6azY4VTJQSEprTi9rYndGS1c5UWQKMTdNTDdWRkZPcndpMGNGZ0hQeWJ2dUU1Z05PQW9KSmF0eWhVdkFaL0tGdmVuNUNzTUxFQkRQNWw1VHBVazdGOQpZblpmTEtEUG9oNGJRcGoxRlhBUFlBdHJaOS96enpNZmQ5ZXhJbWgzV05YNzM4ZEN5SlBUUHBhVGRQQmdLUVJSCnNWNHhBb0dCQUwxcGZpM1ErSERxT25MeVBBVFpiUkVzdWZQc09LMFN1OHU5VDNQZGtFYkZkTlZaUW8wSW02UlMKS21YOHNzWDNiaGpnc3RFcDRrNzdLcDZLc0VVamNEd2NZa3pOekpHVXE0Z1N3dVY4SytmejJ2dHJ3RDkwYXlsaApmVWJHbmZDa3BkRE1Ib3VBcDBwRDY5NXhzcVFxTDNFaHRjaVpBN1pIM1I3OEs3ejFxZHM5Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5aV3lLWXAza09FVFg2czBjMU5KWjR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4TTFvWERUSTJNVEV5TVRJeApOVFV4TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3TUQyZ3RReERSVXY1dEdEZnUzVDBHM0RaZWlPNHlYalE0VStYYUduSGlYc2VmWjkKcW5UZk80bk41OWFPcS9VNHJveDc2WUdwYWkrdUhFNEZZK1paU0VFVVJ4RDNjZEpTNi9rWThScEovckpmTGNUaQplMGs5Y3BEdVl4QStGeTJsR25hSzVWOFlKYnhRM3g5cnJNeWQxaDVwb3JyWGFsbU5mckR4TmlWR2lDbmJRNlJ5CkM5UTc1dG9TbmZCN2ZQbnJieWo3U25tVmpwNjkyc1FHWUhLOEQ1TjNhMmx0Q0xwYVNoYm5kUzB3MklpbW9MM0IKUzkvckxXcFFTa0tQZ1RDQkpyOWhIZnFnaGROSThVaEZIZUZGVERtM2UvVDV3VDFPbXZYKzNac28vRFpqUExzbgpLNUxrdWRMODNkdEY0cUREcXpaZVloVVRWSmRHS0JvbTRuYVlCd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUDZ4WTBxWUdOUy9NUzkzeTFQcTQ0dXEwZ2IwTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQnJzcU5RMGExNVNtT21EOFlaN0RVVmhsc2I2WFhpbFdTUjRyY25FMC9PUDFQdzFPU1ROYXZ6CnF6dHM2ZkNsblEzRVlBWEwzQ2Z6cXNmeVJacFFuUnNaSGEzK08wYzdrekpTMnE3eHFPRjFuRTZTbVdIWXNnREsKazhhWTZLSndmYzZrcmRjL3dPSDM0enl5N1JSSDdTcHI1RDVYOU5pMjNXdS84RDQrSHVHUXJOOWtsemF2dXJBZwpjT0pBWkJ4MnIxWERtZzZFY2VydFZvZ0EvM3dlNFYrN3pmT0hnUHcwV0wxWXBhanJTcTFaR3pZUGNhbGxaSTlZCmFoUVR6TTIxVU53Mi93S05Nd2UvTDBRUHJieWtCNjdoQW5iaDVmdUFpc1ZKbnF5eVRZZkJRVUcxSmtvbzFjR2gKeWdCM3pZcGM5SDAxWitGejhESDVvdkc2elBtWERIRk4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUekNDQWplZ0F3SUJBZ0lSQVBTeU5pTkFxazFnQWpMMFRWOGxqVXN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4TTFvWERUSTJNVEV5TVRJeApOVFV4TTFvd0pqRWtNQ0lHQTFVRUF3d2JLaTVqTVRFdWFIVmlZbXhsTFdkeWNHTXVZMmxzYVhWdExtbHZNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3K2tCeVFaMGtLVVQ3TTNYaUFGUzd4NmoKNkYxdFF6SjlkbTFhVjRRcHEyMHJmL0MwL1lHK2tMQlZsc1AyNEFXYVFJR1RQSDNIc0hBdUpMVnV0SVlzUGRTYQpkdFFYTitZUnFuT3VkQUhYRVgzVHc2K0RNYU4wMHZiT1VkR2MxTGE5VFhsMlBuR1pRSVJNL0FGVmJwUEpVM2VHCmhkOGsrQzU5QUozVTFBYlNzclJlclIxTGRGdWRLTlBXenpjSWk5cEZVSDlqT2JBR2x1Wm0zMTZqN1YxYTVvekUKWGFZSEZxNFRIVHVtcVRPeE96Qnk0WGphTndodUw4VlZjZHFPMmxmWjVtclVSMWtQMVpjUXJOYnQ0RFVzaU5mYgpBeG1RTUI4RldOYnJ1U0dZSmtYK1RMUjBDS2pPM1oyWEZpQ1U2dCs4aGl5dldCbHlTTWlGamZWU3hJcWpod0lECkFRQUJvNEdKTUlHR01BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlQrc1dOS21CalV2ekV2ZDh0VAo2dU9McXRJRzlEQW1CZ05WSFJFRUh6QWRnaHNxTG1NeE1TNW9kV0ppYkdVdFozSndZeTVqYVd4cGRXMHVhVzh3CkRRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHTDJaaHJmWS9rRDFISXhMdWc1cjQrQTlkOGRxSlV6ZlN6RjBBd0EKTnFGY3F0aVBvdGMxeEpMNHdPN1VwRktiSHlKWjVON2FyQ21ZcVFSeFNyVFhoNjdSb0hiaSszODJ3VTBSSjNVbgpub2ZiYTVaRWRLc0VWL2J0QjNTUm85SjR0eFNwYnB3WjZuOHZVNHRCV3VhSkpZa1pJTWoyN0hON280N1U2UXprCjIraUdFMUVsQkpCdS83NnR6OWx1T3FzMUdCZXNxUjNNeXozMzFUa2djWXg3eFRJWXJWWWIvTCtRL3UwR1hHZ2kKQUFiZlRkQk9vRGd1VWVmbktBQ3dvQXg2dVNXdkg2Z2ZSSWd4Qy9uRG5EcVZ3NUt6QlUvenhIWWZNRDEzUGlmSAoyR3FRNjlNUE80eEN6L0FaN3F1YjRkNVVYY3oyb2VUOTl2UnZrSmJQaXYvOTF5dz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdytrQnlRWjBrS1VUN00zWGlBRlM3eDZqNkYxdFF6SjlkbTFhVjRRcHEyMHJmL0MwCi9ZRytrTEJWbHNQMjRBV2FRSUdUUEgzSHNIQXVKTFZ1dElZc1BkU2FkdFFYTitZUnFuT3VkQUhYRVgzVHc2K0QKTWFOMDB2Yk9VZEdjMUxhOVRYbDJQbkdaUUlSTS9BRlZicFBKVTNlR2hkOGsrQzU5QUozVTFBYlNzclJlclIxTApkRnVkS05QV3p6Y0lpOXBGVUg5ak9iQUdsdVptMzE2ajdWMWE1b3pFWGFZSEZxNFRIVHVtcVRPeE96Qnk0WGphCk53aHVMOFZWY2RxTzJsZlo1bXJVUjFrUDFaY1FyTmJ0NERVc2lOZmJBeG1RTUI4RldOYnJ1U0dZSmtYK1RMUjAKQ0tqTzNaMlhGaUNVNnQrOGhpeXZXQmx5U01pRmpmVlN4SXFqaHdJREFRQUJBb0lCQUhpTXZXdDhqR2VoSEtTZgplUnVZYlBiMDdMa0VIRUs0STltbXFtdWx5SnBTdit5bktrZS8rWXBBNXpteGRnMGRoWEJpQ3o2eXl4aTN2cjBaCjQzZzBBNjg4VHB3R0lBOW1nOEpXRXFnUnBjeCtsN3NYR2V5R2YxRjlTekd2Z1Fpbk5jOGhpWEFkS01jNVljSEQKOUZUcG5YMjkwOG8ycUNJTFFTSUsvTFpIU0lsclBHM1VEdVZlWDJNSmtLelR3YkV4aGtqU085RytpZVZuK2grNgpFdWQrRm9MWldHajY1dUNHUkJvbDBvRTdNMzJIVHVKaGFjUG1rbThyTURwK2Nma2w3c1dyQlBCcVhnVEtVaWl5Cml6eTVCem44dTdPVnI4K0h1VFFuOVNhMXI0NGVPNGkwMHRHaXloQnJIdkV5aXdBRVNaWk9zYzlEbW1qYWMxaUMKN3JYSGwrRUNnWUVBK216SGVERGRXdExmaU1QcU1xazE1R25lQUJveWIyTUxJdnN5RXZCbzlMTE1aeTRTSEZ1dApMUXUzUTRaQWlCOU1qVmxxemViV0IzWWI4aUk5aFljMFdOUUJQb3E2NWVXR0lOS1VwS25KYTloekN1NE56ZWRtCnl3NzNoNkIvbU84bGR2amlkS0wzVTFMK2duV0NObjBUbWozMlE1OVBsaldwMW9FU21mZXB2ckVDZ1lFQXlFV0oKb0tYQ21SZTdBam5xK2VYL3RrWThaY0h5OGFnMGtzUzBqU3RYSC9yVjBhY0hNV3VXZTBDcVBLS0swWTBmWlE5OQpZdmFBbTVnSnhNZ2ovb0Q2bkRadE14REE3NXhCbnZDRWE4Tjhuck9CTHptL2lvTzhEUXBBT3JpdEJ6djNOZ1Z6CllEV1NIL1poR2d2ekJRTWx2V3RzZVdJYVAyNnNVS2tkOTZLN1E3Y0NnWUJRVC9hZ3l6c1NWN0tzei9nYUN6NW4KWkxSMzMrN3czaGpDUFVGUDVaNGphL3cxMHdhbjVaYmliWEYyekdXQndsZnd0UTZWdmtSQjNGVVdFSGtlaTcvMApCUG5wTHVERnZoaUlDa0QxbGlZczJodjdFMkdGK1lKeitQYlZubG1ObUpTeFZSeDdQNUNHUG9XMUhTNkhmeEY4ClZBYllwUTBISldxMGlteUd5SEM5NFFLQmdRQ2xmdms5UE4xemYyMjFhRUVxSXd0T0IvcHZLSGZuaE5WMUY0SVEKU21sajd2ZDBtYTlUQXBKRzVlZ0gxVlliMXAvRDlxbnA5c1BPVURSNlhkMkl1ZkxlMWdjbE5Nb0s5N2d1YkpreApLRWs2S0NJdjhXdThQaUpQTUZKbGRDamdHb2l1SnBEeVJ6S3FvUUlhOFJidzVHbnlmdXdUM3FMTUdsdmhCKy9RCnJMUk5Qd0tCZ0JKSjRiMUljMkhPSldXNHpmdGxRcFg4azRReDJ1V29XR0FwUDAxamFDN28waFRKeG9MN0hsVlIKeWU1cUFJYlVKTWdEZkRMRDVncFFSaWtXeVhsaE5seFd0TzFXRGUwckFrWWc2MkxUYytPSm1CVndPelh5WC85Tgp2WnR3N1V6UFVVS2JHbjh2RjJEMVZZVndWUzkyMzVLUWY0b3haZ2wydWFqakJBRXBUV2JZCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: c11
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "111"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-wireguard: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "false"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  ipam-cilium-node-update-rate: "15s"
  cluster-pool-ipv4-cidr: "10.11.0.0/17"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  cnp-node-status-gc-interval: "0s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "true"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"

  external-envoy-proxy: "false"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: c11
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/clustermesh-apiserver/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumexternalworkloads/status
  - ciliumnodes
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumendpoints/status
  verbs:
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumexternalworkloads
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver-metrics
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/component: metrics
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: kvmesh-metrics
    port: 9964
    protocol: TCP
    targetPort: kvmesh-metrics
  selector:
    k8s-app: clustermesh-apiserver
---
# Source: cilium/templates/clustermesh-apiserver/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  type: NodePort
  selector:
    k8s-app: clustermesh-apiserver
  ports:
  - port: 2379
    nodePort: 32379
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.14.2@sha256:52f70250dea22e506959439a7c4ea31b10fe8375db62f5c27ab746e3a2af866d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/clustermesh-apiserver/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: clustermesh-apiserver
        k8s-app: clustermesh-apiserver
    spec:
      initContainers:
      - name: etcd-init
        image: "quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args:
        - |
          rm -rf /var/run/etcd/*;
          /usr/local/bin/etcd --data-dir=/var/run/etcd --name=clustermesh-apiserver --listen-client-urls=http://127.0.0.1:2379 --advertise-client-urls=http://127.0.0.1:2379 --initial-cluster-token=clustermesh-apiserver --initial-cluster-state=new --auto-compaction-retention=1 &

          # The following key needs to be created before that the cilium agents
          # have the possibility of connecting to etcd.
          etcdctl put cilium/.has-cluster-config true

          etcdctl user add root --no-password;
          etcdctl user grant-role root root;
          etcdctl user add admin-c11 --no-password;
          etcdctl user grant-role admin-c11 root;
          etcdctl user add externalworkload --no-password;
          etcdctl role add externalworkload;
          etcdctl role grant-permission externalworkload --from-key read '';
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/state/noderegister/v1/;
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/.initlock/;
          etcdctl user grant-role externalworkload externalworkload;
          etcdctl user add remote --no-password;
          etcdctl role add remote;
          etcdctl role grant-permission remote --from-key read '';
          etcdctl user grant-role remote remote;
          etcdctl auth enable;
          exit
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      containers:
      - name: etcd
        image: "quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/local/bin/etcd
        args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        # Surrounding the IPv4 address with brackets works in this case, since etcd
        # uses net.SplitHostPort() internally and it accepts the that format.
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=clustermesh-apiserver
        - --auto-compaction-retention=1
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - name: etcd
          containerPort: 2379
          protocol: TCP
        volumeMounts:
        - name: etcd-server-secrets
          mountPath: /var/lib/etcd-secrets
          readOnly: true
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      - name: apiserver
        image: "quay.io/cilium/clustermesh-apiserver:v1.14.2@sha256:0650beac6633a483261640b6539c9609f5a761f4ab4504fd1e6ffe7f2bb82e9a"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt
        - etcd.config=/var/lib/cilium/etcd-config.yaml
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: identity-allocation-mode
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: enable-k8s-endpoint-slice
              optional: true
        ports:
        - name: apiserv-metrics
          containerPort: 9962
          protocol: TCP
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: etcd-server-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-server-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-admin-client
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-admin-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-data-dir
        emptyDir: {}
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "clustermesh-apiserver"
      serviceAccountName: "clustermesh-apiserver"
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: clustermesh-apiserver
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.14.2@sha256:a89030b31f333e8fb1c10d2473250399a1a537c27d022cd8becc1a65d1bef1d6"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.12.0@sha256:1c876cfa1d5e35bc91e1025c9314f922041592a88b03313c22c1f97a5d2ba88f"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.12.0@sha256:8a79a1aad4fc9c2aa2b3e4379af0af872a89fcec9d99e117188190671c66fc2e"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.

# Only create the namespace if it's different from Ingress and Gateway API secret namespaces (if enabled).
