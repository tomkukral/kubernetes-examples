---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRUmRJb2I1RENrVnRUTHZqc0NLSEZ5akFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOekl3V2hjTk1qY3dOakV4TVRreQpOekl3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRG4vT2xlenlVSWY4M3VDYjZGRlBhcVRCTmM4ckhPeDNIbUV1UmtqdjBWcjlGV1g1ZkkKWVhtcTd0WW1qRVhZdGVrSzBFbldORDFjZXYxUlQrOUxPNmlvOHpqV1Y4THFITE1OcHJHNVA4d0FrWmtEZGh2VwpiSmxSVHQ2dkFlNGtMRWlxNUVId0w5UlZlYTg0Ykg0ZVhyWDRGTU5RdTVMSmpNY3lzRFVzTW1GNTUyQ01UZU8zCnZpSlJCdnBZckF1cHRvWUQzNm9kaEZCajdKRlVwSC8yS3VaYzhMMW9nMGFRdGp1Q1NwKzlaTzR3ZTJBa2E1VmcKK2JERnlHMUlMd0RHei9Nd1NzQjRydEpnZEtDUFFISm01VlUyNXZiOFdMTXlHVHZQcktvMzFxLzJjeE0xSWphRQpnUENFZXhYRnBWalFMVDBTSEJ6WGIrcTFhMWNOVG81QmdXVDNBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU3eC9ic2t0dThSUDhBZ2VyQmxva0VneWxkQll3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIaUdEUzZzeE9YbFBSSEROaUY3eTYxMDRzUWM1Ry93eTIzUkZma20rU1hzN0NhY1FXNlNHTTR4CjkyeU5ORkdWR3ZpcnRiQXpleWJVYWtwVUtieFJIZk15dUhVZGFYc2JIOHg0UDkzUC83U1NaRkZ2ZkJkN01qOE4KbGlNb0lrdFJueC94WnMyU1ZqekhPTDUvbUZEZ0RUdE02NldhNUVWL3V2UEVhOWJlcjIxT0pjU2I3TmM3UTdrRQppVFIrZGV1cTA5U1B0UDR3UWNudndtUTdoR0ZhNFYvVHU0VGUwTTliVnlhU0hnVytZSnhsQlhLNGVITW9CZzVvCnc5NlVnRjI3QUxJQzJTU3pmYmcySjRLTS90SmYyUHVHaGFTdXplNmVEeFhSOTMwUC9Nb2NlYjZDcUpoMk12MmcKSUozS25DN3dFR3kzVit1M21HbGVPdURSM1JlbEw2dz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNS96cFhzOGxDSC9ON2dtK2hSVDJxa3dUWFBLeHpzZHg1aExrWkk3OUZhL1JWbCtYCnlHRjVxdTdXSm94RjJMWHBDdEJKMWpROVhIcjlVVS92U3p1b3FQTTQxbGZDNmh5ekRhYXh1VC9NQUpHWkEzWWIKMW15WlVVN2Vyd0h1SkN4SXF1UkI4Qy9VVlhtdk9HeCtIbDYxK0JURFVMdVN5WXpITXJBMUxESmhlZWRnakUzagp0NzRpVVFiNldLd0xxYmFHQTkrcUhZUlFZK3lSVktSLzlpcm1YUEM5YUlOR2tMWTdna3FmdldUdU1IdGdKR3VWCllQbXd4Y2h0U0M4QXhzL3pNRXJBZUs3U1lIU2dqMEJ5WnVWVk51YjIvRml6TWhrN3o2eXFOOWF2OW5NVE5TSTIKaElEd2hIc1Z4YVZZMEMwOUVod2MxMi9xdFd0WERVNk9RWUZrOXdJREFRQUJBb0lCQVFDYkRPU0ZJM21pOXBpUwpVaHp1SVpiRE4xbHh0QnUzRW9KRHZiaThwUHp1TTdaOFBpUGFINXdMN05sZ3BqeEFuVVNHbjdQWjRNeHFOU0Y5CjZTa01aWEZTaWswZ3BVTjI2WHVhMGlEU3Fac1ZmanFBbjczM1VGb2doOUE1czlhUWdyQ0cxMHhpMWZUYXRCdXkKWUlEaWwzYVR1bnpZUnFYUzQ2NTNhR0lCaWlLd0wvai80ZEhjd3A4SEVlUXNOZDlSY2ZTcEloaDR3MWc5SkVIawpTY1BiWVVQR3huajRnR1h5azh2KzYzOWUwaFc5UER4VE12clhDcnI0VHB1cTR3RnQ0dWpEajFSRGlOZmdNckk1Cmh6YUFyTHRPcWZGb29VU0UyR1NVRzdJNy82V2liU2hsMlV1VUo5dEl4ZytBMHpGRWxKWDNrWUplSkVhTVBVYnAKckxINzloU2hBb0dCQU8rM2lJdnQ0YTNETGdubGVrREpiZURDck5SWXRiKzJSVklEUWprTkpudmVXQ2huNVVhMQptKzQvM29WU0RBbjBQNDQrSlhKRnRCbDVhbEtVQ2pRM0pHSFpRQlZkclVwMk1mZmhOWlFRd3lFYkNJc2tZbzl0CldPaklMY0hWeVM0dExQb1VJQTN6WGNVbkcyWElZcmpEMlF6bFRKVVVuY051S251MEtCcFZFdXg1QW9HQkFQZSsKK2xTYkVVRnRxWTUrOFEvUFZzbmVyZmdKS2o5ZDkzeHNzL2htZzkyZWIzQTVKaEZyTHJJWWtTck9Manc0MncrdAowZ0hOOXFyRUhKOTFUTWtBcDFzY3RwUTVvdU9KN2FTQmJkQytLM3dVMHlRWDZHa0Fhd2lJVjNHYy9UenpFYVVjCkxzUlRXbEk2RTdJbGhsREFaZkRGOEd4bU1aejR0RnhGbnNmd282RHZBb0dBUXBJZGdYNldaY01HVGdsRVlpbU8KTWhUZUdqcG9mczBIZ3pjVWRQT0o5R3hTM3lXN0xsL1E1ZUVtMHE5dVdIVlVFUlNCSWJMcHlRbEcxWmYzSFhrUwp5WG1qcWt0UmpKUTJYRGhXd0wvRzhMS3BOTHJ1QkJiQjBpT0ZVWWNsVDRXTU1BYld3QWtOeVdxSzJVRkU2VHE2ClZESjVpZzBub3RZOVJnMUo5Y1lhYzBFQ2dZQkdDbGY3VTF1dGc3Tkw5ZGR4QU0wb2hTdnAwNjE5L0xMYkdtQkcKK2JTT0V4eXVQWG5sc3NlZzBoRTRhTkhwZEtsNTVVcForRUNrUm8xUkIzaU4yd0YxWU1pOVh3NE9CaENKVVk0YQpWYWsxaXkybUpwd3VFMUF2T1Z4L1lrSzEySUpFaTVNdExlTjdHN0ExelNZTDdsamptUkkva3lTem5CeGhlYzFKCitWNUpRUUtCZ0dxQi9yNjZRVmFoNWFGTWw0MngraGZIaU4yUldPaUpjMGo2ZFgzOTdQWjRvb3ZybVJkWGVFT0sKS1FyTEtVMUhsT3dneVo1VjAyVFVzakUydTJwY3dsQWlHV1JXOHR1dkljM1BWVklrWnR4ZkRRN216c28rOUprcwpXYUdITGtOQkd3S0tUMy9XcWF0Y3J1OUIyNFg2YUNhQThBUFIybFJLZUloNFZyTnRHZTl1Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/admin-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRUmRJb2I1RENrVnRUTHZqc0NLSEZ5akFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOekl3V2hjTk1qY3dOakV4TVRreQpOekl3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRG4vT2xlenlVSWY4M3VDYjZGRlBhcVRCTmM4ckhPeDNIbUV1UmtqdjBWcjlGV1g1ZkkKWVhtcTd0WW1qRVhZdGVrSzBFbldORDFjZXYxUlQrOUxPNmlvOHpqV1Y4THFITE1OcHJHNVA4d0FrWmtEZGh2VwpiSmxSVHQ2dkFlNGtMRWlxNUVId0w5UlZlYTg0Ykg0ZVhyWDRGTU5RdTVMSmpNY3lzRFVzTW1GNTUyQ01UZU8zCnZpSlJCdnBZckF1cHRvWUQzNm9kaEZCajdKRlVwSC8yS3VaYzhMMW9nMGFRdGp1Q1NwKzlaTzR3ZTJBa2E1VmcKK2JERnlHMUlMd0RHei9Nd1NzQjRydEpnZEtDUFFISm01VlUyNXZiOFdMTXlHVHZQcktvMzFxLzJjeE0xSWphRQpnUENFZXhYRnBWalFMVDBTSEJ6WGIrcTFhMWNOVG81QmdXVDNBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU3eC9ic2t0dThSUDhBZ2VyQmxva0VneWxkQll3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIaUdEUzZzeE9YbFBSSEROaUY3eTYxMDRzUWM1Ry93eTIzUkZma20rU1hzN0NhY1FXNlNHTTR4CjkyeU5ORkdWR3ZpcnRiQXpleWJVYWtwVUtieFJIZk15dUhVZGFYc2JIOHg0UDkzUC83U1NaRkZ2ZkJkN01qOE4KbGlNb0lrdFJueC94WnMyU1ZqekhPTDUvbUZEZ0RUdE02NldhNUVWL3V2UEVhOWJlcjIxT0pjU2I3TmM3UTdrRQppVFIrZGV1cTA5U1B0UDR3UWNudndtUTdoR0ZhNFYvVHU0VGUwTTliVnlhU0hnVytZSnhsQlhLNGVITW9CZzVvCnc5NlVnRjI3QUxJQzJTU3pmYmcySjRLTS90SmYyUHVHaGFTdXplNmVEeFhSOTMwUC9Nb2NlYjZDcUpoMk12MmcKSUozS25DN3dFR3kzVit1M21HbGVPdURSM1JlbEw2dz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lSQU5ZWTVFdFZGamFPSkFoemRlWE1rUFV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URTVNamN5TVZvWERUSTNNRFl4TVRFNQpNamN5TVZvd0V6RVJNQThHQTFVRUF4TUlZV1J0YVc0dFl6RXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRE04eWt4MHd1MkFMNmJwMUNtbVdoMU9UZkovUlY3dVFOdlpqSGZ4ZGpRSFRkaEFzYmMKTmhqcjdsekJFQ2hwRjNFQXUzQVRjM2QyOUhKMVdDY3BTNWRUTkFxbDNMYytuN0djaEJZcUc1dFJRTVhlVVlKcQpXcllsV1UyR1dQSStyWEU5TG84RmloK0pLNkZ3YmtIbllBYWFEdWE0YitMeFZ4cUJFam1pZ0YyNDk2cWc3N0RvCnA4bTYwSjlMektZWkE0cGNFOEpraGZmUWtSeWdnREpSZmo5RFAzMnN3WlhoMDhYaGtoQ25WSmQycDFBTDY4WHEKUXgzcDhaTVRoR3dsNmR1YjVIVHd0SXRxQ0h4d09tWHAvZHA3TU1lQUZpNWVTNWtYczZkZjF6VkZyck0xQVVJbwpKSzBwZ0pla0RoMUYxWlhaNWtwWGJSZXFFSVh4T0FMcXlLOG5BZ01CQUFHamRqQjBNQTRHQTFVZER3RUIvd1FFCkF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXcKQURBZkJnTlZIU01FR0RBV2dCVHZIOXV5UzI3eEUvd0NCNnNHV2lRU0RLVjBGakFVQmdOVkhSRUVEVEFMZ2dscwpiMk5oYkdodmMzUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSlI1MCtVMXRwVDloUGwvYjdyQkkrWnlIdmdaCjByalpkaGRwMEVmVVZYQXZETzNnVW9xSzZyR0JQMVExTkt3a1M3NVFxd0tGZUErTlQzSkIycGhLaWxabDF4am0KZDkyMGJMWk5QV2F4V1JZYjRIU0hBNHVEdGdwNFNpdmI5Q28zU2c1cGpxTEQ4VEJ5a2gxajFSVnNidDdyYUUregpla2hKSFJ6cGEzYjcxM1RBckw3eTV4dmdyanJFQ0lxM3lGNVhJcHVtdm9SeVo5c1k2L0FTbXY5dE12MEthV0xECmRWTGs4elpxanpHMWVKcy96THQyQUd4a09lZUd5L08vQUMwRnBIQmhueE02UjFSNXNBUy9NRjJWNWVzWTFuYUIKLzZWMUVWUDkrRnVGcEZwamZEUnVQd3diZlF2ankya25DVDFXeVdWV05xOEovaHBXWmprRWlEK0t4aWc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBelBNcE1kTUx0Z0MrbTZkUXBwbG9kVGszeWYwVmU3a0RiMll4MzhYWTBCMDNZUUxHCjNEWVk2KzVjd1JBb2FSZHhBTHR3RTNOM2R2UnlkVmduS1V1WFV6UUtwZHkzUHAreG5JUVdLaHViVVVERjNsR0MKYWxxMkpWbE5obGp5UHExeFBTNlBCWW9maVN1aGNHNUI1MkFHbWc3bXVHL2k4VmNhZ1JJNW9vQmR1UGVxb08rdwo2S2ZKdXRDZlM4eW1HUU9LWEJQQ1pJWDMwSkVjb0lBeVVYNC9Rejk5ck1HVjRkUEY0WklRcDFTWGRxZFFDK3ZGCjZrTWQ2ZkdURTRSc0plbmJtK1IwOExTTGFnaDhjRHBsNmYzYWV6REhnQll1WGt1WkY3T25YOWMxUmE2ek5RRkMKS0NTdEtZQ1hwQTRkUmRXVjJlWktWMjBYcWhDRjhUZ0M2c2l2SndJREFRQUJBb0lCQVFDME8yNVJxNWZUNFVtKwpGbUJkY2ZFampVTGJkWjRMNUlMNTF6UXE1cEVwUzFnbERzMFVZTnAvdUdtSE9vOWZBOGRUYm9JOENNSFpNVlRxCmpyQTVwNGtYR1YvM3htYTdRckp0d3RhL0J2SUtmVnpFaW9lV3dka0dkVWN3eTAyVkF1L2ZidTlGWHRjbXlPQzYKdjZ0akx0WC9hdlZJNHRQL2lxcjdNS3pRay9SWHNKb3JWdnJwVjlzelQwZzFjTkE5SUZzbWpOWkFWMnNjd29ZYgpaU0Y3bXRWTVdlN0VEK3paTW9XSllGalp2c2JYMmdZSW9VT2hyOFZSNzRCR2VvRzl1WUZ4N0tWVWN6T3c1WkNRCmxRdnJDWnlpVzJDSXpnQ21ZWnZtMmxjeGc5c2FKZERwbFJYdjY1VnptMEl2aWE0V2Q3cG5wbGNmY3dReDhnWXYKTmJjeUJDQXBBb0dCQU91cThzSFJHeVpMU1dhdnhod09CTDZ5eU5HcUk1T295TWF2YkExa3BHL1dJbERZRXFnVgoxRkwvajVKQ3AvZFh1UTExUzNqcjlVRU51NVYrNTZtdnpYU0JMSkg3QTBWbVBOSWRiSEhLNUJDY2tSK2NvVWIvClo4UzcxdVlmRkZHdFF0blIvajhvenhqR1VYaElLTm9DNWc2MTNqU3V1cHMxTis1ektJMWxSaWpsQW9HQkFONmgKdzdaWVpLd1htVUhqekROa0FQNDVUdDBKVFBQZUtnU2pOZ3kveGVTcGdVZ2M2enBqVThpcVR3L3JHZWNJY0FFSwpjb2UvSVRIcEdpSnI5Z2NKOE5LUXVkRlNEaEt5ZHBlT1IyRXNsOGFPWE9ocVNKLzZqME50TGlKOXdkbnhjUmNnCm5ULzY3enR3QTNrT0hsVjhaWnBnZnZBQmhFNG9uMEZSaTBzQlBmTWJBb0dCQU9mZTFXU08rZGh1b0xTUTR5bTkKUFR2bnFpQm45d01VUVI4RGdCdVpWeFRXS2dOQzVQQk9NZzdMZFpZaFVTUFNRcmVVSFlMSEhoSTRrY1RnRE16dQp0UVlaQmlKSFI0dWpzTm5HcTJrMmg3ZzBZN0VucWFLeUxvWHBqdUh4MkVzWVhycnptdVRIb1NPdUZJQjA5d1N4CmIyc3YwNFlnR0dnWEw0WEQ5alZRWEh4bEFvR0FjcW5xUFE1RnU0VGtBRld0SklMTEtDU29BNXY0c0ZtcVZuMGgKSjJ2V0pyRk96cTltVDhvOHFzdGNzUndyV1J5MVl6UFlUU1labUxVd0txNWtKcmZ0K3VWamJ2WE9IYjhnNlduMApSWTVNRlkzWk9ETVZlSi82RFlZOERyT3FsZStPaVpUWXFNMDdUZWVoUWtZTlJZWXVabFp3eW5oZGhrdlJ5amlQCmYzQUNVaVVDZ1lFQXRrblhVWXpIZTdUNG1mWjU1c0VhS2tiQlIyeUZMaXorV1FEVDEwSTM0elBwSjkySExhRnQKaEx4T0ZBNE1LeExUNFpJNk55WTZ4bVVtZmo2UVN2SnBKR3AwQ215ek9FN1NGaTZCM2pIQW1GUGw2L3RqYjZBSQpVRUEza1RJdlhIWTdXV2QzVjZRSE5qWDdvRStPMHhhSGJ6Zk83ZzV2MkJIU3plR1NwVFRRRmdVPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/remote-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRUmRJb2I1RENrVnRUTHZqc0NLSEZ5akFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOekl3V2hjTk1qY3dOakV4TVRreQpOekl3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRG4vT2xlenlVSWY4M3VDYjZGRlBhcVRCTmM4ckhPeDNIbUV1UmtqdjBWcjlGV1g1ZkkKWVhtcTd0WW1qRVhZdGVrSzBFbldORDFjZXYxUlQrOUxPNmlvOHpqV1Y4THFITE1OcHJHNVA4d0FrWmtEZGh2VwpiSmxSVHQ2dkFlNGtMRWlxNUVId0w5UlZlYTg0Ykg0ZVhyWDRGTU5RdTVMSmpNY3lzRFVzTW1GNTUyQ01UZU8zCnZpSlJCdnBZckF1cHRvWUQzNm9kaEZCajdKRlVwSC8yS3VaYzhMMW9nMGFRdGp1Q1NwKzlaTzR3ZTJBa2E1VmcKK2JERnlHMUlMd0RHei9Nd1NzQjRydEpnZEtDUFFISm01VlUyNXZiOFdMTXlHVHZQcktvMzFxLzJjeE0xSWphRQpnUENFZXhYRnBWalFMVDBTSEJ6WGIrcTFhMWNOVG81QmdXVDNBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU3eC9ic2t0dThSUDhBZ2VyQmxva0VneWxkQll3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIaUdEUzZzeE9YbFBSSEROaUY3eTYxMDRzUWM1Ry93eTIzUkZma20rU1hzN0NhY1FXNlNHTTR4CjkyeU5ORkdWR3ZpcnRiQXpleWJVYWtwVUtieFJIZk15dUhVZGFYc2JIOHg0UDkzUC83U1NaRkZ2ZkJkN01qOE4KbGlNb0lrdFJueC94WnMyU1ZqekhPTDUvbUZEZ0RUdE02NldhNUVWL3V2UEVhOWJlcjIxT0pjU2I3TmM3UTdrRQppVFIrZGV1cTA5U1B0UDR3UWNudndtUTdoR0ZhNFYvVHU0VGUwTTliVnlhU0hnVytZSnhsQlhLNGVITW9CZzVvCnc5NlVnRjI3QUxJQzJTU3pmYmcySjRLTS90SmYyUHVHaGFTdXplNmVEeFhSOTMwUC9Nb2NlYjZDcUpoMk12MmcKSUozS25DN3dFR3kzVit1M21HbGVPdURSM1JlbEw2dz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRU1U5cFhjeUZDSXFDbnVjNDJjb2R1ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOekl4V2hjTk1qY3dOakV4TVRreQpOekl4V2pBUk1ROHdEUVlEVlFRREV3WnlaVzF2ZEdVd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEY2NYS01MYmQwRWR2S1lnVWlsWDVXSGo1b2FWbFM1d2V0TmwxRHVsYjZKSFI1VFFaLzFjSWcKRWU5dFNGOUxQb3pnNFJ0dU1INXpnTUZ0dGpEbSsrcjFRRXNWU2ZocG9yKzA2am05eGYvUTZmV1AyaStSK0NhRgpsOTFvckJXTXhqb0pCdXprVmViNjdETjlPL1lZUk5DTXhQbzNYMG1XemxOVVg4V3ZVWVZBNUszZ2NKYURmT3pOCjN3d2RQTkVIR3F3bXY3MUVrRk5tNFNrZjZCMjRoQTJPYjBLVUg1eXRRTzgwTHVUSUFINzRnTWRObTd6dDc1QWwKNjBkdmZLYnpoeE9pVlBIRHg4djM5Mmk5RmViVXkxNjNUN1dnb1kya2dUNWZJcjFjUTJVRU8yOFI4VnZ2V1RQSQpGK2hoeE8wZTIrekhpM1poVDBERnBoNmNmdWYwdmpuUkFnTUJBQUdqWURCZU1BNEdBMVVkRHdFQi93UUVBd0lGCm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWYKQmdOVkhTTUVHREFXZ0JUdkg5dXlTMjd4RS93Q0I2c0dXaVFTREtWMEZqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBU3FQSExReml3c1dCWms2bUFxbVR6aFRPUFNqWVk5bFAzcVNoY0JERm12SVptWEMycUpMWDhKZXZKc3doCjlTdFNaQmxISWxscmEvRGc0TjJaa3BlM3lmSEpFRzBHNjVxWVkwMVg5QVljM2NFK3ZPSUNSSE9tb0xRbUpUeWwKL3BQdUpGdlo2dHpMR29TR0Q3MWUwUHFkUUNFYkRhT3d0bHYwUjc2YTRhd2ZWWUNPV2szYzNabEJ0NTljL1I2QgpIUmJ1R1NGeG9ldjg2OG5NbHlpTmZFK2xBLzRhTFNsVE5MS0wrZ2RRUS9pREFEdDNWTElhaUdKMlJKK29mTTFSCjE1V1RJYlpmdlZORzRlcEMrL29PclpuU01PRVorMU42K1gzMXc0cWZDamZFUmJCbWZVNnVETUNhdk9jeFNaMmEKVlMrNlY0SnpraG1XNFVpZE9YMWNiWk1WRWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBM0hGeWpDMjNkQkhieW1JRklwVitWaDQrYUdsWlV1Y0hyVFpkUTdwVytpUjBlVTBHCmY5WENJQkh2YlVoZlN6Nk00T0ViYmpCK2M0REJiYll3NXZ2cTlVQkxGVW40YWFLL3RPbzV2Y1gvME9uMWo5b3YKa2ZnbWhaZmRhS3dWak1ZNkNRYnM1RlhtK3V3emZUdjJHRVRRak1UNk4xOUpsczVUVkYvRnIxR0ZRT1N0NEhDVwpnM3pzemQ4TUhUelJCeHFzSnIrOVJKQlRadUVwSCtnZHVJUU5qbTlDbEIrY3JVRHZOQzdreUFCKytJREhUWnU4CjdlK1FKZXRIYjN5bTg0Y1RvbFR4dzhmTDkvZG92UlhtMU10ZXQwKzFvS0dOcElFK1h5SzlYRU5sQkR0dkVmRmIKNzFrenlCZm9ZY1R0SHR2c3g0dDJZVTlBeGFZZW5IN245TDQ1MFFJREFRQUJBb0lCQVFDK0lHcTNWRWJCcVJWegovQTZKd1gzeE1LeUt5VEh0T3ExNFMwY3RQdTM5V0t2TVl3NlQrdjB2UThqSTdINmtHeExPY2RpQ3RQaWJEaFhHClZqamZQNjlxVDBWeTJ4V1JwbmpKeEtxQWJ1RXdnbGowOVMzS0s4aXR1RW1TR2JtTWJQdHBCYndUUTdPdi8wQjUKWnRuZUhKdnlqWUZ4ZUpHenE4aGJJUzhUQXJCM1FpcEpub2pzdU9jMWtySEozOUZiVGRBOG9mcmxzL1EwQUxadQpobll4Ulg0UFI5dWRldjNmclptaitOQU1BcGNxQ21iNWhzaS9keEFxQnlyeHlua1hJUm1DRElrTzJ2WGlPYzMrCjFMZEVaRUhCZjNISlRSdU05NytZUEJNazhKSjVKaVVTTTVNL3BVbkgrd0RzVjJ5d2I5bUl4TFgrbnZqQytJTnIKc0FHazZEQUJBb0dCQVBjL1Y4UjllaVR0VXgwR1hsMU0xelFIVG8zR2pnTk00dWpESHNRYjVEbGNYRTZiNlRGZwppSml3dyt1RFV6SnM0RDY0a0JQREtwak9hVnQ5bnplbmZzMHp2a014YzFNelMxOVlpUTJNLzBZcmZFb0RtMElvCnBubkh5cWRpeGZ4dVQzNFhOVkdTa1Z1a05oM3BBWnNSUGtibkQ1RThZNFM4cTJwNmwyZ0FqRXVSQW9HQkFPUS8KTVh1dlh2VFA3T213S1RQMmFjQTIxcFdCaDE0a1RCRk16ZEpObWxlNzIyNk9TeUQrT1pkTzBNQWJvYjZleVhRVApNdVBqdkpSK3NpUi96SW1UaTQ5eHNnRlVRNGVlUDd5dmwrUGZtRlFEZzU4ckwvbnpsbkwrODc0M0VYQkxteS8zCngxYWltUmtaWHZ6a1h5SWVUR05NRER1QjFaNFA1Tmc4czJSQUJXcEJBb0dCQU96SU9kcVFQR2llNjhqUkw0LzAKcGVoSzB4ME51VFZKN2NqeURFWE5YRXpldWZ3Q2JsbitVL0srM25KdXl6OXdhM1ZGdFoxbmZDVHBFSmN4QUVrQgpYSHRTZ1hUQ0orclhKZWpDMWtZbThOWVhrU2trdVF5cjkzcUxMdllNcndVbjgzTVM4Tm9WSHFYLzVsL1FwTndICnNIZWdreFVKRzFta2doa3dIRTNhc0lFeEFvR0FjZktTYzVzVG5zaUhFQXRnSm83b01JdXdDU2VIT3hxSDEwTXUKcGNVVVBxU01ZZDhyNXFiRWZhTmRWK3J6anNTYThoWDduQVcveWFxT3FPWWNhTHArTy9pWTAwME1BWktoWTBPTwpZcmJueDFtUnhrNjdQdCs2eG1JOXNVS3d0QTBxeG9HK3hLT2NKd21oZ0VOS3N5L0pGdkdLVWRMNW9GVnkrL2toCjNmU1FQNEVDZ1lFQXUvYVhOcFFjWDB1dUxQcEhudm04Vm5lMXJaOFhuQlRKaENXNGhwbSs5UURWUDUwTFg1Y1oKYnBMOWxKUFdoUS9YRUJyQWpaMFdtNUFPQThxa0poMlFLOVNZS212Y3NlY2tIcmF3aHV0a3BkRUx6NHdPcHF1UgpKRnBPRS9TNnQyRnF3ZVgwanBiKzhXUktYT3hFT0w5d3kxMDkxUnE4SU0wTW5wVlBFb3J0NDZFPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRUmRJb2I1RENrVnRUTHZqc0NLSEZ5akFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOekl3V2hjTk1qY3dOakV4TVRreQpOekl3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRG4vT2xlenlVSWY4M3VDYjZGRlBhcVRCTmM4ckhPeDNIbUV1UmtqdjBWcjlGV1g1ZkkKWVhtcTd0WW1qRVhZdGVrSzBFbldORDFjZXYxUlQrOUxPNmlvOHpqV1Y4THFITE1OcHJHNVA4d0FrWmtEZGh2VwpiSmxSVHQ2dkFlNGtMRWlxNUVId0w5UlZlYTg0Ykg0ZVhyWDRGTU5RdTVMSmpNY3lzRFVzTW1GNTUyQ01UZU8zCnZpSlJCdnBZckF1cHRvWUQzNm9kaEZCajdKRlVwSC8yS3VaYzhMMW9nMGFRdGp1Q1NwKzlaTzR3ZTJBa2E1VmcKK2JERnlHMUlMd0RHei9Nd1NzQjRydEpnZEtDUFFISm01VlUyNXZiOFdMTXlHVHZQcktvMzFxLzJjeE0xSWphRQpnUENFZXhYRnBWalFMVDBTSEJ6WGIrcTFhMWNOVG81QmdXVDNBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU3eC9ic2t0dThSUDhBZ2VyQmxva0VneWxkQll3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIaUdEUzZzeE9YbFBSSEROaUY3eTYxMDRzUWM1Ry93eTIzUkZma20rU1hzN0NhY1FXNlNHTTR4CjkyeU5ORkdWR3ZpcnRiQXpleWJVYWtwVUtieFJIZk15dUhVZGFYc2JIOHg0UDkzUC83U1NaRkZ2ZkJkN01qOE4KbGlNb0lrdFJueC94WnMyU1ZqekhPTDUvbUZEZ0RUdE02NldhNUVWL3V2UEVhOWJlcjIxT0pjU2I3TmM3UTdrRQppVFIrZGV1cTA5U1B0UDR3UWNudndtUTdoR0ZhNFYvVHU0VGUwTTliVnlhU0hnVytZSnhsQlhLNGVITW9CZzVvCnc5NlVnRjI3QUxJQzJTU3pmYmcySjRLTS90SmYyUHVHaGFTdXplNmVEeFhSOTMwUC9Nb2NlYjZDcUpoMk12MmcKSUozS25DN3dFR3kzVit1M21HbGVPdURSM1JlbEw2dz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURxRENDQXBDZ0F3SUJBZ0lSQU0vYk5aSk9EVlZMb2pZbEFBcS9vZ1V3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URTVNamN5TVZvWERUSTNNRFl4TVRFNQpNamN5TVZvd0tqRW9NQ1lHQTFVRUF4TWZZMngxYzNSbGNtMWxjMmd0WVhCcGMyVnlkbVZ5TG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxyaTAvRXIxQWZ0Szl4bEJkNG8KTUZ1UTNsMjhjSkNOZ1RLaEVKQlNZYWQ2WWtZczNYK1hyRUxtU0Z1WDRNclJsOE54TUFMTmplTjBhcVpzdis2RgpFdWRMZmRQMEFvUllOT09sQi9WTW5reDNsMHlZVEFFbjEvcVVkZFRXdUlsVWhXaE9EdXRUVkZlQzNxM05YRWgxCmZhNTlib1Urd2MyZWhtMHpPYW9rTTlkZ1NNY0ZuMmtxNHhQeGlLamFSNzRuVlM0aEp6MjFyTHRoREtRMlA0SWoKWXRlOUFtcEpMTUZQNHhueldXeVhtb1k3MTc0V29mVllsdS9JbWhrVk4veDh1M21GSW9TY3V0MTJBSUtrZGxaMgpNRlc4bDhweHdnWGdjZ1p5VHJEakNsWWp2cWdhT2hZWGpyNGo4Vis2RjFFcW9WcEwxKzlWOXFzQlBRR0Y2cVBmCkIxa0NBd0VBQWFPQjNqQ0IyekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVTd4L2Jza3R1OFJQOApBZ2VyQmxva0VneWxkQll3ZXdZRFZSMFJCSFF3Y29JZlkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnlMbU5wCmJHbDFiUzVwYjRJUUtpNXRaWE5vTG1OcGJHbDFiUzVwYjRJbFkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnkKTG10MVltVXRjM2x6ZEdWdExuTjJZNGNFZndBQUFZY1FBQUFBQUFBQUFBQUFBQUFBQUFBQUFUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBMkhVdEFGTENzMjlHeDRRUWVuc0dzOFJvQ3hEbnRHelFlTFA5YXVmQmtUMVA5QXkyCk5LNkM5ZGhSMWVsNmxQMnc3UFovZGJsdjhzQUtzK3NmdDZWeTRBc0c2cEVrTjByYy9EK2lLcVVLZzhvYUN6cC8KYlIxL3R6VndGR2N2a1NaY0FYWm5CL1J5WHJUUEkvemhVMjlZZlZuVlByK2ZxZmh5M1FxcmowYXlReWJoTm1wTQpkbHdrMXFWaVlMUlR4OHcySnhqdkFwNnFnYXRVRGRFdjNJLzFUUVpMZkM0dWUzekNrdXNnQi85Q2huTVN0QWc5CmZPVndjaGl4TWJkMk5UN3Z5djZhNldRcTJuN2NJUlFBMTZvZEhoeW1iRS9QaVZiYWhKdU9HVjEydUROUnVGcHoKWHlwVm5hbXY3SDN3clRnQ01TNldjNHhoTXQ0Z0JTaFNPSEZjb3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdXVMVDhTdlVCKzByM0dVRjNpZ3dXNURlWGJ4d2tJMkJNcUVRa0ZKaHAzcGlSaXpkCmY1ZXNRdVpJVzVmZ3l0R1h3M0V3QXMyTjQzUnFwbXkvN29VUzUwdDkwL1FDaEZnMDQ2VUg5VXllVEhlWFRKaE0KQVNmWCtwUjExTmE0aVZTRmFFNE82MU5VVjRMZXJjMWNTSFY5cm4xdWhUN0J6WjZHYlRNNXFpUXoxMkJJeHdXZgphU3JqRS9HSXFOcEh2aWRWTGlFblBiV3N1MkVNcERZL2dpTmkxNzBDYWtrc3dVL2pHZk5aYkplYWhqdlh2aGFoCjlWaVc3OGlhR1JVMy9IeTdlWVVpaEp5NjNYWUFncVIyVm5Zd1ZieVh5bkhDQmVCeUJuSk9zT01LVmlPK3FCbzYKRmhlT3ZpUHhYN29YVVNxaFdrdlg3MVgycXdFOUFZWHFvOThIV1FJREFRQUJBb0lCQUhzUWF5aGhDQnJBSHlYZQprR0tlYkZtZnFBNXB6R1lrQ0hQaWhCbkZaZkQzTWtlcnU2QU5ySzNSSHN6UjBvRThTNGV6dlQzYlJoZ0Z6VVVTClQ4RXRlQ2svR1BpOXNmcWNheGVNMFJUREEycXZSYjUyZTNZM1dvM3p2VFFPd1M0TnJsdmxLd1hqdGFKNjEwL3oKNzFUM3FXK0J3WW1VcmVKTkJaQmJMeG5QQlNSSmJud0dsUW1FSVlzNTMveXJnTmY0MndSV0NvSzY5SXA4QzhEYgpoSEtrQjlMREk0ZDJDQ2lqcWFia0JHM2FkQzgzaW5mdHZ3VVlDUW9IOXl3a2ZrUWttOHdoUFVlbWZLakNFOVhLCk1va0Y3WVRiQXNicnB2YzJoZlpxUTJ6ZVFoQUVjRjdqTnBCb29VSWdrKzI5cUo0RTRlNzFiWkhLYWV3aG5tK2IKYTFrVUtBRUNnWUVBNlJXbDRKdkdxeXVrK05CQmtiWFFaQVNHMm95V3F0YXNkRTlicmZmWHdCajhLUU5sY3djaQptSjVzc3BHbTl3SWs3SDdvR3g0SEt6UE45aml1RVQybWVrQVlIditaaGs0QlBSNTR0QldyQ01VMEc2bi81L3ZBCkRvVHRWUFFOb2k3czB2TmUweXFLUGw3RWNXNkJzLytydEZHTFRhekl1UEl5V1hmTENQME5kc0VDZ1lFQXpVSncKbkFwWGFUR3JTY2xMaWY4cnF4eGJOc2xXcldQUDZwRWdmSitIY0diWkE2dG9DTXZoQkJjcndSeGpXZFMrQUNkNQo4S3lkRFhtVklBczcxVzBmOURNRFhuQ0RWWC9IaTloYXNNdEVSUzhtbkEyUkVRQUNkZndBV1h3WUVKVjJqbnV4ClZUS1pHTWtYOHJOQjQ0dXcvZlArZDNqZGExWGpydFRGTDMvMGpwa0NnWUVBbC9CTnBpSEZtdFVqZ0RJNVcrT2EKQ1dqT0EyODcwL2VHaVhjbHV6emhmazZMS2EwV0Y2cWlDYnpUL0g5bnlJSzBVUm5VOGNCY1NmUkdJV2dIU0NQWQovcjRETzBuQTZVUzJHQUppQ25wSmVMa2NZNkFvdWk5b25jNVc2MWNBQUNYNHFQYU9iTGJCVVREemUwSGUrTmdFCk5OSW5MYVloWGpZN1Rna0I2RVVVM3NFQ2dZRUFsdmE3cmZocEs4Uk5MN3F1SlRPWW9ZUDhqa0hzengvdkJwMXcKb0ZnUW5CbjRtSnRUcTh5UGxadVpJYkhJWElSOHJjNWJBQ2xrWlVtNzVWSjkwazR0UjBUUndIN09DVzh1aTJzMwo0SG5QbjNhN1ZlRWdoYmxWRmdPZkdqR0wzWDZnTU5GR3J0dkZBQmErMTFFQ0wrSkk3YTZyeEtFUGNPYzl5eE5RClo4d2JTVmtDZ1lBVURzWHBMdmlwamlNTXJZc0g1OXVVbGNNWFV3alZ6elJ1ZUNlY2hOeFZ3eEVVY2VXU0NLUnkKeElkOGNFVExNeEUrd2xnSk41ckV5Z1RNc3l3VjJqMC9xNkRjcUR2MnZwRUhLZUR6R3pkdkVqTjJaandZWlhBTgpNNUp1blhlazVUcFF5Sm9pd0tyNnJlR0M0NmZFblpSb2p1aXNqTFdneEQ2Lzk5WDJZY0hXRmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRUmRJb2I1RENrVnRUTHZqc0NLSEZ5akFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOekl3V2hjTk1qY3dOakV4TVRreQpOekl3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRG4vT2xlenlVSWY4M3VDYjZGRlBhcVRCTmM4ckhPeDNIbUV1UmtqdjBWcjlGV1g1ZkkKWVhtcTd0WW1qRVhZdGVrSzBFbldORDFjZXYxUlQrOUxPNmlvOHpqV1Y4THFITE1OcHJHNVA4d0FrWmtEZGh2VwpiSmxSVHQ2dkFlNGtMRWlxNUVId0w5UlZlYTg0Ykg0ZVhyWDRGTU5RdTVMSmpNY3lzRFVzTW1GNTUyQ01UZU8zCnZpSlJCdnBZckF1cHRvWUQzNm9kaEZCajdKRlVwSC8yS3VaYzhMMW9nMGFRdGp1Q1NwKzlaTzR3ZTJBa2E1VmcKK2JERnlHMUlMd0RHei9Nd1NzQjRydEpnZEtDUFFISm01VlUyNXZiOFdMTXlHVHZQcktvMzFxLzJjeE0xSWphRQpnUENFZXhYRnBWalFMVDBTSEJ6WGIrcTFhMWNOVG81QmdXVDNBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU3eC9ic2t0dThSUDhBZ2VyQmxva0VneWxkQll3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIaUdEUzZzeE9YbFBSSEROaUY3eTYxMDRzUWM1Ry93eTIzUkZma20rU1hzN0NhY1FXNlNHTTR4CjkyeU5ORkdWR3ZpcnRiQXpleWJVYWtwVUtieFJIZk15dUhVZGFYc2JIOHg0UDkzUC83U1NaRkZ2ZkJkN01qOE4KbGlNb0lrdFJueC94WnMyU1ZqekhPTDUvbUZEZ0RUdE02NldhNUVWL3V2UEVhOWJlcjIxT0pjU2I3TmM3UTdrRQppVFIrZGV1cTA5U1B0UDR3UWNudndtUTdoR0ZhNFYvVHU0VGUwTTliVnlhU0hnVytZSnhsQlhLNGVITW9CZzVvCnc5NlVnRjI3QUxJQzJTU3pmYmcySjRLTS90SmYyUHVHaGFTdXplNmVEeFhSOTMwUC9Nb2NlYjZDcUpoMk12MmcKSUozS25DN3dFR3kzVit1M21HbGVPdURSM1JlbEw2dz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUprcTVZbTNXdjBBQ3dRWDNlWTNLYkl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URTVNamN5TVZvWERUSTNNRFl4TVRFNQpNamN5TVZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTBJMTZJWlRRYk9hMkExNFF3OGR4S1dic0RhUXMKWXh1cWtYY05RMnhkeTJZQ1o0RWo0SHJnNnBPT3JPdzl0bEpPU1NWSFZ4R05Xa3VsY0JYSjkwTWdDTnZwU0VyZgpraW44bkYvV20yNldodkZZZkVZWjloQkg3S21LcWVsdnZmTjNjL1h0QW83Q0xTSjNPR3lJbFJmdWdISXkvU1F2CmowKzIvNElDRDMrdlovaWMrQ0tGMHhqd29vajdCNllNTy9lUGZ6bXgwRE9RQmd1aFM0a2tUUkJxekVTMEQ5WFIKNkJscE5nMkdmUk5Kb2tuTWozbHFMOTI1RFkrZjNVeVdDT2o5dnVEUGhqNnVUaE1rS1BnQjZETHUyaXJWbHhvRgpyeXBRNnk5SGw4UmxKT3lzRnJWd1IvRDRCL3g3Zm9zY2RXUzZaa2ZvdGFIMXRVRklkNlJjSzNoOGd3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVHZIOXV5UzI3eEUvd0NCNnNHV2lRUwpES1YwRmpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRUJna2tmTUxucExXVFFFc2szZjRBeU92YUZYaXFrK3VoQk9TYSt2NkpwR2VtamUKZEhlbS9sVjVMVmJFNEdQNVhWVVlWVjMrTlFBSkVkRzhmTUZqM2xmNE8rWmlmQXQ3S0txQTNXM1Q1KzYxUXJlKwp5NXlUMk44OXBoVW9VTUh5ZlJBUm52QXRkUkF3enZraGxhMVdEbFIzMk1uMFROK1J6RTZCR3RGbDZPb01BMEQ4ClcyUkM1d01ud3h4ZFlCaWo0ek9NYjdWaEN4Uk5lN2JMTXR3SVNIUytYMHFlYnBEbHNkeEJsR0QrWVRuZnYzc2EKMUdFeVZMbmVEREMvRW1jY3gveU1UcTFUVUZIYWRCZE9WZlpSaE5MbGVhYTFUdUNadlErdUZuUnNhNTJCRGloSQpXa2s4NjVQSWZtUGVIYytJTHdCb05RbDBMY3NRL0M4U3BRenZxUnM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMEkxNklaVFFiT2EyQTE0UXc4ZHhLV2JzRGFRc1l4dXFrWGNOUTJ4ZHkyWUNaNEVqCjRIcmc2cE9Pck93OXRsSk9TU1ZIVnhHTldrdWxjQlhKOTBNZ0NOdnBTRXJma2luOG5GL1dtMjZXaHZGWWZFWVoKOWhCSDdLbUtxZWx2dmZOM2MvWHRBbzdDTFNKM09HeUlsUmZ1Z0hJeS9TUXZqMCsyLzRJQ0QzK3ZaL2ljK0NLRgoweGp3b29qN0I2WU1PL2VQZnpteDBET1FCZ3VoUzRra1RSQnF6RVMwRDlYUjZCbHBOZzJHZlJOSm9rbk1qM2xxCkw5MjVEWStmM1V5V0NPajl2dURQaGo2dVRoTWtLUGdCNkRMdTJpclZseG9GcnlwUTZ5OUhsOFJsSk95c0ZyVncKUi9ENEIveDdmb3NjZFdTNlprZm90YUgxdFVGSWQ2UmNLM2g4Z3dJREFRQUJBb0lCQUZyajdjQkk3UFVwTDFZVQpYdFlVUzdzeGdkc0lHOWd0ckk2dEJmakdkN0kzaVFDM0JYM0Z6OVFyN3RocU5STUtsOWZGQ1d4bTErWHNaZk9OCmEzSDVyVEp2TlNJdWozVlNHeWZEbFBJMHBpRzFlVXpmK0Z5SEIvR2FpalkyNkY0dWgzYmdUU1Q2TnFJWkRVQm4KL0xhTnNZSUZRemVUMTY1cm5XT0pzNEF4czY1cG42TFRMS0NaTU1LdHdacUdBSkRSOHlWS0NtOWhzdlFVQk1YVgpoUFNQTiszVzVHbUlFK1FmK3pGV09RVk1BV2V4cS90WTBqeHNPSFhpR3lGMnlENWpRWmhmaFVnOGRxajlWRHdNCnpEcVlZdmhaT1IzTzUxd041QnZubWc5YksyV1k3VU5zQVI2L0NRM01KK0JXT3dVOEV5SDAzUURNQVdjbUtXbEIKVm0rWkVURUNnWUVBMlFRTnU3OFZFUlNldHBzSGJQbzlyU21kUHdndkZ6QW1RWTMrOFgyNjRFNlZHMjMvbUplVwo1ZU9vOERvb3NGOUdHVnF1T1plL3NDOWVDa3BGekg3dTllRS9ydzA2ZVVEWHdKQ2R2NnJSbnhtd0h0QlFycEV0CmEwVFJXTnhVeHBrdDVrOXc4a1hhaDhhSjBjbUJZRTBIQ05ZS0ZUbi9VdnkxZnlZS2lQSTdocVVDZ1lFQTlnUTUKcG1QRTU3OW5aOU5TR3NKSlFZS0tiMjh4ZjdpWXFVOUdZSzUrQi8rdFk1cUFMMFl2aGFpSVBRZk9NcDdrbnBCNgpRZytTVCtoTWYvbzZEdGtXbGp5WFJVdHpkeUdxNmNJY1Z4TTdGRmE3am9xZ2ZwNEZnQU1DdWM1b2xlcW85NG1nCmU3QmhRMWdCZTBybDBUVWVrcnNIM0VtaGdTYzVlOGJHbiszZE5nY0NnWUJrNmRDbERENzBtVjBRVnRqR0lUdEsKNlgzNGtJcXRRck9YYWpzeCtxQktxK0FFU0V0Qm5zUUpsS3E3UXFBbkc3YVNGYXZNbGpjSjY0elVSaU5jNjIyZApJcWdsYzRaTVdnMjV1c1hRR2RPdUl4alZ5MUtwU2xNUGZZbkh3M1VjZ0tCcVoyaURFRjZGSXBwMTFqajJHZnQ2CmJXVjA1MnBHSWNNWUpBMWtEeGdGRFFLQmdRRExvNk8wdjFEMkk5R01kN2UydnF1MHRrR3hDL0dGTDEvdWhkaFQKbnh4anNwZnJvckFJY2FoVWtyUnpFRXIyUytBaUFLV3ltUUViYzhZZkNSbVZ3TXlaZjM0WHRlVFY3K0J4cm1PWApFQ3dQSWR3T21XRlFiYTFQMFM0b2IxclMvWEx2czlSTGppeDBlaHgvMmZkeHZPNlp0b2RES1ErdXdMRXNhOVZ0Ci9JN25jUUtCZ1FDMHBRWDVFTmQ4cGNkZDFUaW5rSVB6OWJtQTBWc3Rla0VTTXdZY1BQdUJlR0dZeFd0YldudUUKak5PeHc0am04ajQwRmg1aDBUK3doTy9IWUR4aDBWOVgxeS9uL05seXM4SVBZWWw5c0VPeC8vZEc0Mk9MOFY1SgpGMjhZNVRuVU1lbFV0OGxNVFRFV3JxTFhLaFh5UTAydmR5YStoQzFRdE5FQis2VUplSVhWRkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRUmRJb2I1RENrVnRUTHZqc0NLSEZ5akFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOekl3V2hjTk1qY3dOakV4TVRreQpOekl3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRG4vT2xlenlVSWY4M3VDYjZGRlBhcVRCTmM4ckhPeDNIbUV1UmtqdjBWcjlGV1g1ZkkKWVhtcTd0WW1qRVhZdGVrSzBFbldORDFjZXYxUlQrOUxPNmlvOHpqV1Y4THFITE1OcHJHNVA4d0FrWmtEZGh2VwpiSmxSVHQ2dkFlNGtMRWlxNUVId0w5UlZlYTg0Ykg0ZVhyWDRGTU5RdTVMSmpNY3lzRFVzTW1GNTUyQ01UZU8zCnZpSlJCdnBZckF1cHRvWUQzNm9kaEZCajdKRlVwSC8yS3VaYzhMMW9nMGFRdGp1Q1NwKzlaTzR3ZTJBa2E1VmcKK2JERnlHMUlMd0RHei9Nd1NzQjRydEpnZEtDUFFISm01VlUyNXZiOFdMTXlHVHZQcktvMzFxLzJjeE0xSWphRQpnUENFZXhYRnBWalFMVDBTSEJ6WGIrcTFhMWNOVG81QmdXVDNBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU3eC9ic2t0dThSUDhBZ2VyQmxva0VneWxkQll3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIaUdEUzZzeE9YbFBSSEROaUY3eTYxMDRzUWM1Ry93eTIzUkZma20rU1hzN0NhY1FXNlNHTTR4CjkyeU5ORkdWR3ZpcnRiQXpleWJVYWtwVUtieFJIZk15dUhVZGFYc2JIOHg0UDkzUC83U1NaRkZ2ZkJkN01qOE4KbGlNb0lrdFJueC94WnMyU1ZqekhPTDUvbUZEZ0RUdE02NldhNUVWL3V2UEVhOWJlcjIxT0pjU2I3TmM3UTdrRQppVFIrZGV1cTA5U1B0UDR3UWNudndtUTdoR0ZhNFYvVHU0VGUwTTliVnlhU0hnVytZSnhsQlhLNGVITW9CZzVvCnc5NlVnRjI3QUxJQzJTU3pmYmcySjRLTS90SmYyUHVHaGFTdXplNmVEeFhSOTMwUC9Nb2NlYjZDcUpoMk12MmcKSUozS25DN3dFR3kzVit1M21HbGVPdURSM1JlbEw2dz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRQzFuQXNkb1VZcC9HWjgyZFB1WUhpREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOekl4V2hjTk1qY3dOakV4TVRreQpOekl4V2pBbE1TTXdJUVlEVlFRRERCb3FMbU14TG1oMVltSnNaUzFuY25CakxtTnBiR2wxYlM1cGJ6Q0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMWmNVQ1VEV1JrNy9PZXNCOEVCVkJOemJTVm8KNEhLdTZRY1FNNXVNZ1hZN2ppMnV1eTN5MkRSRXI5RkFYVDh1QnY4b29QL0RjcS9KbmF3T3VTeWZiOUxSaWtCNQpGOVZsTHNvMyt3V1FveW9JeC9iaEdwVHZVTnFkKzdGVzUrTmlZcGFQRUZpSkdyVllJV1poVnd5QVpRRmlkOTdBClU0RDB0V2xZOHB1a3c5ZEZKOThEUFZzYnBocE1RSStMeWUzYVFtcFZhaGMrTkNlcWpPTTNBajZUakl4TzZsTnUKTkRURFZJK2pCOU0rUWNJeks0V0ZkSi9yWXV2NXdHQ2h6RFljZFptN3p4eFdZVlp2Q1pIbHV2Z2tKSVB6N2w3RQozS2FleVJzYUgra0RMVk04YWhoOHlqM1NHbjVieHU2aUMyMFljckdlSi9oVk5mT09IeS9pWENEdTJ0c0NBd0VBCkFhT0JpRENCaFRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVU3eC9ic2t0dThSUDhBZ2VyQmxvawpFZ3lsZEJZd0pRWURWUjBSQkI0d0hJSWFLaTVqTVM1b2RXSmliR1V0WjNKd1l5NWphV3hwZFcwdWFXOHdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUM1WWxoV2wwQ2Z4elhuM2I1MUpRSUJtWmVseDN6SHdGN2crbjJsdFBZd0YKMmJEUWFKZmRTVGk1NTVuUlIzNVMvaWxDN2ZaVUxlckVNS3NtZUNTU3pJNnA3N2ZTaGN3SFRKbmd0cjNxNHl0RwpzWVdtWTA1SzR0TlFxMGEzRnpOcldDano3ZWhhbHg5eWJxQVpkcnowVzZUeHFIK2l3cHYvckRZQ2xTZUgwcXB1CkY4RUtNdUt5djI3SGM1djRuRjQwUGZhRWErd3loTnRiZkVJZHZSbFlMVXhqQU9Qb2MrR1U4ZStRbFRYa2NMR2sKZFNXVUI1OXdiQm0yOTV6em1DVXQ5Wk9CY2N6dlJVa3BoT29oYUVIRjFKcWN0T2hkVVRzeGxDMlVmM0dGYmxOQgpyZ3JlLzNQVURpZkVHeTNqbjIxU2JhWHU1T3VZZ0J0YnBKNU56V2VQaXNBPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdGx4UUpRTlpHVHY4NTZ3SHdRRlVFM050SldqZ2NxN3BCeEF6bTR5QmRqdU9MYTY3CkxmTFlORVN2MFVCZFB5NEcveWlnLzhOeXI4bWRyQTY1TEo5djB0R0tRSGtYMVdVdXlqZjdCWkNqS2dqSDl1RWEKbE85UTJwMzdzVmJuNDJKaWxvOFFXSWthdFZnaFptRlhESUJsQVdKMzNzQlRnUFMxYVZqeW02VEQxMFVuM3dNOQpXeHVtR2t4QWo0dko3ZHBDYWxWcUZ6NDBKNnFNNHpjQ1BwT01qRTdxVTI0ME5NTlVqNk1IMHo1QndqTXJoWVYwCm4rdGk2L25BWUtITU5oeDFtYnZQSEZaaFZtOEprZVc2K0NRa2cvUHVYc1RjcHA3Skd4b2Y2UU10VXp4cUdIeksKUGRJYWZsdkc3cUlMYlJoeXNaNG4rRlUxODQ0ZkwrSmNJTzdhMndJREFRQUJBb0lCQVFDeEZ5WnhPelljTGtnawpSc2hrNHNCZC96cWdHSi9XWHd0RzQ3SHFQV0UvaXdoQVRxM1JLa0pSUjk2aFMyc0NQdFZtbG5MNnpUZWpoQnhOCkNTTkVOVFNudXZzU0wwWTQ0Z0MxT2ZYWWFxUTQzcndwZ0dLSy9YZzhSUzAyQTFvL1U3eS96d0NscWNjNUVmT2wKYzZQUUxTTnBXOUZpak16S3IxazRpN3RWOElTS21DY1BKb2dWdG5hOWNtVmZ6MjMrNDRFK1FVY3haaEc5bmlsdApxUmhYUkc2YVVNejliL2d0bnJacjhwdW5xSElvR0hQdDFMTE90VmVYZnBjOWRKQzZMV1lZVnlSdE5LWmxnN2tVCldIQkYxcnEySjIvRlluMjJKQXZ1MVdvVlNSMkIwVWRZWE1NUkVxYlJmOVc2WnRwdUFYWTZtcTRVcHlWblNBSUMKTTBnQmpMZFpBb0dCQU42OXMwWjRLWnR1TEpPTGc3OHkrSlN5Tkw0clJYSGFVTlBhcHdKaEJXSE1WRzBqWTR3eQpJeFZDUkJaUHhhWnJKdThaRGpNbXAyc0hvMWdSR1dzZm9LV005L2huVHRXejJ1NkhkRzdYamN3d256RXd3a29yCjMrS2w1WU8wQ0grajF4VWw0TlNjVTFUd0NIeXZNcGhSU094NmwwcG5UTGwyTUNNRFdqeDJnOXl0QW9HQkFOR1gKRVJ6a3ZzMVRsdDZUUzV1S1huTTJ2M0tNQ1JmeSs1ZnlFaWxaOWxNVGJCMFZKdHZ4QzFrNVpDeVhERVJucVhzbgpDREtjK05va2hOQzlzeldkUm1mYmt0cTVZcTNzK2lEYlljblR6WThPSmdUSG8xRURBc0lwOHNWeE1iNFFsVEs3CitkMlg2allobmNqZmlMa3ArbVQ4UGtlbEdhVlIyOW1Zb3puZVdENm5Bb0dBTWZES2oxUkZ6K21sNlBidzlSK1MKaUpSa0t2Yzh2TWc4TXlQbEtpMWlyWWpJclNld0hERHBtTXlndzNmalV1clhjZWhtUEtYQUI4bFFvR0JGR0xXZwpxVDJ3STJ2V1N5Zm1RSER5ZEIrMFZVSFpqNGZsS0FncVRJRHhzdFBjeS9HS09kMmlTVWs3amVHN3BXa0txUWdnCmw1VHM4dXV5VWlyanBCWU9WMXdqT0lrQ2dZRUFzL05kcVE0cFdFZVZ1S0tFL3hYdGhFU1VXYmdzTXBqWU5aeU0KeFY1TlpRUy9CYlZjZU9qYjBvNjVHS1BUejRPbGUyeUcyRlg0UCt1czhVQis5dUNEUzdhMXZ2LyszdEFoN2tZTwpEdWpBakR3Y25tditLQmRLcmdTd1FaK3ZrcjNRTEJCRE4yUXducXQ4T3JUYVFnanR5UGplVEV0UDJxYU8rYVBaCk9WMVRMTzhDZ1lFQXVwVkU2ZU5iZWlGTG1RbzNXQTlLbUkwMXZLbUtuZjB4RURtdXVCMUJUUWRZRUNWWlpXSXgKQ3JBSmdSMUo3OGFiYU0zUk1JYnBhK0V6WHhWdGpTS08vQ2ZQcVcveFJ6WU5oK21VakFyMmRSa2xXNWZ4WG1PNQpzVittQzY5V2t3dEtNR0JqTFVwYkMyRlpWZlFrUS9RZG1Fbk9tUEN6QzdoNnBhZS94dm84cmNvPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  policy-cidr-match-mode: ""
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":9963"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: c1
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "11"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"
  service-no-backend-response: "reject"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-masquerade-to-route-source: "false"
  enable-wireguard: "true"
  wireguard-persistent-keepalive: "0s"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "false"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  enable-health-check-loadbalancer-ip: "false"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  bpf-lb-acceleration: "disabled"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  hubble-export-file-max-size-mb: "10"
  hubble-export-file-max-backups: "5"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  ipam-cilium-node-update-rate: "15s"
  cluster-pool-ipv4-cidr: "10.1.0.0/17"
  cluster-pool-ipv4-mask-size: "24"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "true"
  bgp-secrets-namespace: "kube-system"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"

  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  # default DNS proxy to transparent mode in non-chaining modes
  dnsproxy-enable-transparent-mode: "true"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-xff-num-trusted-hops-ingress: "0"
  proxy-xff-num-trusted-hops-egress: "0"
  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"
  proxy-idle-timeout-seconds: "60"

  external-envoy-proxy: "false"
  max-connected-clusters: "255"

# Extra config allows adding arbitrary properties to the cilium config.
# By putting it at the end of the ConfigMap, it's also possible to override existing properties.
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: c1
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n            return 200 'ok';\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/clustermesh-apiserver/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumexternalworkloads/status
  - ciliumnodes
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumendpoints/status
  verbs:
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumexternalworkloads
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-bgp-control-plane-secrets
  namespace: "kube-system"
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-bgp-control-plane-secrets
  namespace: "kube-system"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-bgp-control-plane-secrets
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver-metrics
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/component: metrics
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: etcd-metrics
    port: 9963
    protocol: TCP
    targetPort: etcd-metrics
  selector:
    k8s-app: clustermesh-apiserver
---
# Source: cilium/templates/clustermesh-apiserver/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  type: NodePort
  selector:
    k8s-app: clustermesh-apiserver
  ports:
  - port: 2379
    nodePort: 32379
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
              divisor: '1'
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                    set -o errexit
                    set -o pipefail
                    set -o nounset
                    
                    # When running in AWS ENI mode, it's likely that 'aws-node' has
                    # had a chance to install SNAT iptables rules. These can result
                    # in dropped traffic, so we should attempt to remove them.
                    # We do it using a 'postStart' hook since this may need to run
                    # for nodes which might have already been init'ed but may still
                    # have dangling rules. This is safe because there are no
                    # dependencies on anything that is part of the startup script
                    # itself, and can be safely run multiple times per node (e.g. in
                    # case of a restart).
                    if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                    then
                        echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                        iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                    fi
                    echo 'Done!'
                    
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: write-cni-conf-when-ready
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.15.6@sha256:5789f0935eef96ad571e4f5565a8800d3a8fbb05265cf6909300cd82fd513c3d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        ports:
        - name: prometheus
          containerPort: 9963
          hostPort: 9963
          protocol: TCP
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/clustermesh-apiserver/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: clustermesh-apiserver
        k8s-app: clustermesh-apiserver
    spec:
      initContainers:
      - name: etcd-init
        image: "quay.io/cilium/clustermesh-apiserver:v1.15.6@sha256:6365c2fe8a038fc7adcdeb7ffb8d7a8a2cd3ee524687f35fff9df76fafeeb029"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - etcdinit
        # These need to match the equivalent arguments to etcd in the main container.
        - --etcd-cluster-name=clustermesh-apiserver
        - --etcd-initial-cluster-token=$(INITIAL_CLUSTER_TOKEN)
        - --etcd-data-dir=/var/run/etcd
        env:
          # The Cilium cluster name (specified via the `CILIUM_CLUSTER_NAME` environment variable) and the etcd cluster
          # name (specified via the `--etcd-cluster-name` argument) are very different concepts. The Cilium cluster name
          # is the name of the overall Cilium cluster, and is used to set the admin account username. The etcd cluster
          # name is a concept that's only relevant for etcd itself. The etcd cluster name must be the same for both this
          # command and the actual invocation of etcd in the main containers of this Pod, but it's otherwise not
          # relevant to Cilium.
        - name: CILIUM_CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: INITIAL_CLUSTER_TOKEN
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      containers:
      - name: etcd
        # The clustermesh-apiserver container image includes an etcd binary.
        image: "quay.io/cilium/clustermesh-apiserver:v1.15.6@sha256:6365c2fe8a038fc7adcdeb7ffb8d7a8a2cd3ee524687f35fff9df76fafeeb029"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/etcd
        args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        # Surrounding the IPv4 address with brackets works in this case, since etcd
        # uses net.SplitHostPort() internally and it accepts the that format.
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=$(INITIAL_CLUSTER_TOKEN)
        - --auto-compaction-retention=1
        - --listen-metrics-urls=http://[$(HOSTNAME_IP)]:9963
        - --metrics=basic
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: INITIAL_CLUSTER_TOKEN
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        ports:
        - name: etcd
          containerPort: 2379
          protocol: TCP
        - name: etcd-metrics
          containerPort: 9963
          protocol: TCP
        volumeMounts:
        - name: etcd-server-secrets
          mountPath: /var/lib/etcd-secrets
          readOnly: true
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      - name: apiserver
        image: "quay.io/cilium/clustermesh-apiserver:v1.15.6@sha256:6365c2fe8a038fc7adcdeb7ffb8d7a8a2cd3ee524687f35fff9df76fafeeb029"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - clustermesh
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt
        - etcd.config=/var/lib/cilium/etcd-config.yaml
        - --max-connected-clusters=255
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        - --controller-group-metrics=all
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: identity-allocation-mode
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: enable-k8s-endpoint-slice
              optional: true
        ports:
        - name: apiserv-metrics
          containerPort: 9962
          protocol: TCP
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: etcd-server-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-server-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-admin-client
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-admin-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-data-dir
        emptyDir: {}
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "clustermesh-apiserver"
      serviceAccountName: "clustermesh-apiserver"
      terminationGracePeriodSeconds: 30
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: clustermesh-apiserver
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.15.6@sha256:a0863dd70d081b273b87b9b7ce7e2d3f99171c2f5e202cd57bc6691e51283e0c"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          livenessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          startupProbe:
            # give the relay one minute to start up
            grpc:
              port: 4222
            timeoutSeconds: 3
            failureThreshold: 20
            periodSeconds: 3
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.13.0@sha256:7d663dc16538dd6e29061abd1047013a645e6e69c115e008bee9ea9fef9a6666"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        readinessProbe:
          httpGet:
            path: /
            port: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.13.0@sha256:1e7657d997c5a48253bb8dc91ecee75b63018d16ff5e5797e5af367336bc8803"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
