---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBXRXhJdjNHbVJjWGtxNnplSGhyYjB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3TlZvWERUSTJNVEV5TVRJeApOVFV3TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF4UCtVWU9FRkxrMm1uRWQvVEZFazUzWTV1Q25Gd3U0ZDJJN3QwdGJjdzdvcUFuaEcKYkV3ZmVqREpDYUliUE43Q0FRRFdpQmYyUkRmRlNHVXB4MjJ3aGFVTkk4THJ2WDFtU2dqZUtFMnhNNC9GZEZqbQpyVk1EVDlGUWYyQStUcnRJMWZ6RXExY0FYZFNOWVNvbk5LR1BoSFdlaXlnRUZMK2VkRlZtTVBLVmZzbE4rT1VSCkcyZFdld2dqS0QySzJia1ppdnd2QjNTZEFlWUpVTnpGSnFiVFBkMWFFdmVtVHlUdHpnWEs0TnR3S1N4Y2E3SDkKbHdST3BMeU9icmZ2SnhvellZbjdBbHdnSlNNeDM4M05ySkZsUEQxVUlnNjNlUm5CTUx2RXp0SnJrN0JjZ1JPZQo0ZGlqYnZQQVhWMW9HV05kMnV6MUNvS0U5ZXAxci8xS3FiSlhJUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRjBoU3MvY3k0ejBLRFZ4QlM1eUlEaEZTV0cwTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVBBVzZ3eFpKVDFwTDUvTlZnbS9vWi9QQUV5S3RiZUttWlVhWHExMktVOWNvUWFKZ2Y3QWQvCkg2UUpXSVFmTkdqQmJqY0I4M1cwMms3Tm43SHZxT0pxV2laK0hoVmdqMUJDOVR0eTNtTVZkQ2dJaXBvejVzVVoKNGpLcStWV1dwSjBEbzh4eGRYYWxsSFp1RE1SWWlWNTExZTB6VWthamh1Z0NqcStrZHpqdkJCbmp5MEdQdlh1Zwo3dGtMN01vVXJZcThldW9SVnRWOG1YTkE4SU5adldsRXhuMDdyWUhDZ1AxSzVqNE5XcUhwV0JralNYcXVlaThYClg4RlBzNEJSUXB0M3lDd1R3Z29vclc3STk3ZEJnVHRJNy9BMHdVUHVjK1JiU0lpTjljVTBYamRHNGJHeGlleVcKeTdwTmNXVE9XdWk1T0tpNCt2ZkdGWjRLZUUzaTVOUE4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeFArVVlPRUZMazJtbkVkL1RGRWs1M1k1dUNuRnd1NGQySTd0MHRiY3c3b3FBbmhHCmJFd2ZlakRKQ2FJYlBON0NBUURXaUJmMlJEZkZTR1VweDIyd2hhVU5JOExydlgxbVNnamVLRTJ4TTQvRmRGam0KclZNRFQ5RlFmMkErVHJ0STFmekVxMWNBWGRTTllTb25OS0dQaEhXZWl5Z0VGTCtlZEZWbU1QS1Zmc2xOK09VUgpHMmRXZXdnaktEMksyYmtaaXZ3dkIzU2RBZVlKVU56RkpxYlRQZDFhRXZlbVR5VHR6Z1hLNE50d0tTeGNhN0g5Cmx3Uk9wTHlPYnJmdkp4b3pZWW43QWx3Z0pTTXgzODNOckpGbFBEMVVJZzYzZVJuQk1MdkV6dEpyazdCY2dST2UKNGRpamJ2UEFYVjFvR1dOZDJ1ejFDb0tFOWVwMXIvMUtxYkpYSVFJREFRQUJBb0lCQUNCMU04OWFnKzRESVVaeQppVWpidmNiZE5kbGdHSk5yaEVOZ0dWTTV6NW40SEYvWHpWS2VvRGtUdkt2M3A2RTUycUVyc0Mwd05ZVTc0eWR3CmM1ZkdQT1ZvTW1nSC82dHk4OTJTNUhlamhXVEhkWE1jQ3JYWURaMmpFUzVMZnppZHB2eUs3eVNENnkyS2pkaksKaHpjbXYyekZyRitsTWpidzgzeWJiWUQzRnlhU1hsdDZmd1N5TTFSM0lQOXdSY1FxdlpJY0F0VEtvNDhZRld0dgptaVp2N0RzNWxqM1dHbm12ckpCU3JwMXJjTm5uODZYUGxpd2dWV0NHZ3BRNml5WGw0VlNleHM5SHhxcUV4TEdCCkJWSk96NDg2WkJPMXJDRTBHaUFwVWhPRmVFUWxOUUZoTEFjOFVzUWdLK1pZVi9yV2Nzb28vM0p5QkZJREx1VDAKOXQyclhKa0NnWUVBNTE3Nml6STlKODRrUDdSR2FvdjJYUENlZ1lYRmNkemJZelVmdjlLKy95WkljSUF6aG5BTQpHQkhYcmVGdkFZY1F6TE1UTVRNUExEZ0RHamw1cWNOQUZwMHdCTmNtS3NrVVVzVHNsOFR3UGx1NnZFZjJiQ1lzCmhnNGVGQUFkMnFVU3pGK1FPSHdEOThhRU1HbWt6ZzVYNnArUkVuOENWUHdnMXluV21DRTlpdHNDZ1lFQTJmZnMKRTNlZkhDclJFN1dQS1UxcXNPc2dLQnNXa3k2Z3pjSjZGRGNyYlprNHk1NjA4YVZMQ3UrbEFzWXczdnBJWVZxUQprdTNJeitaeHlDb2ZDZDlNcEFpVXJTV0J4emQzV1JtemUxYUlaMXl4dmNoUjNIM1ZOUGNCbDBjTzhrbGg3djh1CkJIbERWd0pvMUIvUCtGK1Q0QlhEVHhnQjhvWU9jaS9ESUtweXdMTUNnWUVBeG9uVStvOFF0VkNLQUhSRW5IY2YKMzk3R1ZTU2lLak8zdW1qQ3BzdEVCQlFvd3dqdnJlUUdMTDFhMHlXSUtNcHEyd3lyWW1PTEdJbXo5OVBzRjRXcApQLzZBVHhjRDlHRDU1SkNBNlRjZ1pKSTRLZ3FpWldsWWVXd3gyVDNFWUhPWUx2R3VBeHBBR1dVcTE1US96R1c0CmdXZU5pRTZlaEtpWjBhaGdNY2tNVTFNQ2dZQXlUUGg1OVowT1R3TTQzU2xRaXNFWVd1cHMxdk42dThQNE4rMGMKUlM4TWQ5T1hpZVNQNzJsRitNL0h1QjBIR0JNa0JGWmcwZWNKczFDR3RORzg0WDg2UzVDajlJZmloWFpSWlpENQo0WnBRNEI5VWdLb0RqRFpycHFVRFdDNm0wekI2aXdEL24weGZBL3RWR0pKUjZ4eWhGZVNnbUJXNjloelhWUlplCnIzY1Q2UUtCZ1FEWEYvR2EwZUFRMU5GSFdjbEh0emU1TllXNU9FVGFwOER6Qi9BalFKa0RyL1d1V0NIMW5iZWkKaDdSSFR5SzJVdFNaQWFMc0JTbm9PNEF0eDU5RytiazdNTmRQcUd4S3hMZEFaQW81S3RXWUh1VTlRRDY5RUtJcQpmams1ZmxVU002WFF3MHNLV3ZsL3dLVk84V2NaMmhCTTNJa0xId2RFZTNyS0lVSEpLMXJYbmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/admin-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBXRXhJdjNHbVJjWGtxNnplSGhyYjB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3TlZvWERUSTJNVEV5TVRJeApOVFV3TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF4UCtVWU9FRkxrMm1uRWQvVEZFazUzWTV1Q25Gd3U0ZDJJN3QwdGJjdzdvcUFuaEcKYkV3ZmVqREpDYUliUE43Q0FRRFdpQmYyUkRmRlNHVXB4MjJ3aGFVTkk4THJ2WDFtU2dqZUtFMnhNNC9GZEZqbQpyVk1EVDlGUWYyQStUcnRJMWZ6RXExY0FYZFNOWVNvbk5LR1BoSFdlaXlnRUZMK2VkRlZtTVBLVmZzbE4rT1VSCkcyZFdld2dqS0QySzJia1ppdnd2QjNTZEFlWUpVTnpGSnFiVFBkMWFFdmVtVHlUdHpnWEs0TnR3S1N4Y2E3SDkKbHdST3BMeU9icmZ2SnhvellZbjdBbHdnSlNNeDM4M05ySkZsUEQxVUlnNjNlUm5CTUx2RXp0SnJrN0JjZ1JPZQo0ZGlqYnZQQVhWMW9HV05kMnV6MUNvS0U5ZXAxci8xS3FiSlhJUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRjBoU3MvY3k0ejBLRFZ4QlM1eUlEaEZTV0cwTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVBBVzZ3eFpKVDFwTDUvTlZnbS9vWi9QQUV5S3RiZUttWlVhWHExMktVOWNvUWFKZ2Y3QWQvCkg2UUpXSVFmTkdqQmJqY0I4M1cwMms3Tm43SHZxT0pxV2laK0hoVmdqMUJDOVR0eTNtTVZkQ2dJaXBvejVzVVoKNGpLcStWV1dwSjBEbzh4eGRYYWxsSFp1RE1SWWlWNTExZTB6VWthamh1Z0NqcStrZHpqdkJCbmp5MEdQdlh1Zwo3dGtMN01vVXJZcThldW9SVnRWOG1YTkE4SU5adldsRXhuMDdyWUhDZ1AxSzVqNE5XcUhwV0JralNYcXVlaThYClg4RlBzNEJSUXB0M3lDd1R3Z29vclc3STk3ZEJnVHRJNy9BMHdVUHVjK1JiU0lpTjljVTBYamRHNGJHeGlleVcKeTdwTmNXVE9XdWk1T0tpNCt2ZkdGWjRLZUUzaTVOUE4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRVnBJeXY0cVZhZ3VJaSsrMTloeEcrVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEEyV2hjTk1qWXhNVEl4TWpFMQpOVEEyV2pBVE1SRXdEd1lEVlFRREV3aGhaRzFwYmkxak16Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQCkFEQ0NBUW9DZ2dFQkFNV0ROYXdHT29UYmgvbWpnOExwTkc5OERNQ0RRMm9rZ3hCVGx3VTY3ZjN2YnZIamcxL0cKdkJxUE1FSWFlakduekY5UjlBS0x3MW90OXN3SURva1BEYXE3L3h5NjJlWkRIem92Vm9PbVNTQy9jYk5yRFBtRgpXcXBpVGpTU25UMWJDbjQ5dkU2YVJhUngzZlRRQUd4OS9nSURhajRwRG1oS3IzSHFxUTJhM2pFWmo5WEM3ckVjClpKNXo3TWRkVzkweWtHRm9CV1M2aW5Zb0M4RUgwbWV4SUphTms4OXk3c29YSXI5MG5Id3lUSmVLSHVzaEI3QlUKVHRtbVBXWTdodWw2bWZIaVZ0dHZjcmxndFdDbFdzRkpjRk11VkplcjhZU0FSTi84blVkbmpsa0ZDS3lHNDFrRQpTd3ZlWWFqTnRpTkZDMXdOcnBVRGdxMEErS3NucjVXL2NtY0NBd0VBQWFOMk1IUXdEZ1lEVlIwUEFRSC9CQVFECkFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUEKTUI4R0ExVWRJd1FZTUJhQUZGMGhTcy9jeTR6MEtEVnhCUzV5SURoRlNXRzBNQlFHQTFVZEVRUU5NQXVDQ1d4dgpZMkZzYUc5emREQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFMTEc3ZHdMUis2bFhEQ0h3UGJFeDMrMFc4TVhMCkMxZ1RpUGVhKzZsWnBIb1BUK0lGSUxZdUJyWXlkRENRK0d1RTc3cnk3RDZEbkk2Sm5xK1M1SHFoNkg5akZJZFYKcTdDTlhBcEtOMmJaL0JObld0REhJWFhSeFBKY2E3NXJScFJsaHAwa1dGdU5SMlRkK2RjbDh3NysrWmVoU1J0QgorWGRhV08vV1ZNQndQbkJSeDFzTWJoMXViRC95cVpid3dDbWk5YUJjTFFtWmFVT1JzTHQrRytERGhxOSsyRURGCm42dkhmUFgxNjZFRk9DRWI1MHFDQlRNS1Z4MmJTR05OODBWdWZZZ2trTTh1bVFoYnA0bW83dGEraGlSU2ovNWYKVGxQd3hGeUlneTNCODNzTHh2TjhmcGVaOEx1UHRkY1JRT09xeWdVZUpVMGpqeWlQRFQ5Zkd6WmtPZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBeFlNMXJBWTZoTnVIK2FPRHd1azBiM3dNd0lORGFpU0RFRk9YQlRydC9lOXU4ZU9EClg4YThHbzh3UWhwNk1hZk1YMUgwQW92RFdpMzJ6QWdPaVE4TnFydi9ITHJaNWtNZk9pOVdnNlpKSUw5eHMyc00KK1lWYXFtSk9OSktkUFZzS2ZqMjhUcHBGcEhIZDlOQUFiSDMrQWdOcVBpa09hRXF2Y2VxcERacmVNUm1QMWNMdQpzUnhrbm5Qc3gxMWIzVEtRWVdnRlpMcUtkaWdMd1FmU1o3RWdsbzJUejNMdXloY2l2M1NjZkRKTWw0b2U2eUVICnNGUk8yYVk5Wmp1RzZYcVo4ZUpXMjI5eXVXQzFZS1Zhd1Vsd1V5NVVsNnZ4aElCRTMveWRSMmVPV1FVSXJJYmoKV1FSTEM5NWhxTTIySTBVTFhBMnVsUU9DclFENHF5ZXZsYjl5WndJREFRQUJBb0lCQUhrcGUyUlMwZFVzZ3FadQpXMmJXL2xhaGg0VVZRT2E5RFRXWHdaM3d2NHcyTkIzb3ptK1RqMUxQb2UvN0pCaVA4ZnhMWHQrczh5Sy83WlRPCklIU05xbm1oSitkczdEeW4wbUUwSnVOTnY3QjZJSHJLNGNPenZhR2wrb21mb3h1L1hKbUNyNkNjWExwN0s0aUIKakxFQlBTL28vbVN4ZE9nZllLOEdIN3g3MDIvVVJZRGV5ckxDeFVnUVNqZlVESDQvbWN1QmVFMDhzcVY4Snkycwp2SGNueEhxdTBUMjNWYlY0U2Y4ZG01L1BxZEZhWTZFeGRBL1N4Y0w4Y3FLN1VmTzJhV0wzZ0pIcFdUdG5XQjNUCkxKRHc4QTA1UmRSVmVtN1lNUmxPVUJoVmJoYU5QZ2pNNi9ncmU3NUJIQk5hVXE2WENFaVNkdTBMbHZ4UStzUUwKanBMaE9IRUNnWUVBNXN0Smlxbkh5Y1ZHZ0NvamZuSmVaR29VNEdzTFBLTHIwQXphdEp4QnZzODcxZ1ZNakNaVApicnQyZVhteDV5c2JROGtSUUNlQVNPOUxSdm5hQlN5RVAzTzhQWENqbS83am94SXhnTXN2dHoveTRnOWJ2a1EvCjJkSnduTVFid2xXbjNyMVBvL0tLNnhvN0lwc2lMaUJTOHdmZ3BvdEdrcEtDSkM1SG1OcGM5VmtDZ1lFQTJ4VnAKZDhpMnpQZ3RsT2g2UmFFQkk5cGVobE9McUpBL24zcnJKeFJXVTlMNkJVaFk3NGFsSXFVcFRHOXM0YkJXTWEzTQp5STB5ajNWK2gweTllaTN5dkd0QnNZTldlMEI4aHVYTjNtNURCN2lyUURld3FNdmZNbDFZRlc3VytRT0FmT3lYCnRQRFhUSFhnVmZSN3VwY3Y2M0JzcjV0VTlCUFpDTHdIS2RBcDdiOENnWUVBM3JqOWpvaEwyb2E3ZzRHbTRTYmoKdXNtNHZkM3ZhU1BjcDlsUDBnNGRVRk5TN2pZTTZnOHVZdVViN3h5bXQyeWRFaXhlcm1ld1lESTFsaGdWOHZwRAo0YXdCMDlUNHZ0a2F1c3NhNUt5d3JvcFREUjgvTFAxV0ZSSUZSUFBueWdHNVQ3V252cEtZeDB0NEYreFg3dVdZCnh4b3FETzdKT3plUnlmS3plMm4zWFhrQ2dZRUF5c3dLUWZoSXhubGc4RHMybStlS3Y1NXU2MWJBcTN0RGVhUDEKc3NvUGt5NXpnNXBSd1A5Wk16WEJnZUNPNEdjemttNzRaaGpWMlpnQVZNd0RoT3F0akI2WXcvSDRoc1ROd0sxTwpvUHhlRGZLeWl4SkI5QzRyNEZvcHBFVml0MFMzbG13SGpsVjJabStqQnMzMkRtWE8xTmpQc3NwTm5GWVhEQS9KCmJib2taYzhDZ1lFQXJIUWJmcWIycTg5eW1HTStEL1pFWUhVbWNzTkVyK3ppUDdmTFViZDgwV2h1OTdoRzl0Z3MKTEpsOEdLcnkzdFU2YkxWSkVyM2tMaXpnWXNsYXBtZm83SlE3Y0lpTi9HbmpCcVZKVkdPaFNaT2xneGw5UFBzawpsWjNCaE1TZnhnT1ZnMy9YNjc4V2h5MGV2MXlIZElxNGk3ek9BUjVIbFppcGs0eWNmY0VBMCtjPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-ca-cert
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBXRXhJdjNHbVJjWGtxNnplSGhyYjB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3TlZvWERUSTJNVEV5TVRJeApOVFV3TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF4UCtVWU9FRkxrMm1uRWQvVEZFazUzWTV1Q25Gd3U0ZDJJN3QwdGJjdzdvcUFuaEcKYkV3ZmVqREpDYUliUE43Q0FRRFdpQmYyUkRmRlNHVXB4MjJ3aGFVTkk4THJ2WDFtU2dqZUtFMnhNNC9GZEZqbQpyVk1EVDlGUWYyQStUcnRJMWZ6RXExY0FYZFNOWVNvbk5LR1BoSFdlaXlnRUZMK2VkRlZtTVBLVmZzbE4rT1VSCkcyZFdld2dqS0QySzJia1ppdnd2QjNTZEFlWUpVTnpGSnFiVFBkMWFFdmVtVHlUdHpnWEs0TnR3S1N4Y2E3SDkKbHdST3BMeU9icmZ2SnhvellZbjdBbHdnSlNNeDM4M05ySkZsUEQxVUlnNjNlUm5CTUx2RXp0SnJrN0JjZ1JPZQo0ZGlqYnZQQVhWMW9HV05kMnV6MUNvS0U5ZXAxci8xS3FiSlhJUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRjBoU3MvY3k0ejBLRFZ4QlM1eUlEaEZTV0cwTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVBBVzZ3eFpKVDFwTDUvTlZnbS9vWi9QQUV5S3RiZUttWlVhWHExMktVOWNvUWFKZ2Y3QWQvCkg2UUpXSVFmTkdqQmJqY0I4M1cwMms3Tm43SHZxT0pxV2laK0hoVmdqMUJDOVR0eTNtTVZkQ2dJaXBvejVzVVoKNGpLcStWV1dwSjBEbzh4eGRYYWxsSFp1RE1SWWlWNTExZTB6VWthamh1Z0NqcStrZHpqdkJCbmp5MEdQdlh1Zwo3dGtMN01vVXJZcThldW9SVnRWOG1YTkE4SU5adldsRXhuMDdyWUhDZ1AxSzVqNE5XcUhwV0JralNYcXVlaThYClg4RlBzNEJSUXB0M3lDd1R3Z29vclc3STk3ZEJnVHRJNy9BMHdVUHVjK1JiU0lpTjljVTBYamRHNGJHeGlleVcKeTdwTmNXVE9XdWk1T0tpNCt2ZkdGWjRLZUUzaTVOUE4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeFArVVlPRUZMazJtbkVkL1RGRWs1M1k1dUNuRnd1NGQySTd0MHRiY3c3b3FBbmhHCmJFd2ZlakRKQ2FJYlBON0NBUURXaUJmMlJEZkZTR1VweDIyd2hhVU5JOExydlgxbVNnamVLRTJ4TTQvRmRGam0KclZNRFQ5RlFmMkErVHJ0STFmekVxMWNBWGRTTllTb25OS0dQaEhXZWl5Z0VGTCtlZEZWbU1QS1Zmc2xOK09VUgpHMmRXZXdnaktEMksyYmtaaXZ3dkIzU2RBZVlKVU56RkpxYlRQZDFhRXZlbVR5VHR6Z1hLNE50d0tTeGNhN0g5Cmx3Uk9wTHlPYnJmdkp4b3pZWW43QWx3Z0pTTXgzODNOckpGbFBEMVVJZzYzZVJuQk1MdkV6dEpyazdCY2dST2UKNGRpamJ2UEFYVjFvR1dOZDJ1ejFDb0tFOWVwMXIvMUtxYkpYSVFJREFRQUJBb0lCQUNCMU04OWFnKzRESVVaeQppVWpidmNiZE5kbGdHSk5yaEVOZ0dWTTV6NW40SEYvWHpWS2VvRGtUdkt2M3A2RTUycUVyc0Mwd05ZVTc0eWR3CmM1ZkdQT1ZvTW1nSC82dHk4OTJTNUhlamhXVEhkWE1jQ3JYWURaMmpFUzVMZnppZHB2eUs3eVNENnkyS2pkaksKaHpjbXYyekZyRitsTWpidzgzeWJiWUQzRnlhU1hsdDZmd1N5TTFSM0lQOXdSY1FxdlpJY0F0VEtvNDhZRld0dgptaVp2N0RzNWxqM1dHbm12ckpCU3JwMXJjTm5uODZYUGxpd2dWV0NHZ3BRNml5WGw0VlNleHM5SHhxcUV4TEdCCkJWSk96NDg2WkJPMXJDRTBHaUFwVWhPRmVFUWxOUUZoTEFjOFVzUWdLK1pZVi9yV2Nzb28vM0p5QkZJREx1VDAKOXQyclhKa0NnWUVBNTE3Nml6STlKODRrUDdSR2FvdjJYUENlZ1lYRmNkemJZelVmdjlLKy95WkljSUF6aG5BTQpHQkhYcmVGdkFZY1F6TE1UTVRNUExEZ0RHamw1cWNOQUZwMHdCTmNtS3NrVVVzVHNsOFR3UGx1NnZFZjJiQ1lzCmhnNGVGQUFkMnFVU3pGK1FPSHdEOThhRU1HbWt6ZzVYNnArUkVuOENWUHdnMXluV21DRTlpdHNDZ1lFQTJmZnMKRTNlZkhDclJFN1dQS1UxcXNPc2dLQnNXa3k2Z3pjSjZGRGNyYlprNHk1NjA4YVZMQ3UrbEFzWXczdnBJWVZxUQprdTNJeitaeHlDb2ZDZDlNcEFpVXJTV0J4emQzV1JtemUxYUlaMXl4dmNoUjNIM1ZOUGNCbDBjTzhrbGg3djh1CkJIbERWd0pvMUIvUCtGK1Q0QlhEVHhnQjhvWU9jaS9ESUtweXdMTUNnWUVBeG9uVStvOFF0VkNLQUhSRW5IY2YKMzk3R1ZTU2lLak8zdW1qQ3BzdEVCQlFvd3dqdnJlUUdMTDFhMHlXSUtNcHEyd3lyWW1PTEdJbXo5OVBzRjRXcApQLzZBVHhjRDlHRDU1SkNBNlRjZ1pKSTRLZ3FpWldsWWVXd3gyVDNFWUhPWUx2R3VBeHBBR1dVcTE1US96R1c0CmdXZU5pRTZlaEtpWjBhaGdNY2tNVTFNQ2dZQXlUUGg1OVowT1R3TTQzU2xRaXNFWVd1cHMxdk42dThQNE4rMGMKUlM4TWQ5T1hpZVNQNzJsRitNL0h1QjBIR0JNa0JGWmcwZWNKczFDR3RORzg0WDg2UzVDajlJZmloWFpSWlpENQo0WnBRNEI5VWdLb0RqRFpycHFVRFdDNm0wekI2aXdEL24weGZBL3RWR0pKUjZ4eWhGZVNnbUJXNjloelhWUlplCnIzY1Q2UUtCZ1FEWEYvR2EwZUFRMU5GSFdjbEh0emU1TllXNU9FVGFwOER6Qi9BalFKa0RyL1d1V0NIMW5iZWkKaDdSSFR5SzJVdFNaQWFMc0JTbm9PNEF0eDU5RytiazdNTmRQcUd4S3hMZEFaQW81S3RXWUh1VTlRRDY5RUtJcQpmams1ZmxVU002WFF3MHNLV3ZsL3dLVk84V2NaMmhCTTNJa0xId2RFZTNyS0lVSEpLMXJYbmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/remote-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBXRXhJdjNHbVJjWGtxNnplSGhyYjB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3TlZvWERUSTJNVEV5TVRJeApOVFV3TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF4UCtVWU9FRkxrMm1uRWQvVEZFazUzWTV1Q25Gd3U0ZDJJN3QwdGJjdzdvcUFuaEcKYkV3ZmVqREpDYUliUE43Q0FRRFdpQmYyUkRmRlNHVXB4MjJ3aGFVTkk4THJ2WDFtU2dqZUtFMnhNNC9GZEZqbQpyVk1EVDlGUWYyQStUcnRJMWZ6RXExY0FYZFNOWVNvbk5LR1BoSFdlaXlnRUZMK2VkRlZtTVBLVmZzbE4rT1VSCkcyZFdld2dqS0QySzJia1ppdnd2QjNTZEFlWUpVTnpGSnFiVFBkMWFFdmVtVHlUdHpnWEs0TnR3S1N4Y2E3SDkKbHdST3BMeU9icmZ2SnhvellZbjdBbHdnSlNNeDM4M05ySkZsUEQxVUlnNjNlUm5CTUx2RXp0SnJrN0JjZ1JPZQo0ZGlqYnZQQVhWMW9HV05kMnV6MUNvS0U5ZXAxci8xS3FiSlhJUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRjBoU3MvY3k0ejBLRFZ4QlM1eUlEaEZTV0cwTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVBBVzZ3eFpKVDFwTDUvTlZnbS9vWi9QQUV5S3RiZUttWlVhWHExMktVOWNvUWFKZ2Y3QWQvCkg2UUpXSVFmTkdqQmJqY0I4M1cwMms3Tm43SHZxT0pxV2laK0hoVmdqMUJDOVR0eTNtTVZkQ2dJaXBvejVzVVoKNGpLcStWV1dwSjBEbzh4eGRYYWxsSFp1RE1SWWlWNTExZTB6VWthamh1Z0NqcStrZHpqdkJCbmp5MEdQdlh1Zwo3dGtMN01vVXJZcThldW9SVnRWOG1YTkE4SU5adldsRXhuMDdyWUhDZ1AxSzVqNE5XcUhwV0JralNYcXVlaThYClg4RlBzNEJSUXB0M3lDd1R3Z29vclc3STk3ZEJnVHRJNy9BMHdVUHVjK1JiU0lpTjljVTBYamRHNGJHeGlleVcKeTdwTmNXVE9XdWk1T0tpNCt2ZkdGWjRLZUUzaTVOUE4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRWjdrWEpTQ0ptRmtpTlprdmNhY04yVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEEyV2hjTk1qWXhNVEl4TWpFMQpOVEEyV2pBUk1ROHdEUVlEVlFRREV3WnlaVzF2ZEdVd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEQmZpU3RFekUwNFltN3poL1VqdFFTK0E2djhkM1R6UVdBdWRBMTh4SEFNcmIzYXRlT1A3R2UKYWEydjBJRGhuNVBPV1VtN1JURXc3ekI4TmdkdG5KRVduMTFhR1N0YmZ5R1ZYa2FKQWkwdnE2djlzbG94U2FSWQpxZW9ranhPQ29BZnBDZXZXRFBKWWJtN3REeWcrTEVBL3kvaDdoWHlPUkRRa0FPVzFPbWNCcjNrR2N5aEM2T2RHClEycUxQTE1NODFtbGFzVDhKZkVwZ0ZzQlhWWU5MWDV1ODVNQXU3d1ZPRlNyeThIaXFmQlZteGwzWTkzMEVvVGcKS0NrZW9reENIOHpicHF0WEJJSVptakRWUjEwYUxPZjEzSHg2TXlVWWkrTG10STRRTXlQWHFXUm1VRXQxZEtMTApZK0xlZk50TWtCbW1MOWdKNVF1L2tTcU10VWhHMVNINUFnTUJBQUdqWURCZU1BNEdBMVVkRHdFQi93UUVBd0lGCm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWYKQmdOVkhTTUVHREFXZ0JSZElVclAzTXVNOUNnMWNRVXVjaUE0UlVsaHREQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBcWNKbUpLcm5hb1hlYnRNelBOODExa0FDODVGMmt5dDhmUGp5bUFIMFhNbjVYclVLcWtVbmQrVHgyNGVhCjYxWDE4L0FNaThINVBnZUYxK2srQUY4Ry9Td1VjNWlZMlFTTTZuMnErUHNpaFd0M2M5c1Y0enhUWUgza3NDNTUKR2hjdTlyTGlkYy9pMkJ4TFpwOUoxSHlmV0tCazlPUXlpNDBsM2VVZW9aQ3I5dDY5NkdaU0JjSU1ZdS9BbitiRApCeUwvOUNrYis0WEg3anNEZ1Rrb0lYSG9idDlBNTIwTHdkRHV0TW1XN2JrdTAzelRFdTRHZmJnbWZmQzB0YWlhCkFRcGpkS2dRU3ZQNFlRbW8xM0dHek1OeW41VEJ5c0pqaVZhdXMxT1dVU0ZVZmpLRnJrNUw0UnhCQkFtVnFxNWIKanZpQnVWdGdGNVlwTXhBZkJ5dUxQeHZodEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBd1g0a3JSTXhOT0dKdTg0ZjFJN1VFdmdPci9IZDA4MEZnTG5RTmZNUndESzI5MnJYCmpqK3hubW10cjlDQTRaK1R6bGxKdTBVeE1POHdmRFlIYlp5UkZwOWRXaGtyVzM4aGxWNUdpUUl0TDZ1ci9iSmEKTVVta1dLbnFKSThUZ3FBSDZRbnIxZ3p5V0c1dTdROG9QaXhBUDh2NGU0Vjhqa1EwSkFEbHRUcG5BYTk1Qm5NbwpRdWpuUmtOcWl6eXpEUE5acFdyRS9DWHhLWUJiQVYxV0RTMStidk9UQUx1OEZUaFVxOHZCNHFud1Zac1pkMlBkCjlCS0U0Q2dwSHFKTVFoL00yNmFyVndTQ0dab3cxVWRkR2l6bjlkeDhlak1sR0l2aTVyU09FRE1qMTZsa1psQkwKZFhTaXkyUGkzbnpiVEpBWnBpL1lDZVVMdjVFcWpMVklSdFVoK1FJREFRQUJBb0lCQVFDK00yZU9FbjJlUTg0RwpwTm81TWFWYWVDakgzM04xRGVaSTRWN0FpWTE3WnQ3Z1cxQkU3bXVGRXRDL01MQmdHV05MeGcxcVh0dTZCSVdlCnMrV2RZL2hqU29pVFZvWitUSHdRdmptTDJHM2VuRnhXNkFrc3hmMGRndms4c3NBMCtXYU5OMGx5Z2d0L3poNlEKUFFRTUNhZW1qclJWaDZRbW5QaThJMzJxSmh5M1U3UnBGMnQ2bEpGc3p3UEpyS1lIY0I2cUhyTE4xMXR5ODFmbApTc0prOW9kTENDdEtKSWlRaElVV1RYZmk1OXg0MVdFcVNVYUU3ZTRJTUVxQ2NCaWtDczZKUlJ0eG1JMjZMZ2IwCi82L3ZiM0VhL1BpL24rY2djN1d6bnJHVVcxaWN0WEE4aGxxWHNCb2pWOXNmOVpsTUtlTWc4eCt6aWhkaFlsa1QKVGsvZ1FqalpBb0dCQVBXOFV3dU1hTmxQV1pYcTVKSG85cTlEWHJjVEo5NFErYUVoWVVqTk1RQnZTWUdaSUdOdgo0aS9CeU9qS2xkZG9XTnJ6bDV5WUZWTnBFMkdVeGtDZFErZ3I2TW9iZ21QTlBPSVhYRk5pS2pTRkNSbkhYUVo4CnNDU0FzcUpMN2QySGZ1RkpGQmg4c2FCR0gzcWRDaFA4YTdidU5uN2YvdU5IZ2F4ZzBRL3paL3g3QW9HQkFNbVQKTGk5aHZTbmhBaEdBajJIZmx1RmJCaUUwYWgzMWZYakIvTjBZdUxURWJ0dHNaRmlhR0NOOCs5cDNybDdnOXVTZQo4L3R0ZU5KN3BFMWpsdWV5U3Vjc2ZSU0tFZjBJNGVhWHJmOG84TDdEcTlERk9YeEJBWTdMaDB6NlBUSXdpdGxpCnI5VUo5eTIxdzNLY3N5UWlTN0orU0FyMDZjdGZlTVBQUmN2QVl6TWJBb0dCQUpIa1hqV0VCaGZHZVh4OU9YaTcKSkFJSDhHcW16OHVTcm5JUWZFNlpyQmNDKzFRYkVsU1c3MlhGR2ovRFR0VFZtYk5jWGMzVnFRdWRYYWxZaDUrQwovdmNQWXFUalVqVm9lMVlMNG4rS3oxM2hBZmN4R3JTb1FIZGJoVEsvKzVmRFF2d0R4QStKc0hka1Nub2tWQUJyCm81TzJ0OW41cUwxTkRkckduRGhwSFhxVEFvR0JBS1dRYXYzbDlKNWlQdldyTjVtM01WRldGem5NdUdCMUU2TE4KQ3VsNjliTWNLTVczU05CeGVPUWxNeVBrNjJib3RrRmZ3WnhBOVYxRXl0WDV0NmdGREhyR1V0STgrYnR3d1VOSwpVRkxsQ0tCWFRWZER0d3kweEJmS1dnNUM5Mkt5OWtqSlF3emppNCtTM0w3VnNGbzhoUnBObU5UUEJ2elJKUHNICjB4Y2dwUm9EQW9HQWJYcnc5K2hGalB4dVFCVTFRNGZLaFZ5dTVkOHllWHdySmd5NFZ4YUwzT2pPek16dGxSdXUKL2I4N3FnRFkrRkwyQ2w3cTNxS3VtT1hnMDJxOENDK2xFSmtnUUdubE9TdC9pU2VtZk9mU2Q4NjBkbUNUa0VJSgpxdVJ1ZUZkWmFtV2tlOVRsNFZET1JzRG9BbU1WNVFIZXdDRFppdEpOWFNpZUtYdG9Za3ZiUEVVPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBXRXhJdjNHbVJjWGtxNnplSGhyYjB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3TlZvWERUSTJNVEV5TVRJeApOVFV3TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF4UCtVWU9FRkxrMm1uRWQvVEZFazUzWTV1Q25Gd3U0ZDJJN3QwdGJjdzdvcUFuaEcKYkV3ZmVqREpDYUliUE43Q0FRRFdpQmYyUkRmRlNHVXB4MjJ3aGFVTkk4THJ2WDFtU2dqZUtFMnhNNC9GZEZqbQpyVk1EVDlGUWYyQStUcnRJMWZ6RXExY0FYZFNOWVNvbk5LR1BoSFdlaXlnRUZMK2VkRlZtTVBLVmZzbE4rT1VSCkcyZFdld2dqS0QySzJia1ppdnd2QjNTZEFlWUpVTnpGSnFiVFBkMWFFdmVtVHlUdHpnWEs0TnR3S1N4Y2E3SDkKbHdST3BMeU9icmZ2SnhvellZbjdBbHdnSlNNeDM4M05ySkZsUEQxVUlnNjNlUm5CTUx2RXp0SnJrN0JjZ1JPZQo0ZGlqYnZQQVhWMW9HV05kMnV6MUNvS0U5ZXAxci8xS3FiSlhJUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRjBoU3MvY3k0ejBLRFZ4QlM1eUlEaEZTV0cwTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVBBVzZ3eFpKVDFwTDUvTlZnbS9vWi9QQUV5S3RiZUttWlVhWHExMktVOWNvUWFKZ2Y3QWQvCkg2UUpXSVFmTkdqQmJqY0I4M1cwMms3Tm43SHZxT0pxV2laK0hoVmdqMUJDOVR0eTNtTVZkQ2dJaXBvejVzVVoKNGpLcStWV1dwSjBEbzh4eGRYYWxsSFp1RE1SWWlWNTExZTB6VWthamh1Z0NqcStrZHpqdkJCbmp5MEdQdlh1Zwo3dGtMN01vVXJZcThldW9SVnRWOG1YTkE4SU5adldsRXhuMDdyWUhDZ1AxSzVqNE5XcUhwV0JralNYcXVlaThYClg4RlBzNEJSUXB0M3lDd1R3Z29vclc3STk3ZEJnVHRJNy9BMHdVUHVjK1JiU0lpTjljVTBYamRHNGJHeGlleVcKeTdwTmNXVE9XdWk1T0tpNCt2ZkdGWjRLZUUzaTVOUE4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURwekNDQW8rZ0F3SUJBZ0lRSjhObDNmNStKcnV0S3M5VmRnZmlvVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEEyV2hjTk1qWXhNVEl4TWpFMQpOVEEyV2pBcU1TZ3dKZ1lEVlFRREV4OWpiSFZ6ZEdWeWJXVnphQzFoY0dselpYSjJaWEl1WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBclJESnc3K2ZVYmRuemFHaXFtdHIKTlFnaU9na3JGK2tKVVFmdTZKUUJiRU5kVjEzL3IyTnM4d1BWTldicVBKN2JvbU81NHZ2WS9jMTNXYldHOXJVaAo4Z2FYQVdBcjdRcDBDSzBsWFpFcVE1bzF6U0JWeUZmR3ZDcW1Gb3VMeHR3WGtjdzZtOWNCcVdRZmd0RWlFdnJHCmRUbXljNnNvdFZvb1o4OXRCU3hmOVVESDU1YmJWek9neTZVaVJUMGhOaGRjOEo5d0lmSnZkWU1GMmNndmZZUnAKUG1tR3Y3Q2diaXJGRXJjZWdybU5EdEFFUjJYVWhFbGxxdGd0U3M4bHpKT0xTZEVNenpIbXhmWlV2ZFpSajFMQQpFcXJTblB0aE1uM3FJbWZPa0ZMdnluOG5OeWFRRTFxVFRyYTdRcGpabU9TZ0dJbGt6dC9HQm9lSjJleEptSTVMCklRSURBUUFCbzRIZU1JSGJNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSZElVclAzTXVNOUNnMQpjUVV1Y2lBNFJVbGh0REI3QmdOVkhSRUVkREJ5Z2g5amJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXVZMmxzCmFYVnRMbWx2Z2hBcUxtMWxjMmd1WTJsc2FYVnRMbWx2Z2lWamJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXUKYTNWaVpTMXplWE4wWlcwdWMzWmpod1IvQUFBQmh4QUFBQUFBQUFBQUFBQUFBQUFBQUFBQk1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUURDRUIwOCtkc3g4akZpejdXZDJ0cTFPU3h2MTE0NktQRm9MRHVDYzYwbFhQdm1UMXBVCklSNTVHNHp0YVlCTTduM3FNOWcvYnFwK2pzd01TaFN4Ykd1ZG5uZG1rcm16ZGxsL0ZlTWczdHE0OTlQMjdHajIKaTN5M3lmQkw1a1NIdG51YVBCdnV0TDcrcyt2aTVpWFlnQ25ydTdSNmh1ZCtxM2RkRFkrN3VGbXJOZC8zVUs3UQo5S2JMbytTNlQwb0xCTnlVTlcyVCt3a2hqbSttQlA2YmVPenpTbG1qeTFzRmhidmpybGhXK0JBeENnSEFWRkR2ClJGOXpBZUljbmxTK0diRUFicjNRcEEwWWVveWY1cWlkQ05NY2RlakpRQ1JpQ00vSFJFQzNMVlZHU3crM0dVN20KKzlCODVSMFlvK0V0UlBOM1lVb20xMUxhc0hPZGVZLzJPUzdYCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBclJESnc3K2ZVYmRuemFHaXFtdHJOUWdpT2drckYra0pVUWZ1NkpRQmJFTmRWMTMvCnIyTnM4d1BWTldicVBKN2JvbU81NHZ2WS9jMTNXYldHOXJVaDhnYVhBV0FyN1FwMENLMGxYWkVxUTVvMXpTQlYKeUZmR3ZDcW1Gb3VMeHR3WGtjdzZtOWNCcVdRZmd0RWlFdnJHZFRteWM2c290Vm9vWjg5dEJTeGY5VURINTViYgpWek9neTZVaVJUMGhOaGRjOEo5d0lmSnZkWU1GMmNndmZZUnBQbW1HdjdDZ2JpckZFcmNlZ3JtTkR0QUVSMlhVCmhFbGxxdGd0U3M4bHpKT0xTZEVNenpIbXhmWlV2ZFpSajFMQUVxclNuUHRoTW4zcUltZk9rRkx2eW44bk55YVEKRTFxVFRyYTdRcGpabU9TZ0dJbGt6dC9HQm9lSjJleEptSTVMSVFJREFRQUJBb0lCQURtQ2hLbXB1YldiN3NDawpYN3VsNm9BNjdiUy9helNNMmUyMVp5eWVVa0s1dUFEYVdhYmNzVTJvRG1lcWhWZ1RxZ1N5Z3dqc2k5VDdQQmZ4CmZLSHEyeGJrSGJYMVVXTjV2OGxLVUVwaGZOdnVHTWJMWWZZclJQMHVadmJDOUhYbW1XWjNxVm96L25kZHNDTDIKZ0E0eWkxUlZFZm5oL0tzWEJLcEtnWDNnbXhxU0dsdnlyT09wNFFvRmJ4MVdOMUoxald1R1JreDNkVzUvUlB0NQpBZ3lsMEtveDROVGJCZCttcmdRMHc4ZHRpcXFXdzJpTE5vZVRYQno5cHNjMCtZNVRoQi9YVDFTc3dZM1VWVU5pClp0S3RBVU8zYWxhck9vc2ZOQXltQXpGa1BkZjFIY1ZyWHdEMmtHQVlSM2hLcEEzK2FUajcxT3NEV2RvRTZ3bWgKdkduRWFHa0NnWUVBeW1YQmFySkgyM2s5QUUxQ3pnSXNQWEtqK1JsVmg5M0s4WkxRWjJvazA2VHdtTkNPY3pLWQovbkY3V3JOVUpXam1rZWhMNFN0VUFYT0pFaGx1dGI1S0ZPVEtuNEN5VFpKai9DSXVueHEyR0k5di81RzJGUDZBCjZVSXpjdm1sbmx0QTZxa1FycHE0Qm05aEtQYWlDdDlWZSszQXJBK1NSaExhdG5hTjBOWUtlbk1DZ1lFQTJ1WmYKcXpRY2M2QStJV3M3Um5uWnJoZEZWZG8xQSt3MHBDQS9RZWlLTVVoSlBUbC9Tb1NueVA1dzk5WGVqUFQxaCtvdAowOCsxYkt6dW44Rm0wczVOd203ejlUZkphc01yL3BGMHA0N0gwY0JsRERJZFB2WjlQSXU3aExicWMvZmxMeG5jCnZ4Nkd2dXJZc1JDSGsrdEE5Tk0rZS9iT2ZTTllJV05FRWNyQjJ4c0NnWUVBbmFIMnJBVENGbHNzZVdtekdBTjEKTlQ1dUd2bnlOV2syUUVOWjhORW9jWFhLdFJucGVDcjJJV1Y4N3owdjBoc0xTS1FsUk8rYjg2MXFHaUNZcXcvVApYc1o2VVJQSXlzV3kvWklad1d6cVdlS05GZjBFVlFHS29TRWdOUEhlWGFFd3hCSjhuYUIrcHZSa05hVXd1MHNKCnB3V2F3K2MwdzBLMytOZ0l4NWVNZmFVQ2dZQlNabklRNGxicmQ2Q3J0OC9pWWEvOWhxa0UvbFVDbXdIZDNuMngKYzdYQmczSitaNHh4SXFwK1VMbDVzYnBLMlZNcnpJMWZ0RXFaRkNmblgwZ3pocEZpNVoxVDY2SVlYRXZOVWpmVgpjenZveTBHK2E0YnkwcHFtRmZ1S284aHh5eGtzdDlHTzZCRFZBVlo4b0xwSWhrQTNhT1dXaUh1R1E2M0RNN2pGCjhjc3pqUUtCZ1FDWHFQWXhjN3grNFB1bXRKd3k3MnhubjVodU1BSDhXZ1pkd2FZc0JwSktpYTFYQ1E0RzlSRE8KYzd1UTlvQnljSzB2VjFyZUlRNzhLZ3ZKaE44UlNqQ29teXI3enRjdncrUEZJYkd1SUg1VkhkWm5wenREd0hWZQpOcWdsaldpZ2NrR2tUVE9vWFZvUDh5R0NLSDM1SlVUekY4T3RrZ2dOMHZpeXptU2FjTGNLbEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBXRXhJdjNHbVJjWGtxNnplSGhyYjB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3TlZvWERUSTJNVEV5TVRJeApOVFV3TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF4UCtVWU9FRkxrMm1uRWQvVEZFazUzWTV1Q25Gd3U0ZDJJN3QwdGJjdzdvcUFuaEcKYkV3ZmVqREpDYUliUE43Q0FRRFdpQmYyUkRmRlNHVXB4MjJ3aGFVTkk4THJ2WDFtU2dqZUtFMnhNNC9GZEZqbQpyVk1EVDlGUWYyQStUcnRJMWZ6RXExY0FYZFNOWVNvbk5LR1BoSFdlaXlnRUZMK2VkRlZtTVBLVmZzbE4rT1VSCkcyZFdld2dqS0QySzJia1ppdnd2QjNTZEFlWUpVTnpGSnFiVFBkMWFFdmVtVHlUdHpnWEs0TnR3S1N4Y2E3SDkKbHdST3BMeU9icmZ2SnhvellZbjdBbHdnSlNNeDM4M05ySkZsUEQxVUlnNjNlUm5CTUx2RXp0SnJrN0JjZ1JPZQo0ZGlqYnZQQVhWMW9HV05kMnV6MUNvS0U5ZXAxci8xS3FiSlhJUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRjBoU3MvY3k0ejBLRFZ4QlM1eUlEaEZTV0cwTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVBBVzZ3eFpKVDFwTDUvTlZnbS9vWi9QQUV5S3RiZUttWlVhWHExMktVOWNvUWFKZ2Y3QWQvCkg2UUpXSVFmTkdqQmJqY0I4M1cwMms3Tm43SHZxT0pxV2laK0hoVmdqMUJDOVR0eTNtTVZkQ2dJaXBvejVzVVoKNGpLcStWV1dwSjBEbzh4eGRYYWxsSFp1RE1SWWlWNTExZTB6VWthamh1Z0NqcStrZHpqdkJCbmp5MEdQdlh1Zwo3dGtMN01vVXJZcThldW9SVnRWOG1YTkE4SU5adldsRXhuMDdyWUhDZ1AxSzVqNE5XcUhwV0JralNYcXVlaThYClg4RlBzNEJSUXB0M3lDd1R3Z29vclc3STk3ZEJnVHRJNy9BMHdVUHVjK1JiU0lpTjljVTBYamRHNGJHeGlleVcKeTdwTmNXVE9XdWk1T0tpNCt2ZkdGWjRLZUUzaTVOUE4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUx3ZGdmUzB3VituN2hOalh5VTRRZnN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3TlZvWERUSTJNVEV5TVRJeApOVFV3TlZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXl0S2hEVHRmR1c4WjRBR3V4OFVUQ3B5Z2hDRkkKb3RhQXNPL1Y5TDlxckdTTUI3aWJqREVpczRmRUxjSmFjTEhwdkZBUWQwcnJZaFhDaTdjZG1JT29aTnM1NUtOVApQK0NHamxleDI3L3NNTjByM1BiUjhmaUsxOFVMM0t3QThLSmFDUjBYVGdQa1kwTEVFdGs3ZUhsMnU4d3cveFMvCmxveGtpa1JKazVLUU9OTyt3OTdoV3dNb000NzVreGFla2Z1ZWdnRmhpNTBNRUlqRit4S2dtbEJzWlJUWENQdGoKNWFsNUxZeU5OWlJLZXBMRmZ5TXljdmQ1c1A0SHRScDNhRFFyeVBiQUxWNEJIVXRHN25EOFpKbHNmMUM1UFNzUgpEam5WalZuem1JTTVhellDa0xpV3pvYUsvTTQ3TnpMdzltK2hJSFJZSElVTGFYWEhCZWVSQnFiaDJ3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUmRJVXJQM011TTlDZzFjUVV1Y2lBNApSVWxodERBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBTG5WcmRJRENXR1Q0SXI1OFQ3QURSblFZcW4zekdUUTMxUWdsbTNTOEltckc4bkQKQTdWSEQyWExMaFBVOG54RGx4OXhLTjQ2bHBOaGg1SU5GRFJmcjhJRDUzdEUxdVRNTFJ5aER2WHlGSmlQd0RCTgpGejc3Mk1pRWN0MmtFL3I4bTNYUEg3SlB5QkdkOGp5RXZSaGtRUUFMNTE3U2g3Y2Vxemh5R3Z4TDQ5aWFIWk5WClAyaGdKL1lJSkwveklrcys4ZDZLQjFDOXFqNkk4Vll1eFF4ZFUybTJjYS9IOC9hVmd3azd3SnpXbmFXTjl6UjIKQWh4dFF6SWtUcWtlYkF2bDJ3WDVDWkR2aDZNS2lnR0U3eTJMcjk5VGExZlhJN2lUQWFQMHhkSWVZTzhJNlZkNQp3UnFzZTVabk1idG5vN2N2a1dJMWV1ZkdmWGR3SWxlU1JMNkthdFU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeXRLaERUdGZHVzhaNEFHdXg4VVRDcHlnaENGSW90YUFzTy9WOUw5cXJHU01CN2liCmpERWlzNGZFTGNKYWNMSHB2RkFRZDByclloWENpN2NkbUlPb1pOczU1S05UUCtDR2psZXgyNy9zTU4wcjNQYlIKOGZpSzE4VUwzS3dBOEtKYUNSMFhUZ1BrWTBMRUV0azdlSGwydTh3dy94Uy9sb3hraWtSSms1S1FPTk8rdzk3aApXd01vTTQ3NWt4YWVrZnVlZ2dGaGk1ME1FSWpGK3hLZ21sQnNaUlRYQ1B0ajVhbDVMWXlOTlpSS2VwTEZmeU15CmN2ZDVzUDRIdFJwM2FEUXJ5UGJBTFY0QkhVdEc3bkQ4Wkpsc2YxQzVQU3NSRGpuVmpWbnptSU01YXpZQ2tMaVcKem9hSy9NNDdOekx3OW0raElIUllISVVMYVhYSEJlZVJCcWJoMndJREFRQUJBb0lCQUNqczUySnNJSHhaVnJkRQpuNmZmdEQvbjZ0dStlNUdnQnNldEhWY05hTkR3V1BFVjV3MGF2UTNNejJFTVhvTnU0dU1FcE0zdGFDR2FrbTd1CnZDSVNMdUJxKy91T21UWENjR1E0ZmNNQnJ2OE5JZFNzV1NDaUxpSHJ1TUVHVkFvNk9FQ3VoZzFQNjcyN3N5UzYKZ0syR2xOYkFGUUxqaE9VejN2V25ZZEZOT1p5OWdMbjIzMTlITXdhUXVtVE8xVi9CVlllSkxieWRhMzVTSnRINwpIbmVFdzlHem1OaUZXOGZ4ckI4SmpwZlQ3bHFyUXg3VDRNQjNwQWxsQzllNVlSb0J0V3JHRFE0VXdKQXdKejBVCmc0YWwza3J4cGQ0eDg5VjZCQW9UVWx5bFRRQVd0eVdJbm9HYjI3ekYrRWVjREJVeHBaeWpxYjJNblBEbUdFOEQKOXRhdHVFRUNnWUVBeklwTVJ4Z3h3VG5SN1ljYWFSc2w4NEtpQWZ3S0ZDcW9CdVNiRERYY1hSTzlsRk1KTWlFSAp5eWh4b0RKNnM2WFFDV0c2eC9PanpQZHdGdk5jMG9oWG5FWDhMR25paEtwNDVYbjZkblBuUUw1K0V6M0Z3czdDCk51MmhJMnZyQWxYSFE2eU84bUYwZno2WE9lb00ybGdIS2Y0ajBZT1l3bE5rdmduQ3lXbUhYNWNDZ1lFQS9kbTMKUitmdjNmVjcrNjJsU05tcXFxdkVqbC9RSTg4QXRIb0N6SThpaUp4UEtIVSt4WkQwVFRabUZXZ0d1dkZoWFV0RQp6ZGI1dzFEWFp2d3VOKzl5ODFEamdVRU1BWXFBeG52UytBU2xyNGdrUDhsWmZ3c0NDME51aTJtZXNCWngyNTFrClFvRlFDNU53RGVTSEhzMklVSE1oeVZLazE1MWROUzNHTWh6MUdGMENnWUIxVnYyTlo1N2JoKzBidy83dHYwcFYKV1dMUm1xSzVrUU1WK1QzTmtuU1ozUUpNUGhxdmJHMkpLZW1OaW9nRDJhTHdUdVdWWWZ0ZFViSTNLR1BlejZMYgpIdmNkRDUySW1EZUZCaVllb0QxUlVqY0htTStFQTVNOWFiT2dtMytWdGxuN1E5bzV5SmpKaXNHODByMk80U015Ci92M1RheGhPbXdMWFZzZ3RQZUlRZndLQmdEU1d5d0tKaVViWldYTWRXVFdMYW5Eckh0QkVCekd6NjdoMzRtYVEKYko0U2k4K2M0b0U1YzNNZmh1eCtYWTZTL1JHL3l5UTltZ2FkazlKUkFoNHliQVQrUi9ONkQwdXVidGt2dzlmLwoxbmRUNC9hVzl3Ujd1bE90QjVTNEw5alkvWU42eXMrQVRKM3BVSGlBVklITUlLWlNBN2phZHkzMyt0eE9mRlhiCmErYzlBb0dCQUxlZ0JROGZnNUZRQ21vM1ZHRFVhckR6VTVoNzJJeGQwcjZoZ2FhajBrMGZEWHIxUFdVSElZQ08KcFFaMzVSaUdZdXdMV3hhdXd1b1hnMVBOaVFsUTNIc2JDSkNYUURZWWtLU3Y0bU1jMWxDZE1Tc1JwOTNnQUVmUQpaRUd0NGhMR013Q280SEJLZkxOWjVVZDJvb0N5cjkvWkhMUldjaDFkZzA1UjJPQ081enZqCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBXRXhJdjNHbVJjWGtxNnplSGhyYjB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3TlZvWERUSTJNVEV5TVRJeApOVFV3TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF4UCtVWU9FRkxrMm1uRWQvVEZFazUzWTV1Q25Gd3U0ZDJJN3QwdGJjdzdvcUFuaEcKYkV3ZmVqREpDYUliUE43Q0FRRFdpQmYyUkRmRlNHVXB4MjJ3aGFVTkk4THJ2WDFtU2dqZUtFMnhNNC9GZEZqbQpyVk1EVDlGUWYyQStUcnRJMWZ6RXExY0FYZFNOWVNvbk5LR1BoSFdlaXlnRUZMK2VkRlZtTVBLVmZzbE4rT1VSCkcyZFdld2dqS0QySzJia1ppdnd2QjNTZEFlWUpVTnpGSnFiVFBkMWFFdmVtVHlUdHpnWEs0TnR3S1N4Y2E3SDkKbHdST3BMeU9icmZ2SnhvellZbjdBbHdnSlNNeDM4M05ySkZsUEQxVUlnNjNlUm5CTUx2RXp0SnJrN0JjZ1JPZQo0ZGlqYnZQQVhWMW9HV05kMnV6MUNvS0U5ZXAxci8xS3FiSlhJUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRjBoU3MvY3k0ejBLRFZ4QlM1eUlEaEZTV0cwTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVBBVzZ3eFpKVDFwTDUvTlZnbS9vWi9QQUV5S3RiZUttWlVhWHExMktVOWNvUWFKZ2Y3QWQvCkg2UUpXSVFmTkdqQmJqY0I4M1cwMms3Tm43SHZxT0pxV2laK0hoVmdqMUJDOVR0eTNtTVZkQ2dJaXBvejVzVVoKNGpLcStWV1dwSjBEbzh4eGRYYWxsSFp1RE1SWWlWNTExZTB6VWthamh1Z0NqcStrZHpqdkJCbmp5MEdQdlh1Zwo3dGtMN01vVXJZcThldW9SVnRWOG1YTkE4SU5adldsRXhuMDdyWUhDZ1AxSzVqNE5XcUhwV0JralNYcXVlaThYClg4RlBzNEJSUXB0M3lDd1R3Z29vclc3STk3ZEJnVHRJNy9BMHdVUHVjK1JiU0lpTjljVTBYamRHNGJHeGlleVcKeTdwTmNXVE9XdWk1T0tpNCt2ZkdGWjRLZUUzaTVOUE4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRRms4K1hXZVpQamtTbkdnbERLczFVakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEExV2hjTk1qWXhNVEl4TWpFMQpOVEExV2pBbE1TTXdJUVlEVlFRRERCb3FMbU16TG1oMVltSnNaUzFuY25CakxtTnBiR2wxYlM1cGJ6Q0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOYlM4UE8vLzNlNHV0T3dNdjM4bEk3MHlmaXcKRmtySEVvUC91WHUyWkZDOTlqK2lUazBPZnVFRXUwT0ZUUEVHZ3AxbFdGOVVlelBzMlN5aERBV3ZMNDhQaStSQwpPVjJnbEZpVWVqYmNDNEhhK0YrbUdqNlVCWitTenBHL3MyVlVZeW9uQllxSjJ4OEJYQ2NqSnluNkNzWmtyUUJnCnZWbytaNEh5c3k1SUVMNzlEb2hzSkV4dTVWalZtTzAxb1FCQlQ0NHkvNFZubTRkMEorakM5eGFjTlRpRXJKbGMKRGpuMFJqMi9OU04vL1pRRloyNlhUV25pbEhITXRleC9CK0pNWGwyQ0RPZFdyK2p0U1VGNkxhejhVdlB3SlF2WgpkMndjeFBzL0VtcXMwMk05cURGcE0zTWNlU25ZS3ZBL1N6U1l2TTV5QThGd1gyb1VTbzRKTlJtWmF0Y0NBd0VBCkFhT0JpRENCaFRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVVYU0ZLejl6TGpQUW9OWEVGTG5JZwpPRVZKWWJRd0pRWURWUjBSQkI0d0hJSWFLaTVqTXk1b2RXSmliR1V0WjNKd1l5NWphV3hwZFcwdWFXOHdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUJISnBibTZ4RHlRdUd3WmV1cjJSMjFLZ0Q5QUtIS0MvK080dGZuRTBScjIKQTBJWVB2TllENTMySE8yRlM3aEdjOGIvUzVrWENsQUQ4RWRqRVFTa1hQUGJ0azVQNU5tZ0k1c0FFR1hHYnViMQpqTDdOcmxxbGZFNndkVUZIeTNqYVVLQ2xrSUcrMmdMV1ZiSVcyVDhsRjkvSjVnemRVNWdlb2pNeWtWUHk3V1dhCnZhVHRpZTRpaDdwWUViam9vZmdNdHlrNDFuM2h2RVRMcmxtYWZNdHdqYzBjb1E0ZGxMbXpRSHcyS3ZqWUVwVU0KckN5SmpnRTBtUmRpVkdmWDA2bDdaUkVCTkhtbXd0Y2k4eERETDA3TFBsTDVFTWhWOWVvWGNuVE1RZTNqMkxLdgo0WXI2N2NEZnk4V2hRWWhTREwvMzJheDh4d2FnN0NFdWJ5SkoxdCtUVVNzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMXRMdzg3Ly9kN2k2MDdBeS9meVVqdlRKK0xBV1NzY1NnLys1ZTdaa1VMMzJQNkpPClRRNSs0UVM3UTRWTThRYUNuV1ZZWDFSN00relpMS0VNQmE4dmp3K0w1RUk1WGFDVVdKUjZOdHdMZ2RyNFg2WWEKUHBRRm41TE9rYit6WlZSaktpY0Zpb25iSHdGY0p5TW5LZm9LeG1TdEFHQzlXajVuZ2ZLekxrZ1F2djBPaUd3awpURzdsV05XWTdUV2hBRUZQampML2hXZWJoM1FuNk1MM0ZwdzFPSVNzbVZ3T09mUkdQYjgxSTMvOWxBVm5icGROCmFlS1VjY3kxN0g4SDRreGVYWUlNNTFhdjZPMUpRWG90clB4UzgvQWxDOWwzYkJ6RSt6OFNhcXpUWXoyb01Xa3oKY3h4NUtkZ3E4RDlMTkppOHpuSUR3WEJmYWhSS2pnazFHWmxxMXdJREFRQUJBb0lCQUgzZ3lQUHJjMFN4NkRlVwpyYXFLVUhxY0VhVTVlVGFFQStONCt6VDBvVDkyc0U2RlNxQjRkL3hlaTJSN1BhU1dEZjh3bldIdTNPcUdSSk9VCklybEo5L0k2Ujl5T3VaS1ZQNWZRR1BVQVozWEYyM2dnbW94RXJDN2ZGVS91SnE2ZmppUHJEYUlxT1UybnZGbnEKalU1Wmgrck1uMXJ6Vk1FR2hCeHZISE5vSXZmbHViY1ZseXlkNi84TVVpZnJpRHRQcEhpQ1NGVmxHRUZSL3lsaAoxejk2ZTVmeWtUZmE2ZmNOcTNvZnE2SUUrcVZUS0s5b2gzQjhKSys0MEY5M3A5dk1EajNLeEo5YWdyMmdKditOCnMyNU1ZZ0kzTjA3bDJsdEtQR0R4aFl0RnYxdmxmSzhxL01pTTZ6a0pwQ1VDN1JEMmh0WVYraDJFc2NMc0NtSmUKak90UlJGRUNnWUVBN3Z4WVIzNExEQTlTeVo5OUgwY2dlM3ZuUW9qY1FuampFZHR5dXhCNWFpZUEwNmwvTkJoMgp6elpHWmFyTjFVVlFhT05HOE5TZDhMYzhTZ1AzY3IwMERmS2RVZktNMHZ1aEZnWEJObVB3MjJlZmVFdFhqRDUvCkdHTUV4TnAycGNBRjROT3Y3UG14MXpEUStWbGIxS3NoLzFvSnk3T0tTSU94YVp5NXlrRGVIVVVDZ1lFQTVoNDgKRHdka29aM3VYcForQ3NidHFNQ3g4TXllQjN3c05VdGxsdExqRlM0REw3UDFVWlFCcm1NL0E5dURiQS9ZVEpBaAoyZ3krbzRRdkF6dGRlQ01BbUZrZ3J6V1hSMEQ3RGJReEMrWEkxM3hjYzJHQk5DUGRwWHNBMWdmcXNxKzBkalM2CllkbHAzR1dNemplR3YxSVJ4ZmhlUHF1dloxMXZTRngxV24wRDQyc0NnWUVBczV2SEpRUGZmWkxPbjJWVC9mdlEKdDcxcEVxSVZGNGdPNzg3RHJUODJZTWVMbElmZ1orQ3krZ3hLWUFJOGE3cUtNaW9ObU5YU1ZhVUFsSWZpb3NMNwpxamZhY0VvZitEalEyZUk5VVlsTzdUWTFyWXpDSVU2ZTZrOFF1SG1QamdhQTVIVnoxRi9jZm1QYnltcVVENE1HCkxBa1pMNVNocXRuK3JlYng0c1ZacVJrQ2dZQUE4T2ExK1FYRVUyMENIZ050NzlwUThsakg3MDVHSVkvY3QrNDIKYTY1YUM5SWZnOURoQUlYeFBKNnBXV0IwTkt4aHc4VWZxeVdzYllIenRXNXdhMVE1UzBRQzgya205WEVSWVVkQwpFVEo5RHhraHI2aGptakh4MTBydGxTSzBrRnRna0Y2aXY4emJCZDlKaUppWWQ3Rnk2YzBZM0lMZkhWYXpLUTJoCnpSa1MrUUtCZ0NvNzZ2aDdvaFl4anN3S0tGMk5YbXBsZC9NUHBoZWQrZXRjVVVZdVJjZFplS20zdk1rdzVucFYKRFVUOG1lRXVyZVN4aUtjeWhTbUlBRzhlcFJXUVVENnRUVE0vRDl5bDF6amx4QUZaclhDWlIrUDJRMTIvR1ltZApMTFY1WklQSnlJQkhjbXZaMDJOWDNBWmo0REJTUnY4MTcrWXVlbXd1YitXUmc0OVplUFFjCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: c3
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "13"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-wireguard: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "false"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  ipam-cilium-node-update-rate: "15s"
  cluster-pool-ipv4-cidr: "10.3.0.0/17"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  cnp-node-status-gc-interval: "0s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "true"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"

  external-envoy-proxy: "false"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: c3
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/clustermesh-apiserver/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumexternalworkloads/status
  - ciliumnodes
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumendpoints/status
  verbs:
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumexternalworkloads
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver-metrics
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/component: metrics
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: kvmesh-metrics
    port: 9964
    protocol: TCP
    targetPort: kvmesh-metrics
  selector:
    k8s-app: clustermesh-apiserver
---
# Source: cilium/templates/clustermesh-apiserver/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  type: NodePort
  selector:
    k8s-app: clustermesh-apiserver
  ports:
  - port: 2379
    nodePort: 32379
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.14.2@sha256:52f70250dea22e506959439a7c4ea31b10fe8375db62f5c27ab746e3a2af866d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/clustermesh-apiserver/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: clustermesh-apiserver
        k8s-app: clustermesh-apiserver
    spec:
      initContainers:
      - name: etcd-init
        image: "quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args:
        - |
          rm -rf /var/run/etcd/*;
          /usr/local/bin/etcd --data-dir=/var/run/etcd --name=clustermesh-apiserver --listen-client-urls=http://127.0.0.1:2379 --advertise-client-urls=http://127.0.0.1:2379 --initial-cluster-token=clustermesh-apiserver --initial-cluster-state=new --auto-compaction-retention=1 &

          # The following key needs to be created before that the cilium agents
          # have the possibility of connecting to etcd.
          etcdctl put cilium/.has-cluster-config true

          etcdctl user add root --no-password;
          etcdctl user grant-role root root;
          etcdctl user add admin-c3 --no-password;
          etcdctl user grant-role admin-c3 root;
          etcdctl user add externalworkload --no-password;
          etcdctl role add externalworkload;
          etcdctl role grant-permission externalworkload --from-key read '';
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/state/noderegister/v1/;
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/.initlock/;
          etcdctl user grant-role externalworkload externalworkload;
          etcdctl user add remote --no-password;
          etcdctl role add remote;
          etcdctl role grant-permission remote --from-key read '';
          etcdctl user grant-role remote remote;
          etcdctl auth enable;
          exit
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      containers:
      - name: etcd
        image: "quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/local/bin/etcd
        args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        # Surrounding the IPv4 address with brackets works in this case, since etcd
        # uses net.SplitHostPort() internally and it accepts the that format.
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=clustermesh-apiserver
        - --auto-compaction-retention=1
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - name: etcd
          containerPort: 2379
          protocol: TCP
        volumeMounts:
        - name: etcd-server-secrets
          mountPath: /var/lib/etcd-secrets
          readOnly: true
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      - name: apiserver
        image: "quay.io/cilium/clustermesh-apiserver:v1.14.2@sha256:0650beac6633a483261640b6539c9609f5a761f4ab4504fd1e6ffe7f2bb82e9a"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt
        - etcd.config=/var/lib/cilium/etcd-config.yaml
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: identity-allocation-mode
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: enable-k8s-endpoint-slice
              optional: true
        ports:
        - name: apiserv-metrics
          containerPort: 9962
          protocol: TCP
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: etcd-server-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-server-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-admin-client
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-admin-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-data-dir
        emptyDir: {}
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "clustermesh-apiserver"
      serviceAccountName: "clustermesh-apiserver"
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: clustermesh-apiserver
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.14.2@sha256:a89030b31f333e8fb1c10d2473250399a1a537c27d022cd8becc1a65d1bef1d6"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.12.0@sha256:1c876cfa1d5e35bc91e1025c9314f922041592a88b03313c22c1f97a5d2ba88f"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.12.0@sha256:8a79a1aad4fc9c2aa2b3e4379af0af872a89fcec9d99e117188190671c66fc2e"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.

# Only create the namespace if it's different from Ingress and Gateway API secret namespaces (if enabled).
