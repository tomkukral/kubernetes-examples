---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWnA3QkJIQzVJUVdJQzkvR1JYcHZJVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOekl6V2hjTk1qY3dOakV4TVRreQpOekl6V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3JQSGhFbVZtMW1QQkZsYkpKV3o0UjE3QkhWV2M2ZmRkZUE1ZG8zS1h4ZTJEcGZtbFUKMmNzSmIvVnlMNkxNYmY2UjNLYUVrd00zem56TjhQMzB0TE1QMTcwVmcydERtZlpFZ1ZabzFWeVBZY1F5UVdKTQo1V0xnNUVqSnpDeXpIeld0UlNWYW1zZ3cvY2kyczRlK1ZjOHlnWUZmKy8yZGZFUmsxUStnTjdlYjZrMVd0bTJ3Cjh5WWEzVFRMT2Zidk9WSHRYZkZGQnpoSG5RNGUxWk1vNG00enlaS3VKelRLUmtXTWsrdk9SUHpEUkc2MDFoa2sKbzJyRXNIKzZEQXgxQ2tRakUzaFhoRHpUYVBEVjRjZ2plaWliOGkvZjFaa1kxb1Y4dzJ1cENkbWJXUS9kUnZQTQpzOWQ4T0k1a2pkdWs4UVJtVllCQjZGNHVrQ3praDJseWRMQy9BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUvVkRUY09DVnkzbTJnbFJ6Rk91aUhNWldUZ3d3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGMWdDRkZ4Ri8zcUZtUmhWRDRNb1cyaGQyekVOUG5iMUtqTmNHbC8rNjdlMStldmtrellYejQ0CkJhK2xiT2l1UzBNSlk0b1FzL1hDN2h4OWlEYXpyQ2pEMEdjZlhOb2xiU09meW8xVE10WGhlUXdxWlcyYzhyY1QKKzlvdGFUaGZuR3BBN0hDMURVTDVuUTArUHZoNGxXRzVtL1F4NndUVmhhNHRzT1RyWkRwQzc1dHJibzRjQTl6TQpYK3lYaGl1RzhUdllVOU9vN2xSbVdMMVBualh4SllBQTdMUzVFUkd1NFZySnZUZU1SaHlHY0JpaWkvL1Q3SVIyCmtGOTZtaU82QS9SMHFrS3JMRUFWODNlWmlqd1k1RmlCMFlldk91STdvN04yZVZ0b0NFdVdEa0dGakkySi9sZUIKR05reDFEZkJlVlJiNVR3NXBoeGh6Z3pEVDhtdm80VT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcXp4NFJKbFp0Wmp3UlpXeVNWcytFZGV3UjFWbk9uM1hYZ09YYU55bDhYdGc2WDVwClZObkxDVy8xY2kraXpHMytrZHltaEpNRE44NTh6ZkQ5OUxTekQ5ZTlGWU5yUTVuMlJJRldhTlZjajJIRU1rRmkKVE9WaTRPUkl5Y3dzc3g4MXJVVWxXcHJJTVAzSXRyT0h2bFhQTW9HQlgvdjluWHhFWk5VUG9EZTNtK3BOVnJadApzUE1tR3QwMHl6bjI3emxSN1YzeFJRYzRSNTBPSHRXVEtPSnVNOG1TcmljMHlrWkZqSlByemtUOHcwUnV0TllaCkpLTnF4TEIvdWd3TWRRcEVJeE40VjRRODAyancxZUhJSTNvb20vSXYzOVdaR05hRmZNTnJxUW5abTFrUDNVYnoKekxQWGZEaU9aSTNicFBFRVpsV0FRZWhlTHBBczVJZHBjblN3dndJREFRQUJBb0lCQUM3K2YzdEVJc3lsMW5zaQpaRFdocHQwNnRwUTlLZ0Z4ZStPL1ZKUmd5ZUlHSEVpNGVxdmd3Y29yUWM4K3A0MDNPc0JKTUNIK1BzbllENFJ0CmVTVHBXcU1rY0M0eFRRVFdnakcyMVVJY0hEVDFmZVRVOE9kdHBMOVhwMnBLY0pJUUpLa1M2dmQ4dHloSzNnVFcKTEpEZDkrbENoWUVVSlR4TldHL2IwVmdGTW96RlE4UG1oNXNMdnFpb29xd3JuVmUvUm9admlaRVZUNDIwYzJHQwp5SHM5b2p1RWdwdVYwaTJvSVVLYkJwSHVKWVRLNlZmSGQzVFVPUnBwQ2tGU1BYbmNKYldzR3pncXNYZ3JmUjJJCjN0NFZCcTVwci9DUW1PMEFkT2IvTGY0VnpDWTMzdWN6VTRZb3VuZE1kT0V3SDduR3d6bTNDbG12ek15eGZWQVQKRGg3SnhMRUNnWUVBeVAvTHpRZDU2K0hvWUppWmgzSHJHWTFOanJ1My95V2U5dHR5U3phUCtlYXpxb1VFalVkTQpTaUNuN29YMmVaYjl3bHZwdkxkZEJzSXdJNXZsUW81elVjcUE4WndoaUtZYjlNdEVRVHlHZkpXMGxic211Nms4CmNvOFg0elhlRUhwYkdVL0hVNTJvMSs1UGdrR1YrNDNFOVJiWTU5Z1l3cU00QXU4dXlJTUtlWDBDZ1lFQTJoZSsKdGU2OTh6RlBFOVpyV2kxVmlFR3djOVhRcmgyeHE4MXJnZ3ZwY3RVN0RkSVVGVE5vY3FoYU1mMHNWUFZVVmRQYgo0OGdBcGdQSHhlVDd5dlBjUk5nL1pDUWswcGh2Y0hTS0tmbEI0eVRIc0VJY0lJSkk0M3Q5U2doN05EK1g1UGs5CnhhNTcrU1lpOGliVFQ2NVNuaVltUVZvbTl2R0pDbnNGSWlXengrc0NnWUJDVGZkNTNCU0JGcFdrZjlKdGxzdTYKTXgyNWp2MGtZdEdzbHpsOXpETDBlZ0VjcUNLWFJFVExVemh5ZTZpUjlaZ2lMRlhQbGlGTzRISW0zUDlrMUQ4QQpaUy9pQStJZ0JNUEdIZU9YTFpNanQvTEpUZUo2RjFyRVk2VzZvd050SmgrMUd0Y2pJeWdXaXh1WldXOVRlekhVCnM4Tzd2MUp6cW9vSWxjUTJDdHhDdFFLQmdHSm40bXB1N2hDRWlEellQQm8xYUdtUjBrK0NBNlg4eWdWT0xCdEMKeXJSQTJHT1ZEZkMvQUhyejBiYkttSzFCQVN1MDYzdnM2N1g4OExBdmNSbVRUU2xYTmNzMnI5TENhMDRmbDVQMgozeTdoa3FUS1A2eS9mS29BTjNrbk9JaEx4WHJRcDNuQ0VEaE1aK3BCY0lsOGk5VEdPKzZ6QWUvYzdrdm5WRnFqCkRtcS9Bb0dBQ0g3blBtSXQ5b3Voa01NYmVnNWpKaWtqYVhlSXdhM1JCQ3pYd2NLRTZ0eTJqTHhaR1R5akNuMTgKNTg2VmJlRTFnOGtHNklhdGl0L1o0d2xPeXVkbTdGSUFCQnpzbnVEQzBqOTg1UjBiaXdFVHJWUTRtZGdoN3BsZQovMlJjTm50bDBnZ3JySWcwUXNUUCt5TUlEcmltYy96bkVrZkVHbkFWZUZMY3NldVlyYnc9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/admin-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWnA3QkJIQzVJUVdJQzkvR1JYcHZJVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOekl6V2hjTk1qY3dOakV4TVRreQpOekl6V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3JQSGhFbVZtMW1QQkZsYkpKV3o0UjE3QkhWV2M2ZmRkZUE1ZG8zS1h4ZTJEcGZtbFUKMmNzSmIvVnlMNkxNYmY2UjNLYUVrd00zem56TjhQMzB0TE1QMTcwVmcydERtZlpFZ1ZabzFWeVBZY1F5UVdKTQo1V0xnNUVqSnpDeXpIeld0UlNWYW1zZ3cvY2kyczRlK1ZjOHlnWUZmKy8yZGZFUmsxUStnTjdlYjZrMVd0bTJ3Cjh5WWEzVFRMT2Zidk9WSHRYZkZGQnpoSG5RNGUxWk1vNG00enlaS3VKelRLUmtXTWsrdk9SUHpEUkc2MDFoa2sKbzJyRXNIKzZEQXgxQ2tRakUzaFhoRHpUYVBEVjRjZ2plaWliOGkvZjFaa1kxb1Y4dzJ1cENkbWJXUS9kUnZQTQpzOWQ4T0k1a2pkdWs4UVJtVllCQjZGNHVrQ3praDJseWRMQy9BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUvVkRUY09DVnkzbTJnbFJ6Rk91aUhNWldUZ3d3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGMWdDRkZ4Ri8zcUZtUmhWRDRNb1cyaGQyekVOUG5iMUtqTmNHbC8rNjdlMStldmtrellYejQ0CkJhK2xiT2l1UzBNSlk0b1FzL1hDN2h4OWlEYXpyQ2pEMEdjZlhOb2xiU09meW8xVE10WGhlUXdxWlcyYzhyY1QKKzlvdGFUaGZuR3BBN0hDMURVTDVuUTArUHZoNGxXRzVtL1F4NndUVmhhNHRzT1RyWkRwQzc1dHJibzRjQTl6TQpYK3lYaGl1RzhUdllVOU9vN2xSbVdMMVBualh4SllBQTdMUzVFUkd1NFZySnZUZU1SaHlHY0JpaWkvL1Q3SVIyCmtGOTZtaU82QS9SMHFrS3JMRUFWODNlWmlqd1k1RmlCMFlldk91STdvN04yZVZ0b0NFdVdEa0dGakkySi9sZUIKR05reDFEZkJlVlJiNVR3NXBoeGh6Z3pEVDhtdm80VT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRRTNjK29vMnBBbml6N0ZOVWQ0NDY2REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOekkwV2hjTk1qY3dOakV4TVRreQpOekkwV2pBVE1SRXdEd1lEVlFRREV3aGhaRzFwYmkxak16Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQCkFEQ0NBUW9DZ2dFQkFPQ0I2SXN1Sjc1Wm4zbnh2TEF3QjdjNHYxMGVFRGg3VlRJcXd1a2RyMHNUaU9JeWt3UUMKVWFINStxb3IzMWRFMEpqdVdYelRkWUFLMXNOd0kwK0NXSnBKZTVBU2xIbitxd1pVd3pJUlVGSU53dU0yblJLOQpxWnZJbnRYdmV0T0l5S0pjeG91dnZ6YlIvendycGluMk96UmVCTmFmUi92NG1BOUZOak1RSFNFTENyWnJ1RjRrCk1TMmhGWnJHVTFudlo4RHk5eDJoVUVickpyWWZ6emMwbnpnSkY0MDMvUHBRcXVrT3BXcmNKR0tLRTVKWXpaUXgKay9UY0l3Sk1FcVlUbDViNTdKU1ltc3hOTVlrdkRkSUo5ODlGNmVwNTJQYzVnMW5RMERDMUw1eGZpZ0pPUUxqZgpHb1dGQ2RISXZ4TWhiT1pLcDZ2N25VSTJyaTl4Q2t0Uy9SVUNBd0VBQWFOMk1IUXdEZ1lEVlIwUEFRSC9CQVFECkFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUEKTUI4R0ExVWRJd1FZTUJhQUZQMVEwM0RnbGN0NXRvSlVjeFRyb2h6R1ZrNE1NQlFHQTFVZEVRUU5NQXVDQ1d4dgpZMkZzYUc5emREQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFEcjIvV0lKZGc1TmNlQmd3NzNkRlk2bGRIN1dECnhweHpibHIvdExyUmlLY1lMcC9UNXB6dHZvZUt5TTV0dHVKVEhZb1pJS2pPb0traDhyZ0dzL0RrS3pHWXMxUjUKaDQzc05icDJmWXdVUy9YMVlBN1p0R25MKzVPWEFraDQzL1FvaThYQWFFejIyNWN4Vm9lVnFhOVZheHlQSTBabwpwTXFZUDNVWjlneXVKbHNRL0lQUnVWMGkrT3B6emhjYXRmdkpGQVMwbW81TDdVd0lxSDY2ck1JWXdra2p2djFkCi9RL0xlWStlL2Fud3VrWnBmUmhuZ3ZpTmRYamhaeXJWdHMrY2EzNTRRZnB0UkhGM05Ydk9EblVmNGg1akIyNEkKWGs3NzBDMEx6V3NhVVZ6NjljUlhaZE5RckJTYVJGMCsxT1Z0REVoeEU0QW8zU2ZtbHBSZ3Zoa2x4dz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNElIb2l5NG52bG1mZWZHOHNEQUh0emkvWFI0UU9IdFZNaXJDNlIydlN4T0k0aktUCkJBSlJvZm42cWl2ZlYwVFFtTzVaZk5OMWdBcld3M0FqVDRKWW1rbDdrQktVZWY2ckJsVERNaEZRVWczQzR6YWQKRXIycG04aWUxZTk2MDRqSW9sekdpNisvTnRIL1BDdW1LZlk3TkY0RTFwOUgrL2lZRDBVMk14QWRJUXNLdG11NApYaVF4TGFFVm1zWlRXZTlud1BMM0hhRlFSdXNtdGgvUE56U2ZPQWtYalRmOCtsQ3E2UTZsYXR3a1lvb1RrbGpOCmxER1Q5TndqQWt3U3BoT1hsdm5zbEppYXpFMHhpUzhOMGduM3owWHA2bm5ZOXptRFdkRFFNTFV2bkYrS0FrNUEKdU44YWhZVUowY2kvRXlGczVrcW5xL3VkUWphdUwzRUtTMUw5RlFJREFRQUJBb0lCQVFDUW9MK1k0YnZ5c1RPKwpVQTk1QlFnRGJZaEJ5WHN6bDZnenNENXVCSlNIYmVjeHFOanlyVGUvZkJXU0NMOVJMZUNmbEhTTHFJRzZZY0VtCm1CZjNRWVlvcG92MkxUSC9RU01WNmdieE94d2VNQVZMY0VSUjdXTFZHN0hQS2Y1YlJYUFN2S2VmRnpHOGRCM1QKdWw3S0MzanFiR0w3akJMSWJNWXdtQ3FwVElrblhnc3VRK2hUd1FSdVJpaXdCZVlVb2Mrck5ncmFFMlp3L0dlSAo4ZXNyN1dxZDlRUHJkK0ZMWExJbWljdGJEM3FSNFFHclJpM3ZHVEZqeS9iRFlqTW1vU0tOZWNRVDdodUpNMy8yCkdqZkxIV1pOdm1HL2M3TTdUOUllYmZXTWlPTTBCNVNiNGh6b2Z4M3JURWVIRmZVUk5YNWxKVktWenlqaW9nVVoKR2JMMVFIQmxBb0dCQVA2NTJ2cWNsQm8xVWl0dW5OVFlTUi9XZWNNaHNiWmFTV0MrUjNHZ0ZlazExZUFzSjhmZwp0dUZpcmtGZTR2MFZtZGxpL0k2ZW42WVBmMnpIQ0hoQk41NDdwVmd6Nm1jNlQ4cE1qemh6S3dRZ3hyallhREhzCmt3ck1zcElneW5IdlVydUlyUTJvYVBzdCt6ckZDQnpWQVU1Zmp1VDhTaDAzNDFpLzl0VXAyMjEvQW9HQkFPR2gKWEtnK2t3M0FZVUhtWGNNTyt5Yk84OUk3VmV2MmVWL1VsUjZNTzNGemR2UXF3OG4vTG4wRFFkTWlHQ2NxTzVoQwpwOXVuVmlCOEc1RWs4Q1BqT3IzRUR5OGx1UWM3TUZ4blRocEI0cmlON010eC83QWJUUGdnMkh5V1ZTaTNzdlUvCnlOQjZiMmJEU0JZVk9mcGV6aE1scG9pTUtYNjRQN25CNEl5SndrZHJBb0dCQU5QUTl1QUpEanJROWhnNXJkNXMKVURwU1hnUStZNG5RZ0U0YlRFdVhKRUUrVERCU1oyNFZWZDRMOGYxWUN3Y0xURmp4c0RSa2dUdFVqZENGbld4cQpSdmFrZ0xUY3p1R3lJcUdGa2w4Tm5jcWIrc1BBNkx3RERxOGZVcXFpNjlWY2ZuNkZnK25ramcrNHg3MnlGREh0CmlsMkNwcytSWDR2MmFtM2xpenJzeUpPL0FvR0FLNXMrQng0ZzJaV0d0bS9KU3p1SCtwWWd0VTdXYWtZMmF2ancKNFBpRlBJWHVSWDVHWExHKzBGWmkwR1ZVZWExRjIwVjJuNU1WcUMyVVBsYi9PbEJlTi9LK1pJUkw0RVBtTXRXYwpXS0xIS0pmMVhkUm9jQ2EybDNYeG9SS0UzdHV4OElnbFRYVjhOa1lqbG5EL3hZMnhFaTVDb3oxRGY4UW9QTVJsCm00TzhVb1VDZ1lCUXRHODU5aFo2bXZwbThHaDVXZVYrK3pWQ3NHNVVlM01vN0doejd0UEdZNm1WSFB0cEhieE8KNGFIa2pUK3V0OVNWZmtXR1hVTnZ5RnJKNDl1dGJQdFNSdHpjVDJQNFV1ZnFHSmxrTnBWSC9CM3oxSnF5S21CaQo3cXhsd0s4VWtPVU1PTEl6N1FGWVdEVkR2c1pvNlliMkdSMlg3aXFlTFM1U2VRQ1o1cUFuL1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/remote-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWnA3QkJIQzVJUVdJQzkvR1JYcHZJVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOekl6V2hjTk1qY3dOakV4TVRreQpOekl6V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3JQSGhFbVZtMW1QQkZsYkpKV3o0UjE3QkhWV2M2ZmRkZUE1ZG8zS1h4ZTJEcGZtbFUKMmNzSmIvVnlMNkxNYmY2UjNLYUVrd00zem56TjhQMzB0TE1QMTcwVmcydERtZlpFZ1ZabzFWeVBZY1F5UVdKTQo1V0xnNUVqSnpDeXpIeld0UlNWYW1zZ3cvY2kyczRlK1ZjOHlnWUZmKy8yZGZFUmsxUStnTjdlYjZrMVd0bTJ3Cjh5WWEzVFRMT2Zidk9WSHRYZkZGQnpoSG5RNGUxWk1vNG00enlaS3VKelRLUmtXTWsrdk9SUHpEUkc2MDFoa2sKbzJyRXNIKzZEQXgxQ2tRakUzaFhoRHpUYVBEVjRjZ2plaWliOGkvZjFaa1kxb1Y4dzJ1cENkbWJXUS9kUnZQTQpzOWQ4T0k1a2pkdWs4UVJtVllCQjZGNHVrQ3praDJseWRMQy9BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUvVkRUY09DVnkzbTJnbFJ6Rk91aUhNWldUZ3d3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGMWdDRkZ4Ri8zcUZtUmhWRDRNb1cyaGQyekVOUG5iMUtqTmNHbC8rNjdlMStldmtrellYejQ0CkJhK2xiT2l1UzBNSlk0b1FzL1hDN2h4OWlEYXpyQ2pEMEdjZlhOb2xiU09meW8xVE10WGhlUXdxWlcyYzhyY1QKKzlvdGFUaGZuR3BBN0hDMURVTDVuUTArUHZoNGxXRzVtL1F4NndUVmhhNHRzT1RyWkRwQzc1dHJibzRjQTl6TQpYK3lYaGl1RzhUdllVOU9vN2xSbVdMMVBualh4SllBQTdMUzVFUkd1NFZySnZUZU1SaHlHY0JpaWkvL1Q3SVIyCmtGOTZtaU82QS9SMHFrS3JMRUFWODNlWmlqd1k1RmlCMFlldk91STdvN04yZVZ0b0NFdVdEa0dGakkySi9sZUIKR05reDFEZkJlVlJiNVR3NXBoeGh6Z3pEVDhtdm80VT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUlsTmhpaUh4djhxWlBIeUhpYVhnMmd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URTVNamN5TkZvWERUSTNNRFl4TVRFNQpNamN5TkZvd0VURVBNQTBHQTFVRUF4TUdjbVZ0YjNSbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBCk1JSUJDZ0tDQVFFQXFpTDdXZjFLcWRCSXVvU0hGUzdnbjVXdnpPUW82K00vOTU2YUJ2QkZ0d1VmcUdSbnE5YjAKc1NNOFpZc3gxSG9rT2hZbUJXcmVHMkt4S0s2bllXeEtGTmQ1WEt4aHdyYWQxbjR5WFh5V01XRjdLOGJEdldrSwpGZittaER2aExjdEMyTG4zSklhTlF5NW5NdityM2NMNnZxZlNMMEJEOCs4bXlIWXh3ME9sNDNFb0JQSGdGcW5zClVUTUVpRVNRVmlvcXI4STFRUk4xTVoyeXR4WHlCR1ZBYnpDL1FpWThFVmFqK05rWXpsdkI5VUszVXd0bVUyRTkKQXdmb0l4TFk5OXYyc0NUOTFDQnRadEU0WHBBVFp1eExtRkRIaDVDejJKeURRVEQyakJFRGw1c3hjblVmMjl2Lwp4alZqRFNaQ3ZYdHlYbEY4d0R5Q2pWVnp6NDcxUGhvUUhRSURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DCkJhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXcKSHdZRFZSMGpCQmd3Rm9BVS9WRFRjT0NWeTNtMmdsUnpGT3VpSE1aV1Rnd3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUVLTGR0R0VKeEdiM1cwU2VBVHhST0ROQnp4THdBa3p0THJOTStiTDZnd2c5OTNHc09hbWtSekkvbTRsClRnM0pNbnViNkVSMDdLNUJhUytFc2t4aXFnOHNJYmFBMURvNXVZNWYxUXdMSjh4ZWIwQzJJam44V295ZnlSTTIKcGhQN2lBRCtNWXNFcVRsYlJ0NjZWU21NNmc1UUpTNzVRTGZFdjdGYUZacDJFcXdKUUZDRUk1aDhaR0l0NjlSdgpkL0RzVWMzQlZESGVFSkVKSlRpT0k5cFN3YU1BeFc1WTRMTFJiYUkwK2ZBT2t5RERqTUwzanAycXM0NkROT01FCjQ4YjRaRVBMYUVQYjlpUkxnSm9nOExHakZDNTRmTlFrTm13V0dlWFFJcjVJRW5aZ2VHSUxicDV1RXZMQXJRaGsKYmlhU3hJcUJoNmk5M1JYVGZHYVRtWTluTnVrPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcWlMN1dmMUtxZEJJdW9TSEZTN2duNVd2ek9RbzYrTS85NTZhQnZCRnR3VWZxR1JuCnE5YjBzU004WllzeDFIb2tPaFltQldyZUcyS3hLSzZuWVd4S0ZOZDVYS3hod3JhZDFuNHlYWHlXTVdGN0s4YkQKdldrS0ZmK21oRHZoTGN0QzJMbjNKSWFOUXk1bk12K3IzY0w2dnFmU0wwQkQ4KzhteUhZeHcwT2w0M0VvQlBIZwpGcW5zVVRNRWlFU1FWaW9xcjhJMVFSTjFNWjJ5dHhYeUJHVkFiekMvUWlZOEVWYWorTmtZemx2QjlVSzNVd3RtClUyRTlBd2ZvSXhMWTk5djJzQ1Q5MUNCdFp0RTRYcEFUWnV4TG1GREhoNUN6Mkp5RFFURDJqQkVEbDVzeGNuVWYKMjl2L3hqVmpEU1pDdlh0eVhsRjh3RHlDalZWeno0NzFQaG9RSFFJREFRQUJBb0lCQUFDT09LL2tpZGZnSER5dgpyaGs5bS9JcGRQZUFUem5sOWhHQzdSSFV1d1dMK0x4K0IzQ2lOUTVYQlIxM3hPUGl1amVPVnZWeGtlUVpBR2NYCm11aFFpRFZsTnJvOHZkejY1NjBKb0hSNXNhdmJtNkZhOXN5cGlTVGxQcy96dWhxQ0xXZXp3OERVeDZWT2czdkIKSmZpRmFIZ3k2QmJMYU8xay9JVnZEVjZMM0FEUUhtbWQwYWRXKzAwaXUwblpKM2JROTV0WXcvbUJucEJ1QlZjUQprUzBDMk9XWkFxMGpjNWZTVUJaTU9Rd01qZ3NOWmFVaGQwMzRWNGpRYyszK1lFRm9VNHdnUS9BOTNCdXY2WjFOCkViVU5IWWx5U3VsOHJnZUlNVC8wMXZ5QmN3ODdNR3FJUE8rN3NxemdmVkJhdmVtUUxRYXhoRXAyTTZneFNyMnoKek5NbS9FRUNnWUVBMzFObUlETEFpZlNLZHRrZHBRQ3ZhYjJ6czQyd3FIOU5xb2xtcWRtcW5BSjJ0YklXNTBwcQp6d0xwc2xhZlRxR04rdWJ2WmpKcTBWL3N4ZThvbTFmemlhQ0hzNHoxWEpabzV0bzNEWjNMVWJrZy9RMzVXOWFSCk4zbDB1SVhIeFN5aUNycS9QUGJTS1BwR2ZJNk02VU9acjVNOVl6TWJmZHlMSTJOSjY1UmszbGtDZ1lFQXd3ZG0KVjZBcE55Zjd5TTI1cjQ1aVVvT09IMGcxUWQ4U0dnVWZjVmdvenZVMkh1clNwSm1UYXZXUWU2elpET3NheDhEcApQSjNMOHFDNml2Q1BCdHNHWXZNZ3pVS2Y0WUZ0OEYwLzVDVjBBc1VTcHRuSHhjK0pLaHRkemx2bFJ5eDRZSGk0CjZodE91OHFLTDZjMGkxcXNhNTlkRnk4N01hMUROMDdwZmNIY0wyVUNnWUJ2OThacU9rZmlZdUxSTjRYdlptcU0KSDNwcmVZeXF6ampJV2Q5SkpVS3V1V1YvTDJ6Z1JhVkxhUEIyWTR1M3hyUUNxYW81bU9tSlZBaklMR0kxa0dFZwpEWVk3OVY1SEwzb2sxQjlxQ2tVWUVqT0I3SEdySStibTQxUXI5NWJ6T3E5N3BhbWdEVGZOSjc0VFVQMUJMbzF0ClErc3hRenh6WEJHK2lsZFRiN0VxOFFLQmdIb0ZxemF2OHBtYjNxRG9kb0VzcUwvUHA2QlM0Vjl4WGpZQmRvYkkKRGVCTzg2bXNhbGFwNzk0Ly9rSWpCenBaN3N1RUcybmRvTGtSYnlWM0ZVWEl5OW9sSENUUXhvK2xGMUFJUisxSwpzYWI1L28xK1BNdTY2YXI2ckZwc2pLdFhXNG1nZnJHYW5FeEtrT0wzenB4U0F3YmpFcTlxMGJKbklXTDljSUZLClJhVXhBb0dBZmhyZ0pBVlQrK3dZUUNYS3hjeEgyeXZqTFk5RUNaMTBJQzIwdXpLNjRrdjVLa3BuY0s2UU82VXUKUCtLZUY4YktkZFBmNzJwWFVlY3piMkE4QVRYVklCNENDNTEyYnV3ZEpuekRkY09zdks4bkxnOUt4cDFrK2piZgprZzMvQzhYZXZ0YWtyV2p4V3B2Z1ZEZ01GUUVibWJReDc2WU13anF5dVdaTEtwTHYzbTQ9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWnA3QkJIQzVJUVdJQzkvR1JYcHZJVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOekl6V2hjTk1qY3dOakV4TVRreQpOekl6V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3JQSGhFbVZtMW1QQkZsYkpKV3o0UjE3QkhWV2M2ZmRkZUE1ZG8zS1h4ZTJEcGZtbFUKMmNzSmIvVnlMNkxNYmY2UjNLYUVrd00zem56TjhQMzB0TE1QMTcwVmcydERtZlpFZ1ZabzFWeVBZY1F5UVdKTQo1V0xnNUVqSnpDeXpIeld0UlNWYW1zZ3cvY2kyczRlK1ZjOHlnWUZmKy8yZGZFUmsxUStnTjdlYjZrMVd0bTJ3Cjh5WWEzVFRMT2Zidk9WSHRYZkZGQnpoSG5RNGUxWk1vNG00enlaS3VKelRLUmtXTWsrdk9SUHpEUkc2MDFoa2sKbzJyRXNIKzZEQXgxQ2tRakUzaFhoRHpUYVBEVjRjZ2plaWliOGkvZjFaa1kxb1Y4dzJ1cENkbWJXUS9kUnZQTQpzOWQ4T0k1a2pkdWs4UVJtVllCQjZGNHVrQ3praDJseWRMQy9BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUvVkRUY09DVnkzbTJnbFJ6Rk91aUhNWldUZ3d3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGMWdDRkZ4Ri8zcUZtUmhWRDRNb1cyaGQyekVOUG5iMUtqTmNHbC8rNjdlMStldmtrellYejQ0CkJhK2xiT2l1UzBNSlk0b1FzL1hDN2h4OWlEYXpyQ2pEMEdjZlhOb2xiU09meW8xVE10WGhlUXdxWlcyYzhyY1QKKzlvdGFUaGZuR3BBN0hDMURVTDVuUTArUHZoNGxXRzVtL1F4NndUVmhhNHRzT1RyWkRwQzc1dHJibzRjQTl6TQpYK3lYaGl1RzhUdllVOU9vN2xSbVdMMVBualh4SllBQTdMUzVFUkd1NFZySnZUZU1SaHlHY0JpaWkvL1Q3SVIyCmtGOTZtaU82QS9SMHFrS3JMRUFWODNlWmlqd1k1RmlCMFlldk91STdvN04yZVZ0b0NFdVdEa0dGakkySi9sZUIKR05reDFEZkJlVlJiNVR3NXBoeGh6Z3pEVDhtdm80VT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURxRENDQXBDZ0F3SUJBZ0lSQVBJY3VFNndSUjl0dEswNThVTHBYQjR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URTVNamN5TkZvWERUSTNNRFl4TVRFNQpNamN5TkZvd0tqRW9NQ1lHQTFVRUF4TWZZMngxYzNSbGNtMWxjMmd0WVhCcGMyVnlkbVZ5TG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1QeDRvUlFrNUxXZUg1VzMwSTIKN0NMdFU5bnduU2d3TnBlNjJKWVBhQjFmUjVUa2FYWXZnM1RQckE0N0EyclZESzgvSExlL21VVVpYQlVXR3QrOQpqUWRzUTlvdWdNVksyd1hjWGt2SHNqMXdMVStEVnprVjJHdzdPWVFZRkozaXlTazV5aUtIK3JKb1NjaDB1WEVnCm9COFlBQm5IblhoVmxLelZaVHZZN2JSd25XbEo2RXQyZmhuY2NhUm9sSXNOMzNQK2VUV0VlS2JnUDV0T1BFZ0YKODM5clFwaUs0TVI0T0RGZVNCTVMzZi9XODRvVmtNeUkrYzdqVWoyZ3loV01PYSt2enorYjRWOWZ4bW9EMDl0KwpER3Y0MUs2TzlsK1V3Y0IrWTQwcjdGaFBvOUJFbHJtSmFjUFNsREI1bk40SjNxSDBGalFNQk5GQ0UwNWZQVEljClptVUNBd0VBQWFPQjNqQ0IyekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVS9WRFRjT0NWeTNtMgpnbFJ6Rk91aUhNWldUZ3d3ZXdZRFZSMFJCSFF3Y29JZlkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnlMbU5wCmJHbDFiUzVwYjRJUUtpNXRaWE5vTG1OcGJHbDFiUzVwYjRJbFkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnkKTG10MVltVXRjM2x6ZEdWdExuTjJZNGNFZndBQUFZY1FBQUFBQUFBQUFBQUFBQUFBQUFBQUFUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBY1BrVVhEZUlNUVl3UmFjOTlNZGIxV21YaUJoc0pMT25vdFRJV2w5U0NKTys2TDVqCjBDNFZhU1pPQ1YwLzY0aFRJZ2hlWTc2MFIwZkcwa0RqVUdwaHA1ZjFYUUl5MXVOUzBmWC9RNXd1cVU3Z2ZoQmwKaTFlQmt5Q2JmS01iNk9FZmNlckc1ZFFPQVA0SmZuUzE1Z0Z5aWxxa3pUNis1TkVxRzVxaHhTMVJvdDV4ZnM2aQp4NDh6VXpKQXF2NUJBUTJUZ2xaRkUxNnNvWXJ0a291cGNMd1k2OUwwSVJDd3RNRldmR0FwQlExb1ZLWnkvSE5SCjB1WVVhNnFDRmxzY2JHRkFyaWFNQkJLVUtoV0ZqUTZ2bEN5Zys5Q1pEajZjWnRnODNwTElOdkYyYUZuTGtZNEEKc25zOFRSYVV5TUFremQza2NTcGRHdFB5NElxazlaVStHWk54Vnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdy9IaWhGQ1RrdFo0ZmxiZlFqYnNJdTFUMmZDZEtEQTJsN3JZbGc5b0hWOUhsT1JwCmRpK0RkTStzRGpzRGF0VU1yejhjdDcrWlJSbGNGUllhMzcyTkIyeEQyaTZBeFVyYkJkeGVTOGV5UFhBdFQ0TlgKT1JYWWJEczVoQmdVbmVMSktUbktJb2Y2c21oSnlIUzVjU0NnSHhnQUdjZWRlRldVck5WbE85anR0SENkYVVubwpTM1orR2R4eHBHaVVpdzNmYy81NU5ZUjRwdUEvbTA0OFNBWHpmMnRDbUlyZ3hIZzRNVjVJRXhMZC85YnppaFdRCnpJajV6dU5TUGFES0ZZdzVyNi9QUDV2aFgxL0dhZ1BUMjM0TWEvalVybzcyWDVUQndINWpqU3ZzV0UrajBFU1cKdVlscHc5S1VNSG1jM2duZW9mUVdOQXdFMFVJVFRsODlNaHhtWlFJREFRQUJBb0lCQUhBekZxajdWclZ6TjhYbwpTcWtvdCtoOEMxSzFjOWdxVzJoZ3BscXU4Y2czNGM1QlNKNVRNS3YzcXFidlpkS0xzbHE3QWQrNXg3TUloWERSCm1vdlpoMkxqdktxM2pDYnM2U09lL3lQWGNwbTVuVWgxaGNGN1g5VUJ5THA1NjN4SSt6VXZFUzdhdkZQaVliVjIKR1NYTkw4TCtSRGgrMUEydXU1YUlEeExJOGJ3cTZ2SDFhNStlUFFVRXVqZ3NaLytTNG96YXA2bStwNkZERWYyZgo0V2xZemZScnVrTmJOUWtpYTZSZHlBVlcxN0w4Z3RTYW1pNG14aHFqNnR1MlZZNW9wbDdrUHU0NWk0T01DVFJYCjNxUFBDVUF6YmJGLzJLa1Y4cWt0Rk40RzArbEZTL2lHdURFbzRHZWJsaDVGa0psSUhXQjhRR2NNb3VVa1lLZmsKdzc0cGJQVUNnWUVBMFVrVEVjNjU2K25maXUzYkI0WlcvcllWTFNPb3lUQ3huSnRpa2kvRW9OWlZmdStNSThodApVYXhVN0dsWWhId2xMYWhGU2pPd0FyblUxNmVYcCtYTFpIN1o2amt5bklGdE1ScTJHeGtXVXdDR0U2Uk03OXk2ClMwWW9PRjdBenQvRW5ad0c4VG12aGd2eG1YaHpGdjF2M280bjV0MU9WSlh4WTYvUXgwcnlKSWNDZ1lFQTc2NkIKdDEyN2tGdURMZFNnTTByQkRodTVBbDFpN2xNZTBubHY5eDRkRTZ4MnhaVlRJbUY2blhRTUtMNmQrSTBacGlxOQo5RG5lV0lWNDNGZ25lMUNFU00xYlF0cm1HR04xa0FpeXE0KytBV1Q2QW4wTS9EWDBVMmdKSEI0L0FZNDZYblZVClMrLzYxM0ZRalJFaUp1WXJpYmMrR0dpckZEdTZ2UWR4NW4xZlJMTUNnWUVBbFZLMk1IWjNZVU8xSThNaUMvUm0KRGNhTXhYQXo5Wml3b1RTYzJBRU5JbFRMRzQ1L1J1aXlWeHZHWEFldUNKa3JUYkJKLys5eEhnREpSRFZubDN2MQo2dlkzTlU4cU5WQ0RRQTMyOE02dGh2dFFycU1ENGdCelMxSDdVSDBLeEpBVUVRQktVOEw4NFgrVUdoUSt5YUI2Ck9TamtmMnhYZnpLYzBLdVpJeGp1Ty9FQ2dZQlFIa0lvSEVIOVlFbTZRVEFIMVQ0eFRCME02RkNRbitKV3N0YzEKZ0xCeGloM3RzQnVwQzNLa1BVMXZOVUN5KzkrT0J3MldITjN4TXpTU1d6bGZaQ3ZEOWpsQ1lNKzNhVSs4Qk54TQpzdkR0b0daZC9KVWhuWnQ5WWZKaG5zNnE0M01wYmdqdWxWcUJOOVNZUXhqcWJkZ3g0Ym4xQ00vZkpKUW9hZHV1CkUweU1Od0tCZ0JSR1NqTEcxckxtRkxhWEdGUG9HSm82QUErZjJFL1I5L2NDa0lDeUxFeU9ZbVpqVEpoTkVjZG8KVmduNkNqTG9xYWpKOElIeHJoWm9lTjVMRmI4UTVLZm9yN0JJVmpwRFE5VzVWZWZ6QU5ZNDE3THgzUmx2S0xOUQpscHpKVVk1L2YzbkhndmlBMWIyRkdXMHRCV0FzSk5GYm04ZmxoZ3lDQmdZUWNuaFVyNTZSCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWnA3QkJIQzVJUVdJQzkvR1JYcHZJVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOekl6V2hjTk1qY3dOakV4TVRreQpOekl6V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3JQSGhFbVZtMW1QQkZsYkpKV3o0UjE3QkhWV2M2ZmRkZUE1ZG8zS1h4ZTJEcGZtbFUKMmNzSmIvVnlMNkxNYmY2UjNLYUVrd00zem56TjhQMzB0TE1QMTcwVmcydERtZlpFZ1ZabzFWeVBZY1F5UVdKTQo1V0xnNUVqSnpDeXpIeld0UlNWYW1zZ3cvY2kyczRlK1ZjOHlnWUZmKy8yZGZFUmsxUStnTjdlYjZrMVd0bTJ3Cjh5WWEzVFRMT2Zidk9WSHRYZkZGQnpoSG5RNGUxWk1vNG00enlaS3VKelRLUmtXTWsrdk9SUHpEUkc2MDFoa2sKbzJyRXNIKzZEQXgxQ2tRakUzaFhoRHpUYVBEVjRjZ2plaWliOGkvZjFaa1kxb1Y4dzJ1cENkbWJXUS9kUnZQTQpzOWQ4T0k1a2pkdWs4UVJtVllCQjZGNHVrQ3praDJseWRMQy9BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUvVkRUY09DVnkzbTJnbFJ6Rk91aUhNWldUZ3d3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGMWdDRkZ4Ri8zcUZtUmhWRDRNb1cyaGQyekVOUG5iMUtqTmNHbC8rNjdlMStldmtrellYejQ0CkJhK2xiT2l1UzBNSlk0b1FzL1hDN2h4OWlEYXpyQ2pEMEdjZlhOb2xiU09meW8xVE10WGhlUXdxWlcyYzhyY1QKKzlvdGFUaGZuR3BBN0hDMURVTDVuUTArUHZoNGxXRzVtL1F4NndUVmhhNHRzT1RyWkRwQzc1dHJibzRjQTl6TQpYK3lYaGl1RzhUdllVOU9vN2xSbVdMMVBualh4SllBQTdMUzVFUkd1NFZySnZUZU1SaHlHY0JpaWkvL1Q3SVIyCmtGOTZtaU82QS9SMHFrS3JMRUFWODNlWmlqd1k1RmlCMFlldk91STdvN04yZVZ0b0NFdVdEa0dGakkySi9sZUIKR05reDFEZkJlVlJiNVR3NXBoeGh6Z3pEVDhtdm80VT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU4xRSt6RjJ5WFJCRmlCS1BLQndRQ2t3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URTVNamN5TkZvWERUSTNNRFl4TVRFNQpNamN5TkZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXRSaFZsVjVVcHVSWXI3S2FMSnpCMHR4UzNNalQKSHY3WVQ4dzFib2hmd0lFZEtQOXRCb1dzcmoweHdzQzUvL0ZUenpoNEJEL2dxalRlNWRnY0RFNmc5TUo0M3JjRQpDUXZ2TG45Y0VZaDAyN3RkNnh6THhUSERCZGNCWkR0VHlsQ2ZGMEZxL3RvaDRMMnZ0RkMyUHg2TmZKOEV3aDZpClFhZm9ibm1ZSk1pT2RXTlliUDIwUS8vbWVjTmQ5UHJUMFoxdUo2eEdLZ2FVK1dIa3pxaXNIS002cHZOUmhWdzgKTzhBaHNmbUN3WWRDWVVrNEZLdGdaSzhiRnpKeWVxK1UwdTlLdzIyV2hFMnBwQnYwbGt2cng4QXA5T3BWL0JybgpJbSsva2V4ZVJYYXVydXdMM2ZPc1FhOVlMQlRuN1h5V0pXZXZlbDZ2alVMWDgzZ1VQYnk4cVdYdUh3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVDlVTk53NEpYTGViYUNWSE1VNjZJYwp4bFpPRERBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRzFlU0pwem41a3lEUHI2SmNyM3pZRGVjSVJab1BGM0hyaW9VMkdGTGVlYnYvWnYKSFFNREk4RnZtdFVNSWZ2dCsxMTlZc1JrSEFkbUF1eG1DbEZCbG04bzV6bXN3b1VYdUJoUFBhWDVSMjBuR0lvcgp4YzhzRFlnY3EwNlZhMENZcEs3Z1BselRHOTAvUWJqMUtMZXR0S0llY0haR2xMcWkwa3lNUUlUcHRBMWlhSVdGCjB1aHRhMnhyQUZkSUJxYit6anljUFdKcWt2Zm5POGtvOG1JTmtrSldvWnQyUkpOa1pxYkxMU2ltdWd3M1pEOXAKOUl3TUhyZ1o1bTZ6alNhZXRnQ3QyOWs1VVpIU2JDdlljaysxbllSdXFFanZublV3R3g2Ynl4RENRV2l5Z0NaQwpqVUM2bGozTjZyaHpJaFFEMWdzaDk4Q0luMTJVMEIxTFpYZnMxRk09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdFJoVmxWNVVwdVJZcjdLYUxKekIwdHhTM01qVEh2N1lUOHcxYm9oZndJRWRLUDl0CkJvV3NyajB4d3NDNS8vRlR6emg0QkQvZ3FqVGU1ZGdjREU2ZzlNSjQzcmNFQ1F2dkxuOWNFWWgwMjd0ZDZ4ekwKeFRIREJkY0JaRHRUeWxDZkYwRnEvdG9oNEwydnRGQzJQeDZOZko4RXdoNmlRYWZvYm5tWUpNaU9kV05ZYlAyMApRLy9tZWNOZDlQclQwWjF1SjZ4R0tnYVUrV0hrenFpc0hLTTZwdk5SaFZ3OE84QWhzZm1Dd1lkQ1lVazRGS3RnClpLOGJGekp5ZXErVTB1OUt3MjJXaEUycHBCdjBsa3ZyeDhBcDlPcFYvQnJuSW0rL2tleGVSWGF1cnV3TDNmT3MKUWE5WUxCVG43WHlXSldldmVsNnZqVUxYODNnVVBieThxV1h1SHdJREFRQUJBb0lCQUU1WXJjWUdYbmNwZVJqaQpHd05MK2lyQWVQVGR5VUN5bm1DL2h5by93N1VqNXJxeTdyY1FvK2xwdmhwMGlNT3E0MGhXTk00WjJKZXFjZmhjCks1NURjaTBSNlhycEVNemRKZWdtMzIwU2JRUVhKb1d1R3BaQWRoQVR1WjFrY1ZhbzFIc2FLVEVDcS85djhSRUEKamlmMmp0Mm9ha1dWUFR0TWFpbEpYOElpSmtld0xWbmNMeTZGSkpiQjlNNlRqby82U2Fab2NCSWZsY1k5UjFpdQpLZ1J6bmJ5elljVVQ4NTdvY1lMbndDV3FMeFY0SGtPa2Z5TTF3L1pMeXJFNE96cktkMk9MbW5sWXJWMk1MVnNJClFjUTh1NVhaSzlWb0NIcHdHeFovVDN4dE1tM2c2SFpTWGFLZFluSU92cVFIWnUvT1VMWkgxTTQwejFvaURRcHcKMTVPOVJ4RUNnWUVBNkg3TjkrZ0VuVFlwekhwOHp6RUR2aHpOeDdTVWhWR3dPdXQ2cVFITkpDb0NEUzFOVi9XeAp5MCt4bCtNNUtrQXlpTUVnNjBOWWhTdnRsNUMxZkxrbkZZVlV1YjJPM3ltMWdBTDBpeFRsQ091djlieUo4K09aCmFhZVl0YTlvOFkvRE9vRnNBS1kzaGk1Wk1saGFOZHdjN3U4bzlYUjAzWXp3QjllTnNoMC8zUGNDZ1lFQXgyYysKS2UzZzhwRjRaa212NUthV2cwZC9qS2dIZmhLV2tqMmpEdUhVajJ1RDdpUER1azdaaGRyNmhTbGpNRFo1LzE3dAp1WUo3ZnFhUnZ4WWUyelZ3MHN5S0E1VmtLUUJBS2dWZlZZakpCTGM4MWJGUytkbTNSV0N6NkhwWXNLU1dYU294CjF6Nm9rNVFaMXZKbEMvaXJaemJZeGJlSGdyUUdJTkdBK3IzTTloa0NnWUJ2NHM1V1ZvY1o3VDN5VktRSnhjbksKVE94UEJqMVBaMytLNjFYdFRadWVvc1MzK0t3Mi8xdGZ2MnQwNy9uTHRuZGJUcTM3Nmo0SVlKcUhqVEY1NDFURwp5NUo1akpyY0ZLTnZCbjBQRGJBbk9kMUZRa1dWWkZ1bzkrbkt6YTZRU2FJblhxOU9KSytsMkZvK216eFduU1lqCmFsN291UEdneVRtZVhJS3BTK0EzQXdLQmdHaXRoakMwcy9ZaTc3V2kwVGVUVEVnMmJIc0dhb2lBY1pMcjBJR3IKZzg2V2ZuZXhScnF6VWZXMjh2U2N1WGxCMytGemtCQm1zelhWYzRXQXMwb1lUOVlaa2dvM2pwRUhsS2Q2a29WdwpmVGFBaXVzVFg1L1I3eWY0ai9sbTROQTZWc1VwdFdodGVFbWc0Yis1Rjlxay9EWCswT1ZhWjBUeUJKV041Y3U3CmY3RmhBb0dCQUlGUHMyWktwRWxxa0NmeTl3TzJmTUwxcmNjT1hnMzRldkFiK1dsM0V6VnlPNzhWaW5nY3h1dmkKWnFWQ01WOGRpV0xlMjNZVHRIVmdDeTBUZEZoWDRxTGZOMmVrRlgzOXU0ZFB5bGE0R2lTcS9PWVVYVEJZVVhPUApPK3IvUk8vdmhmeGZmd1BhZzZ6QzJlUDdDUEQvVHVMRVkrcWxtMElPN3BHcURLTUNJQ3VqCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWnA3QkJIQzVJUVdJQzkvR1JYcHZJVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOekl6V2hjTk1qY3dOakV4TVRreQpOekl6V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3JQSGhFbVZtMW1QQkZsYkpKV3o0UjE3QkhWV2M2ZmRkZUE1ZG8zS1h4ZTJEcGZtbFUKMmNzSmIvVnlMNkxNYmY2UjNLYUVrd00zem56TjhQMzB0TE1QMTcwVmcydERtZlpFZ1ZabzFWeVBZY1F5UVdKTQo1V0xnNUVqSnpDeXpIeld0UlNWYW1zZ3cvY2kyczRlK1ZjOHlnWUZmKy8yZGZFUmsxUStnTjdlYjZrMVd0bTJ3Cjh5WWEzVFRMT2Zidk9WSHRYZkZGQnpoSG5RNGUxWk1vNG00enlaS3VKelRLUmtXTWsrdk9SUHpEUkc2MDFoa2sKbzJyRXNIKzZEQXgxQ2tRakUzaFhoRHpUYVBEVjRjZ2plaWliOGkvZjFaa1kxb1Y4dzJ1cENkbWJXUS9kUnZQTQpzOWQ4T0k1a2pkdWs4UVJtVllCQjZGNHVrQ3praDJseWRMQy9BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUvVkRUY09DVnkzbTJnbFJ6Rk91aUhNWldUZ3d3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGMWdDRkZ4Ri8zcUZtUmhWRDRNb1cyaGQyekVOUG5iMUtqTmNHbC8rNjdlMStldmtrellYejQ0CkJhK2xiT2l1UzBNSlk0b1FzL1hDN2h4OWlEYXpyQ2pEMEdjZlhOb2xiU09meW8xVE10WGhlUXdxWlcyYzhyY1QKKzlvdGFUaGZuR3BBN0hDMURVTDVuUTArUHZoNGxXRzVtL1F4NndUVmhhNHRzT1RyWkRwQzc1dHJibzRjQTl6TQpYK3lYaGl1RzhUdllVOU9vN2xSbVdMMVBualh4SllBQTdMUzVFUkd1NFZySnZUZU1SaHlHY0JpaWkvL1Q3SVIyCmtGOTZtaU82QS9SMHFrS3JMRUFWODNlWmlqd1k1RmlCMFlldk91STdvN04yZVZ0b0NFdVdEa0dGakkySi9sZUIKR05reDFEZkJlVlJiNVR3NXBoeGh6Z3pEVDhtdm80VT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRRmIwZzM4cnlldGJ0T2RHVnlPeDIyekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOekl6V2hjTk1qY3dOakV4TVRreQpOekl6V2pBbE1TTXdJUVlEVlFRRERCb3FMbU16TG1oMVltSnNaUzFuY25CakxtTnBiR2wxYlM1cGJ6Q0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOc1VMdDgrWk1ZYjVxc2FjVTZyOGlOM0VIL2QKei9jaVd1TTBmNEZ3YWZEZFB0a3FFeEhjVTZkQVFqZzVXcmZjRE9KWHhMRmcvTDErR0QwaFFJUzB6R0lYamhGdwpqeWNRc0R2Z0E2RTc4cjgyeGVHN3g3aTVhdFMzcUdxTmNqbjdDU21zb1NtcEdBbm4vT1RkT3I5WEczYTZGSmoxClFnL0R3WkROMS96ZnoyZC9laFJZczA4elM1bnRibWtndkQ3cm5HbUx3OW5lakh5MnlKS2UzS1NvTkw4c0ljS2YKVWtRa2NRYzdGVjFEeEVMMU1iSU15Rmo1c0lxcWp4OUUyL2I1TFo4MUpyczNJY3VVZ1Y4TnoyYTQzMHN2UE1SNQp2bExmck0rZlhGbHJ1d2RKTFl1SG9NWXlsSUdsTTRXQWlUYkszdElvUTVQbUdRQmN5Snl2U25BR2p0c0NBd0VBCkFhT0JpRENCaFRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVUvVkRUY09DVnkzbTJnbFJ6Rk91aQpITVpXVGd3d0pRWURWUjBSQkI0d0hJSWFLaTVqTXk1b2RXSmliR1V0WjNKd1l5NWphV3hwZFcwdWFXOHdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUJnNDRSNTNqRmR4cHJGOTQyc3RDWW1CeGNrK3lQYVJ4K05WQSszTnZHYUUKQVFUUzVMbFdXcnVHRENGMkowcy9GdG03eldnUHdKeG9qVkZUNERNOWlzbDVURkdISnJjUCtjT0hRMU5aR0oxVAo4NGE1dFdYb2hYN2U1UDRrU1JZeTdnL1dFNnFCZkdlc0dTN0plSlZxenlHd1JPYmF0dUxrbmg3aUpON3dzcENjCnA3eS9MLzBrS3pYTW8ycnF6bVAzeENsOHdyYTZWOFJmSkhMSWZNWTJvKzJLb1kzOVBmZUpjckdNUWRmb2x2RmIKTEJLQmNxYWFVTWkyTERXMEtBVHlOSjQ0bG9IRnk3dGsyNVJ0U0hVSGwzMWRxNzdDanVoTnNGL0tUVklCK29kQQp2ZitEV21rczdYS1dlMFZiakpBYkp4aHJueTZLRHE4MEFicDhKNWp1RDFJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMnhRdTN6NWt4aHZtcXhweFRxdnlJM2NRZjkzUDl5SmE0elIvZ1hCcDhOMCsyU29UCkVkeFRwMEJDT0RsYXQ5d000bGZFc1dEOHZYNFlQU0ZBaExUTVloZU9FWENQSnhDd08rQURvVHZ5dnpiRjRidkgKdUxscTFMZW9hbzF5T2ZzSktheWhLYWtZQ2VmODVOMDZ2MWNiZHJvVW1QVkNEOFBCa00zWC9OL1BaMzk2RkZpegpUek5MbWUxdWFTQzhQdXVjYVl2RDJkNk1mTGJJa3A3Y3BLZzB2eXdod3A5U1JDUnhCenNWWFVQRVF2VXhzZ3pJCldQbXdpcXFQSDBUYjl2a3RuelVtdXpjaHk1U0JYdzNQWnJqZlN5ODh4SG0rVXQrc3o1OWNXV3U3QjBrdGk0ZWcKeGpLVWdhVXpoWUNKTnNyZTBpaERrK1laQUZ6SW5LOUtjQWFPMndJREFRQUJBb0lCQUVXYmtSVC9oeGRuRUJCMwpjMTd5eFJtOW4vRndzYjR0SFVHcGtZVzRDUUV0MnVVM09CM3BxbTZ1dlJ1T0phUGJlQUNHc0lsSGJxWnFwUnJ2Ck1NZTVobUw0WnZ4bGppWjBaL3B1UDlqLzZpNFZJaVNKL0hoVitYcWk3QkVHNWk5RDh2SloxazhkV2ZUenorZUwKM3ptaVhLaUprVGZVWFd3UzM3SzVwSkhGTHVvTUFVYVQ2VWxJVGZoeDNpL210V0Ric3FURklmcDRBOC9yVk9acwpXSnNFVWRaNXl0SE1Rb3ZUaW5UUDdON3drc1h2Tk9ac3BiMFlTeGhYZkpvQkFLOW5aSnZYZkJFdE02UFE2MXlGCklzV2xQTWRSTk9Rei9uclZPaDY1YXhxSzNCbFNyam9zZGcrNTk3ekVIMktkQ29mazdZeGljZkZuNWVFcEl0dnkKUzVXWk5CRUNnWUVBNHdhS29rMmQ3U3dMaFBCcllaOUFMZ2RPZVZWeExWeGxsMEZXSjQ0Q1ZqUkZMblB5UnlSOAprcUZacTZJY2NaK1BzQThFYnBONE4xSlVnblhZRUg1aUpaTkJZbjJVWktuWW0vN2ZEdC9seWlSUG00eFdOOFRhCmFjT2NJQWpJdzZvb1l4YmhKeDZNS1lOY2JNd29QNHpmUDl5ZVBaMzRkWEw2a1g2ZFJ4UDYxdmtDZ1lFQTl3b0EKOXpYMkc2YVkzWEE5TTBtMVdLcW5od2lqVnRkQVpyQnY4eVVGU1J3L1hhNVBqZzREUENra21xbko4K0drUzF6cApvMVNNRkx1TFBBTTgvS1IzZGNURXEwTnBIbDJXU1VLRjdRaXpBNi82UG5HSGJteHZ5blJvVWQzMUswUm9TVnR0Ck4vMWpoU0pDTDAwRUxwcnd4MjF1YUI1YWJRUFRKZzFmZ2pMMkpYTUNnWUFHeUYwLytCMnR4bEVaeWEwTG41eGwKUTZhZWpXVHlPLzUxQkdpMGlkT2NDN2U5YVkxbGZydVNEZXdGNnJQNjJRK0w3UWJ1M3MwS3FoVUlTTWtKeFJ6ZApqb2Eza0pUc1pQNnB1bldqbGlEaFp6QlJyMkdzRE4rUnBWeDJ3SXh1L0JoMHpXd3dwUUwvQW9PeVpHOFhadmdNCmltVFg1bTVUNC9tRWUwbnJvN2NzMFFLQmdDS29DcDZqdVZVRHVDcElscTFkUjgyYWswb0VValhhbUxSUFNFVksKQ2tYSmFySlB3K1ZmM2VCUXZVdmRTZkdtMUErbWh6aGNvaEkraFRmMEZGZzFFblU1RjRZWFBPWC9weGU3OTJIYgplSkdwM0dkcU1kK3g0clQ2UTdCSWZSNkd5RUtTU3U0eDVBWkhXaFdjcmx1RGJRZnRPREh2SUN4dS91NDFyaEpyCjU5QTFBb0dCQUplbzkrZWVVQzQvREs4V1NvbkN6NWNyMnNaQ1djTjRsS3Rhby9nZkY2TWR5QkFiT1RKWmVRVGgKcUFRWHNzSzRKR25KY2VMUXpHVEw3dDk1MnhKS1kvRVBxQld1UmpIVEtEZkxoTmE0YW1RUDRnK3JtTVBiSU1pZgpxT0FiTWVtc25IYVZLYnJvZU8yYXdjcDQ3YVVLeHY1dnptT3IyckJObGRNVTRLcHNlNWVPCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  policy-cidr-match-mode: ""
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":9963"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: c3
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "13"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"
  service-no-backend-response: "reject"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-masquerade-to-route-source: "false"
  enable-wireguard: "true"
  wireguard-persistent-keepalive: "0s"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "false"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  enable-health-check-loadbalancer-ip: "false"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  bpf-lb-acceleration: "disabled"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  hubble-export-file-max-size-mb: "10"
  hubble-export-file-max-backups: "5"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  ipam-cilium-node-update-rate: "15s"
  cluster-pool-ipv4-cidr: "10.3.0.0/17"
  cluster-pool-ipv4-mask-size: "24"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "true"
  bgp-secrets-namespace: "kube-system"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"

  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  # default DNS proxy to transparent mode in non-chaining modes
  dnsproxy-enable-transparent-mode: "true"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-xff-num-trusted-hops-ingress: "0"
  proxy-xff-num-trusted-hops-egress: "0"
  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"
  proxy-idle-timeout-seconds: "60"

  external-envoy-proxy: "false"
  max-connected-clusters: "255"

# Extra config allows adding arbitrary properties to the cilium config.
# By putting it at the end of the ConfigMap, it's also possible to override existing properties.
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: c3
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n            return 200 'ok';\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/clustermesh-apiserver/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumexternalworkloads/status
  - ciliumnodes
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumendpoints/status
  verbs:
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumexternalworkloads
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-bgp-control-plane-secrets
  namespace: "kube-system"
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-bgp-control-plane-secrets
  namespace: "kube-system"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-bgp-control-plane-secrets
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver-metrics
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/component: metrics
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: etcd-metrics
    port: 9963
    protocol: TCP
    targetPort: etcd-metrics
  selector:
    k8s-app: clustermesh-apiserver
---
# Source: cilium/templates/clustermesh-apiserver/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  type: NodePort
  selector:
    k8s-app: clustermesh-apiserver
  ports:
  - port: 2379
    nodePort: 32379
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
              divisor: '1'
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                    set -o errexit
                    set -o pipefail
                    set -o nounset
                    
                    # When running in AWS ENI mode, it's likely that 'aws-node' has
                    # had a chance to install SNAT iptables rules. These can result
                    # in dropped traffic, so we should attempt to remove them.
                    # We do it using a 'postStart' hook since this may need to run
                    # for nodes which might have already been init'ed but may still
                    # have dangling rules. This is safe because there are no
                    # dependencies on anything that is part of the startup script
                    # itself, and can be safely run multiple times per node (e.g. in
                    # case of a restart).
                    if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                    then
                        echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                        iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                    fi
                    echo 'Done!'
                    
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: write-cni-conf-when-ready
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.15.6@sha256:5789f0935eef96ad571e4f5565a8800d3a8fbb05265cf6909300cd82fd513c3d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        ports:
        - name: prometheus
          containerPort: 9963
          hostPort: 9963
          protocol: TCP
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/clustermesh-apiserver/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: clustermesh-apiserver
        k8s-app: clustermesh-apiserver
    spec:
      initContainers:
      - name: etcd-init
        image: "quay.io/cilium/clustermesh-apiserver:v1.15.6@sha256:6365c2fe8a038fc7adcdeb7ffb8d7a8a2cd3ee524687f35fff9df76fafeeb029"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - etcdinit
        # These need to match the equivalent arguments to etcd in the main container.
        - --etcd-cluster-name=clustermesh-apiserver
        - --etcd-initial-cluster-token=$(INITIAL_CLUSTER_TOKEN)
        - --etcd-data-dir=/var/run/etcd
        env:
          # The Cilium cluster name (specified via the `CILIUM_CLUSTER_NAME` environment variable) and the etcd cluster
          # name (specified via the `--etcd-cluster-name` argument) are very different concepts. The Cilium cluster name
          # is the name of the overall Cilium cluster, and is used to set the admin account username. The etcd cluster
          # name is a concept that's only relevant for etcd itself. The etcd cluster name must be the same for both this
          # command and the actual invocation of etcd in the main containers of this Pod, but it's otherwise not
          # relevant to Cilium.
        - name: CILIUM_CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: INITIAL_CLUSTER_TOKEN
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      containers:
      - name: etcd
        # The clustermesh-apiserver container image includes an etcd binary.
        image: "quay.io/cilium/clustermesh-apiserver:v1.15.6@sha256:6365c2fe8a038fc7adcdeb7ffb8d7a8a2cd3ee524687f35fff9df76fafeeb029"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/etcd
        args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        # Surrounding the IPv4 address with brackets works in this case, since etcd
        # uses net.SplitHostPort() internally and it accepts the that format.
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=$(INITIAL_CLUSTER_TOKEN)
        - --auto-compaction-retention=1
        - --listen-metrics-urls=http://[$(HOSTNAME_IP)]:9963
        - --metrics=basic
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: INITIAL_CLUSTER_TOKEN
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        ports:
        - name: etcd
          containerPort: 2379
          protocol: TCP
        - name: etcd-metrics
          containerPort: 9963
          protocol: TCP
        volumeMounts:
        - name: etcd-server-secrets
          mountPath: /var/lib/etcd-secrets
          readOnly: true
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      - name: apiserver
        image: "quay.io/cilium/clustermesh-apiserver:v1.15.6@sha256:6365c2fe8a038fc7adcdeb7ffb8d7a8a2cd3ee524687f35fff9df76fafeeb029"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - clustermesh
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt
        - etcd.config=/var/lib/cilium/etcd-config.yaml
        - --max-connected-clusters=255
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        - --controller-group-metrics=all
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: identity-allocation-mode
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: enable-k8s-endpoint-slice
              optional: true
        ports:
        - name: apiserv-metrics
          containerPort: 9962
          protocol: TCP
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: etcd-server-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-server-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-admin-client
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-admin-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-data-dir
        emptyDir: {}
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "clustermesh-apiserver"
      serviceAccountName: "clustermesh-apiserver"
      terminationGracePeriodSeconds: 30
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: clustermesh-apiserver
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.15.6@sha256:a0863dd70d081b273b87b9b7ce7e2d3f99171c2f5e202cd57bc6691e51283e0c"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          livenessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          startupProbe:
            # give the relay one minute to start up
            grpc:
              port: 4222
            timeoutSeconds: 3
            failureThreshold: 20
            periodSeconds: 3
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.13.0@sha256:7d663dc16538dd6e29061abd1047013a645e6e69c115e008bee9ea9fef9a6666"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        readinessProbe:
          httpGet:
            path: /
            port: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.13.0@sha256:1e7657d997c5a48253bb8dc91ecee75b63018d16ff5e5797e5af367336bc8803"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
