---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBHdWIrZTd5MjVSdkxKVG42aHhUbUl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URTVNamN5TWxvWERUSTNNRFl4TVRFNQpNamN5TWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUExNTBuUHhlYnZ0LzJLT2N0ZjU5NDZBcU80ZkhIcVVVNDQ0VEpPZmJucmJQSnJNNmsKK2hzMnZKemFwZTFZSGVmL3hhS3BaV3EraXQ1R25oZFV5cjdhNU9Wb3UzcVVPeE9aSEhHK3BmZXU2OVVHWjFYYwowZ2FkV3NYeU1wTUMrSE9zMFY3WUFkK0hOZkZmU0E0aG8xQUVoR3drWjdjMGZIdE5oQTF6LzNJeDdvcXFjZGRwCldzNk5BUVZFdVNWaFBUL0VZWjltVmtSckFEMTdkSko0MnNJZDRrSWNXQXFnaWJNb0RzZFJCMzFNT3h0NlRSSGEKM094RUZJd3VNeFN1VW5iMnZUVlg4MFNXRjIvekZSMEJOMHJMRDlRWGJnZnR3bC9tTG85eTNQQVZ4QWREMDRxZQp2ZnR6ZTM2VFdsckswaDhyeG5SeUFvZ1Fjd2pUV3pzZjFTcUlxd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQmJvTVNTbUhKVnduYkNDNE5vMG5IZjQxUldLTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUFFVVZhdW5VUThtWUFFSlRObnpjL2QxQXpaR25NcmZNMEhLSUloRHJrT2RwT1VaMFF1S1V5ClY0TTE2T1Jub0Z0cGJxUll5aEY4TWdreFd6SndCS1IvTlM3UlJwZnE0RlY1SnAxelZwZUxkL21nMXZMSjJUNGIKR3NIVFV3SlkrVHRvNUtPcHhwN1MvUzJZdnpUaERUeEgyYWFIbUFtNW5Pb1JEa1VYdG9nYTFVV21JQUlXY0plWQp0QUE1QWNDNjVKYlMvbXRneG9jY0JIbXdUYUtNMGJwTSsvQVhxTHJuTkdpZ0I2eTJiZzVnU2dpNnNsemxGbStJCk42YjVVcElRdkNzTVpETjhwVTgzUXFpL3JWU0ZYbmNRaVF2YWxZOTM3N3ZYRnpJc0ZHRElsUFZHekpReGJnTFkKUVNSUW42bHRHdjBlWHB5SVg2N1VoWjVlRVZtejV6aTgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBMTUwblB4ZWJ2dC8yS09jdGY1OTQ2QXFPNGZISHFVVTQ0NFRKT2ZibnJiUEpyTTZrCitoczJ2SnphcGUxWUhlZi94YUtwWldxK2l0NUduaGRVeXI3YTVPVm91M3FVT3hPWkhIRytwZmV1NjlVR1oxWGMKMGdhZFdzWHlNcE1DK0hPczBWN1lBZCtITmZGZlNBNGhvMUFFaEd3a1o3YzBmSHROaEExei8zSXg3b3FxY2RkcApXczZOQVFWRXVTVmhQVC9FWVo5bVZrUnJBRDE3ZEpKNDJzSWQ0a0ljV0FxZ2liTW9Ec2RSQjMxTU94dDZUUkhhCjNPeEVGSXd1TXhTdVVuYjJ2VFZYODBTV0YyL3pGUjBCTjByTEQ5UVhiZ2Z0d2wvbUxvOXkzUEFWeEFkRDA0cWUKdmZ0emUzNlRXbHJLMGg4cnhuUnlBb2dRY3dqVFd6c2YxU3FJcXdJREFRQUJBb0lCQUR3UHV1OElWSXBIT1BzTAo2dEN5UzZ2WHhSV0xsR0xDdGFZclJ5S3VkTHNlYWYrSlVNdWE2UlNCWFNiN2hxQk9FQ0d0dmlKU0tlSGxLU2JBCnVRNEJQRmltenhYcWY0QTFaV0ZYRGhTTmVseVhhc0UrV2RUbm9zMjJkbEZBUW9PVE5ZRGRPcTdLNVk5UlBZbUUKNWpub0FGb2pCY0VlZDdCMWFKSndiTytyajkweW9FTHZTUUtZWVlXTjhib21RYlFqR3ZheUVvUHphTHo5bUtlUAorMW05RVpPRkE2Y3pIZjZTNXNCc25TUGpYdnpSd0hBSTVURkZheFZWNWdSTnVBVGVLdjNlVXZ6RTFNRTM2cUhaCmJNdnRnRHFhdE9wNlYyaWF1THAvUWtDREtkelVNU0x3bExYRDlFd0RzNm4zT3FCNVQxMTlXNWsvbHpOZnZUdjQKbHF1anlZRUNnWUVBK2dVRTlFdlRoRGpHUzFvbi9KOGF0RGhEU3JxcmM5Y3oybndqa1BHZXp6b0ZJdFQ2a0NjUgp3cmtpN2M0TWgzcTBJcU1FMHhHYlNvNEtyZHBMLzgxZTUxT0k1UHhuSzBWZ3VtSHBuekVWL2hTakVwZVVheitlCnN3Q0NWbUhxbGtyWEx3QnRsTGRKYVpEUVFnZnRsaGY5TWJHRzBmbXpTdUNTME40N0htVEdiY1VDZ1lFQTNNVnoKMVE5bzZrd3VDMjViNko5c2JIWmJ3UnE2cXFWNG5DKzY3TFhkWHdjTlR3eEhhTUxlekF3QTNDWmN3b0ZZekJXZApjcXh0K0FkSEFlTHdxNUVmZDFsamhNSUhrNUh3Rjg1S3ZGNDh0Ulc4emdVaEpEeC9xckZxdDRVS3ZMbWJsSnpMCkNlL3B3N0RvTlU4aCtydWw1OUFZSUlDMWxDdWF6QWNnZ0Y2K2M2OENnWUJnSEJmWWRXR2MvVm8wMHpaMTVRK1YKNGQ3MFZpZmNnd2lhMzRlb2kwbGFMZHFWbGp1dnVHVWFicUxmdVlxVmRmVFRMOG1GL2NtdGNrYm1wL2o1SDVCdwo2bXJBWThxaEZxMWxXSWcvT3RaU2NzcHhOalhHdUpFZ0RIME9DZHZzNUY0dDRrTTluT3VxbWhHRW9KbVRUaXQxCnMrRzR5LzFCTm0wWnY2UUlQZ01OWlFLQmdHamtuODVoVGZYVVVDUTZRUXpiZ2taZVRlWUg3eHpaRmQ4UGhuNmwKUWhLK1pRSmowU0hqUkx3cUQ5YUptNVVHbzh3RGtSVkUrOUxXa2xSQklSeEREWEpGVkZWbFl2Z29aS3pLNVJOdQpxdVZXK0tmaUpBYjFmNnI0Tkw0UlJqSzQ5VVM4NG5OTVBBTXdjSU96bjI5ajdNV2hSM1ZaOGV2K2M4UHd0dTZICkZYSWRBb0dBT1RNMk5lNFFhNkROMkxxVEYvNFZ4ZFFEZTNmajA5WTVoaUw4MngvT0F1ZHBvTEpmQ3ZZRmsxR3cKWlBkak4vT29sd1pSandSRW14a3JWWFUwYm5wc0plUWVEdndwV3VTYzhwQnlqUDJOWnUxNVZHVUd1aG1rVlRuego1YktYdzN3aU54Nkw0aXJEL3F0VStwVWRQaVhUdXh1WXRHaDFTYUJlNEJ6WUtMbi9iM289Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/admin-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBHdWIrZTd5MjVSdkxKVG42aHhUbUl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URTVNamN5TWxvWERUSTNNRFl4TVRFNQpNamN5TWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUExNTBuUHhlYnZ0LzJLT2N0ZjU5NDZBcU80ZkhIcVVVNDQ0VEpPZmJucmJQSnJNNmsKK2hzMnZKemFwZTFZSGVmL3hhS3BaV3EraXQ1R25oZFV5cjdhNU9Wb3UzcVVPeE9aSEhHK3BmZXU2OVVHWjFYYwowZ2FkV3NYeU1wTUMrSE9zMFY3WUFkK0hOZkZmU0E0aG8xQUVoR3drWjdjMGZIdE5oQTF6LzNJeDdvcXFjZGRwCldzNk5BUVZFdVNWaFBUL0VZWjltVmtSckFEMTdkSko0MnNJZDRrSWNXQXFnaWJNb0RzZFJCMzFNT3h0NlRSSGEKM094RUZJd3VNeFN1VW5iMnZUVlg4MFNXRjIvekZSMEJOMHJMRDlRWGJnZnR3bC9tTG85eTNQQVZ4QWREMDRxZQp2ZnR6ZTM2VFdsckswaDhyeG5SeUFvZ1Fjd2pUV3pzZjFTcUlxd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQmJvTVNTbUhKVnduYkNDNE5vMG5IZjQxUldLTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUFFVVZhdW5VUThtWUFFSlRObnpjL2QxQXpaR25NcmZNMEhLSUloRHJrT2RwT1VaMFF1S1V5ClY0TTE2T1Jub0Z0cGJxUll5aEY4TWdreFd6SndCS1IvTlM3UlJwZnE0RlY1SnAxelZwZUxkL21nMXZMSjJUNGIKR3NIVFV3SlkrVHRvNUtPcHhwN1MvUzJZdnpUaERUeEgyYWFIbUFtNW5Pb1JEa1VYdG9nYTFVV21JQUlXY0plWQp0QUE1QWNDNjVKYlMvbXRneG9jY0JIbXdUYUtNMGJwTSsvQVhxTHJuTkdpZ0I2eTJiZzVnU2dpNnNsemxGbStJCk42YjVVcElRdkNzTVpETjhwVTgzUXFpL3JWU0ZYbmNRaVF2YWxZOTM3N3ZYRnpJc0ZHRElsUFZHekpReGJnTFkKUVNSUW42bHRHdjBlWHB5SVg2N1VoWjVlRVZtejV6aTgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lSQU44Z1I0TEpqSWdQSTRtaHVYcHp1Qzh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URTVNamN5TTFvWERUSTNNRFl4TVRFNQpNamN5TTFvd0V6RVJNQThHQTFVRUF4TUlZV1J0YVc0dFl6SXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzN1dWViVjZtSUErbE9iYTBTdFRSWHNHWjBOWUU2TFZKSTVlT2JieGltR0lFVXg4b28KTkRyRDhKbHZKZHRmUmVQcHRPRWRJVm13UWp0WksvOVBKczNacGxlcEhicjRLak1BRGFraDRFaWV0VVZDWUhTSQpRd0xIdXo4WDU0Qjh5Um9SNGFaMTlHYlIxbmVwWlVLZk9FWVoyY1hBdXRmTTd3NlRTZENXNEVKckFtbmxraENECjNXZWttMUFHTHV4QWt6b3RQbWd6eVdqU3hGSXhGMzdZeGtYSmJXTGRQQnFwNXN6K3JyM2htM21ncVRrMW9TbVcKOGFxc2lZdTB6TEJtaXRZaFFZcXJlYmlRUUZFZHF3UG84NFNnS2VRcCtmVFFOOFlEZit5T01qZUlPYVZFSVBzQQo4azB5VlFYVmk5bUJrMHdvZm1TVHdCeGdXZXh5aDhDVXJSRnRBZ01CQUFHamRqQjBNQTRHQTFVZER3RUIvd1FFCkF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXcKQURBZkJnTlZIU01FR0RBV2dCUVc2REVrcGh5VmNKMndndURhTkp4MytOVVZpakFVQmdOVkhSRUVEVEFMZ2dscwpiMk5oYkdodmMzUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSDduVUxpa3JROEpJbE9XV0FJREdkOHl1TkNQCmNNalRUYmtUbGdqK0I4WDVQNGNUWjFaaks0VmZCckc0WUFYekxHT25jTFg0eHRuRkswdkFacS95VHVPR2RSMkcKakhkNFY1eXFsbzErOHovYitvWjBWeW9HU2JhY1FjeFRRWC80YkduNnQ4cnpjV0JFbkoySWtzdFltTzlnZjVQdwpGclJIc25WTGlVQTlwdE9aUS96OTZSSW9yV1JVVHcvRXhWeXVzOWZoS1B3WUJyQStXUmt0NlIyLzA1Qi9sZ3JOCkhhTzdRYTJTaVN5MkxTMlMxZ2tKUXo0TWlTVFhodFhRZDQ1OXpkWUdwWHA3cDFDc2QyRlgxY1hZSTRWcUE5d0sKd29kRmIyVnMvQm5QdkljMTFpVVY0MEhPb2dXaERjRDU3UEw4YTBsbjFjZFI5OW8wR2FnbzgzRWRSYms9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdDdybm0xZXBpQVBwVG0ydEVyVTBWN0JtZERXQk9pMVNTT1hqbTI4WXBoaUJGTWZLCktEUTZ3L0NaYnlYYlgwWGo2YlRoSFNGWnNFSTdXU3YvVHliTjJhWlhxUjI2K0NvekFBMnBJZUJJbnJWRlFtQjAKaUVNQ3g3cy9GK2VBZk1rYUVlR21kZlJtMGRaM3FXVkNuemhHR2RuRndMclh6TzhPazBuUWx1QkNhd0pwNVpJUQpnOTFucEp0UUJpN3NRSk02TFQ1b004bG8wc1JTTVJkKzJNWkZ5VzFpM1R3YXFlYk0vcTY5NFp0NW9LazVOYUVwCmx2R3FySW1MdE15d1pvcldJVUdLcTNtNGtFQlJIYXNENlBPRW9DbmtLZm4wMERmR0EzL3NqakkzaURtbFJDRDcKQVBKTk1sVUYxWXZaZ1pOTUtINWtrOEFjWUZuc2NvZkFsSzBSYlFJREFRQUJBb0lCQUNXUStib3hlbUJ0TEU3MAo3ZVpkVm81M2F2dG4xVHhuOStNZjNpSHgzVUJZMGt2RmJmZzZkYW1La0ZUQmtORXlJUit2OURkWWtsWVB0TUxPCjFDMEM2aVFPZHU0RlBpMXZzMjNYWFRXbi9qRTFMeXdiUExoL3V4bkxsMkx6MnJtcEJNT1ROODMyWXUrVXduTEkKV1k3a21yQytia2l4NjEzam96OUtZSFA0OXB1YVVkdjJNdGtWS1dOM1k4NFV4Ky8yQmd4bnBGUUZLQjg5azB2dwp4U1JJS29xVDRmcWpnYkJyaHFURDZxN3NnY0VDRmo5bmNMTHBGZkNaMWwwR2hKZmJQeWxrMUljYzVpZXhyWWpkClFwOVVPN3pmRjRucHV0WEdhQ0tMMHJaYXRhRHlueWxLOHltMVVxcnF2eDRXaUV2L3ZoOERROGFnTDJWSnFmZE4KTnFkL2c2RUNnWUVBNTRwQmVaQTNtVnRVTTVNMmIrd0FNS1VXcmJ2YkpCbXhvaUMrUVp6MlpMOCtxRjR4RmhkaApGZUx3cy91R3VPZG44SlRVL1d5YWtxNGp3QmxzT09ISkY3bnlJQURTeWFEOGJCL0VkZDlZNkZ0NW5UV2hHQVpxCkl0QVhzTWJNTmxlSWJTRWR6TE84bW5WRzRab1ZGbFB1eEpPNHk1eENjZmFBSU9CbXpSK1M2Tk1DZ1lFQXl5T3UKZEI1eEI3MlNLdDB1S3p5ZU8zWjRhV1ZCb3o2SzY4c3dhVTZDYWUyaDRURWxFZkpuVVo2c2VSdmxEaHNtUHZpUgp5WXFYdWg3Tmx6UzdFVTF1N080SS84SlFldjlROEVES0Q0MzdUQUltcEFNbDRKNWZ5ZG1kN21jQ0lIT2hLMkJwCmZ1andyNFk4a0pPeDhOUHRaRXpDZk04UkNZYVFTNkQ0THRJUHRMOENnWUVBcG9Na0lTTlpDTDNJYVNyV2ZGangKcmdvYnJDZXNLbU1iL3llakM1YXhEN1VGZjVuMW5SaUZKbk5GZlhwRzRkVHhSL0FRMkl2eEFjbWdSamRDUUFvSQpUenJYYUxLTzVKZ1UwRUZzVFFTcGNMalFWZ0hLYjNlMWZvRytkOUFQN29pMndSeU96TGI1ek83SVlkZ29rQjBlCldscU9ERWU4OVM0NzZPallwVzJ1ZmljQ2dZRUFtQXJRM0NDY3dRcG1pS2FiazhqL05jcHFQWmlJRkVNUGY0VEoKYTBoVDNDejhhS3g3N243Y1RmN1JZS1E4UU42Wk5iQ2VqWmFxRWFoVWdNUDY3K3hoQmZ6engxb05Hc0pXTmp5SQpBRFJvem04ZHRNeVdZUlNvNVU5NElhUC90NEpVTXo4cU5zN3F0clZtUjJBRVl4aDhLZ0k1MzJpc2U5QzMxNk5YCm50T2k1Y2tDZ1lFQWhtRSt2eW5QdXFYUXZTMnR2K2o4U3UyLzVOREJ4THFNVWZHOUNNM2xvb1Q2akJXUVB0ZzUKZTc5U2FrNzZMRmMzcVIxMUhFbDJuVTJaNGFLbkNpNmRrbFRSSVlFam0xdldIWUZGSVdsM1Nuak5PMzZUVVRpZgpERm15R2hVZm1OMlFLVWlTT0l6blRnRVJJQ01kWWx5dmlhV3BzRGNLc1lDa1U2RlBGOGtDUjVJPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/remote-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBHdWIrZTd5MjVSdkxKVG42aHhUbUl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URTVNamN5TWxvWERUSTNNRFl4TVRFNQpNamN5TWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUExNTBuUHhlYnZ0LzJLT2N0ZjU5NDZBcU80ZkhIcVVVNDQ0VEpPZmJucmJQSnJNNmsKK2hzMnZKemFwZTFZSGVmL3hhS3BaV3EraXQ1R25oZFV5cjdhNU9Wb3UzcVVPeE9aSEhHK3BmZXU2OVVHWjFYYwowZ2FkV3NYeU1wTUMrSE9zMFY3WUFkK0hOZkZmU0E0aG8xQUVoR3drWjdjMGZIdE5oQTF6LzNJeDdvcXFjZGRwCldzNk5BUVZFdVNWaFBUL0VZWjltVmtSckFEMTdkSko0MnNJZDRrSWNXQXFnaWJNb0RzZFJCMzFNT3h0NlRSSGEKM094RUZJd3VNeFN1VW5iMnZUVlg4MFNXRjIvekZSMEJOMHJMRDlRWGJnZnR3bC9tTG85eTNQQVZ4QWREMDRxZQp2ZnR6ZTM2VFdsckswaDhyeG5SeUFvZ1Fjd2pUV3pzZjFTcUlxd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQmJvTVNTbUhKVnduYkNDNE5vMG5IZjQxUldLTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUFFVVZhdW5VUThtWUFFSlRObnpjL2QxQXpaR25NcmZNMEhLSUloRHJrT2RwT1VaMFF1S1V5ClY0TTE2T1Jub0Z0cGJxUll5aEY4TWdreFd6SndCS1IvTlM3UlJwZnE0RlY1SnAxelZwZUxkL21nMXZMSjJUNGIKR3NIVFV3SlkrVHRvNUtPcHhwN1MvUzJZdnpUaERUeEgyYWFIbUFtNW5Pb1JEa1VYdG9nYTFVV21JQUlXY0plWQp0QUE1QWNDNjVKYlMvbXRneG9jY0JIbXdUYUtNMGJwTSsvQVhxTHJuTkdpZ0I2eTJiZzVnU2dpNnNsemxGbStJCk42YjVVcElRdkNzTVpETjhwVTgzUXFpL3JWU0ZYbmNRaVF2YWxZOTM3N3ZYRnpJc0ZHRElsUFZHekpReGJnTFkKUVNSUW42bHRHdjBlWHB5SVg2N1VoWjVlRVZtejV6aTgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRVHF2ZGVRT1VwWjBOdmxUcHo2S1JIREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOekl6V2hjTk1qY3dOakV4TVRreQpOekl6V2pBUk1ROHdEUVlEVlFRREV3WnlaVzF2ZEdVd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFDenVGaHRiRVRQcUxoY2h3aWZSeW9LQ1Y3TUNqS29IVVVuYUQxNDBua0pEbExGbkw0c2pJb1gKUk1kdjE3Wm5MYlNvRUVwdlVYTzVtcHFkRXM0Mk8wRnZxOEtVZmdNOWNUMGJvR0NRclRjNE85aUtUTWZ1T3UwSwpUNUNlZXFOaWdqNFdvUU44d0JDTXpzYTBWM3hTVmRWaFRoUGNHZUV1bUdPaDVjSmFpVEpxQkFnaSs0OWFWMkFFClRzWmRjeElNc294SnBoMjR5cVlKSUlZNUVuQVBWM0w5aG13d3VlaXlrSEgwQVJTdEFnWkV5eTllS2h5L2xaNWMKRmZvMStLWkc1RlJOVGg2NE9ocFArWHlVUGQwdmE3ZTNySkZXd3p2d3ZhdGJiTWRpdERMU0pVQkNCUGxjNWNHZQpDdmZ5b0NzNk5GN3Q5RktDTXlPbnlhbEdFanJ6aldMdkFnTUJBQUdqWURCZU1BNEdBMVVkRHdFQi93UUVBd0lGCm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWYKQmdOVkhTTUVHREFXZ0JRVzZERWtwaHlWY0oyd2d1RGFOSngzK05VVmlqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBT0dQd1pKd3Q3QzJ1em9TNGVibHpYK0FJMWw4TzlPZnRTR29lWHYxOXBwY29naUYyZDVtSkd2TzFzcTF4CmZJby9jMlB3VXNxT29QY3BHWXQzTkkrZUJrUGRCbDEzNnBsMGhuQ1NuNm5oSDlSZU4yZHpuT3FRRStpa3JrcTkKUUZwanpOMk11VDMrU2tRMFRrYzA2T25MaVA4QzRMb0xaOW9NMWNkbVBNREU3WUUzMTZWS0RlWUEzYVBvTmt6TQpSUXdLcjNSS2c0bHc2ZTlNTTR5cTM4UmRvOGMvWFQ1b2xwcUw4K2w1akI4YkJNYzJ6anlnWDVyMGFrQzA5NmE3CjQzM3JwaTJLWFk4YWZ0bnQyWDhTUXM4R21sUDZsMVlKaDNuRFo0N0N2MjRYS3BRQ1EvTkhnOGplajR2dzg2RlUKY3U5eWVnYmJNR0V5bWNURCtVdzkxUC84b2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBczdoWWJXeEV6Nmk0WEljSW4wY3FDZ2xlekFveXFCMUZKMmc5ZU5KNUNRNVN4WnkrCkxJeUtGMFRIYjllMlp5MjBxQkJLYjFGenVacWFuUkxPTmp0QmI2dkNsSDREUFhFOUc2QmdrSzAzT0R2WWlrekgKN2pydENrK1FubnFqWW9JK0ZxRURmTUFRak03R3RGZDhVbFhWWVU0VDNCbmhMcGhqb2VYQ1dva3lhZ1FJSXZ1UApXbGRnQkU3R1hYTVNETEtNU2FZZHVNcW1DU0NHT1JKd0QxZHkvWVpzTUxub3NwQng5QUVVclFJR1JNc3ZYaW9jCnY1V2VYQlg2TmZpbVJ1UlVUVTRldURvYVQvbDhsRDNkTDJ1M3Q2eVJWc003OEwyclcyekhZclF5MGlWQVFnVDUKWE9YQm5ncjM4cUFyT2pSZTdmUlNnak1qcDhtcFJoSTY4NDFpN3dJREFRQUJBb0lCQVFDSEp4bnc2QnZ6WW5tSwpzODNySWpSZUtkL05aOW5paldpRkV5SXZhM0MwTzc1SmQrK1lSdlJPUFY0U0lORytWQ1BvdzUrR2lXV1M3YzVhClUxc2FjNE5wUEd6dkNMamRDdnllZXdSRHFNKy9EVnB4M3YzM2pQN1g0eS9wem1aeVhXbmQwS1p6dVdoNHk4T28KdWFYM3NTN3ZweXpPTi9RYysyTHB6SVJWVzVtN0dSdDJockJWZkRLS2FiSDhtbnh6VXhzZ1Y3WVZONzRFRFROegpSZ3ArNXhmQnl6Tzk0WVB5MGRMa0RqbEsrSFdIREU1c00rRjF4Ukk3U0psQUExalZLak03UnU4aS85em83Rk80ClQzbThOUFJmU3R6aDg0MjZHS0ZXVEpYYmt6NG8wbWdlLytpN1dqWGZnWnYraEs1U3pDS0kwWTh6NWlzL2pkNlgKRzUyTUN6d0JBb0dCQU1ZV1hhTnNKMEo3SFM3dXRvdGR2WlBYY2Q3TlFtNXRmK1VqcldzNXYzVVUyMXdIdFVxcApKcmV3RkVuelI4OGorUmw3UlVhZXhQVkVlcnp3dFpXV2R6cll3YUp0Z0YwVmxFNmJUcnRzSGVTNXdZSUsvQ0x2CnV5SkxVSGRIVFNMZW1iTkRGU2NXNVhNN1phaGRjaHk2OFhuRmIxVFZIcUx0VmVOakhsU0sycXp2QW9HQkFPaEQKVFN3TmliREpDN1o0MWp0NHBJVG9UcWE2WW43Q25WVmROcDFKWmFmbHU5RXNpZFg3aTZNcGJGU1VwRHhiTUlwKwp4Y2xyYXZEaXZCY2kzTVBDWGZZVWF0c0pMeVFHSTdwMEd1SVAyb3RvZ2o1V0cxeGxkYzlNNGxGbm4zYVJ0VHd5ClhYMVVmbGdjU1dmcGZXdTdYMCt5eDhJUWJkcWpOUTBrU2wyajVLb0JBb0dBTWxXS2s3VXV3TERoK0lRRjlLSHMKUXozeW5HZlI0cGVHY1NaQXNjZHB4QWw1dUFmcFpFQlpLMEhkMWZDd3BZMEJoaDBSdkdFcHNSMG1odzR2UmdTRwo1WGdncy9KWk5NMy84bjE2WXh1VStRTE9qZ25XaWRZYTJoc0RKbHdDMk1KeGtlQ1E1bTdsL1FMeDBQZDF3S0VzCkxRSWpTUTRpaThuOUVodWtvRnpzTmhjQ2dZQms1Y2ZDbVdiMVM0RXhGYkZMU0k5L3hVTlZucVpuRnJndWV6M2MKZWlRVkdmSExYcVBLTjJwanlQenNpVjRIY2ozV0RGaHp0WnhSWk0zODV3SXNjR1ZOSDNXRURhdFM1Ty9rY2Nlego2TnN4c0liVCthZ05MVzVPVGNJTFJ3NjQvWGRUM1RWTDJzYkFGQm0zY0hFeHVjWWY0elJ3RTU4RldkMFVCbTNmCjIvRGNBUUtCZ0hkcTkrcGJEZk10aUZHcktsb2xtQ2NQWEZnb3RLUHhtNVhlMmFNcXYveWF5QzdPcmUvZU5HTGoKZU02VWpVWUlpU1l2dlpIU3RYVTAvMEgvMS9zNVpXWjJsQUtHSzdSdnl6MjFUUGdBVXBCZGY0amhDeDR0ejRKZApnREN3VkU1UU9xejJlL3NTb2crVjBVUTFzNmV6TjN6dkJPY0h1eG56c1RlaFMvc2kvUm1OCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBHdWIrZTd5MjVSdkxKVG42aHhUbUl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URTVNamN5TWxvWERUSTNNRFl4TVRFNQpNamN5TWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUExNTBuUHhlYnZ0LzJLT2N0ZjU5NDZBcU80ZkhIcVVVNDQ0VEpPZmJucmJQSnJNNmsKK2hzMnZKemFwZTFZSGVmL3hhS3BaV3EraXQ1R25oZFV5cjdhNU9Wb3UzcVVPeE9aSEhHK3BmZXU2OVVHWjFYYwowZ2FkV3NYeU1wTUMrSE9zMFY3WUFkK0hOZkZmU0E0aG8xQUVoR3drWjdjMGZIdE5oQTF6LzNJeDdvcXFjZGRwCldzNk5BUVZFdVNWaFBUL0VZWjltVmtSckFEMTdkSko0MnNJZDRrSWNXQXFnaWJNb0RzZFJCMzFNT3h0NlRSSGEKM094RUZJd3VNeFN1VW5iMnZUVlg4MFNXRjIvekZSMEJOMHJMRDlRWGJnZnR3bC9tTG85eTNQQVZ4QWREMDRxZQp2ZnR6ZTM2VFdsckswaDhyeG5SeUFvZ1Fjd2pUV3pzZjFTcUlxd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQmJvTVNTbUhKVnduYkNDNE5vMG5IZjQxUldLTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUFFVVZhdW5VUThtWUFFSlRObnpjL2QxQXpaR25NcmZNMEhLSUloRHJrT2RwT1VaMFF1S1V5ClY0TTE2T1Jub0Z0cGJxUll5aEY4TWdreFd6SndCS1IvTlM3UlJwZnE0RlY1SnAxelZwZUxkL21nMXZMSjJUNGIKR3NIVFV3SlkrVHRvNUtPcHhwN1MvUzJZdnpUaERUeEgyYWFIbUFtNW5Pb1JEa1VYdG9nYTFVV21JQUlXY0plWQp0QUE1QWNDNjVKYlMvbXRneG9jY0JIbXdUYUtNMGJwTSsvQVhxTHJuTkdpZ0I2eTJiZzVnU2dpNnNsemxGbStJCk42YjVVcElRdkNzTVpETjhwVTgzUXFpL3JWU0ZYbmNRaVF2YWxZOTM3N3ZYRnpJc0ZHRElsUFZHekpReGJnTFkKUVNSUW42bHRHdjBlWHB5SVg2N1VoWjVlRVZtejV6aTgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURwekNDQW8rZ0F3SUJBZ0lRQWZqeWlDTWt5QTUwemZZcHp1TjFRVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOekl5V2hjTk1qY3dOakV4TVRreQpOekl5V2pBcU1TZ3dKZ1lEVlFRREV4OWpiSFZ6ZEdWeWJXVnphQzFoY0dselpYSjJaWEl1WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeDZyOTJJcjF5dWlrZmh5cFE3eFIKeG9ibkVFM3kvMWh1cG85MVc5UkI2V0N0K3dEbEduUENnMC81MTB6WitBTVhmeEg1cjJLVE9DWVdyN0huSjZOZQp3K2tIS2lKVFVsUjQ0QURDdlJRTUYrWkI4M1VySUNVU1EyMlB2dU5sbUZPdlF4eXpsVFNLQitsVExqU3BDTXJXCk5IdmVGYmJVejVrcE9ESXNJQzA1Y251Z3BBTlNZK290c1FWYlE3OXEvZlB5em55Y2pDT3lVbFVoNVoxSHNsZWoKQkNhZ0NTazdYMFYxSEpDWTdFYWc3NEdXNUY3aWR0QnlXK1NoSm1rTmtWejFoYjV1eWwvbkpwdFVFV2w4MzQzUApqdy9hUDJYcDlwUlBlNTVydVpPSEZJek84bGtSbENobzk0dkdoVDV0MjQ0dUQ5N043QmFYTENZTFQ3RHF6bmh5CnVRSURBUUFCbzRIZU1JSGJNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JRVzZERWtwaHlWY0oydwpndURhTkp4MytOVVZpakI3QmdOVkhSRUVkREJ5Z2g5amJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXVZMmxzCmFYVnRMbWx2Z2hBcUxtMWxjMmd1WTJsc2FYVnRMbWx2Z2lWamJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXUKYTNWaVpTMXplWE4wWlcwdWMzWmpod1IvQUFBQmh4QUFBQUFBQUFBQUFBQUFBQUFBQUFBQk1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUMxV0tqT0hnSUcwZ01KakZtSk5HRlJYbHBTUGFRMWRQVkVFM09lQnE5cldDL2tEdkJuCnVUTzVYRXZRVUMwb3FCeC9hWmwwc2dLY2UraURYL0xTS3VTWWNwbE1aSno0TUR3dHc5SkhuKzc4S3B4K2VKd3AKRTJOWUNCUEtQOFJTUVB2ZEJCTU1vY05hM2tFbm03TTlrT1F0NHVPZVhhK2tBcHNGZ3dKVVc2dWVXTzg3NTVocgpHak1yUU9VbDBVeE4wcjhQUlRidVJaVXVURElvWk1ZSndidk4zRFArQm9hS1JRSDJvaExOV1VjK1hDRExBSXFHCkZ1VjZoRE1YNlRqY2QvOUhWMDZwYm1XNjNMUWdYQ3dTTmNqL3g4L3FTUFFiaXlzZ0dHNHBLeVI3UW5qWHpyd00KL2RXUlhvWVFoZXZ5dW4renFVTTB1MWVjRHppQU1nK21FTkNnCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBeDZyOTJJcjF5dWlrZmh5cFE3eFJ4b2JuRUUzeS8xaHVwbzkxVzlSQjZXQ3Qrd0RsCkduUENnMC81MTB6WitBTVhmeEg1cjJLVE9DWVdyN0huSjZOZXcra0hLaUpUVWxSNDRBREN2UlFNRitaQjgzVXIKSUNVU1EyMlB2dU5sbUZPdlF4eXpsVFNLQitsVExqU3BDTXJXTkh2ZUZiYlV6NWtwT0RJc0lDMDVjbnVncEFOUwpZK290c1FWYlE3OXEvZlB5em55Y2pDT3lVbFVoNVoxSHNsZWpCQ2FnQ1NrN1gwVjFISkNZN0VhZzc0R1c1RjdpCmR0QnlXK1NoSm1rTmtWejFoYjV1eWwvbkpwdFVFV2w4MzQzUGp3L2FQMlhwOXBSUGU1NXJ1Wk9IRkl6Tzhsa1IKbENobzk0dkdoVDV0MjQ0dUQ5N043QmFYTENZTFQ3RHF6bmh5dVFJREFRQUJBb0lCQVFDNzZUTUp6bzNRTHU1UQpPYzBiRUdxdHVseFB2ZXlKWDhLVFFzUWlianF4MXVrbUp3dDJ2NmM2U2RSS1NldUJPL2VyQVZISk82NXQwM3JhClUwWEd5anZ2aUtuVGY0YUhIelM3TER3YUVubm5MQzY1WDNYOHhLYlJpcFVVQTVLanIyNXNiT0NkOVZwS1k4NkMKMTlDVms3L1FtUnJEdU5QRHBOTmtMZVBWVEhxYVFCRm4va3RNMHJRckJwTmNKM2FTcDFmamlpQVloTm41YkZzeApXdlpCU3NZNkROcWN2RUN0a3N6cVZDU29JYWd5aFZUSnZOTzFJeExrcUwvTXE1T1lyRzJvRkMzSnVVTEx2N1FoCllqZWVNZkc1a2dVT2tEbW1HWFNEamI2N09nTFc4NFBYM0N3N1M5aE9YNVdCc3JtcmVuTWRvTG14WGJTZm9iV0MKaGhGbFh4WFpBb0dCQU5scTgvZENlZ2Vyb2JOZ1gvM0FwcEsxMFBZV203Qi9adTRwaHRLVElwTEkwL0s4SzRrQgpmZ3ljSGJid1V2dkMwaGQ5bkZobHpEOVJHaUNCa1FlNTQyUXlaM01idUtSSTdldWdiZEIyTi9xOHhVS3ZDbDNUClg5c3VlWVgwbzNOYXQybDR0UTg1N1BMeHZzc2dZR2xISFZzdDhrLzBhMUJ4aG5tNWJ5bFNtSVkvQW9HQkFPc1oKcnNxVDNJcUtoMTJxRVBwQ1prYlM3SWlqZTQvRjN4RUZPRytUWHFOQUhkWlRyWndERU5yaEJTL1pIRUx5TENqSQpVU09samU2dy9ZbEhrT3dReFAybFA0aHBtWTNGaE5VVEIyZzlrS01mMDA5USt5bGNSM3BoeFgvTlNTUGVJaFp4Ck53T3NzQUxlS2Ixblg0MVZKTXlTdzdIUTlIRmlHU0o3cDBFdTUza0hBb0dCQUxxckJVUHBvM1FxZSs3U2RCZ2QKNitaU2pGSjlIcmJ1NjZUWHFwWHBGZW9JMjFDeEZuL085RFpIWTR2SjByV3RrMHZ2NE9oVW5vUk9VYXhQRWdJYwpLNHUvYXVwOWhvNG12MzlxZ2w1VTRjTTVoL08wN2FXWThkZnhrd3piK2VuMG5UekZFazg4WUtCRnhwWUgrajdwCmU5N3BGLzVsMEMyRkN2dy9wWjFJK1FOcEFvR0JBT2RMVVNlRDZNbDBHRkVSNjdvS2NVemtYa2pmYmNTNHl3aVgKdGpvdkprQTk2QnpnSGtFSzB4NURtekxEeW9ZaWMwZDhMRGVCdk8xRHUydS91TmhHZDBlRHQ4bWcrcXo3MGY4Kwp4VjdNa3V1cGQ5N2tzUFMwRUs1YVdrK3R5M002S3hjaE14cXVYa3V6L2lTVSt2QzAvNHMwS010YjQrRll2Wm1yClJaVmZhK01wQW9HQUpiVURZcUlseGN0RnhsUjAvZUE4akVXTk13Z3dRNWIyWFc0RldTTW5HT0U1ZEdzcWtYb00KTDRjcy9EdC9NYWROREE2YzdSMVVzOHpoTHFlL2dFM1JzNFQ4NTZoOXJOZGRzclVKR1l1dUI4Q2hVc2V0TzhlOAo2V1FzM3VDRXJKc0F3K1NrT3cxMjlsODFvaHpjODRaRjRDN2x0ckZ0MHMyNnpkcDhzdVhBbUxNPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBHdWIrZTd5MjVSdkxKVG42aHhUbUl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URTVNamN5TWxvWERUSTNNRFl4TVRFNQpNamN5TWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUExNTBuUHhlYnZ0LzJLT2N0ZjU5NDZBcU80ZkhIcVVVNDQ0VEpPZmJucmJQSnJNNmsKK2hzMnZKemFwZTFZSGVmL3hhS3BaV3EraXQ1R25oZFV5cjdhNU9Wb3UzcVVPeE9aSEhHK3BmZXU2OVVHWjFYYwowZ2FkV3NYeU1wTUMrSE9zMFY3WUFkK0hOZkZmU0E0aG8xQUVoR3drWjdjMGZIdE5oQTF6LzNJeDdvcXFjZGRwCldzNk5BUVZFdVNWaFBUL0VZWjltVmtSckFEMTdkSko0MnNJZDRrSWNXQXFnaWJNb0RzZFJCMzFNT3h0NlRSSGEKM094RUZJd3VNeFN1VW5iMnZUVlg4MFNXRjIvekZSMEJOMHJMRDlRWGJnZnR3bC9tTG85eTNQQVZ4QWREMDRxZQp2ZnR6ZTM2VFdsckswaDhyeG5SeUFvZ1Fjd2pUV3pzZjFTcUlxd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQmJvTVNTbUhKVnduYkNDNE5vMG5IZjQxUldLTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUFFVVZhdW5VUThtWUFFSlRObnpjL2QxQXpaR25NcmZNMEhLSUloRHJrT2RwT1VaMFF1S1V5ClY0TTE2T1Jub0Z0cGJxUll5aEY4TWdreFd6SndCS1IvTlM3UlJwZnE0RlY1SnAxelZwZUxkL21nMXZMSjJUNGIKR3NIVFV3SlkrVHRvNUtPcHhwN1MvUzJZdnpUaERUeEgyYWFIbUFtNW5Pb1JEa1VYdG9nYTFVV21JQUlXY0plWQp0QUE1QWNDNjVKYlMvbXRneG9jY0JIbXdUYUtNMGJwTSsvQVhxTHJuTkdpZ0I2eTJiZzVnU2dpNnNsemxGbStJCk42YjVVcElRdkNzTVpETjhwVTgzUXFpL3JWU0ZYbmNRaVF2YWxZOTM3N3ZYRnpJc0ZHRElsUFZHekpReGJnTFkKUVNSUW42bHRHdjBlWHB5SVg2N1VoWjVlRVZtejV6aTgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUt0V2w2WWtCSHN6dG9VUUh1V0NmRzR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URTVNamN5TWxvWERUSTNNRFl4TVRFNQpNamN5TWxvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQS9xSk5rTW9zQlV2U1hXVlYzbk5QR0tmUmdDUTAKMlpQR2dEZTF2cEdaOHVQNWMzK2dQcHh3SGwvenBEZFFCR3NTT2h4ZXEzWW1DRG1QSUYxTytoUkhWdFo0VURKcQp1dTVaaVFqNEtmdjQ0SEV1bGVVRHJzekNGUEdNYzJRUEI3SS9RUFdQUkwvTTJRSkNzU2dvVWJRRDhQRUw0a2NpCkJLK1MrRGxHT290c282c050V1ZzRlJiUk4vM29WNVF4NklicjJZQmNJWkZ3Ny9nZ1hPZU5QUXJjblNhaElIUUsKWjAxQlhkbHFnbFdlenBwdGdFQjRvRzlZdGlHaVlTSktKVm9KVUJhR2NTTHRCMGRlQ2p6L2dMQlo3aTNuZFh1RQpNVmNtOTRyUkk4QW53My82WVFodFVwamRhUmlyNm9lZGwxazdzSEJMTVhKNjQzdElkYmVWVVVYcGV3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUVc2REVrcGh5VmNKMndndURhTkp4MworTlVWaWpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRS82UmkzcHVSUjQyOXRGTUxBMTdFUkhMWTU4NFRGbm92Vm9wdC90Rjc4TmF3cWoKeiswWDRxeGtoZWo0SGhPRTlFNDZFTUNzYkVMeG5DQVBhR0hqcHNaN21oQ0ZCcXBrbVJ6RTBCbWUrOEIzaHRJVApMVE15U2Z4aUpSRzRxcGQzQmNxaGU5MSttM1ZkQ3VkcUQrUjUzdXc3VlZYS0lkR25IZC8wYW85eCtTSmpTN2xSCnpjRGF0NkxCcmU0dVZwTTlJMTZwWXlwOTJEdGp3S1ZvTGdFdUdNK0ZJU2JuL3U2aTlFUDZtUkRZbUhjTVA3TGsKTkxQcmtJYUxiWE5Eb1FTUGhkS29CaDJKZWwyOTUzTG1BMVJha0h0OGd4UFhGb0IyNHFReGoyOTJnbk1UdXcrcgpCWUQxbFNrZ2NkSlFReXlLSzRIY0NSRlFWVGxGbjlxNW5MaGhCOVE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBL3FKTmtNb3NCVXZTWFdWVjNuTlBHS2ZSZ0NRMDJaUEdnRGUxdnBHWjh1UDVjMytnClBweHdIbC96cERkUUJHc1NPaHhlcTNZbUNEbVBJRjFPK2hSSFZ0WjRVREpxdXU1WmlRajRLZnY0NEhFdWxlVUQKcnN6Q0ZQR01jMlFQQjdJL1FQV1BSTC9NMlFKQ3NTZ29VYlFEOFBFTDRrY2lCSytTK0RsR09vdHNvNnNOdFdWcwpGUmJSTi8zb1Y1UXg2SWJyMllCY0laRnc3L2dnWE9lTlBRcmNuU2FoSUhRS1owMUJYZGxxZ2xXZXpwcHRnRUI0Cm9HOVl0aUdpWVNKS0pWb0pVQmFHY1NMdEIwZGVDanovZ0xCWjdpM25kWHVFTVZjbTk0clJJOEFudzMvNllRaHQKVXBqZGFSaXI2b2VkbDFrN3NIQkxNWEo2NDN0SWRiZVZVVVhwZXdJREFRQUJBb0lCQUhYeGo2UUZRU2FpM0NuTwppbHVqWlh1eUgrUU80VHYycXZjdzFzb1NmeEIyY0ZFRFNLSTNxK2NsNHFDcHpqSjl0YytjM0d6bktPNmVXcUZQCkZ3blc0c1JpU3hBNmloMVQwYjBibm5jejh5OWl2WVZJc3RBQW45VTduU2JGcmdDT202WG5HQmxzRGVKbW5hV1oKU0RPd0FqTlVNNEQ0R2RXNXpZV1VZZWMwTlhvSkVLYVBDNnhsZ1MzYTRQdGxwNlpEUkFnNEZWNkJTWWJKc3V6aQpISUNUM2RBOHpCb3Q2cmd0V2hXY1VxWko2Tk4rdTVMTXA2d0c4RDhQOVNkd1VlY3Yyd2IydklwaWJoNTBrWWVTCkdraVlkTlVFNmtRVHJwMlpmQi8zaWlHYVlkQTJSMXdHNVJnRHErczlOTGJWZWV3dDBDUStCNEthVWowVHZNR04KOUdFT2lnRUNnWUVBL3RVOTNpZlFQMFQ1cWhTVVlVdk5qMW5yM255WXZXV1M1eEVLeVdyYThiNnVwYkxzTXNpSwpRTmlySzh4UXEwL2RyWnZIcUt5SitSbEFES0t3NFFHM1ZVR0UxNU5ndGZOMXEyWWZRdG0rSEJzcjJyYmxvQ29wCnhvZXFUcFZDS29iVE1EdEg4NDlrRUJYY1g4QWZYNUhIZWRUSkRMcEFkTUNlL0FWM1ZNQUFwVUVDZ1lFQS84elQKK3BYdVQ2dFZXT1JCTXBMWmRMQjFUdDVjMnJ6ZDFyVGw5bDA3VEk4YlIrakdMRitsaUxXUk55cWhOY1RGVTF4QgppV2xEMHR5WjVvR0NPMjlpbDRkYUthVWhLMTFWb0xwSUtFNGpSdnk0bGRQQTRLMTY4cm1XSlFuOEJVK2gxSHZyCnRrRkxQQzViR0o4Sm5WNy9kRko1K2ZMUHdLYTAwTU1rMkQxUmM3c0NnWUE1dkJaSVByenZtTEQzMTdIR1dXWTUKRkNaY1FkNVpDcW85cjU3Q0EzT1hVWncvN2ttVk45b2ExdnZ3OEZsV2RzSENrNGlvcm02VUFTU0J1RnBhb0FqcApSKzdRNkpNQXBpZ0NyU0JvQk8wTmNScCtjdkdUVi9vZkFKMlZNRHZOWnI1eUx2d2VNbDU1Um5xbk50L2t4eUpxCmQ4c1ZGeDJEVmlDdStJNFFwVytBQVFLQmdCUXU0aTdzYzVBL3NZMUEvVS96UEVzenZSM0s5OEtla2xabGtadDkKd2JjSnQ1cFY2SVVKeXZMZGVLYkVxMUdsdy9nTzJIRHlLRkxUNnlTLzVUbXhVVE1wajlpbldkV2xHS09FN3pxVwo1N3VySnhsVFN1MnZZbnNTWDZGdWh6OFlDR25PbVV1WkhVbVRVc2EvamErb0ZqbmtaQkZ2c2lxK1BKZ1lQYWorCk5aWVBBb0dBSDM4Uy9zYXFRTHNEYWNLNUc5blpYU1dmKzFsMWpKODhGK1hXNkdOY1lETHRzMUYyODU0STFRY3oKbVMwYmhNaE9WUnhLdnI5ekdWUnZRWS9Ra2VLSGJUMjMwNlJWMndZbmdYTytXRjhCZEY1RmRYQnp2NWxDMXBjZwpyZXVaOFZwQlVldVJsaUhXNDhtVUNBNzN2OVdlYzFNdkNoejNwcC90R2o4OUVHTmp6bG89Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBHdWIrZTd5MjVSdkxKVG42aHhUbUl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URTVNamN5TWxvWERUSTNNRFl4TVRFNQpNamN5TWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUExNTBuUHhlYnZ0LzJLT2N0ZjU5NDZBcU80ZkhIcVVVNDQ0VEpPZmJucmJQSnJNNmsKK2hzMnZKemFwZTFZSGVmL3hhS3BaV3EraXQ1R25oZFV5cjdhNU9Wb3UzcVVPeE9aSEhHK3BmZXU2OVVHWjFYYwowZ2FkV3NYeU1wTUMrSE9zMFY3WUFkK0hOZkZmU0E0aG8xQUVoR3drWjdjMGZIdE5oQTF6LzNJeDdvcXFjZGRwCldzNk5BUVZFdVNWaFBUL0VZWjltVmtSckFEMTdkSko0MnNJZDRrSWNXQXFnaWJNb0RzZFJCMzFNT3h0NlRSSGEKM094RUZJd3VNeFN1VW5iMnZUVlg4MFNXRjIvekZSMEJOMHJMRDlRWGJnZnR3bC9tTG85eTNQQVZ4QWREMDRxZQp2ZnR6ZTM2VFdsckswaDhyeG5SeUFvZ1Fjd2pUV3pzZjFTcUlxd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQmJvTVNTbUhKVnduYkNDNE5vMG5IZjQxUldLTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUFFVVZhdW5VUThtWUFFSlRObnpjL2QxQXpaR25NcmZNMEhLSUloRHJrT2RwT1VaMFF1S1V5ClY0TTE2T1Jub0Z0cGJxUll5aEY4TWdreFd6SndCS1IvTlM3UlJwZnE0RlY1SnAxelZwZUxkL21nMXZMSjJUNGIKR3NIVFV3SlkrVHRvNUtPcHhwN1MvUzJZdnpUaERUeEgyYWFIbUFtNW5Pb1JEa1VYdG9nYTFVV21JQUlXY0plWQp0QUE1QWNDNjVKYlMvbXRneG9jY0JIbXdUYUtNMGJwTSsvQVhxTHJuTkdpZ0I2eTJiZzVnU2dpNnNsemxGbStJCk42YjVVcElRdkNzTVpETjhwVTgzUXFpL3JWU0ZYbmNRaVF2YWxZOTM3N3ZYRnpJc0ZHRElsUFZHekpReGJnTFkKUVNSUW42bHRHdjBlWHB5SVg2N1VoWjVlRVZtejV6aTgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRVmdTL0Rtb1p0TkJZQlBXRGczWkNJakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOekl5V2hjTk1qY3dOakV4TVRreQpOekl5V2pBbE1TTXdJUVlEVlFRRERCb3FMbU15TG1oMVltSnNaUzFuY25CakxtTnBiR2wxYlM1cGJ6Q0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFPQzFYN2lyaHZkOHBWaHRzdHhOWGpxWFJwMkgKdFVqZ00yNm9lY0RIYStuazYwN3c3NTE1M2JWc014NVJRTGtYaFR0MWpEalB3YVp0aG1ibHhXK1VNdFB6M3gvbwpHa1hPR3NLcjNPaHdXYk1aU3RTT1N2czZPR3c3aWFVakplL01vQ1E3YUc3UzdZRk1rUlh0NlFWSGV0V3BKSmQ5CmtTdE9PWjRxdHB3WTRDdVc2a2JGbkZ3bmJaYU81NUZnM3NiQ3N2OGdGWkwvRnFNc0pOenA3ZWkwZkNHQ3A0clcKNHZZSFpWZXhaWENYTjdqUHIwZXQrMFM3NnY0eVlCZW1tK09yenVwNHl4S3BzRVJJUXIrVnMrazVPQUplWjlGawo2cjRFaWVoeGowNWVraVlBMCtSSUdNaTRkQ0pBN3pRRHVQR3pTUlJTck53dWF2dDlEQWRqWVA1bHpXOENBd0VBCkFhT0JpRENCaFRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVVGdWd4SktZY2xYQ2RzSUxnMmpTYwpkL2pWRllvd0pRWURWUjBSQkI0d0hJSWFLaTVqTWk1b2RXSmliR1V0WjNKd1l5NWphV3hwZFcwdWFXOHdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUZxbUZaWS8wOVZkSU5ZQnpzaHBiWVBLWHhZelE5K1FUbzAxTDgyelIzMGIKS3l1bUgwZjlYdUtYUXBhYlI1ckJwa2tFaVZHTDhwVStQMUpLUlp3SFhLSW9lMDFZNjN3SDR1aTlCQ2FNUnJ2bQo2cU52UUlmcEQxUnVhUDVJeGcvZWRreUx5YXFpRlNMWDFPNU5WRTg5UkdEaWxuMEFZVllQV2VjOXFlenYvSC81Ck9iL1JqdVdONTZhamhYR0F6em91R0RNNjBPdzFJK2Z2N3NEQjZMSTFKYUd3Nlltc1hJWUtoYjJtbllWRVBtdjgKWjU2Qjc1dVlsc01MTERjQ2pMMnlxR29VSmdTN2pPS1ZhNmZyQ0x5bXdjNGE1Lzd4M3RqWENTR0lZVDFWMVJmTQpMK3VZYTB6UThGSkVqZWRRdjMydUZudmQxOFFiY1ZKSXdrMlUwOFpDelYwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNExWZnVLdUc5M3lsV0cyeTNFMWVPcGRHblllMVNPQXpicWg1d01kcjZlVHJUdkR2Cm5YbmR0V3d6SGxGQXVSZUZPM1dNT00vQnBtMkdadVhGYjVReTAvUGZIK2dhUmM0YXdxdmM2SEJac3hsSzFJNUsKK3pvNGJEdUpwU01sNzh5Z0pEdG9idEx0Z1V5UkZlM3BCVWQ2MWFra2wzMlJLMDQ1bmlxMm5CamdLNWJxUnNXYwpYQ2R0bG83bmtXRGV4c0t5L3lBVmt2OFdveXdrM09udDZMUjhJWUtuaXRiaTlnZGxWN0ZsY0pjM3VNK3ZSNjM3ClJMdnEvakpnRjZhYjQ2dk82bmpMRXFtd1JFaEN2NVd6NlRrNEFsNW4wV1RxdmdTSjZIR1BUbDZTSmdEVDVFZ1kKeUxoMElrRHZOQU80OGJOSkZGS3MzQzVxKzMwTUIyTmcvbVhOYndJREFRQUJBb0lCQUhxcmFRc0dVSkxRcis3NwpTOVlxUWxPWCs4dkpwdlNXdUYwamlmdnNvZ080bmFDbHRSbHh5cy9jdG5kSmdoekpNMG1IWFRveWFKUHpYSmpWCnZKZXgvcUZvazVqMmUwazZQNitnWk9OYldneUV0UzRlVTk2Y0pPc3BBWFp1SHFxdk9Za3VDVS9leEJ0KzhnRlgKdElyV1A3OWVMQVNyWHRHV1Rhd0R3MWFwMmM3UStVU2I5b2N4SWZGdG95M3Z4VDFUNENRTDZKdVU0a3h5cHRuSgpDek1qRkJ5MGpVWVh3UmxkSzNLRXErVWFRU211QnJNdWM4R2g5U045ZU9GeU45U0NyUlJseFA2UWJjeGpvbzhRCkZpNXlYQTI3bjB6SzRDaVlub2k3TjlibTlLaDRwK2daMEEvU0hFNkQ2ay96bkNXWVJSRDFVYUZrMGhVWDQ1bVoKMmNuYzZjRUNnWUVBODFuVlpiQzk2QzFSVGtoelJ3RUozeGl2Q2xHTlZQRUs5cHZTQ2prU1J2WjJna2tBcFozWgpHb25VWmJUL2ljL2s4eE96cjlCMzE2NE9ReTd1T3hVZUhIUjJRMXV0U1h3L1pTWDk1OGxzSDJQKzhvWTBxeVJRCmNkbmhLOWJjZ3ZkWFZZV0d0TGpFMUl3aHRFN1FNUU1jZTdMTkNZQ0R2TTIram9qeHk1eURMQ0VDZ1lFQTdHTjUKUHczODVwSWJ1azJZQXptTnA5ZytyZWpUODVhYVhzSUJvdGViNnBFdndFb1VhVzJoZ3FlUkNLMis0NlAxYWw4NwpNZXB5ZHp4Sm10RVNJSFhBUFNkOHVsUjNoY0JjWkRJa2FEV0ZiSHJNWXBmMU4ybEZHdWI1aW0xa1NCSnovelNhCjBtaXRoVXI1V2JVamg5MjZWcTJFWTR4SEMzRjRjcVpoMFR1RFI0OENnWUVBbHE1VldIWXI0UXZPZ0c2VUVxOHQKOFpwVEtFeCsrczJXUUVVVHRZakpMRytIeWZ4eURockRSNDk0bU5HT09VTWxQTzVDSU9jd2piZ1UxTHpHZm9jQQo4aFdhOVBKYlJsbE0xOURDZXpkWlg4YUhJcHkvR0FtUVZpN1hJbElVa0hPZS9ER0Z5M2x0Uno3Tno5dk5SY3ZyCll4eS9vTmFXdTkyWjFLQXZPQ2hkZ0lFQ2dZRUFnMDNCeEYrTnNibEl3NVJrTXE1ZVcvUUc1T3ptQm5FS01FWk4KU0ZuQkZtc3MvZjlvRlNPN1NlcXY2Z1V3ZWh2UnJ4TlV1eVpDREs4bEoyU29UL1Y0SWIvMFRUK3I0RlI0UFlPSQpxNFhISmZtVDI5UVNkb1AzeWJpd3RjNkxuR2o3bTY5cHJDUk85akl1RFVGTGlpV0VZcThoVVhaUzVDMVVQVUxrCkpLZU5CVXNDZ1lFQWpySndLZ3NTN21wZlJFOGRVMkwrWERYbnpXMUl0VEIwekVvN3YwODBXV0NONVFJQmR1bDgKdk40aHlLb2o0T3M1aldVUEgzQ3ZDYnVNUmszNVlxSFg5aHZKQVlSVU5nQ2xWcEJaWTdnLzUwcFdScElFY3BpRwowT3Zsb21VdGZqSmcrRkhpbGdwOEFkV0g0SEJKQ05uSHV4cXJKeXdCZ3NvNm0wUDhRbjlZZ2NnPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  policy-cidr-match-mode: ""
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":9963"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: c2
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "12"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"
  service-no-backend-response: "reject"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-masquerade-to-route-source: "false"
  enable-wireguard: "true"
  wireguard-persistent-keepalive: "0s"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "false"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  enable-health-check-loadbalancer-ip: "false"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  bpf-lb-acceleration: "disabled"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  hubble-export-file-max-size-mb: "10"
  hubble-export-file-max-backups: "5"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  ipam-cilium-node-update-rate: "15s"
  cluster-pool-ipv4-cidr: "10.2.0.0/17"
  cluster-pool-ipv4-mask-size: "24"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "true"
  bgp-secrets-namespace: "kube-system"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"

  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  # default DNS proxy to transparent mode in non-chaining modes
  dnsproxy-enable-transparent-mode: "true"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-xff-num-trusted-hops-ingress: "0"
  proxy-xff-num-trusted-hops-egress: "0"
  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"
  proxy-idle-timeout-seconds: "60"

  external-envoy-proxy: "false"
  max-connected-clusters: "255"

# Extra config allows adding arbitrary properties to the cilium config.
# By putting it at the end of the ConfigMap, it's also possible to override existing properties.
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: c2
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n            return 200 'ok';\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/clustermesh-apiserver/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumexternalworkloads/status
  - ciliumnodes
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumendpoints/status
  verbs:
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumexternalworkloads
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-bgp-control-plane-secrets
  namespace: "kube-system"
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-bgp-control-plane-secrets
  namespace: "kube-system"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-bgp-control-plane-secrets
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver-metrics
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/component: metrics
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: etcd-metrics
    port: 9963
    protocol: TCP
    targetPort: etcd-metrics
  selector:
    k8s-app: clustermesh-apiserver
---
# Source: cilium/templates/clustermesh-apiserver/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  type: NodePort
  selector:
    k8s-app: clustermesh-apiserver
  ports:
  - port: 2379
    nodePort: 32379
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
              divisor: '1'
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                    set -o errexit
                    set -o pipefail
                    set -o nounset
                    
                    # When running in AWS ENI mode, it's likely that 'aws-node' has
                    # had a chance to install SNAT iptables rules. These can result
                    # in dropped traffic, so we should attempt to remove them.
                    # We do it using a 'postStart' hook since this may need to run
                    # for nodes which might have already been init'ed but may still
                    # have dangling rules. This is safe because there are no
                    # dependencies on anything that is part of the startup script
                    # itself, and can be safely run multiple times per node (e.g. in
                    # case of a restart).
                    if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                    then
                        echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                        iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                    fi
                    echo 'Done!'
                    
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: write-cni-conf-when-ready
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.15.6@sha256:5789f0935eef96ad571e4f5565a8800d3a8fbb05265cf6909300cd82fd513c3d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        ports:
        - name: prometheus
          containerPort: 9963
          hostPort: 9963
          protocol: TCP
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/clustermesh-apiserver/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: clustermesh-apiserver
        k8s-app: clustermesh-apiserver
    spec:
      initContainers:
      - name: etcd-init
        image: "quay.io/cilium/clustermesh-apiserver:v1.15.6@sha256:6365c2fe8a038fc7adcdeb7ffb8d7a8a2cd3ee524687f35fff9df76fafeeb029"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - etcdinit
        # These need to match the equivalent arguments to etcd in the main container.
        - --etcd-cluster-name=clustermesh-apiserver
        - --etcd-initial-cluster-token=$(INITIAL_CLUSTER_TOKEN)
        - --etcd-data-dir=/var/run/etcd
        env:
          # The Cilium cluster name (specified via the `CILIUM_CLUSTER_NAME` environment variable) and the etcd cluster
          # name (specified via the `--etcd-cluster-name` argument) are very different concepts. The Cilium cluster name
          # is the name of the overall Cilium cluster, and is used to set the admin account username. The etcd cluster
          # name is a concept that's only relevant for etcd itself. The etcd cluster name must be the same for both this
          # command and the actual invocation of etcd in the main containers of this Pod, but it's otherwise not
          # relevant to Cilium.
        - name: CILIUM_CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: INITIAL_CLUSTER_TOKEN
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      containers:
      - name: etcd
        # The clustermesh-apiserver container image includes an etcd binary.
        image: "quay.io/cilium/clustermesh-apiserver:v1.15.6@sha256:6365c2fe8a038fc7adcdeb7ffb8d7a8a2cd3ee524687f35fff9df76fafeeb029"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/etcd
        args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        # Surrounding the IPv4 address with brackets works in this case, since etcd
        # uses net.SplitHostPort() internally and it accepts the that format.
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=$(INITIAL_CLUSTER_TOKEN)
        - --auto-compaction-retention=1
        - --listen-metrics-urls=http://[$(HOSTNAME_IP)]:9963
        - --metrics=basic
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: INITIAL_CLUSTER_TOKEN
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        ports:
        - name: etcd
          containerPort: 2379
          protocol: TCP
        - name: etcd-metrics
          containerPort: 9963
          protocol: TCP
        volumeMounts:
        - name: etcd-server-secrets
          mountPath: /var/lib/etcd-secrets
          readOnly: true
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      - name: apiserver
        image: "quay.io/cilium/clustermesh-apiserver:v1.15.6@sha256:6365c2fe8a038fc7adcdeb7ffb8d7a8a2cd3ee524687f35fff9df76fafeeb029"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - clustermesh
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt
        - etcd.config=/var/lib/cilium/etcd-config.yaml
        - --max-connected-clusters=255
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        - --controller-group-metrics=all
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: identity-allocation-mode
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: enable-k8s-endpoint-slice
              optional: true
        ports:
        - name: apiserv-metrics
          containerPort: 9962
          protocol: TCP
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: etcd-server-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-server-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-admin-client
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-admin-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-data-dir
        emptyDir: {}
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "clustermesh-apiserver"
      serviceAccountName: "clustermesh-apiserver"
      terminationGracePeriodSeconds: 30
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: clustermesh-apiserver
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.15.6@sha256:a0863dd70d081b273b87b9b7ce7e2d3f99171c2f5e202cd57bc6691e51283e0c"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          livenessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          startupProbe:
            # give the relay one minute to start up
            grpc:
              port: 4222
            timeoutSeconds: 3
            failureThreshold: 20
            periodSeconds: 3
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.13.0@sha256:7d663dc16538dd6e29061abd1047013a645e6e69c115e008bee9ea9fef9a6666"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        readinessProbe:
          httpGet:
            path: /
            port: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.13.0@sha256:1e7657d997c5a48253bb8dc91ecee75b63018d16ff5e5797e5af367336bc8803"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
