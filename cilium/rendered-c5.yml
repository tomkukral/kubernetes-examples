---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUsyOGhta0JYc3ZTZHVESzBRREg1Nll3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3TjFvWERUSTJNVEV5TVRJeApOVFV3TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2akV3N2pyMmQ3czVjMlFEUkFTcEdDc2UxQlE5Q0RpT2JLSmtmRE44VDhlckVmVXgKbGxUclN3TUVtTElqL1hZdlJ0NkYwK1NzbGF5VGhvZXVZdHhVVlFqclZaU3ViaE1hYXF2dXZxeG4vRUtQVHppVwpSeC9ROXhXdkJ5blRkU0VxZFM3TXJON3I5Tko5RkxmdjlrQU5jNXNjcTFMbTIvN2ZvVW43ZWtPaldLYTdCSU1MCjMzRU13cStTcmFUN3NoS0NOeW9ORmg5WEw5TGdrNFBaV28wdHp4aTE5Z3hnQVVZUWtoMi9JMEMyMHowRWxObCsKS2dSdnpYcnNIRjN2ZEkxODUzakNncURxTnVOVmw1dTFSb2xlSDlMQ0psVmYyY3NYU2pyVGtzSG1tcHUwOGt3bApoelpLWFBvS0dqQVB4OG9DaXhvRE1IUHpvUkluZ2VoSFdhaC9pUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRTdYWlVZYUtNL3d2TFU3TWVlaThQOUxYL2FTTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVdLRzZmL0s5SElRMEJHY0dTVnFkYzlLWnZnZVBFbWtCL0NCeUZxMlVSbkFNTXlIOU9BaExpClFTLzBJM0w5bGQwQmt0bTlvV2tBSDBWWlN0NUNQc0hrV3lmU3h6N2pZNkVxbUJ4SGJ5a1BEbFFGd3ZkRXFRSGEKMTVJMEtqTFRyZ2NYTWRlR1NhRm9QUGNRNnJVcHhhUWFuUFpIT3FIcks4VkN3ald6TkU3QXBKeEYvenB1K0ZmRQpiNHhEbVhIbUwzbE10UmdmRE1KTEZTNkRWQis1RkhkRitSZ1pFNHl1Rjd1T2VWOVVrdTJOcjVYVTlOSjNUQ2J6CnZpbjZrU2YzNVVFUFRFem5CYWx1ZVlQUEtnU2ZOdUJkbkt3VEQ2azRJdjlsYzBLU0Z3ekhqSlgvNktwY1lTT3gKSVdGVy9TL0l5WWlwLy9wQlF1dm95anlSOTZUQzZpQjkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdmpFdzdqcjJkN3M1YzJRRFJBU3BHQ3NlMUJROUNEaU9iS0prZkROOFQ4ZXJFZlV4CmxsVHJTd01FbUxJai9YWXZSdDZGMCtTc2xheVRob2V1WXR4VVZRanJWWlN1YmhNYWFxdnV2cXhuL0VLUFR6aVcKUngvUTl4V3ZCeW5UZFNFcWRTN01yTjdyOU5KOUZMZnY5a0FOYzVzY3ExTG0yLzdmb1VuN2VrT2pXS2E3QklNTAozM0VNd3ErU3JhVDdzaEtDTnlvTkZoOVhMOUxnazRQWldvMHR6eGkxOWd4Z0FVWVFraDIvSTBDMjB6MEVsTmwrCktnUnZ6WHJzSEYzdmRJMTg1M2pDZ3FEcU51TlZsNXUxUm9sZUg5TENKbFZmMmNzWFNqclRrc0htbXB1MDhrd2wKaHpaS1hQb0tHakFQeDhvQ2l4b0RNSFB6b1JJbmdlaEhXYWgvaVFJREFRQUJBb0lCQUgva3lFaUtzYzVWd2c1TQpSTDNxZkdMYUxFTGswUjNFR2xJRzZaZHpiN2FlUi9VdGNvanExY1o5WXd2alRyeFVTdnBYREpzdWZMZXhjd3JXCkZuZzRQU1ZwZUFiMmtrMUczMDY0Q3pXQTdmUCtOaXhKbXhSODJxSXNuS1F1aGhtUGtlTjI4ditVY0FzVHVEVEUKYzhLZDArM1hjbkhxcjM5a1pyRW85TWlFejBUK3ZnZVBpTEhxcWw1L2xESGcwMXh4Q1c0MzU3N2RDNWw3dlZBYQp6YTRCVWxUL3lBbldCdS9lVUZLTWVjbm40TzUzOFRjaXZ6MkcyYk5rSEhGWm9HVFNPNXpEUklqZ2ZhMm1Ib09pCjM2Rjd6RkFBQXlpemtXUUxBQWlFSnpDcEd5eUZSNDNCcVFiV29EL3BDRjFDM1htbU1ZNTdrSitxYS9ESDZiVm0KdkZERkhRRUNnWUVBd1Q5Vzg5czl4emwrTHFxZ1VUWWRZQWJWU3FTUFU3N21JdlV5eTZWSmdKZkxNOFNvNkxJVgpHbHY1Vm5Ca0RFeXJGZ0hDNi9VTzZlWXlVV2RBWFZRWDBGbHhXOWxlSFpUUjA2U3BTYzNGRHVOTkRVVm5VMkpvCnI0ai9xR3FrRGViUHkreFRGbThrT1Q3bExwVTVURmZSVVBrYkdiaEgrUjg1SkRLSXNxUndGUkVDZ1lFQSsvUGQKOWtyNjZXQkpZNkd0ZldOS1hQSGFudmhCYzExZE5YSTI1eWU5dTJ3K3FxQVlUalMwODQ2L1JmdHowazJqS2IveAo3UmVLeFZYdTh6b3N1TlhBeC9lYmFyb0NDYjRJcDJJY1FwTWhrVU1TcU5tWVF3REFmNEVyUnVzdzBjZTk1ZzRFClc4M1NuWVEzNnkyMzFqS0EwRGJleFQvVW96b0oxd3pHNzJsYjR2a0NnWUF1VWgxb2xHdkpma2wxckNhRGNPSTMKcTB1aStiRDFWUFBhKzBVeXRTcmFMUWhqSDBlUmgyWXhqRXhHNE9mS1h2SS9jeXFpM25tMXJSendrRHhJWXFqVwpveW5kNTB0ODhiZ2Q4QUU0RkorZ2d2RnNOZStmZUI0NXZTL3kwYVVEUkFrWkMwdWJQQWJGeGdLdldNdUVOaVNSCk1UVEN4SDVVQTV6eHhUOG8rdXQyMFFLQmdRREFDWUNFMldHbHY5NHdNbXNweHlSRzg1RE8yaW9JNUlERzIrYzkKQ08xMGpXeTJZSkFtQzhaZ1hjMHNhaHc5ank5dUF2OUMxMDdPV2xGbTBsQ0VFV2gvQWh0VG5iTXYrY2hlekVqOQo5V2NBY1Q4bnM3SjZYM2hadHZwbGM1NGlSenhXdlJoVllPdkhZNSs3Z1gwOXBnRElzd25aRG0za2U3aEVVVmpQCjRsNUhBUUtCZ0VLVm0yVms4QTZFU2tUZTQvYnB4aWVLSWR4ZUlnbHZMejhwOXZSUGlPL0xvQnhRK0k0MzNYK00KVTJzR3prcUVnU3pjc08xVVVGN0ZsQWhCR0d1UytoNmplWDcyaUVPY3hVS0w5Tkl1dVB1NTR5R2E5dDZKVi82aQpXMmVmd2xtckk5Z1VEK3dna3lsbzljYStDWDRFcHo1UTFHd3NIRHRzK0wrWUh6WVJZM3VaCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/admin-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUsyOGhta0JYc3ZTZHVESzBRREg1Nll3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3TjFvWERUSTJNVEV5TVRJeApOVFV3TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2akV3N2pyMmQ3czVjMlFEUkFTcEdDc2UxQlE5Q0RpT2JLSmtmRE44VDhlckVmVXgKbGxUclN3TUVtTElqL1hZdlJ0NkYwK1NzbGF5VGhvZXVZdHhVVlFqclZaU3ViaE1hYXF2dXZxeG4vRUtQVHppVwpSeC9ROXhXdkJ5blRkU0VxZFM3TXJON3I5Tko5RkxmdjlrQU5jNXNjcTFMbTIvN2ZvVW43ZWtPaldLYTdCSU1MCjMzRU13cStTcmFUN3NoS0NOeW9ORmg5WEw5TGdrNFBaV28wdHp4aTE5Z3hnQVVZUWtoMi9JMEMyMHowRWxObCsKS2dSdnpYcnNIRjN2ZEkxODUzakNncURxTnVOVmw1dTFSb2xlSDlMQ0psVmYyY3NYU2pyVGtzSG1tcHUwOGt3bApoelpLWFBvS0dqQVB4OG9DaXhvRE1IUHpvUkluZ2VoSFdhaC9pUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRTdYWlVZYUtNL3d2TFU3TWVlaThQOUxYL2FTTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVdLRzZmL0s5SElRMEJHY0dTVnFkYzlLWnZnZVBFbWtCL0NCeUZxMlVSbkFNTXlIOU9BaExpClFTLzBJM0w5bGQwQmt0bTlvV2tBSDBWWlN0NUNQc0hrV3lmU3h6N2pZNkVxbUJ4SGJ5a1BEbFFGd3ZkRXFRSGEKMTVJMEtqTFRyZ2NYTWRlR1NhRm9QUGNRNnJVcHhhUWFuUFpIT3FIcks4VkN3ald6TkU3QXBKeEYvenB1K0ZmRQpiNHhEbVhIbUwzbE10UmdmRE1KTEZTNkRWQis1RkhkRitSZ1pFNHl1Rjd1T2VWOVVrdTJOcjVYVTlOSjNUQ2J6CnZpbjZrU2YzNVVFUFRFem5CYWx1ZVlQUEtnU2ZOdUJkbkt3VEQ2azRJdjlsYzBLU0Z3ekhqSlgvNktwY1lTT3gKSVdGVy9TL0l5WWlwLy9wQlF1dm95anlSOTZUQzZpQjkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRTTQ4RGxRRC8yK0Z5Y0ZFSTFySG5YVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEE0V2hjTk1qWXhNVEl4TWpFMQpOVEE0V2pBVE1SRXdEd1lEVlFRREV3aGhaRzFwYmkxak5UQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQCkFEQ0NBUW9DZ2dFQkFMaDBRODBTcU9FdnR4RUNMTjhYd1RXRkxvVFJ0M2RHM215SkgxSmJWRTY0cTllSjUrMnIKRlUyRjlZUjJ1U2V5cGl6bUFVSS81UjVDSE5oMHhYMjBNejJvaUZpU0JkL201R0JFMytRV0tLRW0xSmtjWFdYdwpJSjkvTFh3SHh3VWdEWEFtd24yM3hiSkJoNkt4VmgyVEl2cE0vUDlHZUV5amVBRTB3MTZsK0F2RGJ1cUNKK3dECjBGVWo5bFMrT2pVMkF5YmFhRlFtenNEMExFcDBnVmtzdjVOUnJhakpGMWNoL1FQLzllVFEyVCthUlhVRXBVRlEKeEpQVXIzdUozTGNnK3BzQmY3dFo2cFU5OTFyQ3Q0L0p4aDM2SUhVYzFQVjY5NzJHeUtCUDNGVkxVU2tuOFI2egpseWJCNW1MTWRFTlF6QmxwMlRNZXZqREJSblVqTWtEaDdHMENBd0VBQWFOMk1IUXdEZ1lEVlIwUEFRSC9CQVFECkFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUEKTUI4R0ExVWRJd1FZTUJhQUZFN1haVVlhS00vd3ZMVTdNZWVpOFA5TFgvYVNNQlFHQTFVZEVRUU5NQXVDQ1d4dgpZMkZzYUc5emREQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFBNnltZ3R5RWhsYmNCM1ZvZm1IMGIyRG1yYnU5CnBiU1VyY2dwSExKVmdFR1h4VjFMZnpVZHFJNUlxUU9sVzdFaXZEM0JLeGp0Z3dsRHFPeUFjNEpSdWJGTkhIek0KSnpsWXo4L0VheWxzTHBwUThKOG1uYU4vemJ4aEd0c1NPYVBNb1NkSHJwNHFMMUlWTW5BZTZSOFhQbE5CK1JwWAowUzFSd1JVbVA0aExvamVjUGNhNjRSNWJmekVwODFPNDJKSjdVQkg0SGhibXA2MUxzaU5HVWFnc3pBeTFFRnByCmtCVUdNbWdIb0lsakZSWjJ0b1VLbTFRL2lnYzhaR2l3OWRLem1NK2hmYm9sbVVmUmsrTk8zcVZ2MVZnanBmRzcKbGpqQWV0T0lNMTZ4cHF4eitCSGRkY3hBMjFON0x0eWNrazRTQm9BVWFBQVEzZHNUM2FHSG9CVE41dz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdUhSRHpSS280UyszRVFJczN4ZkJOWVV1aE5HM2QwYmViSWtmVWx0VVRyaXIxNG5uCjdhc1ZUWVgxaEhhNUo3S21MT1lCUWovbEhrSWMySFRGZmJRelBhaUlXSklGMytia1lFVGY1Qllvb1NiVW1SeGQKWmZBZ24zOHRmQWZIQlNBTmNDYkNmYmZGc2tHSG9yRldIWk1pK2t6OC8wWjRUS040QVRURFhxWDRDOE51Nm9Jbgo3QVBRVlNQMlZMNDZOVFlESnRwb1ZDYk93UFFzU25TQldTeS9rMUd0cU1rWFZ5SDlBLy8xNU5EWlA1cEZkUVNsClFWREVrOVN2ZTRuY3R5RDZtd0YvdTFucWxUMzNXc0szajhuR0hmb2dkUnpVOVhyM3ZZYklvRS9jVlV0UktTZngKSHJPWEpzSG1Zc3gwUTFETUdXblpNeDYrTU1GR2RTTXlRT0hzYlFJREFRQUJBb0lCQUI5NERuMDFPc1M0YkVZbApsZHcxNUV1cVBpYUExUWt2ZVJFUlQ5dXdJekVQQnBwT045aHZnTUhxSWRvSW0wd3ZpWFJOaFZkMUtUVEJXTVNCCkg1UnpvdTVaQzNINDc3R2taY0FhNEF1ODBBKzJYVDBGL3RVK1k0SnlveUx1L01CZUdJelN3QW5NeVpqQTMxQWQKYXpDK2dwQXJoRnBVL244c3dIT01PZXl5NmgrdlhNdFBOZFBSQUwxYTNzRFp2UlhaMkQ5RDVlNlp1K1hBZWlDZgpsL204Q3gvQlExVkZYdFRPcjNjV0xqM0VOZjF3YlJEaDRMTUV6L0t5c0o5TW5BUzJsWm11SXlqd0dXTEFHdWVmCm9odmQxazlxTWN2Z0I5bVVQTS80TjR4amZSbnVTV1Ayb2p3MVBwcWJ6YmRtMWl5UkxmYm5Vd1RTaVBiWW1RWmwKVkFXdElvMENnWUVBNHoyRVNBeGM3eVF3eWc0STRCMCtrbzFhekFnOU82WElGaTFNRlVuQjB1M0dPQnErUm93NwpYbnZpekhYZE5JY09uZDEySkFvSVFJOHlJV0VJY3RNM0R2cW80TXlVUEwzakJuY3FNK0IrOVpwTWdLMENMb1BhCmVPcUFDdW5jR0NjbFJKVmRzUDRzSVdMZUpiMDg1WWNZQlpMdmE3RUdvV2lWeDZxcFBXN3QwaGNDZ1lFQXo4eC8KR0tleXJtWlVVWEZhTkZqNFNPVThMV1pkYXJxNXl0bzlSRUp0OHkwM3JrZGtYQVRjbGFjODE2Wnc5Vy91emp1Kwp1N2V4ODlTVnFFWWQrQmNBK0RDd1AxY2FicjVMdVJrRnpaVGZHNVdqMTd6amwzUzNSSmhYMzJEN0RDZlg1ZFRoCi9UU3FwOHZaSHhDbjBHb2hyeVdIcjdKMThlOVBKYlBxYjBwbjNCc0NnWUVBcTBieHpyQnExK0VxV1JHTkJRZGwKNDJaaCtvbDNSZDhsMmZsWWNHOUFoWENzeUJyNE1ncCtzUytsZWNDWTgzK2N0OFoxeHFJOUtCUUdqL3dvTnd3VwpZdGJ4dFViZHNJN2JjRU1mYnl5VjVSN2c3TmY2WGY4S0M3dU11UzBkdEtMRXgxWGg0WWNpMGlOSUY1LzBKM2pVCjFWYXoyVEw4TVdxNEFtQVM0Zmdianc4Q2dZRUF1YjhjWlJlU094NnhoRk9FeElJNi9qNGErcUlrSXdGaWpwZGkKYUovUTFLeTR0d3FPQlVzN09uTFJpaHIzb2cwNk5CTm52VGpJMHlKVjNLTkFxc0UxVnFWL0JqK0FHem56U2pPNQo0amlPN29ObWY3UVM1UkdwdUtGTSt4b2ZqcEFYQnhTeUpicHNTYTJJR2FLenZ6TC9oU1pSRVphK28xSzlOd0NLCk1JMGNKYjBDZ1lBQjRLWXdQeFUzWW1KZ0NNK2xwNWhNdUdITHgrSGQrZWNxN3FEREFCc1kxaTF6K3plL1ZjR0EKRGRJeEtzcWZSYXhIYjlHWmtVeGowMmxTeTdYRUc0MC8zaXhXL0lKWERMK3RSZk9rRjg5ekZoS2w4OTNDMEphZAppcTA5NU1aNWJXWHBhY3A1N3RlazVkSjN5cmVHVXZUbWlNNVlqVW9lUkNKa2l3UFdZbGVIY2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-ca-cert
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUsyOGhta0JYc3ZTZHVESzBRREg1Nll3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3TjFvWERUSTJNVEV5TVRJeApOVFV3TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2akV3N2pyMmQ3czVjMlFEUkFTcEdDc2UxQlE5Q0RpT2JLSmtmRE44VDhlckVmVXgKbGxUclN3TUVtTElqL1hZdlJ0NkYwK1NzbGF5VGhvZXVZdHhVVlFqclZaU3ViaE1hYXF2dXZxeG4vRUtQVHppVwpSeC9ROXhXdkJ5blRkU0VxZFM3TXJON3I5Tko5RkxmdjlrQU5jNXNjcTFMbTIvN2ZvVW43ZWtPaldLYTdCSU1MCjMzRU13cStTcmFUN3NoS0NOeW9ORmg5WEw5TGdrNFBaV28wdHp4aTE5Z3hnQVVZUWtoMi9JMEMyMHowRWxObCsKS2dSdnpYcnNIRjN2ZEkxODUzakNncURxTnVOVmw1dTFSb2xlSDlMQ0psVmYyY3NYU2pyVGtzSG1tcHUwOGt3bApoelpLWFBvS0dqQVB4OG9DaXhvRE1IUHpvUkluZ2VoSFdhaC9pUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRTdYWlVZYUtNL3d2TFU3TWVlaThQOUxYL2FTTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVdLRzZmL0s5SElRMEJHY0dTVnFkYzlLWnZnZVBFbWtCL0NCeUZxMlVSbkFNTXlIOU9BaExpClFTLzBJM0w5bGQwQmt0bTlvV2tBSDBWWlN0NUNQc0hrV3lmU3h6N2pZNkVxbUJ4SGJ5a1BEbFFGd3ZkRXFRSGEKMTVJMEtqTFRyZ2NYTWRlR1NhRm9QUGNRNnJVcHhhUWFuUFpIT3FIcks4VkN3ald6TkU3QXBKeEYvenB1K0ZmRQpiNHhEbVhIbUwzbE10UmdmRE1KTEZTNkRWQis1RkhkRitSZ1pFNHl1Rjd1T2VWOVVrdTJOcjVYVTlOSjNUQ2J6CnZpbjZrU2YzNVVFUFRFem5CYWx1ZVlQUEtnU2ZOdUJkbkt3VEQ2azRJdjlsYzBLU0Z3ekhqSlgvNktwY1lTT3gKSVdGVy9TL0l5WWlwLy9wQlF1dm95anlSOTZUQzZpQjkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdmpFdzdqcjJkN3M1YzJRRFJBU3BHQ3NlMUJROUNEaU9iS0prZkROOFQ4ZXJFZlV4CmxsVHJTd01FbUxJai9YWXZSdDZGMCtTc2xheVRob2V1WXR4VVZRanJWWlN1YmhNYWFxdnV2cXhuL0VLUFR6aVcKUngvUTl4V3ZCeW5UZFNFcWRTN01yTjdyOU5KOUZMZnY5a0FOYzVzY3ExTG0yLzdmb1VuN2VrT2pXS2E3QklNTAozM0VNd3ErU3JhVDdzaEtDTnlvTkZoOVhMOUxnazRQWldvMHR6eGkxOWd4Z0FVWVFraDIvSTBDMjB6MEVsTmwrCktnUnZ6WHJzSEYzdmRJMTg1M2pDZ3FEcU51TlZsNXUxUm9sZUg5TENKbFZmMmNzWFNqclRrc0htbXB1MDhrd2wKaHpaS1hQb0tHakFQeDhvQ2l4b0RNSFB6b1JJbmdlaEhXYWgvaVFJREFRQUJBb0lCQUgva3lFaUtzYzVWd2c1TQpSTDNxZkdMYUxFTGswUjNFR2xJRzZaZHpiN2FlUi9VdGNvanExY1o5WXd2alRyeFVTdnBYREpzdWZMZXhjd3JXCkZuZzRQU1ZwZUFiMmtrMUczMDY0Q3pXQTdmUCtOaXhKbXhSODJxSXNuS1F1aGhtUGtlTjI4ditVY0FzVHVEVEUKYzhLZDArM1hjbkhxcjM5a1pyRW85TWlFejBUK3ZnZVBpTEhxcWw1L2xESGcwMXh4Q1c0MzU3N2RDNWw3dlZBYQp6YTRCVWxUL3lBbldCdS9lVUZLTWVjbm40TzUzOFRjaXZ6MkcyYk5rSEhGWm9HVFNPNXpEUklqZ2ZhMm1Ib09pCjM2Rjd6RkFBQXlpemtXUUxBQWlFSnpDcEd5eUZSNDNCcVFiV29EL3BDRjFDM1htbU1ZNTdrSitxYS9ESDZiVm0KdkZERkhRRUNnWUVBd1Q5Vzg5czl4emwrTHFxZ1VUWWRZQWJWU3FTUFU3N21JdlV5eTZWSmdKZkxNOFNvNkxJVgpHbHY1Vm5Ca0RFeXJGZ0hDNi9VTzZlWXlVV2RBWFZRWDBGbHhXOWxlSFpUUjA2U3BTYzNGRHVOTkRVVm5VMkpvCnI0ai9xR3FrRGViUHkreFRGbThrT1Q3bExwVTVURmZSVVBrYkdiaEgrUjg1SkRLSXNxUndGUkVDZ1lFQSsvUGQKOWtyNjZXQkpZNkd0ZldOS1hQSGFudmhCYzExZE5YSTI1eWU5dTJ3K3FxQVlUalMwODQ2L1JmdHowazJqS2IveAo3UmVLeFZYdTh6b3N1TlhBeC9lYmFyb0NDYjRJcDJJY1FwTWhrVU1TcU5tWVF3REFmNEVyUnVzdzBjZTk1ZzRFClc4M1NuWVEzNnkyMzFqS0EwRGJleFQvVW96b0oxd3pHNzJsYjR2a0NnWUF1VWgxb2xHdkpma2wxckNhRGNPSTMKcTB1aStiRDFWUFBhKzBVeXRTcmFMUWhqSDBlUmgyWXhqRXhHNE9mS1h2SS9jeXFpM25tMXJSendrRHhJWXFqVwpveW5kNTB0ODhiZ2Q4QUU0RkorZ2d2RnNOZStmZUI0NXZTL3kwYVVEUkFrWkMwdWJQQWJGeGdLdldNdUVOaVNSCk1UVEN4SDVVQTV6eHhUOG8rdXQyMFFLQmdRREFDWUNFMldHbHY5NHdNbXNweHlSRzg1RE8yaW9JNUlERzIrYzkKQ08xMGpXeTJZSkFtQzhaZ1hjMHNhaHc5ank5dUF2OUMxMDdPV2xGbTBsQ0VFV2gvQWh0VG5iTXYrY2hlekVqOQo5V2NBY1Q4bnM3SjZYM2hadHZwbGM1NGlSenhXdlJoVllPdkhZNSs3Z1gwOXBnRElzd25aRG0za2U3aEVVVmpQCjRsNUhBUUtCZ0VLVm0yVms4QTZFU2tUZTQvYnB4aWVLSWR4ZUlnbHZMejhwOXZSUGlPL0xvQnhRK0k0MzNYK00KVTJzR3prcUVnU3pjc08xVVVGN0ZsQWhCR0d1UytoNmplWDcyaUVPY3hVS0w5Tkl1dVB1NTR5R2E5dDZKVi82aQpXMmVmd2xtckk5Z1VEK3dna3lsbzljYStDWDRFcHo1UTFHd3NIRHRzK0wrWUh6WVJZM3VaCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/remote-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUsyOGhta0JYc3ZTZHVESzBRREg1Nll3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3TjFvWERUSTJNVEV5TVRJeApOVFV3TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2akV3N2pyMmQ3czVjMlFEUkFTcEdDc2UxQlE5Q0RpT2JLSmtmRE44VDhlckVmVXgKbGxUclN3TUVtTElqL1hZdlJ0NkYwK1NzbGF5VGhvZXVZdHhVVlFqclZaU3ViaE1hYXF2dXZxeG4vRUtQVHppVwpSeC9ROXhXdkJ5blRkU0VxZFM3TXJON3I5Tko5RkxmdjlrQU5jNXNjcTFMbTIvN2ZvVW43ZWtPaldLYTdCSU1MCjMzRU13cStTcmFUN3NoS0NOeW9ORmg5WEw5TGdrNFBaV28wdHp4aTE5Z3hnQVVZUWtoMi9JMEMyMHowRWxObCsKS2dSdnpYcnNIRjN2ZEkxODUzakNncURxTnVOVmw1dTFSb2xlSDlMQ0psVmYyY3NYU2pyVGtzSG1tcHUwOGt3bApoelpLWFBvS0dqQVB4OG9DaXhvRE1IUHpvUkluZ2VoSFdhaC9pUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRTdYWlVZYUtNL3d2TFU3TWVlaThQOUxYL2FTTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVdLRzZmL0s5SElRMEJHY0dTVnFkYzlLWnZnZVBFbWtCL0NCeUZxMlVSbkFNTXlIOU9BaExpClFTLzBJM0w5bGQwQmt0bTlvV2tBSDBWWlN0NUNQc0hrV3lmU3h6N2pZNkVxbUJ4SGJ5a1BEbFFGd3ZkRXFRSGEKMTVJMEtqTFRyZ2NYTWRlR1NhRm9QUGNRNnJVcHhhUWFuUFpIT3FIcks4VkN3ald6TkU3QXBKeEYvenB1K0ZmRQpiNHhEbVhIbUwzbE10UmdmRE1KTEZTNkRWQis1RkhkRitSZ1pFNHl1Rjd1T2VWOVVrdTJOcjVYVTlOSjNUQ2J6CnZpbjZrU2YzNVVFUFRFem5CYWx1ZVlQUEtnU2ZOdUJkbkt3VEQ2azRJdjlsYzBLU0Z3ekhqSlgvNktwY1lTT3gKSVdGVy9TL0l5WWlwLy9wQlF1dm95anlSOTZUQzZpQjkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRZFVOTFB2UStMd252Z0ZqRUt3TFByVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEEzV2hjTk1qWXhNVEl4TWpFMQpOVEEzV2pBUk1ROHdEUVlEVlFRREV3WnlaVzF2ZEdVd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFDZXQzQmtSRytRNm4vcmJUQ2xaZThGRVJ0eVhOQmdnNGRRdDh3SFFPTTBwQVNhR2Q5VExSWmYKQXo3bVlwaUhnOVVYdnJyU3Z2ck45VmQwb2JocUxjcXZZeXlDMTByOUFSVXVHOSthcUdBWkZHTU5zWklkaHRXdAp2QVdRR0taVVk0d2R3ajZ5ZW1vOVpzTXQ5d0hrMVBqWTVGVmxRbjdVZFJubmtqN1ZiZUl0N0lSc3J0cE1yMnBvCktoazlTMXFWSFlnRUY4U3BjcGxvL2FFYmRaaGsrMmdBdlFqa3QyNERzQXY3YmR4VzloZXBIMGUvZkFFVHRQRGcKQkl2Q0t4elowRFhYQzJYdWRPVmtkb3J2WnAxSXIwUkxYT3ZnWWZEWnlOc2NZcER4UE1nOEZ4UFN2R2F4VWR4SwowK3NSak5BRU5zWm5OS0l3MUhOckpmcDF1Wk9HejEyakFnTUJBQUdqWURCZU1BNEdBMVVkRHdFQi93UUVBd0lGCm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWYKQmdOVkhTTUVHREFXZ0JSTzEyVkdHaWpQOEx5MU96SG5vdkQvUzEvMmtqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBSWl3Vml6K0N0VzVWQ2VTcHFQam1Fd1dBV3pFbkFKVUo4MTRodVZSSWIzRGR4QzVXajUxTVpnVytidzJrCmFCNnJWTWJPc3NpbVBRRm4zWnZrbkJqOVVWUm9IenJLMysvYTV4Rjk5QU5ZeGxuNVdnMW9jYXhNNWgvb3VtOG0KMkNSNXZ4OEtyck9WOTJqSzlGdHZGZzgxelNOV1dndWt0Sis3a2dRQ1EvajVIWTA3RmFJNjMxUGl5UEUxc3p2YgpiSG9LaGRyOVpTb2tubEUvT2NZOEFPTmtzclBVYWlRUXczL1NNV2g3KzNYcXZ3VHJ2MHgzemVYRkZucURnQzRZCklrc1hrOWg0VWN5S1huU0l3UjkweWJIR3BsV3J5MnFwSEZ6VXR1Y3dBSXdTbE9QUVJadzFWU0pSa2JsYWd0WUsKQ1JsZjZOZFcvRm1FcVZvdStDQ2VSUSt6K2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbnJkd1pFUnZrT3AvNjIwd3BXWHZCUkViY2x6UVlJT0hVTGZNQjBEak5LUUVtaG5mClV5MFdYd00rNW1LWWg0UFZGNzY2MHI3NnpmVlhkS0c0YWkzS3IyTXNndGRLL1FFVkxodmZtcWhnR1JSakRiR1MKSFliVnJid0ZrQmltVkdPTUhjSStzbnBxUFdiRExmY0I1TlQ0Mk9SVlpVSisxSFVaNTVJKzFXM2lMZXlFYks3YQpUSzlxYUNvWlBVdGFsUjJJQkJmRXFYS1phUDJoRzNXWVpQdG9BTDBJNUxkdUE3QUwrMjNjVnZZWHFSOUh2M3dCCkU3VHc0QVNMd2lzYzJkQTExd3RsN25UbFpIYUs3MmFkU0s5RVMxenI0R0h3MmNqYkhHS1E4VHpJUEJjVDByeG0Kc1ZIY1N0UHJFWXpRQkRiR1p6U2lNTlJ6YXlYNmRibVRoczlkb3dJREFRQUJBb0lCQUNvdXd0WkRRZ3VYNTR1ZwpwNDh0K2txMGMwRC8zZm5vdXl2K3pXRVlJOHEzMU9sSCt3eldMTjN2dE9YeVNtdXA1QmE5Z0ZYR29FM2c2Tzk4Cms5RFVmc3dDWmJBWW5EdUY4Q1VqRDFqQmExai9EQngxbDBuMXJoRFFxZ0hVSzFDK2JGejBaVWwyTTRwQ0o1bXQKem5rTkNWNUx3VTU2VDg4VG1HRHRnM21pREx6N2RrWlo2S1pTYkZRUTdBVVJBYzE1K0ptY3htc3Z0dHJZL3IwNgpZWTJaeHg2ZVlNN0ZGY3lQeFNUd1FPS3ZMYy9Wb1B0ZDBxVFlFUXd6b3BpOFEwOFRGSzlzbzhmeWVONXBibGloCmxRa3dnejJKMG5iSXlsUkhnSm5vV3NMUVZKeWQyVnRHcElZc2pjcFNDZEZMdUg5OHkrcEdlVlhRL0RRQk8rWFcKWUpEaFRnRUNnWUVBeHN5YkIvaXlEUkVTOERuRUJOTG5uNU5CUlJhT3RCZFBLNjhmR1c2TVZQRzFuakFlalVMVwpXdFRoN29iK3hERUZOakFGaFhaOGlHaUZzNU9IeTljK1NicVVXVUMxREQvaHd0bklEUFFZZ1lkMTZjMi9tZU1ICmVQdGdLeklHQzRHUWEwaHhGcWY2ZXVsK2dSd3oveUFTMlllUWlXSnJSVjZhbTMrUVNzN0pCWUVDZ1lFQXpHSmYKK0JGVjg0THQ0M2MyT01TblYzaXFoZXgwVjNOODRDY1lza2xPMFZOd01FZnRCdkZGSW5VWk81UFN3R1JFdk9yOApsUWZwenNsU0g0U2lmaVFURHJzZWZwTkN5bGdpcU5ZM04xN0VJK0thdW5VOFN6Q3g5NnRiWlROZHlEVkZzakhRCnpEZkU5d3ZNRExLK3M2QWhoaEJmT3Z6L1BZNFJCK2hYZFIyMEhTTUNnWUE0UkM3WTZiM1RUdkxTUlRkQ3VrTE8KZW9vdHVMMjVJU1BLVkcxejhFTU53Ny9Jdnd2V3BZVXYvakxZSlNNMGVqOWtYK0VnTGpIL0ZiNUoza2JBSGZMRwpRV1c5Z1QvODhKUEFaNDFraFMzdWMxMmZTQm1qdjRzYzVlRUpPTVpYT1Z1YjBjd1lRb0QxaXVMQVBqQkZWRm1oCmNlb3B5RTVlT3ZGOWMzUnVoK3FEZ1FLQmdRRENPN05NZ3QwV0lKV0hHR0hWTFQ2REtFK1dHcEt1RVRqWnBRNFoKVVFXd2RRVW5QUk9MQjN0V05jYVhFZksxbUJTakhRYVJjd1hGMlJsTWpyWUYvcTZGejFvNW5DVmJPc3NsZlA3WQpoaDBNcFd1NlMzUFRXU0dvWjViaDVDRDZCWGFJMUVMRDhUUWtPM2Zka1hrZUo4MzBKRmI4TGpjNi9tbzlBNWNwCjIrS3gxUUtCZ0JEUmlZTmM0YWNoRUZKV3kyNVdaN1pjUWl2dTZjZG9kbC9qWkhrT01nMTM1enFHblIyd09hVmwKTDBVcnR4K0ZsNEJzUDlBeGNjU1lPbE4yYU4wUXFCdnZDVU1sNlU2cXdKdFh3R1U4UFUzTU5yak9Vb2lmc1VvMwpNcnpjTW41VFd5cFdHN1ptdXlWaTFLQUk1VThFQUE4ZzVIOFB4SDViTkcwUk5NZVZEck9SCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUsyOGhta0JYc3ZTZHVESzBRREg1Nll3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3TjFvWERUSTJNVEV5TVRJeApOVFV3TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2akV3N2pyMmQ3czVjMlFEUkFTcEdDc2UxQlE5Q0RpT2JLSmtmRE44VDhlckVmVXgKbGxUclN3TUVtTElqL1hZdlJ0NkYwK1NzbGF5VGhvZXVZdHhVVlFqclZaU3ViaE1hYXF2dXZxeG4vRUtQVHppVwpSeC9ROXhXdkJ5blRkU0VxZFM3TXJON3I5Tko5RkxmdjlrQU5jNXNjcTFMbTIvN2ZvVW43ZWtPaldLYTdCSU1MCjMzRU13cStTcmFUN3NoS0NOeW9ORmg5WEw5TGdrNFBaV28wdHp4aTE5Z3hnQVVZUWtoMi9JMEMyMHowRWxObCsKS2dSdnpYcnNIRjN2ZEkxODUzakNncURxTnVOVmw1dTFSb2xlSDlMQ0psVmYyY3NYU2pyVGtzSG1tcHUwOGt3bApoelpLWFBvS0dqQVB4OG9DaXhvRE1IUHpvUkluZ2VoSFdhaC9pUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRTdYWlVZYUtNL3d2TFU3TWVlaThQOUxYL2FTTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVdLRzZmL0s5SElRMEJHY0dTVnFkYzlLWnZnZVBFbWtCL0NCeUZxMlVSbkFNTXlIOU9BaExpClFTLzBJM0w5bGQwQmt0bTlvV2tBSDBWWlN0NUNQc0hrV3lmU3h6N2pZNkVxbUJ4SGJ5a1BEbFFGd3ZkRXFRSGEKMTVJMEtqTFRyZ2NYTWRlR1NhRm9QUGNRNnJVcHhhUWFuUFpIT3FIcks4VkN3ald6TkU3QXBKeEYvenB1K0ZmRQpiNHhEbVhIbUwzbE10UmdmRE1KTEZTNkRWQis1RkhkRitSZ1pFNHl1Rjd1T2VWOVVrdTJOcjVYVTlOSjNUQ2J6CnZpbjZrU2YzNVVFUFRFem5CYWx1ZVlQUEtnU2ZOdUJkbkt3VEQ2azRJdjlsYzBLU0Z3ekhqSlgvNktwY1lTT3gKSVdGVy9TL0l5WWlwLy9wQlF1dm95anlSOTZUQzZpQjkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURxRENDQXBDZ0F3SUJBZ0lSQUl6VitkbkQwR0NDK3JBSSt2aS9EVEV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3TjFvWERUSTJNVEV5TVRJeApOVFV3TjFvd0tqRW9NQ1lHQTFVRUF4TWZZMngxYzNSbGNtMWxjMmd0WVhCcGMyVnlkbVZ5TG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU5iZVo4VWNaVzhRNTBCRThzajQKaTY5ellNVkVvUnBlZkxkSVoreVFSRFlURHZCOGNoRlJzZTA0T2h5SDlTdnVkU3M0aEViUHJjNm54ZFBDK2JjTwpFY1pjVWF2d0cvK2puUjdQUzJwWHFadnFzNzQwYjJxNm93eVZmNjBnaGh0MG1zK2s5cFk5bDVyeWVNTzhRSk5uCmorQmxrOUtXK2tVaTNyN0RHRHhIczdQbGNUek5OWTBtWjd2Z0MybXRjdG50QUJONUw5b0JETk15VW5obTMrOTEKSjV1dk9qRVJiMVROUVlZWVZmM2M1Zy9jQVdpanlvWHJMMTNhYTBXZTIveDQ5OEtXaUpVb0dMeDEwbkxRWGEzKwpUeHMwcU9CdTVGL21jMHYzUjBMMkt0emRzNzRQOXc1ZVBXMzRsdUNoWm9JaWk5Si85ME5BaDNuQ0dScFlVcFpxCnQzY0NBd0VBQWFPQjNqQ0IyekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVVR0ZGxSaG9vei9DOAp0VHN4NTZMdy8wdGY5cEl3ZXdZRFZSMFJCSFF3Y29JZlkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnlMbU5wCmJHbDFiUzVwYjRJUUtpNXRaWE5vTG1OcGJHbDFiUzVwYjRJbFkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnkKTG10MVltVXRjM2x6ZEdWdExuTjJZNGNFZndBQUFZY1FBQUFBQUFBQUFBQUFBQUFBQUFBQUFUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBZUR3NGV2RDlob2gxSnVQOVhjMVAyVXZVOVdzVDF0SjdTTkl4aDJNcjNacFJsRGorCnNVSjdGZ0J3SGZiUGRNWTc5KzIwWFNBLzhyK1IySkJFYWF5Tmw4R0dsUUNIdVZlM081Q0YrekVtUUVJME1Sd1EKeDAybE5LWlBaK2NaS3FUSkJ5bFNiUXhIaDhVWkRCcUNYNWNhVnd4UmJRanJISldFS09OcjRkcGNpTm8wRXpEVApvMjhoN2ZjdnJlV1FGZ2tIRGx5NmsvTWlmVTZGRzlmVVJHbjdxTDJMMExTTU95UWpZNlUyWlozbEV3cmdJeHM5ClRxTGYvN1VCcU5sRzZlQmtXbHdUMStQTVBYWm1Ock05UTNybmM5a3BNUllqb3dtK2JCazhHN21UaUJPOHRRWC8KWk1VU2ZsTU5aS2lzL3B4bk1Gc1g3TlZydHdnTGkzWVUvZjRkMVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMXQ1bnhSeGxieERuUUVUeXlQaUxyM05neFVTaEdsNTh0MGhuN0pCRU5oTU84SHh5CkVWR3g3VGc2SElmMUsrNTFLemlFUnMrdHpxZkYwOEw1dHc0UnhseFJxL0FiLzZPZEhzOUxhbGVwbStxenZqUnYKYXJxakRKVi9yU0NHRzNTYXo2VDJsajJYbXZKNHc3eEFrMmVQNEdXVDBwYjZSU0xldnNNWVBFZXpzK1Z4UE0wMQpqU1pudStBTGFhMXkyZTBBRTNrdjJnRU0wekpTZUdiZjczVW5tNjg2TVJGdlZNMUJoaGhWL2R6bUQ5d0JhS1BLCmhlc3ZYZHByUlo3Yi9IajN3cGFJbFNnWXZIWFNjdEJkcmY1UEd6U280RzdrWCtaelMvZEhRdllxM04yenZnLzMKRGw0OWJmaVc0S0ZtZ2lLTDBuLzNRMENIZWNJWkdsaFNsbXEzZHdJREFRQUJBb0lCQVFDanlQeUl2OUNDRFB4NQpmUlVrSkhFMTJGa1hoZXpYME5aNFQzVUlXaC9rcURwbkRqVlZCbFQrWWpISnRja3BKNmVndm4vMkNqQ09xa3lkCjBxM08zNmFrOFpJLzRkTTExbDNhTW1GbU9sUkxTV2lod0E1OTZLNkkxUnh4dDYwQ0dLdzVRNkhEZkVlb0VOUUYKUCtacGRqT3g5VHZzOXJEbkttRm9RQWFsVEhLcTJQL3kxczgzZ0JlS1RTYkh5akJBSzM4aWtwN3FKUmkxYnVvNgpGQjhiMDNhUGFKRXdVYzhtUDFERE5xaUlFMFhmZVgvQ1EybGNzRVdGQVV2YjQ3TGdLYit0alZqbmZsZ2ROUy9SCjgxNzR6VXVDM00yVHZCdzhYZ1Y2bmZzUTRlQ2hRZENEanlUMDdFNVlZaTc2SWprVlYvM0JBM0hYRktFN1JyV1IKKzU3dW1ubGhBb0dCQU5oVUJLNEdxVXZpa3JrRWUxc3FYTGJBMmdIcXJENXkyTG1CNlhDLzVqeWVEY0NwdlFUOApnL3o3TUpwZ2tuOHAxZlBXck9oakp1YUYzbk1tdUlZVEpvaGlnUjB6UkJhMG90eWsvd2hKcHhKcWorV2NLTnlMCk5CVDNLQUMwNkYxaVBHdUZHRGxDUkk0SkJyenZjN1htZm9DM0xaUFZYczgxUTNnNEdUNmhjemd6QW9HQkFQNUYKM3d2VURvd2F0UzRNSmJEbGhBZzdHZjc5am80VTRNM25lUzlsYWZmZWlpcFhGUjdFc0F6THBCYzB4YXJMWVNFMQpZUVlydkl1ajU2RjRLOFRPZDJUU2lob3FNNHJXTms4VHpWb3F4K25HVHZTcUNhUzlxbmVmWW1HamZYS2RtNDNZCjZtby9OZm5tc2RHWkIrQUFiSlNQdVZzZFZRK0hOMCs2ZnAzLzhrK3RBb0dCQU5XQ1h6Z1BsUW96cnBKemJQaTIKbjlrMEVEZHlFZHgwNTVoNE14bTRIUnBZK01QZUE1UW5VbkhlemNLZ2JCYWNDUEhvUUxJQUlvWEZQSiswYU16VAptK1ZpSzRMUmRYTmZoNXAwTXM1UU8xaCsybFZKd2o2aUdaNVRyaVM4YU5hNlBWMzFkOG9Uc0t2ckZyNWxLM1F0CjhVOUMrL1g3MHQ1NStJUndBZUtCNE1GbkFvR0JBSmlyNzA2MDFyODgwZ2lCOXFlT1I0YUJwZ3c2eGp0OVFiV2cKQkYxMjhQZUpRVUJHNVVHQ0s0cWpRelZEMUdQR2xkMVFwWjhFNThLWWVWMjBQK045YkthMjI0RDJVZGhNNG5MOAptdEpHMlozK0dpNUJZbVR1Rk1xYWdvSEpubXNSUXZNYWlUV2VHcFNmOWFpNXo4YXB1b2hBKzdRL21uRW1hUW1RCkdySlhtWEJKQW9HQVM5S2I2d3p1Y3hkSk1XV1NvL2ZMYW96cFBUM0RzM1dSZVM1OVUvV0drNEYvS2ZpV1FaYkUKUjdqYzJibnJzTWpva1UwL3dReDU0QW5iN2lpcXQxU296SDMrVzB3MisxRUcwQXRyazl1bHVJUkkyMDd4b0RiRApsR2pDUzg2UlhZUlBFcCs5Y3Zrc0R5TUNqSVBVL0VTbURQWFU2SVhrNFB6TGpJNmduQzNFVjhvPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUsyOGhta0JYc3ZTZHVESzBRREg1Nll3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3TjFvWERUSTJNVEV5TVRJeApOVFV3TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2akV3N2pyMmQ3czVjMlFEUkFTcEdDc2UxQlE5Q0RpT2JLSmtmRE44VDhlckVmVXgKbGxUclN3TUVtTElqL1hZdlJ0NkYwK1NzbGF5VGhvZXVZdHhVVlFqclZaU3ViaE1hYXF2dXZxeG4vRUtQVHppVwpSeC9ROXhXdkJ5blRkU0VxZFM3TXJON3I5Tko5RkxmdjlrQU5jNXNjcTFMbTIvN2ZvVW43ZWtPaldLYTdCSU1MCjMzRU13cStTcmFUN3NoS0NOeW9ORmg5WEw5TGdrNFBaV28wdHp4aTE5Z3hnQVVZUWtoMi9JMEMyMHowRWxObCsKS2dSdnpYcnNIRjN2ZEkxODUzakNncURxTnVOVmw1dTFSb2xlSDlMQ0psVmYyY3NYU2pyVGtzSG1tcHUwOGt3bApoelpLWFBvS0dqQVB4OG9DaXhvRE1IUHpvUkluZ2VoSFdhaC9pUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRTdYWlVZYUtNL3d2TFU3TWVlaThQOUxYL2FTTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVdLRzZmL0s5SElRMEJHY0dTVnFkYzlLWnZnZVBFbWtCL0NCeUZxMlVSbkFNTXlIOU9BaExpClFTLzBJM0w5bGQwQmt0bTlvV2tBSDBWWlN0NUNQc0hrV3lmU3h6N2pZNkVxbUJ4SGJ5a1BEbFFGd3ZkRXFRSGEKMTVJMEtqTFRyZ2NYTWRlR1NhRm9QUGNRNnJVcHhhUWFuUFpIT3FIcks4VkN3ald6TkU3QXBKeEYvenB1K0ZmRQpiNHhEbVhIbUwzbE10UmdmRE1KTEZTNkRWQis1RkhkRitSZ1pFNHl1Rjd1T2VWOVVrdTJOcjVYVTlOSjNUQ2J6CnZpbjZrU2YzNVVFUFRFem5CYWx1ZVlQUEtnU2ZOdUJkbkt3VEQ2azRJdjlsYzBLU0Z3ekhqSlgvNktwY1lTT3gKSVdGVy9TL0l5WWlwLy9wQlF1dm95anlSOTZUQzZpQjkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRVTFoMFhTLzU0ZzVsVlVGc2FVY0djREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEEzV2hjTk1qWXhNVEl4TWpFMQpOVEEzV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEV2tsQmprUU43dUhmaFVlc3FuRDBodFhucXJqeUEKV08velpQODR1aGpZZytpRVFvOExWdFRDWlJFd3dKOXZ2cjA2VEx2bU9Jd2MyWXZQb3ZFMjA1elpxczRTT25ocAppNjAvVDFuZU1TMVR2N1FpUXlTQ2o1RXZ1MnpVZzBoRjhWQkVQZjlHNnZvVVlSOUhRMjhPQzl6dFFZc0pWemRICnlma0I5YU50dHpXY1Z0TkVTa1UxMUc5emxRS1d0RGdmelI2WWV1OEU5WGFQOFdwQnNIVG5PT3NWeUF3djAxMFAKYWtJLy9MakVHL3ljVU55K0pBSThGVFFwS3g1RGM4SUpLUXNUTnNTWFhFTHl6NTAvSU8veU9GOWd3TU5BNnAzdQpzbWtoSFgxbkVBZkVBbFRDcGlMeXcyUmJwTzFQMGNoMFQ0MmpVNk9SSHBVankvYmhLK3dhbnNvdEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZFN1haVVlhS00vd3ZMVTdNZWVpOFA5TApYL2FTTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUF0SlRzYmo3NnlkSVE3UTRkSzRmWTJyMkZMN0lGamhiajhFLy93NFB1OXVSUnNhR0QKNWhmZjA2a2FOYjE1d0FVRnBTOUd3ZUNadU1DVEJ1Ti9SNDU5VXZwVGx2dzFaUk1Nc2dZYnhNUHRpb04yak9lOApETUpXOTYraVNnaEtMbjdNaEdwSTlCY2FsVit6SmZLc2hSRUdaQ0RSdjY3ckdEM3ZMazdpd2RUaGNId2FpMWRYCjdHZ2FjMExIbmRseGgrNkNtRkc1NDZWVlE4cFdRK1IwbkNROE5Bd09ZeVVBL3FjbVJ6b21Nb0JhbFVZTFM4eHQKOHNYdzhraG83Rkh3dnZ6TFFIWGxkd3J3eTR2RkpwdjExUktHOU9odHg0RHR3cmV3ZUZTUDRxVWZmOFpxRWJMdQp0MGNWVDF3YWlvL2orUkF1YnhwRDFjZ1BqMUFGblF4THRwZXBHQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMXBKUVk1RURlN2gzNFZIcktwdzlJYlY1NnE0OGdGanY4MlQvT0xvWTJJUG9oRUtQCkMxYlV3bVVSTU1DZmI3NjlPa3k3NWppTUhObUx6Nkx4TnRPYzJhck9FanA0YVl1dFAwOVozakV0VTcrMElrTWsKZ28rUkw3dHMxSU5JUmZGUVJEMy9SdXI2RkdFZlIwTnZEZ3ZjN1VHTENWYzNSOG41QWZXamJiYzFuRmJUUkVwRgpOZFJ2YzVVQ2xyUTRIODBlbUhydkJQVjJqL0ZxUWJCMDV6anJGY2dNTDlOZEQycENQL3k0eEJ2OG5GRGN2aVFDClBCVTBLU3NlUTNQQ0NTa0xFemJFbDF4QzhzK2RQeUR2OGpoZllNRERRT3FkN3JKcElSMTlaeEFIeEFKVXdxWWkKOHNOa1c2VHRUOUhJZEUrTm8xT2prUjZWSTh2MjRTdnNHcDdLTFFJREFRQUJBb0lCQVFDMEhMVm1Ibi95Qm5KNgpyS3plWTYvYzc5eWE1ZzdiSGN5dFhvWHVOQ2hPOXNyaTJvd0FWSzdiVHNNVFRWMklDM0FEMUEyVnZybStMYzV5ClNMQjUrVCtjWndmN3ZTRCtWOFRoYzlaWDhLZS91UmVYK3d4V20vU2ZRSkNtQWwxVWVLK0wyUTdEbE5LKzhKZTAKMWlJT2hGNjZ1VjNnUlZtZDVTZ2tRUEVpVTd1b3NwOVJ0Wk1hVnZ1bnJYckZ5UUxqRUxxVDJXVEs4dk0rWStmNwoxa0VkMlUxVTY1Ujgxd1B3N0hkTzJIT1Y3ZzY1MmYvRzc3SVJoR1VvWDduUzVQeTVUbytFbU0vR1ErcURkTzNmCmhDTEFBMkFLVlY1WFhGdlBRSksybkxGdmNHT084bmgrZkxLczZnU1JlRE5BZDRqNjFnaE5SM0RUWVN4RFA2S1QKd2NSM3NwOEJBb0dCQVBYTWY3U0VMQXY3VDhaRWtUckxtVVRkQnArbHJQazhabzJtd0xmVVJrZ0YrMERORGUwTwpRaWdjaWlGWWNnUVUrMkhtaXhqVHhwMVF4ekdxSmYwZmh5MEY0a3JLdFVYZVhRemNadG1oOUh4UkxGK0pBS1FuCmxHcUZtSnNBTVVPQklTZ2QreWJYS0o5MUhDVVpHSjJMMm1NTlk2VnZQMUZoVmJySlUzYnRsM1JkQW9HQkFOOTYKQ2hkbm5xVGkxTDAxWERtUVdMZXFiQ3cxWWt3UkwrSXNDcS80SFJTNlVkZDI1VG9Qb3ZSSDBodWJZZ1l4SENRSwpTVGhUWDQySTNkK3JIMzhMREVmTmhPMDJGWWpEWGZPMVlnTmgzVCthTVVRbFBhR2tTZEpZencrNkFzN3BYNXFsCjhsMVNacnhiNlUvQ09TSUpaQUlWcG5CQ3oxQmxpbWRwT1pFSXoxQVJBb0dBWEl0aGJiTHg3cFR4aFVIZHVGaGQKM2JxbU9zZWpKN2ZoR09ZMjJ6L1dNbG5tTHBERjlJSVEwSTltUm9YSmI5WUNpK3JFWmxXZUN5OFZ3SkpDZVZvOApoK3dXTm5pNTVaT0NUMHhRZ1JKa1BjWkdRYllRZ3IzUU9JY1NYUkdtZXJjTXA5RVo5WmErMmNLN0ZSQ3MzdXlBCkRobEZjazAvZHNHQ0NMQ3lkeTJmZjVVQ2dZRUF3ZEV2UldNNkJSa3hsclBidTVVRVRLNkN5TWkzNnU4UkQyQlIKR0pMZ2JlUzJMRi9TcU10ODhjNEVYS3NqbGVrcjFkb1I3TWJxWFc4eHR0WE1LRHZsdDdSNEw5OHpSL3pnMUFnZwo3SHdKRGl0bHhRdGphM2g0Q2ZXNkI1SzA4czBXZktLbUUrZnVjRGhxbmlEOXVoWlk1VEh2dXZkR3BCeWNyOWxqCjh2U29FSEVDZ1lBcG9tV3BlYzZycmdmYncwUDQzODAzY3dINmV4UHNUWWh2UFMwWkgvM1RtazNoT3RYTmlsZFcKM0NSNU96OGc5MDhYb0N6U05pRlVDWlBQUkRWNmtCT3hzOXNmTFNNb21NL0tnWXlhQVh6ckpVNDZ0Yld1M2FOTwpHMGU3azY5dzM0SzBIUGhodnhNdkwveEJjSENBSEtQbmhnQkFVREc3cXFhN050RW1VSEtnU0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUsyOGhta0JYc3ZTZHVESzBRREg1Nll3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV3TjFvWERUSTJNVEV5TVRJeApOVFV3TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2akV3N2pyMmQ3czVjMlFEUkFTcEdDc2UxQlE5Q0RpT2JLSmtmRE44VDhlckVmVXgKbGxUclN3TUVtTElqL1hZdlJ0NkYwK1NzbGF5VGhvZXVZdHhVVlFqclZaU3ViaE1hYXF2dXZxeG4vRUtQVHppVwpSeC9ROXhXdkJ5blRkU0VxZFM3TXJON3I5Tko5RkxmdjlrQU5jNXNjcTFMbTIvN2ZvVW43ZWtPaldLYTdCSU1MCjMzRU13cStTcmFUN3NoS0NOeW9ORmg5WEw5TGdrNFBaV28wdHp4aTE5Z3hnQVVZUWtoMi9JMEMyMHowRWxObCsKS2dSdnpYcnNIRjN2ZEkxODUzakNncURxTnVOVmw1dTFSb2xlSDlMQ0psVmYyY3NYU2pyVGtzSG1tcHUwOGt3bApoelpLWFBvS0dqQVB4OG9DaXhvRE1IUHpvUkluZ2VoSFdhaC9pUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRTdYWlVZYUtNL3d2TFU3TWVlaThQOUxYL2FTTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVdLRzZmL0s5SElRMEJHY0dTVnFkYzlLWnZnZVBFbWtCL0NCeUZxMlVSbkFNTXlIOU9BaExpClFTLzBJM0w5bGQwQmt0bTlvV2tBSDBWWlN0NUNQc0hrV3lmU3h6N2pZNkVxbUJ4SGJ5a1BEbFFGd3ZkRXFRSGEKMTVJMEtqTFRyZ2NYTWRlR1NhRm9QUGNRNnJVcHhhUWFuUFpIT3FIcks4VkN3ald6TkU3QXBKeEYvenB1K0ZmRQpiNHhEbVhIbUwzbE10UmdmRE1KTEZTNkRWQis1RkhkRitSZ1pFNHl1Rjd1T2VWOVVrdTJOcjVYVTlOSjNUQ2J6CnZpbjZrU2YzNVVFUFRFem5CYWx1ZVlQUEtnU2ZOdUJkbkt3VEQ2azRJdjlsYzBLU0Z3ekhqSlgvNktwY1lTT3gKSVdGVy9TL0l5WWlwLy9wQlF1dm95anlSOTZUQzZpQjkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRTkJ0T0l6SlY3T1dqb2Qxd3pQNlA4akFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEEzV2hjTk1qWXhNVEl4TWpFMQpOVEEzV2pBbE1TTXdJUVlEVlFRRERCb3FMbU0xTG1oMVltSnNaUzFuY25CakxtTnBiR2wxYlM1cGJ6Q0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFLOFY2ZlJOMG41V3AzN1dXdzdTaWk3dlp0N1UKVDV2WVFZMWthUWtmcTkwZU1NY1JwL1JFdzNJOXNWQ25Fd2VpUXMxdTRxQklaKzFKc1N0NUNhU1MxakdBcGtQaQp1Qi9sS00wL0tORE9kN1RWTm8yelhRRVVFYlVMWklFSFdmU0ROUktwSXVjMHB3MDhYWUdqSVhlelRFYnJQYkJ1CkM5UDdieHI2eWFRTHVlZnpwSzh3Tm43L2NMMllCT2Q3NUZFVk41NXZKUUp6RGRLZkNvNGhleVo4d0FyZnY0Z1EKd1lkL1RLMndSL2I4THBGMStBb0l1SFZ0Ukxoa0pGZjRiT09remFUTHFLZk9SSTEyb2Frci9nMVU5MUlFSTFqbApaQ2VXQ1M3Sko0blJuaXk1YitWZnJ6Nkg5Mk5qdUo5RDdVZXRLalZKeGI1QTFuckRkdTB0T1R3bDQrMENBd0VBCkFhT0JpRENCaFRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVVUdGRsUmhvb3ovQzh0VHN4NTZMdwovMHRmOXBJd0pRWURWUjBSQkI0d0hJSWFLaTVqTlM1b2RXSmliR1V0WjNKd1l5NWphV3hwZFcwdWFXOHdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUZ3QjR2UnFCVjR4UzQwdXlSTHBSMXJIWnovQlc0citrNUJwMVBnaGFIWTAKQ3pzT3FrVk1PeWR3UmdCVmV3MHBjaVFuRTgxa3RiaDg3V2VnYWNIV2U5WkF6VitneXBvVWdia0xRYlNBMXZjUgpRbkNNMG5MOU5ZVzA4OW02NzZNNHZMSVY0bFc2cHhScjhIaGdURml6SFVCSFg4K2NhSW92VFZLM2ZqMy9FeEZXCnErZjAyWW5YOVFQSTB5WS9idU0vSk5mKytnRjRjOWdTY1JyY0NCeC9HdUNXVTVFTk53U0dobjVUYldjOFphdEEKMEZiWFhiVmwxMzlTUGIrZXpqV20yNDJ5NWREeFRaeWpZS3pBYlUxZkVVTzY1eSszZW9OV0RSZFZ3V29ZeXp4OQp1cWVsMXc2cGwrRTlFQTZwdlk3ZEZDcnVPb1ZmRGNOTkovVDAvRWNPNFlvPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcnhYcDlFM1NmbGFuZnRaYkR0S0tMdTltM3RSUG05aEJqV1JwQ1IrcjNSNHd4eEduCjlFVERjajJ4VUtjVEI2SkN6Vzdpb0VobjdVbXhLM2tKcEpMV01ZQ21RK0s0SCtVb3pUOG8wTTUzdE5VMmpiTmQKQVJRUnRRdGtnUWRaOUlNMUVxa2k1elNuRFR4ZGdhTWhkN05NUnVzOXNHNEwwL3R2R3ZySnBBdTU1L09rcnpBMgpmdjl3dlpnRTUzdmtVUlUzbm04bEFuTU4wcDhLamlGN0puekFDdCsvaUJEQmgzOU1yYkJIOXZ3dWtYWDRDZ2k0CmRXMUV1R1FrVi9oczQ2VE5wTXVvcDg1RWpYYWhxU3YrRFZUM1VnUWpXT1ZrSjVZSkxza25pZEdlTExsdjVWK3YKUG9mM1kyTzRuMFB0UjYwcU5VbkZ2a0RXZXNOMjdTMDVQQ1hqN1FJREFRQUJBb0lCQUZXeUJ5R2hXWTZtd1RLTwpubUVCNGNxWk9LT0dEVFQ5UXhCK2ZmNk9OdU55WEhPREM4NitQVjlVSE02YUIvRnJsUURSN2pCL1lBYS9VKzB3ClArMENSYjVTOW80eGtPZGpsWFhvSFFVZW1XNjBFUkNJSXRSZFMxRnVzeEdJVkpvZUFrTVE3OWwwWnZOT2dZSHIKSTMxZ0Q4eUNaVjVPYnBHaDlqNmhVMEpzenVCZEM5cUJaZDFmQXNwdUhYV2drS3p2WWJxUlN0czUzQk9wZ1U2TQpnY3ZZT3pGUTREWUVGTnZtcjhoQjl2enBuMkhEd01vMmJDSks5ZFMrK3ZzSy9YdzJFcjUvazg5dkxkV0RvaUR2ClYvWmtLRFZ3MCtrL2doZVRrUVJMazA4MHlGWFQ3NElLNXJWTGFRVnlISTF5bzVIZks2dENmSXFrY2g4WEcrZ3YKTGhJM0FtRUNnWUVBM2ZPOXJQV1ZncVJlY0t4Tnp2UTNsWStOYzZ1aUZKTkQ5U2VCaStaeThuS1dyanJyQldQbQpTTEdySFFtQkJYS2VIT0k2VkxXd1BQZmJPNFRFTnJBbUU0NzhWMnFMVnh2RXdONUpPSE94ZUZEOVFBN09Cd0dmCmdiNDhiWE5jeDcxWld6ZThjTTd0SXpBU2UydHZyL2NBMDRJa0dDMS9JbDhpWmhnTUhLMGhTVFVDZ1lFQXlmR3UKMGp4V0ZKNUtHNjdzNEwvVnpHL0NwT0NBMWdZcEorNk9IbUhGM0w3NzExaCtadzVSQ2c3cnRQMEo3VDdXVGFvTApDbnBpY0hSYUJEa1FKbmdxVW9XV0Y3S2FhUzVMRkk4MXExSk9LeXRBeFE2OEY3OGlGMndiai9lQmtoY3ppWXFQCkRmRnRibjZOSG5iRlBFZ1NiTGt0N29VbkZlSmxwQWsyR1Zqa1B0a0NnWUVBeFNReFRvWllCVkUvL1M1ZWNqc2oKZi9tZzk2UDBjL2dXUFpPWWtvM2ZmWS9nWE9OQ1MyaGZiQ1E3UzdCY1pGMVpLV2lielJBUWVTYmlHS3lscDdtdwpLR0V4cStlYjJvUjByNmNCUEY0dXZTS2F2eUluUjd2ZVZOeUhTZVJVL2FrbXpFbm1YQURBU3lmdzBxVXI4QTBpCk03djltV2dYNjR5NnZob1A4QXlyYXgwQ2dZQnlxSEJVR2NIZUx3bHdzbDc0TkxOVlFkZEgrZGZzck03TlIxc1YKMFBtZ25pY3JXNmxaSmYzSk1qT09MV1ZuZUpnQXZKMU1NN1NVbU50TExvTUc5STlERDJucXhwTjVTTG1FVU5OdQpGR3NoZzR0ZzF6N2dWTHNzaFVzWThMUjJtQW5BL0JUQkcrVEFLY1pDRjdsZ3dxTURiQml5SnBQTWp5Q2FoRWhkCkYrVnY4UUtCZ0R4ZjJvMzBpTzZHUW03SnJMc2xWL0FaNnhEQzRZSnF4bzZoeDk2bXhXQXRrVFpXU0l3akxMRmcKU2RjOEM1aEN4Yk5IcnprMVdYRnI5aGtTcWRrOTYvUjlOOE5tN0ZUTS9GRXZPT08rZ0Y5YlVBUVRQTXAvUDBacgpkdVRseFVveFlwb3RTU1dPM0J4b0NNZWJsa2ZXb1o3OUI3c1hEUlJOL0lnUWluSy95SGJGCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: c5
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "15"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-wireguard: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "false"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  ipam-cilium-node-update-rate: "15s"
  cluster-pool-ipv4-cidr: "10.5.0.0/17"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  cnp-node-status-gc-interval: "0s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "true"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"

  external-envoy-proxy: "false"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: c5
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/clustermesh-apiserver/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumexternalworkloads/status
  - ciliumnodes
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumendpoints/status
  verbs:
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumexternalworkloads
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver-metrics
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/component: metrics
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: kvmesh-metrics
    port: 9964
    protocol: TCP
    targetPort: kvmesh-metrics
  selector:
    k8s-app: clustermesh-apiserver
---
# Source: cilium/templates/clustermesh-apiserver/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  type: NodePort
  selector:
    k8s-app: clustermesh-apiserver
  ports:
  - port: 2379
    nodePort: 32379
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.14.2@sha256:52f70250dea22e506959439a7c4ea31b10fe8375db62f5c27ab746e3a2af866d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/clustermesh-apiserver/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: clustermesh-apiserver
        k8s-app: clustermesh-apiserver
    spec:
      initContainers:
      - name: etcd-init
        image: "quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args:
        - |
          rm -rf /var/run/etcd/*;
          /usr/local/bin/etcd --data-dir=/var/run/etcd --name=clustermesh-apiserver --listen-client-urls=http://127.0.0.1:2379 --advertise-client-urls=http://127.0.0.1:2379 --initial-cluster-token=clustermesh-apiserver --initial-cluster-state=new --auto-compaction-retention=1 &

          # The following key needs to be created before that the cilium agents
          # have the possibility of connecting to etcd.
          etcdctl put cilium/.has-cluster-config true

          etcdctl user add root --no-password;
          etcdctl user grant-role root root;
          etcdctl user add admin-c5 --no-password;
          etcdctl user grant-role admin-c5 root;
          etcdctl user add externalworkload --no-password;
          etcdctl role add externalworkload;
          etcdctl role grant-permission externalworkload --from-key read '';
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/state/noderegister/v1/;
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/.initlock/;
          etcdctl user grant-role externalworkload externalworkload;
          etcdctl user add remote --no-password;
          etcdctl role add remote;
          etcdctl role grant-permission remote --from-key read '';
          etcdctl user grant-role remote remote;
          etcdctl auth enable;
          exit
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      containers:
      - name: etcd
        image: "quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/local/bin/etcd
        args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        # Surrounding the IPv4 address with brackets works in this case, since etcd
        # uses net.SplitHostPort() internally and it accepts the that format.
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=clustermesh-apiserver
        - --auto-compaction-retention=1
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - name: etcd
          containerPort: 2379
          protocol: TCP
        volumeMounts:
        - name: etcd-server-secrets
          mountPath: /var/lib/etcd-secrets
          readOnly: true
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      - name: apiserver
        image: "quay.io/cilium/clustermesh-apiserver:v1.14.2@sha256:0650beac6633a483261640b6539c9609f5a761f4ab4504fd1e6ffe7f2bb82e9a"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt
        - etcd.config=/var/lib/cilium/etcd-config.yaml
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: identity-allocation-mode
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: enable-k8s-endpoint-slice
              optional: true
        ports:
        - name: apiserv-metrics
          containerPort: 9962
          protocol: TCP
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: etcd-server-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-server-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-admin-client
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-admin-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-data-dir
        emptyDir: {}
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "clustermesh-apiserver"
      serviceAccountName: "clustermesh-apiserver"
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: clustermesh-apiserver
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.14.2@sha256:a89030b31f333e8fb1c10d2473250399a1a537c27d022cd8becc1a65d1bef1d6"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.12.0@sha256:1c876cfa1d5e35bc91e1025c9314f922041592a88b03313c22c1f97a5d2ba88f"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.12.0@sha256:8a79a1aad4fc9c2aa2b3e4379af0af872a89fcec9d99e117188190671c66fc2e"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.

# Only create the namespace if it's different from Ingress and Gateway API secret namespaces (if enabled).
