---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU81QTJDS05KdlVYMWdhQjlRMVFNemt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URTVNamN5TlZvWERUSTNNRFl4TVRFNQpNamN5TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFxaVJEck5FUnprcHF2SnNTaFVjTGZKSGhabmhIVk9tdUZOTFR2bFloazBhcHNwZlkKcFIvQ2xuL1dKMFYraklWT2V4a1Jpd2xLMjlzMnhyZEJ3WHhxVCtmMHFEWGExcVM1UGc3RzE1TStHVVptYWJQcwpOODZsMHBpTUpRZXVHM2EzcUp0eldTODVodFJEV0tHM2VXcDVob2VIWDlWY0ZmbTNFWGpkQkVFaS8rTzZUY01UCjJ4UFJHemVVcTJUUTNBRlk4b0hiMXdiREVlbEhSRzVDL1JjZU8yOGNoV2tIeGRsMW9JTzhhZDVxamsxZXN6UlMKOUl3T0JBOHcyOUJhR0JKc0RUc0NJVWhoRVd2QjVvNUJob1EvRnhqNUdYUjNnb1Q2VHZVQ3RaMHoyK1M5dDhHMgo2cWxwS1dwV3g2YzlCS0VGY2V2cGlIc1FLQ3VmN3g5UkkvWC83d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTE82Q0x3bTl2YUpDaUlJazQ0YVFESGI2OU9ETUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3BCN3pRNlZvbGhQL09QQjBBMkVWMGQxbGZENXFUb1F3RUJTazBGeWxHVjVOR3pEWEpSclE5CktDRktyU3lBZUV3eGxOb3VBZnJwS3NFYnJjTlg3ZERvNU4vcmJpc1NFTERwWGM4TWtRb21INS9BaktPVlNuQTIKMnl5SEI0b2t4cjdERTd4cjAweU42VFVCaXFoWE14QnMraExQNVd4ZVNWbEw5T3dyQXIvbDMwOVUxOEVqVFJ4MApheENwcHJha1d2MS9teTlQcXZaczBOQXhpa2p2d0RsZS9wdzRIY1c4Mmx2OExXU2UveTFOMDVWRDBISWJvTzNDCk9KdEFEQjlONUtvWWVYd1RqdkI2K2lrcGhIV1lPL2R1MDFFU0dSMjN2ME01YU9wMzNIMXlNNkRvQ3ZKblhIZjUKbnQwYkRRNFd6b3VlTFNSZWY0T2M5S2Z5M3NvSUc4TWcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcWlSRHJORVJ6a3BxdkpzU2hVY0xmSkhoWm5oSFZPbXVGTkxUdmxZaGswYXBzcGZZCnBSL0Nsbi9XSjBWK2pJVk9leGtSaXdsSzI5czJ4cmRCd1h4cVQrZjBxRFhhMXFTNVBnN0cxNU0rR1VabWFiUHMKTjg2bDBwaU1KUWV1RzNhM3FKdHpXUzg1aHRSRFdLRzNlV3A1aG9lSFg5VmNGZm0zRVhqZEJFRWkvK082VGNNVAoyeFBSR3plVXEyVFEzQUZZOG9IYjF3YkRFZWxIUkc1Qy9SY2VPMjhjaFdrSHhkbDFvSU84YWQ1cWprMWVzelJTCjlJd09CQTh3MjlCYUdCSnNEVHNDSVVoaEVXdkI1bzVCaG9RL0Z4ajVHWFIzZ29UNlR2VUN0WjB6MitTOXQ4RzIKNnFscEtXcFd4NmM5QktFRmNldnBpSHNRS0N1Zjd4OVJJL1gvN3dJREFRQUJBb0lCQUZqQmlqeEE1RlVGSlNFMgpsRGJLbFFkcTRuYWVFRGdQbnl4bHZ1ZnY3cHZ4cE56eHNhYVNKdVJ6MDdldzNROVpDMVBVQS83UDNpbEs5Z3c3CjFTV21UWjlabFp1YVhJclVhMzRnSDBLZUlTcjJPcjZ4aVd5amRJV2o1cGY2cGF6V0JZRURkdXp6WWNNZ1AvR2cKaXlIZmxYM0VmYTVVa3pFemozaWg0RW96NEpvenk2SEFNMlFrdFZ0OUx2RDQxZHNPaWc2VmdCbzFPblZWcW5nRApLSDNSa0QwQ2xMVnNYVk0rWDhHODVjSEJLKytvQ0V6cFMzVWViQjUza1MxY21wNnBrdkRHQm5jMmF6OFJ6Z01ECk9ubjhtKytJQUFBTGhZaUdndjFYVnNHMGdIK3lZWGU2aTVWeUhQVVpLdFhjckk0QnFvbzJ5VUVBZThTM0NXK0EKc05PSzlnRUNnWUVBNHNDZlVRQk93M2c0clVyTjlaMThUVFJrazRrR0FxbVJsY2RjVnVjVlNTQ1VtUmRhc0dNaApsYmwrUXZkektCTUtLdFJZQzhFS1ZESVFEK1N1cEhMczI2Wjc5K2l6WnNZM2hyQ05CV3E1VjVxM2VVVHFZbTlZCnJhd3ZlV082WXcvOXFKZGc4WkN5dXBiQTY0Z2ZpY20wVm1INkVQMWNROWJHMjVNcE5QV29rNjhDZ1lFQXdCWloKNStjVVM0dkxOK2Iwck1vWDNNVDZDZXF6dGNGamxmTTM5Ui9KUE5ibXVKQ1ZLakRoWFp3NTdKZTNuK3oxN1R5UgpnOTJ1R3dJS3dMajN4dDk5NlJvSUtKVkczOVhCRm14NmNJUDQvR3ZaQ3BqL2tvTitLWEY3cklrZmd3b2ZGWWV1CnRoTnhuZlNXeWcyNU9RRjlhRyt4QVBOSHkvTVZhSEtIZnFsUko4RUNnWUVBc1N6aFQyRjJLYlhlVTBtSDlNckIKUFhJYXhFemtyVi9ocWE3RXNBS1AxenZsNEZrbk8zdTUya3UrSklWRkxhTHk1dFJVbDVxV2Y0TSttYXlONldFRApRZjJzRCtGN2pHcUZLSEQ3UDZoTWVlOGlQVmRqN05ZajdGQUdLRXVNYjZzbkFIeUgremljN3I2c3IxMEZoNXhiCmxNT3BxV3pPa3hOVy9tcldYOU16alhFQ2dZRUFzalRLU2pSL0JxdDE2TElUTXk3MnZuSGNTMUQ4VXRaTXpyUHIKcVRWSkhIRi9jYUZwVWRBeGRRaFlVT0Jja2psajJ5bkRFcVNhUHlKQTJaV0JBbmNidUNQWGg5Y2QvdEd2cGw4VApwTWs3T092UlcxeWdWc3c1UXJldTlsM3M1MFIvbkJqYUJMKzdPOERNR0Q1dEphNzFLdXZjT2paNTJJUDN5NFBkCm9xdnd4OEVDZ1lCdUxWWHU3Y2l6UVBLeUxoYVVudEZvYW90d2JDRG1UcmlISmpaQlNzK1pVSTNJbTFOVStGVHYKQjVkRlNuWDR5VWtDY1ZDckRVRVJqcERDNmtJT1QwSTJXdUlHaDZmQ1lpdkQwMEJsNm96OW1jUHFjSThxOU9XTgpIL21YY1d5MWVVMEMyNldqVUhGR1FhMk1rZlh0eUNtWVV6TlJocW0xVHlYSUhGSmZUMEU4R2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/admin-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU81QTJDS05KdlVYMWdhQjlRMVFNemt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URTVNamN5TlZvWERUSTNNRFl4TVRFNQpNamN5TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFxaVJEck5FUnprcHF2SnNTaFVjTGZKSGhabmhIVk9tdUZOTFR2bFloazBhcHNwZlkKcFIvQ2xuL1dKMFYraklWT2V4a1Jpd2xLMjlzMnhyZEJ3WHhxVCtmMHFEWGExcVM1UGc3RzE1TStHVVptYWJQcwpOODZsMHBpTUpRZXVHM2EzcUp0eldTODVodFJEV0tHM2VXcDVob2VIWDlWY0ZmbTNFWGpkQkVFaS8rTzZUY01UCjJ4UFJHemVVcTJUUTNBRlk4b0hiMXdiREVlbEhSRzVDL1JjZU8yOGNoV2tIeGRsMW9JTzhhZDVxamsxZXN6UlMKOUl3T0JBOHcyOUJhR0JKc0RUc0NJVWhoRVd2QjVvNUJob1EvRnhqNUdYUjNnb1Q2VHZVQ3RaMHoyK1M5dDhHMgo2cWxwS1dwV3g2YzlCS0VGY2V2cGlIc1FLQ3VmN3g5UkkvWC83d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTE82Q0x3bTl2YUpDaUlJazQ0YVFESGI2OU9ETUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3BCN3pRNlZvbGhQL09QQjBBMkVWMGQxbGZENXFUb1F3RUJTazBGeWxHVjVOR3pEWEpSclE5CktDRktyU3lBZUV3eGxOb3VBZnJwS3NFYnJjTlg3ZERvNU4vcmJpc1NFTERwWGM4TWtRb21INS9BaktPVlNuQTIKMnl5SEI0b2t4cjdERTd4cjAweU42VFVCaXFoWE14QnMraExQNVd4ZVNWbEw5T3dyQXIvbDMwOVUxOEVqVFJ4MApheENwcHJha1d2MS9teTlQcXZaczBOQXhpa2p2d0RsZS9wdzRIY1c4Mmx2OExXU2UveTFOMDVWRDBISWJvTzNDCk9KdEFEQjlONUtvWWVYd1RqdkI2K2lrcGhIV1lPL2R1MDFFU0dSMjN2ME01YU9wMzNIMXlNNkRvQ3ZKblhIZjUKbnQwYkRRNFd6b3VlTFNSZWY0T2M5S2Z5M3NvSUc4TWcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRQ3Y2UVViY2VKZUhYdFp5MnB3eHFDREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOekkyV2hjTk1qY3dOakV4TVRreQpOekkyV2pBVE1SRXdEd1lEVlFRREV3aGhaRzFwYmkxak5UQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQCkFEQ0NBUW9DZ2dFQkFLeUFFTkExakFCT3Vtb2FXa1lnRkVFTVpsT1hRMEVzMXJ6ZWVSeFBKRDBQNTJvZGlDdDkKQmw5NGxxejlOdnptMWM2d1lyZlpGdjF6V0g2QW9wUHQ4NVVvbVVLZXltZ0NzZXdoT3RnV095ZUtLdkE0eS9vNwpJeTRyTmNuYVBVcDViWjM1ZkwrVjZXRFYyUFgybG5CVGNUVjBRL0lxVnpiREZubkpvdFFuZFBaU3hQQnZlNjNXCjZFSS80S2doMFVUV2I0ZzFiczVrbE5qRkpBZHA5QmphbVQySU0zY0E5ODkxcy95YUVHVW5IY1ZoRWwrbk5PazQKYUY5ak5URkpQbUN6TUlHaEw3d3dHN3R2WGxtTFJ0eXQwanEwNy9BcUhESzJFMHdncFVISG9lSGpFd29BRjMxbApaQUpwbGVGdnl1TzRHMmJQNERPODBzeUhqSkZwV2FKYmV4a0NBd0VBQWFOMk1IUXdEZ1lEVlIwUEFRSC9CQVFECkFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUEKTUI4R0ExVWRJd1FZTUJhQUZMTzZDTHdtOXZhSkNpSUlrNDRhUURIYjY5T0RNQlFHQTFVZEVRUU5NQXVDQ1d4dgpZMkZzYUc5emREQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFTMHJmYTFSZkc4eHYwUnRNanZjckQ3QXl5UklZCjNNR0hNYXpxUHh2R0JIdnpYQmJjRUQ3V200SDYxOWRnZTc5V0pDN1VJbEJsSkR2MFBEdmdIME15cktWcEVZZW4KVVNiWDB2Skk3aHdLSFp1NzVxTWtTdUtYbzZ5Q28weVEvNTlNekxMQjBPZmp0dzNsaTFGb3huRHVTSTQyd0Jocgp2SmJ2TllkKzFseko1YS92WjVtY1d0MHRiNnpZTWM0dzdsL1VnRDZINDQ4N3ZzQTFtL3NOcksvaHRsbEJ3WUsyCmJWODZnZ0ZNVDlPKzNyY0lESTJXYlh5alFwQ011MlhLcXZlMVEvTHY0dFVUMzFOYU1IclV6YkZpNEpEc0kxOEYKSEVxbk5EdG5xNmVvcDNRb1JWNUNVV2pDMUpQV0F2bEcyZk5TWk8vM1c4dDBZU0hBU0FoT1dpTTZtZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcklBUTBEV01BRTY2YWhwYVJpQVVRUXhtVTVkRFFTeld2TjU1SEU4a1BRL25haDJJCkszMEdYM2lXclAwMi9PYlZ6ckJpdDlrVy9YTllmb0NpayszemxTaVpRcDdLYUFLeDdDRTYyQlk3SjRvcThEakwKK2pzakxpczF5ZG85U25sdG5mbDh2NVhwWU5YWTlmYVdjRk54TlhSRDhpcFhOc01XZWNtaTFDZDA5bExFOEc5NwpyZGJvUWovZ3FDSFJSTlp2aURWdXptU1UyTVVrQjJuMEdOcVpQWWd6ZHdEM3ozV3ovSm9RWlNjZHhXRVNYNmMwCjZUaG9YMk0xTVVrK1lMTXdnYUV2dkRBYnUyOWVXWXRHM0szU09yVHY4Q29jTXJZVFRDQ2xRY2VoNGVNVENnQVgKZldWa0FtbVY0Vy9LNDdnYlpzL2dNN3pTekllTWtXbFpvbHQ3R1FJREFRQUJBb0lCQVFDWlZxb2JlMDM5US82ZgpyTmRNZU4yb1NTNTQ1Z0JwNGtMczExS1BZS2FWQlJzd0VCcG9saFhoTGgrNm5NaVJuVnk0QThGdExqUXFqcXMrCm9IaGt5V1A2MW9FT1lIc0taRUxtNVU4YW9RQnFrSDdFMWFnMHd2YnQ1b2xFNnBRTExNL05XdWFTbzk4MkxrSlQKdXFSV0swWjZQdVRiVXRuK0d3TlN0WFBoNVVVcVpFaEpvTDlkYnBIdHhjUkRZTFV3ZVlSanFmUFlyZUFRREUzYwpxMEJEU1hMYkY0TWxwcmdQOGxKbS9zN0tLaDFaTGwweGJnYk55RG9WMXFXTWlHZWgrSzlRN3kyeXpKQlhocG41CmZaZW1NZUlVamJqT3FMVGNvdWJNdjZka2xFWSs3TkU4SVVwSVlVVzBDOFh4Q3VnMGVqa2xlQ3A0a3dJVnk5bU4KL3VCbnFuZWxBb0dCQU1ITE5kbERSakJOKys2RFVya20zSXk4WjlRUHF3ak8xdEJFNUZiM2lFcmVxUUwwVlhnNgpNa0grRkp5b1J3SzMxZlViNHlIakIrbEszQnR3Z1NJTWdkaGJ4R3F4SzQxRUFDTU0wUkIwTWtqTEFFemZ5TjgwCkZUVU9ZWjRQeUk0b0g0UEdGTUlWeWQxSTRRSlhhTlBTRGl4R2VyYjN1dkY0bjdNK2FJUGZUQWpEQW9HQkFPUGYKRlROK2Q2eDZwU1hxdzdYZU9GNlB0clFUVkhQUU1CNk8wNTRoTkVIVHFybUIwRWpVenR6R1hHYTdFTHhCM2l5VQpiNWVxNlJONTVJb3ROUmJQOWpucnlPd1MwUXFQMFo5cEp0cE11S2JoZXRoOURKVnhLYngwYlZtb2VrRkxPN1orClgrZUVjZXpEamdyOGhyemJFUjVxT2VoaVYxK0sxY0JtZXp5eE1ZN3pBb0dBZENiSDc2QlN3VUQ4YnNobkhISWUKWG52Ti8xd2t0dkxCN2JKYzZZTVRQVXlYSUI0eDNBMkZjZWhIa2wySnNpZGRKYnZCTnQ1TUw1ZWV0Uk9KVWs4TQp4QkM4ZVBZWGxHUGRjU1NOYWI4N0pFWUh1QXVvNlo3ZDF4NzNnelVTajZHY3dlNUhJc3pNWU1UOWw5bXNDc2tyCmxYM29yeUZyK3E3QmlUMHVoMXVleHVFQ2dZQS9IaWE0T2JxYVd1cHR3MFpzbE40V1MwWjNRTGR1ME9iVFFBcWIKeldTMUt4VXFCeXdUVUdid1BqMlA4eGJpbm5nVTd4U3Q5UmhVWGJvUkVBNlpnQWNhNmhXZ1ZtSHl3LzF6WTJQdwpxYm1uOStMWUhtTWk3ZEo2c2VFc0tYK2JvR1FzMjNwakhZdVU0bUh3NXh2SEtnTG00dE9oYThQNTRmSHROalhDCmpPNUdRd0tCZ0V6WGwrRjd1KzU2ZElySkFPSXd1REk5MDNxVXJvVnAxcG56MWthNCtYSzBMNFQwdzdzbXpENnoKYmU4MFZMSlJVcG85YkZGK3ZwK09mKzdsd2VyQUVUQjR5NUcva0tMMUcwRmR0ZjY0WnlzdW0zaDNCRTVEZjJrRgpiTFBTbXRPT2lETlo2RVVhdUUyOGRuSVdKZHhFeWhKUzgvcFhGSUVMY1I1c0cxeUpZRG16Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/remote-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU81QTJDS05KdlVYMWdhQjlRMVFNemt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URTVNamN5TlZvWERUSTNNRFl4TVRFNQpNamN5TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFxaVJEck5FUnprcHF2SnNTaFVjTGZKSGhabmhIVk9tdUZOTFR2bFloazBhcHNwZlkKcFIvQ2xuL1dKMFYraklWT2V4a1Jpd2xLMjlzMnhyZEJ3WHhxVCtmMHFEWGExcVM1UGc3RzE1TStHVVptYWJQcwpOODZsMHBpTUpRZXVHM2EzcUp0eldTODVodFJEV0tHM2VXcDVob2VIWDlWY0ZmbTNFWGpkQkVFaS8rTzZUY01UCjJ4UFJHemVVcTJUUTNBRlk4b0hiMXdiREVlbEhSRzVDL1JjZU8yOGNoV2tIeGRsMW9JTzhhZDVxamsxZXN6UlMKOUl3T0JBOHcyOUJhR0JKc0RUc0NJVWhoRVd2QjVvNUJob1EvRnhqNUdYUjNnb1Q2VHZVQ3RaMHoyK1M5dDhHMgo2cWxwS1dwV3g2YzlCS0VGY2V2cGlIc1FLQ3VmN3g5UkkvWC83d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTE82Q0x3bTl2YUpDaUlJazQ0YVFESGI2OU9ETUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3BCN3pRNlZvbGhQL09QQjBBMkVWMGQxbGZENXFUb1F3RUJTazBGeWxHVjVOR3pEWEpSclE5CktDRktyU3lBZUV3eGxOb3VBZnJwS3NFYnJjTlg3ZERvNU4vcmJpc1NFTERwWGM4TWtRb21INS9BaktPVlNuQTIKMnl5SEI0b2t4cjdERTd4cjAweU42VFVCaXFoWE14QnMraExQNVd4ZVNWbEw5T3dyQXIvbDMwOVUxOEVqVFJ4MApheENwcHJha1d2MS9teTlQcXZaczBOQXhpa2p2d0RsZS9wdzRIY1c4Mmx2OExXU2UveTFOMDVWRDBISWJvTzNDCk9KdEFEQjlONUtvWWVYd1RqdkI2K2lrcGhIV1lPL2R1MDFFU0dSMjN2ME01YU9wMzNIMXlNNkRvQ3ZKblhIZjUKbnQwYkRRNFd6b3VlTFNSZWY0T2M5S2Z5M3NvSUc4TWcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRQ3ZtdWFFQURiOTdkdnhqUmxDMnErekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOekkyV2hjTk1qY3dOakV4TVRreQpOekkyV2pBUk1ROHdEUVlEVlFRREV3WnlaVzF2ZEdVd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEZHBQZHUxSjhPdGJtQkRUZTdLQ3dWTWJCcEhLUDAwMWZaYnQ4L0hYbVBxcldSdEJoZzNBbDYKS3I3TkhtUmYzTTNRLzV1V2NoSkd0QnQzWlJUWEVPQkdmV1AzYVIvZUd0UGdUTE1weXdwVkpSdk14RU5IUkhQYwpIZDVySnByTHFlMkhDVHRiaXd2N21zRkhEbWFMemw4WEx6U1N1QkRTN0k4REVzdGVlRDkwRDhQZ1YyQ1Zxa1FQClZWN0g5akY4NmlsTSt0NWhqcDRpQU1EUFdzWjNFM2I0T2IwT2RSUW10ZkpiWXJMVWVES2x0UTNDSFlUcGNMdncKSE8zREIvTjF3V0ljOWxqcjlzY3ZMZ0VyZk5oU2k5aFJyUnZOVmhmc3JmSjBOeWVxRW5lVEZueDhCenhBNGZrNgptNitTcG1JNHhBOTB0MlZUZmV3QklvK1Q2bys5eDMvZEFnTUJBQUdqWURCZU1BNEdBMVVkRHdFQi93UUVBd0lGCm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWYKQmdOVkhTTUVHREFXZ0JTenVnaThKdmIyaVFvaUNKT09Ha0F4Mit2VGd6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBRWFCcGIrdXNmRFVWSGttODB3ZTdNaVhoalZZcUdROG1vQndyWVE2WFBzcTd0YzFFQWFtaEV4MnVucXJ6CmNsRFFzYytlTTR5TGNUWGFFZ3dpR2k0dlgrVXFYNk1iekIvVTdvYW0rWjJrT1g4akN4S1gxR0tVZGhZWVJpSEUKajROT0xZMnFqbHlVYmhxTElFbHJBbjVJOHBJMDhhS0QrZy9hKzZkbG5zUlVPeU5tSlF5Mzd2Z0RmeDdWczBjcgphTExsMUtaazMwbytGUm1Pa2pqQ3QyZ2pZcmNZRGdWMStmdHRhcEhidkxiMFpONUUyVzVwU3pLQnVHWDFBSjVmCmRUQklJQ3g2WmZBV1kxNFZDeU0vQkw1dHdCRTBUZTA5dm1weit0Ujd3V3FWWmsxekt5L0hUU3oxbEJVNWlQenEKS01nSG9aS1RtaG5WNnR3RGVRc0ZoNFZmbmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBM2FUM2J0U2ZEclc1Z1EwM3V5Z3NGVEd3YVJ5ajlOTlgyVzdmUHgxNWo2cTFrYlFZCllOd0plaXErelI1a1g5ek4wUCtibG5JU1JyUWJkMlVVMXhEZ1JuMWo5MmtmM2hyVDRFeXpLY3NLVlNVYnpNUkQKUjBSejNCM2VheWFheTZudGh3azdXNHNMKzVyQlJ3NW1pODVmRnk4MGtyZ1EwdXlQQXhMTFhuZy9kQS9ENEZkZwpsYXBFRDFWZXgvWXhmT29wVFByZVlZNmVJZ0RBejFyR2R4TjIrRG05RG5VVUpyWHlXMkt5MUhneXBiVU53aDJFCjZYQzc4Qnp0d3dmemRjRmlIUFpZNi9iSEx5NEJLM3pZVW92WVVhMGJ6VllYN0szeWREY25xaEoza3haOGZBYzgKUU9INU9wdXZrcVppT01RUGRMZGxVMzNzQVNLUGsrcVB2Y2QvM1FJREFRQUJBb0lCQUhwOTRBME5UclkzY2tURApCRWpYdzcwV3ovTFhWRGxLejZNbjVoTWdlLzBORC9sdE9ZZldNeHFrSXZ5RFRsKzRUTHF6ZU00bFRycHFjVCtECnlvZXRHUFY3K05KVDg3dXd3ZVdWSGZMNzlrTG1GajROUFUxV3BGMUMySmdKSnNWbHJSTFM1RTRNUTF3U3c3dzgKVmludnJKZklpOXFHQlM0OGRERHpveGNiaDUzZ3pSeWRaRko1aXlnWG1sc3NCMlMwZkgzemRMOXVHT0szS0wxdQp0SWMrdHgySVgzaTFRZG83YldkRTk0bWhmRkJLc0h1TWM1YUZjcm9wMm1ZZVBEVHNXWitnRjBlMm1tdUVURDNUCnRPRUVjSlF5NVVDVko5Tlg4aEFxVDFSZzFjTTJqa2hTQkV2SG83aXlTdFljL3hNM2xnL3V4UGVqY0lNR1FZdm8KVHVxVnVHRUNnWUVBOXlsOENaL21tS3l2blBNMDNPa0xtTUlKK1o3WVFxeWFuMFozOVlEVzZVYTdtaVdxUllRQgpQM094S3NUdWpoOW5IbUU4M05EN0JDRGdDcFRLZHpSQmMwVnZGbXNWb002Y0hFazJDRzlRZnFQWmZ0Y0hkZThqCm9URXV5WndpbXlhM0k0VTBIcVFZRDVVZDJTWVViK0c3SUh0ekE1M0NEdGZxaEJrWDF4UEtueWtDZ1lFQTVaSGsKNGRCbGF6V2VSTk4xZ2JrNXFEWDBVUks3UmtGdFFtNit0bTJ6TjY0Qk0wcnJ0bHcyclUxYnpiK0JXRmlZVE4rdQpFNFJWUjlwMU9TK0ZwOVJrZEpJZkdzOXZjYmp6bXZxVHdDUk9RcWRWc1FadkI3WU9GZHhTdzBzUllsUVI3VTIwCkxKZGFrbnkzSzV6N0ZXQUhKbjEweHhzdCtrQUZ0WElQU0QxR2xaVUNnWUVBN3IrSjY1b2tHOUtqaUk1OXYrNzEKbnNmQTd2bDdtVncxdUNsUDh6eFRYTjlRbEtSUmgvanRZNmVUdWVhbE1YQXdJZTUzNWkyUWEvcDlzSHJ0NEp2LwpwU09ySFJLdnY3Z1VvRll2OVpIaFJaTnNvdE4vaDNKTERvZjkxQTRZZDVxOFNYbUFVU0RkaFIvYngwaTdjUit4CnJMelM2dWxXN1JPd200M0pzNTZRbVpFQ2dZRUFsTDlUYm4xNU9WNGtqclAxRDNqVXd3a3lwTlZlUXNkaDVBbWQKeU5hTHFTZzEzdVpNbEh4cmNSOE92T0c1RFdWYVNYVWxkYi9wQWdXcXJzTDc5eUxIZEVDNXBzV0JrRTRtaWVTUwpsNHp1cUlHRUpJL21vVGgxSi9UNksxQVlrMzJsbi8wWklVdHdoRG9LOVZkaDJSZS9pbEQvdVlNQzU0TlVMNTBZCkNkYXFSWUVDZ1lCNHR2bXJWeXY4TUY5eGU5eVA2dlQrY3ZiN2phdlZ2L3ZlZFhHWmF6MExxbWRhd0ZEU0ZtcVoKT3FMb2lqMlFsaUN4cnhnSDFDWVd0T3JvZlNhcmNTNXg1MSt5VzNpUDN2dmlrRHh3MVhRcHJkdE9QV3pFV29OcQpiUWpQRkhTVGtma1VYVEw2Vkttemkxc3d4T2dhQkdTa0dnOHlOQ2lKbHZMNXBadVBqSmwwMVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU81QTJDS05KdlVYMWdhQjlRMVFNemt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URTVNamN5TlZvWERUSTNNRFl4TVRFNQpNamN5TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFxaVJEck5FUnprcHF2SnNTaFVjTGZKSGhabmhIVk9tdUZOTFR2bFloazBhcHNwZlkKcFIvQ2xuL1dKMFYraklWT2V4a1Jpd2xLMjlzMnhyZEJ3WHhxVCtmMHFEWGExcVM1UGc3RzE1TStHVVptYWJQcwpOODZsMHBpTUpRZXVHM2EzcUp0eldTODVodFJEV0tHM2VXcDVob2VIWDlWY0ZmbTNFWGpkQkVFaS8rTzZUY01UCjJ4UFJHemVVcTJUUTNBRlk4b0hiMXdiREVlbEhSRzVDL1JjZU8yOGNoV2tIeGRsMW9JTzhhZDVxamsxZXN6UlMKOUl3T0JBOHcyOUJhR0JKc0RUc0NJVWhoRVd2QjVvNUJob1EvRnhqNUdYUjNnb1Q2VHZVQ3RaMHoyK1M5dDhHMgo2cWxwS1dwV3g2YzlCS0VGY2V2cGlIc1FLQ3VmN3g5UkkvWC83d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTE82Q0x3bTl2YUpDaUlJazQ0YVFESGI2OU9ETUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3BCN3pRNlZvbGhQL09QQjBBMkVWMGQxbGZENXFUb1F3RUJTazBGeWxHVjVOR3pEWEpSclE5CktDRktyU3lBZUV3eGxOb3VBZnJwS3NFYnJjTlg3ZERvNU4vcmJpc1NFTERwWGM4TWtRb21INS9BaktPVlNuQTIKMnl5SEI0b2t4cjdERTd4cjAweU42VFVCaXFoWE14QnMraExQNVd4ZVNWbEw5T3dyQXIvbDMwOVUxOEVqVFJ4MApheENwcHJha1d2MS9teTlQcXZaczBOQXhpa2p2d0RsZS9wdzRIY1c4Mmx2OExXU2UveTFOMDVWRDBISWJvTzNDCk9KdEFEQjlONUtvWWVYd1RqdkI2K2lrcGhIV1lPL2R1MDFFU0dSMjN2ME01YU9wMzNIMXlNNkRvQ3ZKblhIZjUKbnQwYkRRNFd6b3VlTFNSZWY0T2M5S2Z5M3NvSUc4TWcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURxRENDQXBDZ0F3SUJBZ0lSQUs1NzdIRCt0ZGEybGZSRzZJZ25PbFF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URTVNamN5TmxvWERUSTNNRFl4TVRFNQpNamN5Tmxvd0tqRW9NQ1lHQTFVRUF4TWZZMngxYzNSbGNtMWxjMmd0WVhCcGMyVnlkbVZ5TG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxwOERqMHk5aVQ1c2xmV1d3bUEKMmFsRFlUTy80ZUo4L2x4Qk9uVGhkc0loTmJGRmlyc2thSFBYWVVVeS9IbzFYUnVYWFp3NnlmWmFIWWhwMjMxbwpWM09JNi9TQ3NraDcwMkl6M083cmIxNE0xN0I3d1FsaHMwbmNuYXl2aVdEb3ozQjg4dkI3QlpvZU90MHl5TzY1CkF3ZGVOaS82ZjQ4SlAzRXdxYVM3TFJ6ZUsyeGZkTWJCeTdaRCthUlBrQmdXSzRzcG85QUJjYmRlSXhWbGhEYXoKNC9DYlAycmt4QlY4K0lmMW5xZGtnb0NHekJSZ1hEN1RSTWFrWFBKZlZobTQra3JMYVpCb0UweDR4MTVncW03ZwpDaGdBSEN0VGRBWm4vVldQM05TWU5QMW5BdEtCOGcwSjNFcTNCUGtlYmd1dmdPM0wwRExiYWJMelo2dUdTZWZ0CnVoTUNBd0VBQWFPQjNqQ0IyekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVXM3b0l2Q2IyOW9rSwpJZ2lUamhwQU1kdnIwNE13ZXdZRFZSMFJCSFF3Y29JZlkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnlMbU5wCmJHbDFiUzVwYjRJUUtpNXRaWE5vTG1OcGJHbDFiUzVwYjRJbFkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnkKTG10MVltVXRjM2x6ZEdWdExuTjJZNGNFZndBQUFZY1FBQUFBQUFBQUFBQUFBQUFBQUFBQUFUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBb091OGhoVUJ5MU1RUllRMjJkL0JocHBSSlFHSC9EN0g4ZDcwNExOWUs1bXBHajVBCmtVRU16N045UjY3RjNNVUoxOVZkS2JGNjVwYUhZUWpTN1RiUm5RS1lPQmgrRXZrTGxVTm96UVQyTTIzV1MvOWsKTklZUUZpRW9TSUZDWXJ4OFpKNXNESUhqUGF2N0UzRThTVjFzUkZsYjMyY2E0UmRkVWE2MFJpazlNY09GN1dSZwo3QWs0LzhhRm9KdW13NXdwSXM5UC9XWVg2REp1bU9FSXA3MWFOdDBBNEtrUTRDTTRCUlVib2JFRmVVSXpHem9wCmFmTFVXWUZpRWJiRkJyUEZUdFpVQ3FmNVZQYkpkaElhejRwYVFLYVBjR2p5SUptdllHRndpYmtoWUY1MVdXOEwKTkpQSUNJOEIyKzFYUXJHSlFxdDJqbmJkcDVwYkl0NUllSDlnVmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdW53T1BUTDJKUG15VjlaYkNZRFpxVU5oTTcvaDRueitYRUU2ZE9GMndpRTFzVVdLCnV5Um9jOWRoUlRMOGVqVmRHNWRkbkRySjlsb2RpR25iZldoWGM0anI5SUt5U0h2VFlqUGM3dXR2WGd6WHNIdkIKQ1dHelNkeWRySytKWU9qUGNIenk4SHNGbWg0NjNUTEk3cmtEQjE0MkwvcC9qd2svY1RDcHBMc3RITjRyYkY5MAp4c0hMdGtQNXBFK1FHQllyaXltajBBRnh0MTRqRldXRU5yUGo4SnMvYXVURUZYejRoL1dlcDJTQ2dJYk1GR0JjClB0TkV4cVJjOGw5V0diajZTc3Rwa0dnVFRIakhYbUNxYnVBS0dBQWNLMU4wQm1mOVZZL2MxSmcwL1djQzBvSHkKRFFuY1NyY0UrUjV1QzYrQTdjdlFNdHRwc3ZObnE0Wko1KzI2RXdJREFRQUJBb0lCQVFDeXpVR0YwamdKcWRRaQp2aWRaakU2bUtUR293YUVlWFFReGhtVTdMZmFGR2Z4Mk5SeFlaUWMxa3R2ejBuZ2I0TkNlSk5xZmNncTFCeUJyCjdEdUVHYWhINFkrRFNGRVNpSTljQ0NnY2VHYTJnWS9JNms5aTVHZFlPWXlBeDJuc0hpelBTUzVSLzFLV3U4ZHEKMFVleEJIbHY5aGYwbHJUNWV6OTJFdGVGVitaZ1ZzMStDcGZER3Z4N2VPaVZFazRWblJHMGpocVRWSGhvQ3VvQgpFY0puMnhsZDIzRTR4bzdwcldXS25YM0lSZjBmanRyWFVJajFZdjA2M0ZNdzZtZi9HVkhuUzlNaW5tR0NObVBDCjd5ZWxUZmtOZzBUQ2sva2dCSWY4Tk0vUjQ0QWYrMU16TndSTUhVUXVRaEtTMlhBeXBjdURzWE9NeFZiNElQaksKQTlaWmF5YnBBb0dCQU9LQVFMdG9mVlJvVVFPbkk1bk9HazdWWUd4Y203M2ZrY0RrMzFJUUt4OFpFZm12WWJrNAp4NkdmKy9TV2NPcnpQekNRbDRZb3BYL1RoVUx3MzV3SU5KZmd1QVJzcFE0dExtUGtZSXRtRTIxVUdsaWZwMjU3CjFGUjlRd2JEUExzQkFWaEcwMk4vTGx2RkVzODl0OFRnRkk0aERRWWNyK0lnYXZmNVB5WVZTdjhQQW9HQkFOTEYKbnJ3dU9DWFlyalljT0d0NWpUYlZVL1FEL3lvTWh2dHlVeXF0SGl6TnBDUHIwcG4yS20waFJLdHl3ZjB4VkRIUwpTeTRGV0ZnenYrdDBlVTUza3c0VlhJYTZjUjZFYjkrMWRBTkw1bStxODI1ZHlIdnFuSDMyZFB0TElEVVpwNjViClVueFdyalcyWndzRksyTTA1T01zZzRIVkxXelErZFJHczFRV09kUzlBb0dCQU1xaFBrZnFsS1RjcGcyRWl6N2YKdVgxcE90ZjJpWVgxNnFrTW1CVU1UZWVHUUNTRm1BRmlJSVloWUFCU1RqYUM0cmNKdytUTG5ET2RBWXovZkt4VQpVdWpFcXh1YUxwZGVLREJKY1cyRUprRWFpbTlhZFNsTU1vcGJmWWtoUk1WdmdzcDhva1JTMVNCWVVCbUM5MUp6CnZTL2h0WXNRUXZFalcwNzRkbHdWbElCVkFvR0FDdVNSdHBJQTd0dks3UnI2UTN1dHM2YkV4dmlwNkVkcmRuVkwKSFFxRFk3ZGhBMFk5eFIwMnhoc1JESGRLMVVZR1h1aktYOStBMkZZY1ZoUFg3Ums2N1dCblBzTkY4MWpPMjFYcQpYLzA5TklvMk9INzZUSVVzZjBvTWM2eEhSdGREbGp3OEFCY091OUhvYzJaWi9xK09JTHQ5TkdtTEJuT3FaYkVkCnRYdk1rMVVDZ1lFQTNRdng4WjFuRjhOQk15WnpZNmRkRTJaWEpUcFhEbHlGOXhNMTlCZVJWU1F1RTBvTHlwd3gKQ0hQWWdMRnhhRTRCVDFPdUpZczFhZmtDd3ZlQm85ekg0a0Jha25IU3JiTVJwR0h5aDJ6bWVKZ0M2MjFya29LWQpITjVDWmdpNDJnZVNweGI2YTNWcUFvbnZFUmRCTm1yQmg3bGhhODFYSkVrNkVUZ3hvTlpYUDBZPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU81QTJDS05KdlVYMWdhQjlRMVFNemt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URTVNamN5TlZvWERUSTNNRFl4TVRFNQpNamN5TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFxaVJEck5FUnprcHF2SnNTaFVjTGZKSGhabmhIVk9tdUZOTFR2bFloazBhcHNwZlkKcFIvQ2xuL1dKMFYraklWT2V4a1Jpd2xLMjlzMnhyZEJ3WHhxVCtmMHFEWGExcVM1UGc3RzE1TStHVVptYWJQcwpOODZsMHBpTUpRZXVHM2EzcUp0eldTODVodFJEV0tHM2VXcDVob2VIWDlWY0ZmbTNFWGpkQkVFaS8rTzZUY01UCjJ4UFJHemVVcTJUUTNBRlk4b0hiMXdiREVlbEhSRzVDL1JjZU8yOGNoV2tIeGRsMW9JTzhhZDVxamsxZXN6UlMKOUl3T0JBOHcyOUJhR0JKc0RUc0NJVWhoRVd2QjVvNUJob1EvRnhqNUdYUjNnb1Q2VHZVQ3RaMHoyK1M5dDhHMgo2cWxwS1dwV3g2YzlCS0VGY2V2cGlIc1FLQ3VmN3g5UkkvWC83d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTE82Q0x3bTl2YUpDaUlJazQ0YVFESGI2OU9ETUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3BCN3pRNlZvbGhQL09QQjBBMkVWMGQxbGZENXFUb1F3RUJTazBGeWxHVjVOR3pEWEpSclE5CktDRktyU3lBZUV3eGxOb3VBZnJwS3NFYnJjTlg3ZERvNU4vcmJpc1NFTERwWGM4TWtRb21INS9BaktPVlNuQTIKMnl5SEI0b2t4cjdERTd4cjAweU42VFVCaXFoWE14QnMraExQNVd4ZVNWbEw5T3dyQXIvbDMwOVUxOEVqVFJ4MApheENwcHJha1d2MS9teTlQcXZaczBOQXhpa2p2d0RsZS9wdzRIY1c4Mmx2OExXU2UveTFOMDVWRDBISWJvTzNDCk9KdEFEQjlONUtvWWVYd1RqdkI2K2lrcGhIV1lPL2R1MDFFU0dSMjN2ME01YU9wMzNIMXlNNkRvQ3ZKblhIZjUKbnQwYkRRNFd6b3VlTFNSZWY0T2M5S2Z5M3NvSUc4TWcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUxOY3hncUg0VVBhRG1jVHpxTjBWWWt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URTVNamN5TmxvWERUSTNNRFl4TVRFNQpNamN5Tmxvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXNETWVrV2ZHOURJS3Q1MmxZc3paVW12eFppQkcKVVRMTklBVFdrWjMzOTRQcW9hSXEwclpKVGNmK1BxL0MyU1pPWHR0WVdsVHQ5ekgwVDAya0x4dE9oZFBmcTRlRQpCY2tlU05iWWV4U1RYQjlTY1oyOFNMRlJmVSthcy9IQ21xWnFWV1VXOGpXeXpDSU9jdmpJT0I2QlAxNzlPaWpwCjdjblNKYmNvNmZkYkQvUjc2dkJiTjUyeUZnNTdFQnBudVBkVTduaUZnYUJkOU5RRjhTMC9UZURoNXczREhLQ0YKNW9maGkwNzllcTFEcDlTaytVcXlKZ01UOGJGYkhBYjlCOUcvaUpUc3NMWWJiZDh4c1k5bDdHandaQjZwWFpvYgpLdzZ5TFk0RFROMm1pNXBpOEIwMmtjREZkYmUyaCsvWjB1YkpuWkx2dUZvbTJFVENET2RBTWtIeHd3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU3p1Z2k4SnZiMmlRb2lDSk9PR2tBeAoyK3ZUZ3pBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBQ05sbGsyRUtMakNRMjJSbE9DMm9FRFdlTVAvT2ttTDJ6YmlYL3UyN3o4TTk2c2YKeGFuV25UMU4vWXZSUEtUekZoWXBoTUljaHNCbit0eGlBMnB4ZWVEcXdpa0ZiMCsrb1c1V2U0NzloTXNUZVlPTQp2eVVnVkR3Wkx1UzVXd2dqeDdCaWNRZ1VRNjFtbXF0dk5NOWpsZ1VvVUlZd2N6WkRZbllNVGt5YnNJekNaZlVUCm1oUGEvRnZUcmNPTW93K0RmU3l5anordjArVVkvVmZsZ1Bnd2RYaU1XUWg5NlRZMUNCbElDbmU3VG5NTnlJNFEKSEdOSy9WUmpnaUQxblNRemVHbHJSRzM3NEdPQ3JMUTNtZEN5ZjFNUmIvZGZQM0lMM09Xc21iNzl1U1YzS3pGQQp4cnJNTEFENEtXUDV1QUluaFN5dXV3N3VMRVhuSk8zVm1Vdmt3Yms9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc0RNZWtXZkc5RElLdDUybFlzelpVbXZ4WmlCR1VUTE5JQVRXa1ozMzk0UHFvYUlxCjByWkpUY2YrUHEvQzJTWk9YdHRZV2xUdDl6SDBUMDJrTHh0T2hkUGZxNGVFQmNrZVNOYllleFNUWEI5U2NaMjgKU0xGUmZVK2FzL0hDbXFacVZXVVc4ald5ekNJT2N2aklPQjZCUDE3OU9panA3Y25TSmJjbzZmZGJEL1I3NnZCYgpONTJ5Rmc1N0VCcG51UGRVN25pRmdhQmQ5TlFGOFMwL1RlRGg1dzNESEtDRjVvZmhpMDc5ZXExRHA5U2srVXF5CkpnTVQ4YkZiSEFiOUI5Ry9pSlRzc0xZYmJkOHhzWTlsN0dqd1pCNnBYWm9iS3c2eUxZNERUTjJtaTVwaThCMDIKa2NERmRiZTJoKy9aMHViSm5aTHZ1Rm9tMkVUQ0RPZEFNa0h4d3dJREFRQUJBb0lCQUJMUjR2bjA4N014aFNPSApteHFxZHF2dkM2RzA0TTNiZHoxc1J0N1cySjEvWVpoU0VmRGZ0NFN2VCtDeU5VV3NhY0tIK3kvcTBtQU0zZU42Cmo0YllpOUtQaHR4elpRNlpKTHJ5OTd4dHZpK2d5TldKMjRxSUpnUVVkSm16d08xenlQZkdER1ZpaHU1MjFNUkMKL2wvQUlsMzZiMkcrN1AyUkNQa3VUeGh1YXpPUTVCNisxaGNXYlg0UElBRHVmd1pUWUVWYndLVzRTMERGNHBFVwo5ekZQbUFFVW8zMi9CcENXYi9hWjBrK0RMQklUWlU1VW9tNEMvcVFUY01mZUhuNUxWMXRoQStoWk1VVGtPYXArCnpDc1VtQ29lbUZOOE1DanJQN2NkVkR4UDlHKzQ1UmFWeXJxeDJLdTMwTFBTQ1ovaWxNVlh3Q3ZJWGRXOGxkU2sKOFlabFFjRUNnWUVBeWpoc2FrakYrZllVeWcxZDR3Q1p5WlRLcExsTll6NFJJcVM2bFNtREdqcmlDZlpidGZoSgpOMEVEbWttN2ZuTGswdWdRNXhORGNzdk5QQ1NNODR0ejBlYzNOZjJPSnJXeGphRDNSQzNXdFpQWEdVbEs3Q09ICk1DS1A5eWlIZWcwOUtqOGx0d2lkem1FQWx2aldmaDBtQXgxVnlzYkh6UXFtdU1TNkxRc0lIUTBDZ1lFQTN3OG4KQk9kYzl0MFpwdytxRm9sM1Y0bk9iU20zUzdlWTdaTjhtZ3BmTWRudlNVekwwcFB6S1YvaEpwU0N3VFlnYVBpVQpLNFpva014SndobS9iN2x5Zm4vLzB3ZUZ6K3p1eW5BL2lCTmpsNXNUc0MrbFcrWU5NSjhrUUhQRFJvdFZ1eko0CmVWKzNkK2JEaXN5N1BtSHNmYWRITHNNSWZaRDNic0plbGhwbHRnOENnWUVBcndWYXdEcXdMd0hQU0hsOU13WEkKRlBKVTJYRVFDNzhpY1l1RmVhaHVNZnVZdStxZndjVmRDUmVhR0tXTVE0c0poWWtaYUFZQ01JODMyTUFCeHFDQgo0OEJzeHF2bnBwVkhVVDlxQTNaeENNTW1QbHB6SUNJMzFXOTBqd1JqRFQzOEhGNS9OQVdmSDRwUlNsbWd1NUphCjNnTTd4Nzk0R24wSGc0K3hXMTdhN05rQ2dZQkQ4ZjZsdk1BUnBublk3S21YNGRuTGZYdTJ2dDFKb0N4aU9lbmIKbGtzM0NUYWRjbG9uMDg5ZkRBaXVVdENkZ0JwUlAxOEsvdzg5QkMxM2haWk50d1NNU2Zzb1VnTk51ZE5uTU5mNQpZRWFXK0xML21SUGFzWEhWSExUVE9UQURmZy9vVE5CcjBGODNrOEIrdUN4VkxVajNZWXdLVDNoM256L3ZxaDliCnc4QzF1d0tCZ1FDejVGaGtNS3ptbVJ3R1hIc08wWmY0dXZJNTdIeUV1bjZqOXk2d09mSzVpb2lsN2VGQ3FXWWYKMjl6MGRIMk04blc0U1dTTllSdFF1QmEyM004OEllenRIbFBIQVdWWlhoT0F5eFUyWEsvOTZLTURPcjJiYkh6OQo1QTRLMElpS1E5UVdoVWEramhVWlU5NkZheHN2Q0Q4WXNyTDJibnNSN0FtQmVFSE9yenJHSHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU81QTJDS05KdlVYMWdhQjlRMVFNemt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URTVNamN5TlZvWERUSTNNRFl4TVRFNQpNamN5TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFxaVJEck5FUnprcHF2SnNTaFVjTGZKSGhabmhIVk9tdUZOTFR2bFloazBhcHNwZlkKcFIvQ2xuL1dKMFYraklWT2V4a1Jpd2xLMjlzMnhyZEJ3WHhxVCtmMHFEWGExcVM1UGc3RzE1TStHVVptYWJQcwpOODZsMHBpTUpRZXVHM2EzcUp0eldTODVodFJEV0tHM2VXcDVob2VIWDlWY0ZmbTNFWGpkQkVFaS8rTzZUY01UCjJ4UFJHemVVcTJUUTNBRlk4b0hiMXdiREVlbEhSRzVDL1JjZU8yOGNoV2tIeGRsMW9JTzhhZDVxamsxZXN6UlMKOUl3T0JBOHcyOUJhR0JKc0RUc0NJVWhoRVd2QjVvNUJob1EvRnhqNUdYUjNnb1Q2VHZVQ3RaMHoyK1M5dDhHMgo2cWxwS1dwV3g2YzlCS0VGY2V2cGlIc1FLQ3VmN3g5UkkvWC83d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTE82Q0x3bTl2YUpDaUlJazQ0YVFESGI2OU9ETUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3BCN3pRNlZvbGhQL09QQjBBMkVWMGQxbGZENXFUb1F3RUJTazBGeWxHVjVOR3pEWEpSclE5CktDRktyU3lBZUV3eGxOb3VBZnJwS3NFYnJjTlg3ZERvNU4vcmJpc1NFTERwWGM4TWtRb21INS9BaktPVlNuQTIKMnl5SEI0b2t4cjdERTd4cjAweU42VFVCaXFoWE14QnMraExQNVd4ZVNWbEw5T3dyQXIvbDMwOVUxOEVqVFJ4MApheENwcHJha1d2MS9teTlQcXZaczBOQXhpa2p2d0RsZS9wdzRIY1c4Mmx2OExXU2UveTFOMDVWRDBISWJvTzNDCk9KdEFEQjlONUtvWWVYd1RqdkI2K2lrcGhIV1lPL2R1MDFFU0dSMjN2ME01YU9wMzNIMXlNNkRvQ3ZKblhIZjUKbnQwYkRRNFd6b3VlTFNSZWY0T2M5S2Z5M3NvSUc4TWcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQUpJcUkxTW5kUUk3NnRjb0NuVUtBOTR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URTVNamN5TlZvWERUSTNNRFl4TVRFNQpNamN5TlZvd0pURWpNQ0VHQTFVRUF3d2FLaTVqTlM1b2RXSmliR1V0WjNKd1l5NWphV3hwZFcwdWFXOHdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3EweDd1WVl4L1VnYUI3Vm5vdHhPQnR4R3IKV2RvcWRCeWJPZWY5OGxmQzd2WGJ6Q3Uzbld4cDM1eG1icWJsL1VEVkdMTnZmK3RRZkFMUHo4R1hQQXpLVXNkeApUM2lhYVdKRUtSamNmZFB5RktBeXRwT3JNYlFLNzZTR2cvQmhxa2N5eGs0UzRpQUZJVkYyaHJHdGN5Zkc4MkM4CjhZUEU2cnZoQVYyd3k1ZWVORC9KY3lIeUpDVkZTL0Fnb2JMMGdiczFhZnR1L1VRTHZoSCtjUjRTR1hHc0hFU1YKR0pBRk1zcUs1UUE5WlMxMTNwc1lCdTVNdFUwMGxZQzF2bEQyQ0lhR2Jqb2R0Sk9RYlZqMnVqV1lDeFNSaTE3WAo3QXZpYUdzTlNqQjZ2M0EzQjNEUVpPTEg3c2w0aVVvY2I4TGNBbWJBYVNGRUcwRFV6UFhoN0JGOWNBamxBZ01CCkFBR2pnWWd3Z1lVd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGTE82Q0x3bTl2YUpDaUlJazQ0YQpRREhiNjlPRE1DVUdBMVVkRVFRZU1CeUNHaW91WXpVdWFIVmlZbXhsTFdkeWNHTXVZMmxzYVhWdExtbHZNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBSnc2N013dVNDdi9NQ2IxQjM4QTBPQmNBT0c1UW5OeUxZSUZ6OWRwVTkKOGsrd1pwQXdJczR0NTltMkpvZStkZkVlUDlCY2RFMjFTckFqSlBFY2pSclhNeVVxVVlDYUtYRUxOVVZZM3BldApsYWc2emtpcHN0RzNnbFI5MkJlcHdlRWZ4bzNTeGliNmgrbzhhVWpRRy9JUnlNYXMrek8zM0cyNTh3MUtNbis0ClVQRG1razZyMTJNc0htdVh2MUxTSFpVTDc2d0NndEZWZDdjWUY4YlJSN3M0VVg3a3hWZVUzZi9YRWNoK3hHcFAKaHphMmlxVWVnQmtLb2hHQ0RyczlUaTFnTUF3cUJ6bGliVXEwaWtlTDJkN1E5RGlxWFNWeDJhdGc1M3laZXNoeQpqQ0xxNnhvUE5XZFlZU3F3aElaN3JFOWNFTFByamU3UEswWjhCSFZVRjhSWQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcXRNZTdtR01mMUlHZ2UxWjZMY1RnYmNScTFuYUtuUWNtem5uL2ZKWHd1NzEyOHdyCnQ1MXNhZCtjWm02bTVmMUExUml6YjMvclVId0N6OC9CbHp3TXlsTEhjVTk0bW1saVJDa1kzSDNUOGhTZ01yYVQKcXpHMEN1K2tob1B3WWFwSE1zWk9FdUlnQlNGUmRvYXhyWE1ueHZOZ3ZQR0R4T3E3NFFGZHNNdVhualEveVhNaAo4aVFsUlV2d0lLR3k5SUc3TlduN2J2MUVDNzRSL25FZUVobHhyQnhFbFJpUUJUTEtpdVVBUFdVdGRkNmJHQWJ1ClRMVk5OSldBdGI1UTlnaUdobTQ2SGJTVGtHMVk5cm8xbUFzVWtZdGUxK3dMNG1ockRVb3dlcjl3TndkdzBHVGkKeCs3SmVJbEtIRy9DM0FKbXdHa2hSQnRBMU16MTRld1JmWEFJNVFJREFRQUJBb0lCQUFnWWpXUzYxcy9KOFdrQworTG5ndzFub2RUdnJ2RDA2MTRnN3pGVHF3V0lKdFRrL2llcmYyUjJEYllRbFJsK3NDd0NPZFNLWnEydGJGVDhJCkY2SzFROTNxNG16cVdVcm9KN0lYU0loYXBrclkwMmJUNUZlK3VVdXpZOWJFTmdaSzdham9ZUmJnQktoNWxjVEsKU1cxeEFiZWFIVUdYS0ttU2Zta0JpWkV4ZFBRWWJmaTA1QkI2UTRoSmd5UU53cXFDYVBzUERVRzQ3MG1vRHNmRApmcTJGT0FiZnErVHAxNGtlMElXb1ZSNjNlUnRRZW9DOWlhc051MFc4UWpKd1Z3emdjVUxzdWtnSGRHU0hXNlM2CmRybzlOck1BRTUzZFFVU2t2L29BWWR3L29PYWxUY0pSWG1NbEd5QjZFUzZuc2g3NDVnVHh5MFdqWDlobXVyQzgKQ1RsNTAwRUNnWUVBeEM1SWgxcGdZdUxleVZBcnFXVFg1MFRIZUZLN0NkaFVGZFErRmQyckhTKzArbTd4amZuQgppZW9TWGNkTHliUFJmbUFYa3JzMHpTSWhJYzZGQTcxbWM5dkxyb3pwS2t3Rkl0Nk5rT1ZwZXpPTkZXOExXaWhuCldqSmNXdjdHeE0rRjZaRGYrNEsrV3pQZzZMclV1bWRicDZ2dEJyNHNKeEEybjlwMlkzOHNwTTBDZ1lFQTN1bVAKYkgweXNvT2pibzV6TFByakVmYmxhWDc3d2FjRnVaVlMrWjF4cWdnTXVsdS9jelpGdzNsYTVTTE9Fa0xUd3h2VApkemFPK3NJM0RoS3lxdXFLS002OGZhZ1BJR2lITC96M2NiUWVveE5CZmRXYURHWHU0ZEF2U2FWampyTDhvZEdrCktsR1lHQmNRR0NHOVFablNXUTQ4ZE9kTmJ0aFNLbzRUYitOT3RIa0NnWUVBaWRGWjhueHpLZ1RuTGRXOFZvd1oKZ01hNHVyYWozdzZ5UTRPTytoMTNrRkZyZW1ObUhxOU9YMnlvNm1pUHZXc3R5UElJblhRV2ErV0dFUkhjTC94bQpkUTM3ME92OUFWSFdhZUNlNHlQSExsM1F4elh6YTZybXNGNmdzdXc1QnhvaW9TcTlyeHJ5VDIvcW1KUm56V3UrCjM5UFA5K1N4YjkvY0FBQ2hHdFRFc0NFQ2dZQWs0a2lWRHZKQWozK1BYNHEzT3B3djhNWnMrbEgxN1FrSmVDZk8KbmJxZEE4LzNWZzhMcFVOTjROcWxaMmpwcEowZGY1RXgvSmtUN09ibk1UalhCdy90U0tmdnNzc3Q5WjNJMXZhcQpuYjhrQkorbGpwNTZ4ck1NTWtKZzBUano5N0hOcEw2aE1mY1VwVnhJWWV6SzJnVHdMMmJaZ1J4UzV3QlJna2k5CkRzT0xJUUtCZ0NQdHVyVzY4VDdaQXFMQUdnWitEWXRKOUVGS0I4TGkwMGNhV0RuZzNHZmZNeVAwajRaRkxyR3oKWEZVUmFvVjRwMHpiV3BlcE8wR3hYWnd0aUcrMkoxSmd3YWJmQ2t5eDI4bEZkZEF3UEJRUE40ZTVWN1hmbkYzMQptNkF1cUlXb1pINHNWNWpKaFRxTFNxUFRnVThLWWtjbXA1SUhkcU90NXJDcm55aWo4NTlDCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  policy-cidr-match-mode: ""
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":9963"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: c5
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "15"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"
  service-no-backend-response: "reject"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-masquerade-to-route-source: "false"
  enable-wireguard: "true"
  wireguard-persistent-keepalive: "0s"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "false"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  enable-health-check-loadbalancer-ip: "false"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  bpf-lb-acceleration: "disabled"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  hubble-export-file-max-size-mb: "10"
  hubble-export-file-max-backups: "5"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  ipam-cilium-node-update-rate: "15s"
  cluster-pool-ipv4-cidr: "10.5.0.0/17"
  cluster-pool-ipv4-mask-size: "24"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "true"
  bgp-secrets-namespace: "kube-system"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"

  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  # default DNS proxy to transparent mode in non-chaining modes
  dnsproxy-enable-transparent-mode: "true"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-xff-num-trusted-hops-ingress: "0"
  proxy-xff-num-trusted-hops-egress: "0"
  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"
  proxy-idle-timeout-seconds: "60"

  external-envoy-proxy: "false"
  max-connected-clusters: "255"

# Extra config allows adding arbitrary properties to the cilium config.
# By putting it at the end of the ConfigMap, it's also possible to override existing properties.
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: c5
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n            return 200 'ok';\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/clustermesh-apiserver/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumexternalworkloads/status
  - ciliumnodes
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumendpoints/status
  verbs:
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumexternalworkloads
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-bgp-control-plane-secrets
  namespace: "kube-system"
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-bgp-control-plane-secrets
  namespace: "kube-system"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-bgp-control-plane-secrets
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver-metrics
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/component: metrics
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: etcd-metrics
    port: 9963
    protocol: TCP
    targetPort: etcd-metrics
  selector:
    k8s-app: clustermesh-apiserver
---
# Source: cilium/templates/clustermesh-apiserver/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  type: NodePort
  selector:
    k8s-app: clustermesh-apiserver
  ports:
  - port: 2379
    nodePort: 32379
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
              divisor: '1'
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                    set -o errexit
                    set -o pipefail
                    set -o nounset
                    
                    # When running in AWS ENI mode, it's likely that 'aws-node' has
                    # had a chance to install SNAT iptables rules. These can result
                    # in dropped traffic, so we should attempt to remove them.
                    # We do it using a 'postStart' hook since this may need to run
                    # for nodes which might have already been init'ed but may still
                    # have dangling rules. This is safe because there are no
                    # dependencies on anything that is part of the startup script
                    # itself, and can be safely run multiple times per node (e.g. in
                    # case of a restart).
                    if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                    then
                        echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                        iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                    fi
                    echo 'Done!'
                    
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: write-cni-conf-when-ready
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.15.6@sha256:5789f0935eef96ad571e4f5565a8800d3a8fbb05265cf6909300cd82fd513c3d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        ports:
        - name: prometheus
          containerPort: 9963
          hostPort: 9963
          protocol: TCP
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/clustermesh-apiserver/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: clustermesh-apiserver
        k8s-app: clustermesh-apiserver
    spec:
      initContainers:
      - name: etcd-init
        image: "quay.io/cilium/clustermesh-apiserver:v1.15.6@sha256:6365c2fe8a038fc7adcdeb7ffb8d7a8a2cd3ee524687f35fff9df76fafeeb029"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - etcdinit
        # These need to match the equivalent arguments to etcd in the main container.
        - --etcd-cluster-name=clustermesh-apiserver
        - --etcd-initial-cluster-token=$(INITIAL_CLUSTER_TOKEN)
        - --etcd-data-dir=/var/run/etcd
        env:
          # The Cilium cluster name (specified via the `CILIUM_CLUSTER_NAME` environment variable) and the etcd cluster
          # name (specified via the `--etcd-cluster-name` argument) are very different concepts. The Cilium cluster name
          # is the name of the overall Cilium cluster, and is used to set the admin account username. The etcd cluster
          # name is a concept that's only relevant for etcd itself. The etcd cluster name must be the same for both this
          # command and the actual invocation of etcd in the main containers of this Pod, but it's otherwise not
          # relevant to Cilium.
        - name: CILIUM_CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: INITIAL_CLUSTER_TOKEN
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      containers:
      - name: etcd
        # The clustermesh-apiserver container image includes an etcd binary.
        image: "quay.io/cilium/clustermesh-apiserver:v1.15.6@sha256:6365c2fe8a038fc7adcdeb7ffb8d7a8a2cd3ee524687f35fff9df76fafeeb029"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/etcd
        args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        # Surrounding the IPv4 address with brackets works in this case, since etcd
        # uses net.SplitHostPort() internally and it accepts the that format.
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=$(INITIAL_CLUSTER_TOKEN)
        - --auto-compaction-retention=1
        - --listen-metrics-urls=http://[$(HOSTNAME_IP)]:9963
        - --metrics=basic
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: INITIAL_CLUSTER_TOKEN
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        ports:
        - name: etcd
          containerPort: 2379
          protocol: TCP
        - name: etcd-metrics
          containerPort: 9963
          protocol: TCP
        volumeMounts:
        - name: etcd-server-secrets
          mountPath: /var/lib/etcd-secrets
          readOnly: true
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      - name: apiserver
        image: "quay.io/cilium/clustermesh-apiserver:v1.15.6@sha256:6365c2fe8a038fc7adcdeb7ffb8d7a8a2cd3ee524687f35fff9df76fafeeb029"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - clustermesh
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt
        - etcd.config=/var/lib/cilium/etcd-config.yaml
        - --max-connected-clusters=255
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        - --controller-group-metrics=all
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: identity-allocation-mode
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: enable-k8s-endpoint-slice
              optional: true
        ports:
        - name: apiserv-metrics
          containerPort: 9962
          protocol: TCP
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: etcd-server-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-server-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-admin-client
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-admin-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-data-dir
        emptyDir: {}
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "clustermesh-apiserver"
      serviceAccountName: "clustermesh-apiserver"
      terminationGracePeriodSeconds: 30
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: clustermesh-apiserver
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.15.6@sha256:a0863dd70d081b273b87b9b7ce7e2d3f99171c2f5e202cd57bc6691e51283e0c"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          livenessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          startupProbe:
            # give the relay one minute to start up
            grpc:
              port: 4222
            timeoutSeconds: 3
            failureThreshold: 20
            periodSeconds: 3
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.13.0@sha256:7d663dc16538dd6e29061abd1047013a645e6e69c115e008bee9ea9fef9a6666"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        readinessProbe:
          httpGet:
            path: /
            port: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.13.0@sha256:1e7657d997c5a48253bb8dc91ecee75b63018d16ff5e5797e5af367336bc8803"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
