---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlxb281YXNENjdiSlphM0NEaGZNR0F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4TkZvWERUSTJNVEV5TVRJeApOVFV4TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1UHc2ZGE5dUQyRTJmZXhQaVlnRnBLTDJQM0RkNHhhZldqeDd6QlltQWVNUmVXZTAKV0VZVHlvd0VZRTZrT1U1bWN3emJkVldtY3RXbFRVVGlwWXQ0RXRGU0FzbVRIK3lVaWlUc3F1cmhkQ3dUemVRcApxZm5yYjdaZUFhOWJBQllLZ1dHWXlnTmlGdWxvcStESE1mS1pjWEFpaGJRUjVWZDZUaWUramRFUDhYMk42YlBkClJRWXVIcmpwS25PV1RjZ3BrUmlJTFV5VXh0dkU3bnBkT3dkVWY2aUl6azI1Q2MyT0ZncWorajcrNTUyNG1UbVQKczUyQmh4bUhTZDNxTmdYVzZocHdadVA0UXd2ZWsxRFp4MlJ5eDJ1dG9Ka2hQakw0c2Y4NW5aQ2tOSjZuZUFHbgowWndLRkl3RC8vaDVwc2o2SnVNbkZoV3lkeElzWGM5NUxqSFNEd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGT3gvTkZPaS91cU1aQ2JrZHcySU02clo4RDRjTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ29rellBN200LzNVZGM1QXI2THRoSm9IY0VHVU1YNk0rZjBac2ZzYUpXS04xVE5TNWorV1NvCm50d1lrOXRwcHVqYVBibWNmVFVXVlBEY0RKck55UDh4YWtZc3ZuK3V1ZERPd3VLd2M5K0hGQWRFNjdwZmxjZGIKUEdKcC9WbU5SQmlORzV4Qndla0FRRU9Icmk5NzVnMitWUWlzYzNhckdXSjhKZUt5dFE0M0wyR3QwVktzUGFDUgpWS0szTDZscmxzSXVjRUJqc3VVVGNwU0hhTHdHcUphK0NZTTE2UjRRaGY3K0pqeHZJcUMwMkw3Q0FjMWdQOXhtCkFoSDNieFNWVm5oYmk5TnlJODhnWTZmRFd4NUpaVzgwL3lkRDE2aDRYZWEvOTU1SlFQeEVoeTQ2dlZPdmZiSW8KVDllYVl0VUp5RzN6QklobTdYblJZeXRSNlhDVnl1UzYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNVB3NmRhOXVEMkUyZmV4UGlZZ0ZwS0wyUDNEZDR4YWZXang3ekJZbUFlTVJlV2UwCldFWVR5b3dFWUU2a09VNW1jd3piZFZXbWN0V2xUVVRpcFl0NEV0RlNBc21USCt5VWlpVHNxdXJoZEN3VHplUXAKcWZucmI3WmVBYTliQUJZS2dXR1l5Z05pRnVsb3ErREhNZktaY1hBaWhiUVI1VmQ2VGllK2pkRVA4WDJONmJQZApSUVl1SHJqcEtuT1dUY2dwa1JpSUxVeVV4dHZFN25wZE93ZFVmNmlJemsyNUNjMk9GZ3FqK2o3KzU1MjRtVG1UCnM1MkJoeG1IU2QzcU5nWFc2aHB3WnVQNFF3dmVrMURaeDJSeXgydXRvSmtoUGpMNHNmODVuWkNrTko2bmVBR24KMFp3S0ZJd0QvL2g1cHNqNkp1TW5GaFd5ZHhJc1hjOTVMakhTRHdJREFRQUJBb0lCQVFDUkxOQ3JlRE9oRUpNSgp0dDZlWlZ5ZWlxcndnZEJMZnpZOGNZaFRWZDkyNXMxWFdVWmZpTjVYVmZvWVRRT1ZTWDF1aDhKRFc3QVJzaDRCCkpTRkVyMjNMRUdhY1djd3JPMFRaYUp1YnFScVRHcmJibkVKRi82c2l3azVMWnkrY21GekV0bW0xK2ZzZ1o0N3oKR2Fsd28weGhQU1RGKytvMHF3ZGhzWlVBT0lHUktrTnJWUytuMEZDdERPTk9Jbk9WSFNiL0p6NWtQTDMrcyt1OAp4TFpTaTNzc0JhaEZ1cDhFNlAvZ1RSM25QcUJoRHp2NlV6VklnZERoM3R5MU1xdXZhM1ZvemMvYk1wMm1wWGR4ClQ3SUxDQ3BpUmRGdFphL3l4eTNSQnI4UjBqS293eUJpSnNFdTlQV2JVYlgyYURIOHZMdGJ6OUozRHRWQmNLL3oKU2dDNXliaXhBb0dCQU9VVkRXV1ZhdGszajU5TXEzRCtZZlBFQTdPWm1uVnZCTUFlQVo0ZUh3dDlwbnZFVzJ3egpmaFBhanVVSExkWlFEYkwxY2F5cHJnMjFGd2pLZWNPTGx0eTQ3ZGRPWDNtZDF0WnBaMWFhN2E5Rzg2UFlzNVBUCkNvT0RUdHVRLzV2YnNjN1JyR092S1p6cHNzOGRwQnlVK0QvbGh3U1BjazhYYUNNcWFzWDJaYmpWQW9HQkFQL2sKUWxkU0p6QmxNdEx2Z01teDdPdEkrR2U1SCtQTjRMQnpRdkNVZkhQa3FidldXK1krTFQyZlRVYkhPR1ZPbENzWApMNlhuWUZTUFlpL25nZ1B0bFllQlExRVFoSEN3UU9rRkhETG1nZjQ2YWdxc1EwVGlyZXRLMUg4UjVQVk5uVXduCks0NysyOVJrS2lVc0ZDa3ZwTWp3dlNMS3BvUWpOZG5PL1dtcWpkRlRBb0dBRjVkRWF1cXBOemRXamdRYVA2ZWkKdExUQjROUDNxUkpHdmZZWkdveGxqQXhqZ2FsbDlNMlV0VHl6ckhoQnl5a3hUL1dnd0RRMUhXcEJ0Z0VMNnd4TAorK3o3YVVuRDRVVlU0MzIxUzZEbXl6OFdSaEJCNWY0OHZmQmV4Wk80RHZmZjVybUc5RGtNb3dFYURlUXlpMUw0CkFiU0VZLzdWdWJsaVd3UzZQQ3EwclFVQ2dZQmJpcmZrN3lIUDRWUVdPOUh4MWJIdzFmRHZnajJUVERKbVRVV1UKTlRwMFowZ0ZSNEVtMC9WeFJ3enBGaG5wdS91cmtxYmNEZkxiTFZRdDJQOGRFcUJja25TWGluWW1yaGI2aFhaNgpDeFpUOFdmQUc3SVE4WnJRUXJ2VUhYMnY5NjBlOGlCV0RueHI5YzFSOFB2aFpBYnFUNTBKMWo5TnBCNytwVnJvCnN6ZjZ1d0tCZ0NJL0FBQkg0STV5RGh5eUVYM3dBR3NxdmpqTHM1RnhGYW4xQnpMOXpLU2tLWXZ3UjBveVk1ZngKZkdtajVBbGFTQTEvbzdwcmkxb2Y0NzRaVUxvUk40bHd6ZGpGWk1xeDlwMTRsUmpDZnlvMzFOeHQrcEpDN29HMgpSTUlQYWdCTE1ZcWJuSyt1QXpkeFA1SGhvUW9odXhkM2lOcC9HNUtyVWNEQWFqa2xJTTRuCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/admin-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlxb281YXNENjdiSlphM0NEaGZNR0F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4TkZvWERUSTJNVEV5TVRJeApOVFV4TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1UHc2ZGE5dUQyRTJmZXhQaVlnRnBLTDJQM0RkNHhhZldqeDd6QlltQWVNUmVXZTAKV0VZVHlvd0VZRTZrT1U1bWN3emJkVldtY3RXbFRVVGlwWXQ0RXRGU0FzbVRIK3lVaWlUc3F1cmhkQ3dUemVRcApxZm5yYjdaZUFhOWJBQllLZ1dHWXlnTmlGdWxvcStESE1mS1pjWEFpaGJRUjVWZDZUaWUramRFUDhYMk42YlBkClJRWXVIcmpwS25PV1RjZ3BrUmlJTFV5VXh0dkU3bnBkT3dkVWY2aUl6azI1Q2MyT0ZncWorajcrNTUyNG1UbVQKczUyQmh4bUhTZDNxTmdYVzZocHdadVA0UXd2ZWsxRFp4MlJ5eDJ1dG9Ka2hQakw0c2Y4NW5aQ2tOSjZuZUFHbgowWndLRkl3RC8vaDVwc2o2SnVNbkZoV3lkeElzWGM5NUxqSFNEd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGT3gvTkZPaS91cU1aQ2JrZHcySU02clo4RDRjTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ29rellBN200LzNVZGM1QXI2THRoSm9IY0VHVU1YNk0rZjBac2ZzYUpXS04xVE5TNWorV1NvCm50d1lrOXRwcHVqYVBibWNmVFVXVlBEY0RKck55UDh4YWtZc3ZuK3V1ZERPd3VLd2M5K0hGQWRFNjdwZmxjZGIKUEdKcC9WbU5SQmlORzV4Qndla0FRRU9Icmk5NzVnMitWUWlzYzNhckdXSjhKZUt5dFE0M0wyR3QwVktzUGFDUgpWS0szTDZscmxzSXVjRUJqc3VVVGNwU0hhTHdHcUphK0NZTTE2UjRRaGY3K0pqeHZJcUMwMkw3Q0FjMWdQOXhtCkFoSDNieFNWVm5oYmk5TnlJODhnWTZmRFd4NUpaVzgwL3lkRDE2aDRYZWEvOTU1SlFQeEVoeTQ2dlZPdmZiSW8KVDllYVl0VUp5RzN6QklobTdYblJZeXRSNlhDVnl1UzYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lRUldSbVhMK1FnbUVCRFh2cmI1V092REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEUwV2hjTk1qWXhNVEl4TWpFMQpOVEUwV2pBVU1SSXdFQVlEVlFRREV3bGhaRzFwYmkxak1USXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRDFjQU5Pd2RQd1g2NmNRKzhMeHhmY0VHbnZidFpXMzErelNOUFd1dmpMbXFwNW5HeE0KdS8wUmtaRmJVcFV1UngyY1J4RTdnMzZmL0hubFJ4THNPdy9XSFdPa0VNU3FWZWpoL05paHN2alh3aGpNbTVFOAovSm85aDBSL0FvVWtWQ2FDMmZRZG1wRWNBd2x6eEFPZ2pRQW42Z0JjVDVJZ3p0bUFqeUhubDkyVmUwQzEyRnZnCjdoL0NrajFna2dHM2p0OWVOMDM0aWdKNGZTRlJaYk1qejlKTHdGV0NjZDc1L1pGSGRjd2hoeFhobG9QeS9ZS0IKRy9zS0psYjA5czcwanh1UXJqR3FWQTZZZVhaaitmcHNLVlVYYTJub24xOXJwZXpxN2dXWmMxZWgvbU81cjFmTAo3eXBrSFZjZHhyc0NKaWhaTk1CTmFpYTVTS3pIU2hocmhCWjVBZ01CQUFHamRqQjBNQTRHQTFVZER3RUIvd1FFCkF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXcKQURBZkJnTlZIU01FR0RBV2dCVHNmelJUb3Y3cWpHUW01SGNOaURPcTJmQStIREFVQmdOVkhSRUVEVEFMZ2dscwpiMk5oYkdodmMzUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRk01Z1Y5RW9tL3l2QjM1UDA4bFRtMGZ5VlZYClE1M2pMRi95cEdCRnR2U040S2J1SmlKNjVPUVpXVHJlNXFlZTVrTURTSXhDeVAvMjlKcHlxYWZZSURta1dnRjAKYmh4ZElpbTJNQUpTN0YvZXFISUdSN09NcXFQWTA2cnczTllwREJoWmluZkJlVXRBcTlyZExCbnZYL0pNaGM5RAp1SWduRjdqcDl0YkxMUXFEeTYxd1J1NEhMUkRrTlFocUFQMDNBMXN3VHFNd1g0NjJQbVNYK0NvWWgwanZYMDg2Cjc4N1ZoTzV1MFpMSUROSjBhVWpEQVNVYTF0Yy81cXllU21jYVluK1h1STlVcXo2am5uTDYySzFTZ1JmUEU1TzAKV1VVRGhyWFhYYXlzbkZESk05b1hkWXQ0MkFKNWlsaVVveFhjaTJzVjJKSmhTT3Rta2VUV1lKRzFJNXM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBOVhBRFRzSFQ4Rit1bkVQdkM4Y1gzQkJwNzI3V1Z0OWZzMGpUMXJyNHk1cXFlWnhzClRMdjlFWkdSVzFLVkxrY2RuRWNSTzROK24veDU1VWNTN0RzUDFoMWpwQkRFcWxYbzRmellvYkw0MThJWXpKdVIKUFB5YVBZZEVmd0tGSkZRbWd0bjBIWnFSSEFNSmM4UURvSTBBSitvQVhFK1NJTTdaZ0k4aDU1ZmRsWHRBdGRoYgo0TzRmd3BJOVlKSUJ0NDdmWGpkTitJb0NlSDBoVVdXekk4L1NTOEJWZ25IZStmMlJSM1hNSVljVjRaYUQ4djJDCmdSdjdDaVpXOVBiTzlJOGJrSzR4cWxRT21IbDJZL242YkNsVkYydHA2SjlmYTZYczZ1NEZtWE5Yb2Y1anVhOVgKeSs4cVpCMVhIY2E3QWlZb1dUVEFUV29tdVVpc3gwb1lhNFFXZVFJREFRQUJBb0lCQVFEZ2JvVVh4M1llSCtCegpWRXVLNFl1WDJBcUd2enVRUk1JbUZ6cGU2S29JeEcyT3R0THhlQlY1c3pyUDN6dzdEUnl1Z3UzbkZkNzhQTXJhCk5adkFHR0hxMFFVRVNiRU1jWEo2ODlMRVNmdnlqN0pOcHhPd1NPeGh4d2VEZkxKeS9lQVpWMlE2amRTVFlOT0wKNEhuUW5oNitZT1BqaFgrQ01LUURRdDhsLzJESUJocEFaeWw3YTVWK1ZMTWpnZ1RvVHFQNjVYTjR6QVdKSnlPZwpmcENtbzhsQU1ieG4xQS9iMERLNWppWXZRb1BVckd2cU4vbVBJWE01RFFQK2c3b0ZJblRoUnhtRTJVaU51clFwClU4dVJPLy9YQkdNdnJDdXoydXZTUmtNa256cVgxM2kvQUgvOUxoVTJ5eXJjV2ptTTNMUDdpR0xVWUtvOU1zMkYKdXpPSEFlcmhBb0dCQVBuODRLb2Y3QWl5TlRJY3FjM1I0bWpnVjlibHBQOURwRldIWjhSS2NBSjYzemJiQllqbwowRkVHVjY0ZnlYUVR6b24vQzZZb3dwTjhtMFFSYkh2djBuUFpDbERoeTNYcGdEaUVVQWEwdERDUHRhQmVMOXZ3CnhrWTl4d1RQZDZvMnRDQktLR0VldnpHNWQ4WHJKVHJHbTBxTHZ0cm5aNkQybzZVcGM2SFQ1U0IzQW9HQkFQdFgKSHREZ01BejViRkJMNm4yWjdaMXhvZVBTOU9CbEZNQnBHU3BCalltYTFrUk90R0NHWlA3ZkVWWk5raFNxMGRtcAorWkZubEFEaDZ5OUZ5dklZclBYa2JQdHNKZnI1SGpYVFU3NVFtRHd6Tm92NXRjTDV6Wk1CQWQzWnVqUG1MQlhBClJwNGJSV3d3Y0FzSUJ5VDA4aHAreGNTOTIyN1dwamJYM05rMXdheVBBb0dCQVBKb2tucWxwYjN4QU1CdEp3TmMKS001RjdTZUhXKzNqYTdFOE1oVVhrWEgyTUFrRGJXU0xUYVdrSHRYTUlROGNQY1YydVpjUUkwM2RJTHBxb3VXegpja0hBRHM3TGhQMzd4TWdKRllqTEpZZUpjemZrM1VmTFBKalVRdTZaTjVLb3BSWkNrdEZLZlYvOFZ2Wm14SjB3CkJWbk9GTzQwUWpyRnIzM3lxaHdjV3l5VkFvR0FMYWNsY2N0Rzd4UmZHRGF4NFI2VWlvU1pZMGh1TWxRcDhNa20KU1FhZkx0OXhDL2MvekVpZEQ2NTA5N2dmVUtHMmZGTGpnZ1hPWEZxczNXbFA4Nm1Id1NJOHFXNTdkNXJJWWY2QQp0NURzRmdNM1pUVjJUblFSWXlKTHRJQlgwaFY4N0hhQVhUZVc1SS9ueWhrck13dEs3b1VZWnlRVk40ekZwRENSCmJPTFd5d0VDZ1lFQXkvdG00VDZ6a3JTSFpuYTJ4RWZSRWpTU3greVp3SVd2aXk2cHZzMzhhTUZGeWNyTnpGaWIKTXlqOHh0MFpQbzkzZ3NlTnVQT1Z2UXVmVEgvaTFsMFBTelhneUJxaGV0UGlmenhwWmgyZWNlS09uVktXUmhRNQphdTBHQmg2Mzl2MjJSSWdTa1BXNnBLWFhOQXcvZDk5S3UxRVBSdElyVHNPYjRFeGo2dlNWQlc4PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-ca-cert
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlxb281YXNENjdiSlphM0NEaGZNR0F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4TkZvWERUSTJNVEV5TVRJeApOVFV4TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1UHc2ZGE5dUQyRTJmZXhQaVlnRnBLTDJQM0RkNHhhZldqeDd6QlltQWVNUmVXZTAKV0VZVHlvd0VZRTZrT1U1bWN3emJkVldtY3RXbFRVVGlwWXQ0RXRGU0FzbVRIK3lVaWlUc3F1cmhkQ3dUemVRcApxZm5yYjdaZUFhOWJBQllLZ1dHWXlnTmlGdWxvcStESE1mS1pjWEFpaGJRUjVWZDZUaWUramRFUDhYMk42YlBkClJRWXVIcmpwS25PV1RjZ3BrUmlJTFV5VXh0dkU3bnBkT3dkVWY2aUl6azI1Q2MyT0ZncWorajcrNTUyNG1UbVQKczUyQmh4bUhTZDNxTmdYVzZocHdadVA0UXd2ZWsxRFp4MlJ5eDJ1dG9Ka2hQakw0c2Y4NW5aQ2tOSjZuZUFHbgowWndLRkl3RC8vaDVwc2o2SnVNbkZoV3lkeElzWGM5NUxqSFNEd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGT3gvTkZPaS91cU1aQ2JrZHcySU02clo4RDRjTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ29rellBN200LzNVZGM1QXI2THRoSm9IY0VHVU1YNk0rZjBac2ZzYUpXS04xVE5TNWorV1NvCm50d1lrOXRwcHVqYVBibWNmVFVXVlBEY0RKck55UDh4YWtZc3ZuK3V1ZERPd3VLd2M5K0hGQWRFNjdwZmxjZGIKUEdKcC9WbU5SQmlORzV4Qndla0FRRU9Icmk5NzVnMitWUWlzYzNhckdXSjhKZUt5dFE0M0wyR3QwVktzUGFDUgpWS0szTDZscmxzSXVjRUJqc3VVVGNwU0hhTHdHcUphK0NZTTE2UjRRaGY3K0pqeHZJcUMwMkw3Q0FjMWdQOXhtCkFoSDNieFNWVm5oYmk5TnlJODhnWTZmRFd4NUpaVzgwL3lkRDE2aDRYZWEvOTU1SlFQeEVoeTQ2dlZPdmZiSW8KVDllYVl0VUp5RzN6QklobTdYblJZeXRSNlhDVnl1UzYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNVB3NmRhOXVEMkUyZmV4UGlZZ0ZwS0wyUDNEZDR4YWZXang3ekJZbUFlTVJlV2UwCldFWVR5b3dFWUU2a09VNW1jd3piZFZXbWN0V2xUVVRpcFl0NEV0RlNBc21USCt5VWlpVHNxdXJoZEN3VHplUXAKcWZucmI3WmVBYTliQUJZS2dXR1l5Z05pRnVsb3ErREhNZktaY1hBaWhiUVI1VmQ2VGllK2pkRVA4WDJONmJQZApSUVl1SHJqcEtuT1dUY2dwa1JpSUxVeVV4dHZFN25wZE93ZFVmNmlJemsyNUNjMk9GZ3FqK2o3KzU1MjRtVG1UCnM1MkJoeG1IU2QzcU5nWFc2aHB3WnVQNFF3dmVrMURaeDJSeXgydXRvSmtoUGpMNHNmODVuWkNrTko2bmVBR24KMFp3S0ZJd0QvL2g1cHNqNkp1TW5GaFd5ZHhJc1hjOTVMakhTRHdJREFRQUJBb0lCQVFDUkxOQ3JlRE9oRUpNSgp0dDZlWlZ5ZWlxcndnZEJMZnpZOGNZaFRWZDkyNXMxWFdVWmZpTjVYVmZvWVRRT1ZTWDF1aDhKRFc3QVJzaDRCCkpTRkVyMjNMRUdhY1djd3JPMFRaYUp1YnFScVRHcmJibkVKRi82c2l3azVMWnkrY21GekV0bW0xK2ZzZ1o0N3oKR2Fsd28weGhQU1RGKytvMHF3ZGhzWlVBT0lHUktrTnJWUytuMEZDdERPTk9Jbk9WSFNiL0p6NWtQTDMrcyt1OAp4TFpTaTNzc0JhaEZ1cDhFNlAvZ1RSM25QcUJoRHp2NlV6VklnZERoM3R5MU1xdXZhM1ZvemMvYk1wMm1wWGR4ClQ3SUxDQ3BpUmRGdFphL3l4eTNSQnI4UjBqS293eUJpSnNFdTlQV2JVYlgyYURIOHZMdGJ6OUozRHRWQmNLL3oKU2dDNXliaXhBb0dCQU9VVkRXV1ZhdGszajU5TXEzRCtZZlBFQTdPWm1uVnZCTUFlQVo0ZUh3dDlwbnZFVzJ3egpmaFBhanVVSExkWlFEYkwxY2F5cHJnMjFGd2pLZWNPTGx0eTQ3ZGRPWDNtZDF0WnBaMWFhN2E5Rzg2UFlzNVBUCkNvT0RUdHVRLzV2YnNjN1JyR092S1p6cHNzOGRwQnlVK0QvbGh3U1BjazhYYUNNcWFzWDJaYmpWQW9HQkFQL2sKUWxkU0p6QmxNdEx2Z01teDdPdEkrR2U1SCtQTjRMQnpRdkNVZkhQa3FidldXK1krTFQyZlRVYkhPR1ZPbENzWApMNlhuWUZTUFlpL25nZ1B0bFllQlExRVFoSEN3UU9rRkhETG1nZjQ2YWdxc1EwVGlyZXRLMUg4UjVQVk5uVXduCks0NysyOVJrS2lVc0ZDa3ZwTWp3dlNMS3BvUWpOZG5PL1dtcWpkRlRBb0dBRjVkRWF1cXBOemRXamdRYVA2ZWkKdExUQjROUDNxUkpHdmZZWkdveGxqQXhqZ2FsbDlNMlV0VHl6ckhoQnl5a3hUL1dnd0RRMUhXcEJ0Z0VMNnd4TAorK3o3YVVuRDRVVlU0MzIxUzZEbXl6OFdSaEJCNWY0OHZmQmV4Wk80RHZmZjVybUc5RGtNb3dFYURlUXlpMUw0CkFiU0VZLzdWdWJsaVd3UzZQQ3EwclFVQ2dZQmJpcmZrN3lIUDRWUVdPOUh4MWJIdzFmRHZnajJUVERKbVRVV1UKTlRwMFowZ0ZSNEVtMC9WeFJ3enBGaG5wdS91cmtxYmNEZkxiTFZRdDJQOGRFcUJja25TWGluWW1yaGI2aFhaNgpDeFpUOFdmQUc3SVE4WnJRUXJ2VUhYMnY5NjBlOGlCV0RueHI5YzFSOFB2aFpBYnFUNTBKMWo5TnBCNytwVnJvCnN6ZjZ1d0tCZ0NJL0FBQkg0STV5RGh5eUVYM3dBR3NxdmpqTHM1RnhGYW4xQnpMOXpLU2tLWXZ3UjBveVk1ZngKZkdtajVBbGFTQTEvbzdwcmkxb2Y0NzRaVUxvUk40bHd6ZGpGWk1xeDlwMTRsUmpDZnlvMzFOeHQrcEpDN29HMgpSTUlQYWdCTE1ZcWJuSyt1QXpkeFA1SGhvUW9odXhkM2lOcC9HNUtyVWNEQWFqa2xJTTRuCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/remote-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlxb281YXNENjdiSlphM0NEaGZNR0F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4TkZvWERUSTJNVEV5TVRJeApOVFV4TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1UHc2ZGE5dUQyRTJmZXhQaVlnRnBLTDJQM0RkNHhhZldqeDd6QlltQWVNUmVXZTAKV0VZVHlvd0VZRTZrT1U1bWN3emJkVldtY3RXbFRVVGlwWXQ0RXRGU0FzbVRIK3lVaWlUc3F1cmhkQ3dUemVRcApxZm5yYjdaZUFhOWJBQllLZ1dHWXlnTmlGdWxvcStESE1mS1pjWEFpaGJRUjVWZDZUaWUramRFUDhYMk42YlBkClJRWXVIcmpwS25PV1RjZ3BrUmlJTFV5VXh0dkU3bnBkT3dkVWY2aUl6azI1Q2MyT0ZncWorajcrNTUyNG1UbVQKczUyQmh4bUhTZDNxTmdYVzZocHdadVA0UXd2ZWsxRFp4MlJ5eDJ1dG9Ka2hQakw0c2Y4NW5aQ2tOSjZuZUFHbgowWndLRkl3RC8vaDVwc2o2SnVNbkZoV3lkeElzWGM5NUxqSFNEd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGT3gvTkZPaS91cU1aQ2JrZHcySU02clo4RDRjTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ29rellBN200LzNVZGM1QXI2THRoSm9IY0VHVU1YNk0rZjBac2ZzYUpXS04xVE5TNWorV1NvCm50d1lrOXRwcHVqYVBibWNmVFVXVlBEY0RKck55UDh4YWtZc3ZuK3V1ZERPd3VLd2M5K0hGQWRFNjdwZmxjZGIKUEdKcC9WbU5SQmlORzV4Qndla0FRRU9Icmk5NzVnMitWUWlzYzNhckdXSjhKZUt5dFE0M0wyR3QwVktzUGFDUgpWS0szTDZscmxzSXVjRUJqc3VVVGNwU0hhTHdHcUphK0NZTTE2UjRRaGY3K0pqeHZJcUMwMkw3Q0FjMWdQOXhtCkFoSDNieFNWVm5oYmk5TnlJODhnWTZmRFd4NUpaVzgwL3lkRDE2aDRYZWEvOTU1SlFQeEVoeTQ2dlZPdmZiSW8KVDllYVl0VUp5RzN6QklobTdYblJZeXRSNlhDVnl1UzYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRRnRYSVZUSHdBUG16OFJrY1B6YmE4REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEUwV2hjTk1qWXhNVEl4TWpFMQpOVEUwV2pBUk1ROHdEUVlEVlFRREV3WnlaVzF2ZEdVd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFDMDgzUXVpZytoS2FoSEcxdm5MWlQwQzNUODkyUXpZVHIvTE9QdDd4RHZQYll0TWE5RExmK1AKanNRRGxMM3dTVzhOMUlnUTlEUVc2K1VUVHJ2clZsajVaU3l2T3JTT2ZtYjBpM1VLUjlxT2FBeldKUkx3TUJIcgphZXNrYVFNRzdrS0pYZmtZV2pNd2d0QW5jZ29pakkvUGprYlVrSVJGUWdzbmJPSDY2endsRkZ5SWw3ekg3Mkl2Ckh4R1AzQ3Q5S1FiSVJtUE1iZ3B3V21XdVZrYndWd1JOUlQzMGxJb2JYTDFRRndkTjFKNnRRaE1TbnljZWJtK3MKYWprcE85ZmE0Vzk4NW1PenN6azEyYTI0UGE0QlNSUCsrQ2x2eDBOaEw5ZElzYXEwOWFXV3V5Zys5bGlXdFNGegowWlZha3dHZUZFUUh2VjRTYmYwVk9za2ZJQUxFMW5TcEFnTUJBQUdqWURCZU1BNEdBMVVkRHdFQi93UUVBd0lGCm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWYKQmdOVkhTTUVHREFXZ0JUc2Z6UlRvdjdxakdRbTVIY05pRE9xMmZBK0hEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBWXlkZnVIQUR4TWF4U2VDQXpBbGRWRmhHWkZlWEp4Qm1FNTNLeEY1TjBEdDhTWVlRaU1adHlUeDIxbEl6CnhPWHNEYUxmNmR6K0U0Q255R011SlFHVllwcnpjSXdmZmo2bHlBUzgzMytkRy9Od3FSaDJRN2NUWTBsdjQvc1oKWGhYME9qeEQ0N0ZOeWd2TG9idXN4Unh2Vkoyd0JrZG5mcTYrWjhOK1kvRFBlMU84WlM0Y01TMnIxcnNHVTlmago2NzdhN2craWUwbWZ1Q0xNZjluZEdXeCtsUkxTYmtHL01CU21YWGN3bWZmZnJtbktibGJsV0xsMWE3Mlp4WldPCjBCOTFpVmpOOTlRTGIzUk1mOW1nM21ITW9mR2pzSVVPTG1qb0l3S0o2RWw3T1Boa1A5ZXFZdkNZdGFkQkVHY3oKc3BuZGdFUW1nek42ckxMdm5Fekd1THJLTHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdFBOMExvb1BvU21vUnh0YjV5MlU5QXQwL1Bka00yRTYveXpqN2U4UTd6MjJMVEd2ClF5My9qNDdFQTVTOThFbHZEZFNJRVBRMEZ1dmxFMDY3NjFaWStXVXNyenEwam41bTlJdDFDa2Zham1nTTFpVVMKOERBUjYybnJKR2tEQnU1Q2lWMzVHRm96TUlMUUozSUtJb3lQejQ1RzFKQ0VSVUlMSjJ6aCt1czhKUlJjaUplOAp4KzlpTHg4Umo5d3JmU2tHeUVaanpHNEtjRnBscmxaRzhGY0VUVVU5OUpTS0cxeTlVQmNIVGRTZXJVSVRFcDhuCkhtNXZyR281S1R2WDJ1RnZmT1pqczdNNU5kbXR1RDJ1QVVrVC92Z3BiOGREWVMvWFNMR3F0UFdsbHJzb1B2WlkKbHJVaGM5R1ZXcE1CbmhSRUI3MWVFbTM5RlRySkh5QUN4TlowcVFJREFRQUJBb0lCQUNKQU5zeWNXMnNCREpZeApDb3RPcUhRdE92NnJBUzlzaHhOSDl2alJtSjRBUzF4d25DRVdNdHFFaG51N0N0elJ1WkNmbXdYQ2c1MlhGeXc1CmFmNll3SXlzWnZIZ0pjOFhBL3ZqN2NwOVlWUTFROERCRWIyZkM3Vkl2amFOSGdLUTFNMVZtVkhQdVFMRXNBdlgKWFMyKzkzV3RFNkVtbmJMU1ZuUW0rdnRZelhDakFXaUc0a2pHck9XT01BK1VOeW1WMmVzelovVWdOUDVYMTY5TAo3VFRHZXhjdUJPWkw3ek04cSsrQzRsUlFpWkhZZ2Exc3NORzRCWitDODNsTzAzTmVadnBjajFZM0FLeDRidHdGCkl3a0V5NnZyMXl0VlRKeC9kQ3JaQjVqYWpLRVpTZmxRYTR3T2cyRFFKVkhwNG5kMEt6T2dVY1ZmRU8yS0p4NEwKYURZOWZ1VUNnWUVBNDg5V1liQ3JVZXltWlBmdkgvZHY1czV5b05Ca05ZbVllZWJ3QzNuaGs0aWlaWFBKRCt4dQp6aE9TSy9vVHZMK1JDNnB4R0hWQzdsOStGOWtwMmFzU0h6aUEvM2hsM3dNcWFZTkU3bUJQd0ttZDdia0xjbC9aClVPeXBZY2lhOE96Q1ZYNUNGNGw1RWFneVlEeUMwSCtSUkRKTVRZL0RYcmtBOFJ2bXVFZWhoMDhDZ1lFQXkxZXkKN0p1MnhSTXJoVjRkMExEYWxtT1ZsR0FrOGl4NDNiT2pKRkI1Q0xsakE2czZSQ2NNZm41YXJhZGJKVEpaUlRIdwpUb3RGTzI4TE91cnhqb21WUm8xV0VJaUVxVTlUakt5Vk4wY3FkOTNRTmxMeDR0YnkxYzRiMXVMdzNycWw4YmRZCjlhZk5wVWdzMEpMU2dDRnpIYmhhaFZlSjhiM0JCYTJIWUIrdnhvY0NnWUVBdVRYK2d0b0J6MDlaVU1tS2JqRGIKbDRqTkJSV29BeWJsQW1iUlRtTS9GSldIZ25nS1JabngxRFZ4SjdQZmpCc3JMNUxZOUF1UjZQOVdJc2w2RHUvWQpnZTJNWXlkZG0xeVZoTWNtcWE4LzUrRis5cUQxUDMzUnpzczZRcmUzMEp5TXVyazF2ckVUNzFrUjY5QUdnc0RVCk45KzB6WEpPWXBxQ3U0UDFwbWtHV0YwQ2dZRUFsVlkwRnFjSlpOVCtXblZUaWtmSVVUaVR5eU9OSHJwZ2pkbjMKRDUxMk5sMEloZEpEK1hlQUtvb2JpSHRuYWZyL0t0MVJNaTRBUzNUekYzTWlzbDhDM1l6QlQyVWpvTUNjaUt6YQo3WHo3aUlyRDlwR1dDZFY1QkdMWmVVaTBRNjlxWGdvY2NGV3JweDVKbzJpZzVlOHEvd0c4b1Q4NEZPMGFERlIwCkhybEd1NU1DZ1lCMWdQdnhXUXE1MTU5R3FNM1lXQkw3a1haZHRTa3gxSE9RcDdvdUlSRjJ4SWp3M2crT2pZaC8KM2RRbXlTRm9UNDdETjJ0TDZhTVJSNFg4M3F4NjJsQVR1ZXhGMUtLdXdlcFplVE10VGpBUThVSXd4M3Z6Y05PSApwSTV2dE9iOXJ5ZTJPajFPMlh6c2tyTlNmaFRIL2M1M1pNUXRwMG94ZDh5cThnYTlEVkxzbnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlxb281YXNENjdiSlphM0NEaGZNR0F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4TkZvWERUSTJNVEV5TVRJeApOVFV4TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1UHc2ZGE5dUQyRTJmZXhQaVlnRnBLTDJQM0RkNHhhZldqeDd6QlltQWVNUmVXZTAKV0VZVHlvd0VZRTZrT1U1bWN3emJkVldtY3RXbFRVVGlwWXQ0RXRGU0FzbVRIK3lVaWlUc3F1cmhkQ3dUemVRcApxZm5yYjdaZUFhOWJBQllLZ1dHWXlnTmlGdWxvcStESE1mS1pjWEFpaGJRUjVWZDZUaWUramRFUDhYMk42YlBkClJRWXVIcmpwS25PV1RjZ3BrUmlJTFV5VXh0dkU3bnBkT3dkVWY2aUl6azI1Q2MyT0ZncWorajcrNTUyNG1UbVQKczUyQmh4bUhTZDNxTmdYVzZocHdadVA0UXd2ZWsxRFp4MlJ5eDJ1dG9Ka2hQakw0c2Y4NW5aQ2tOSjZuZUFHbgowWndLRkl3RC8vaDVwc2o2SnVNbkZoV3lkeElzWGM5NUxqSFNEd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGT3gvTkZPaS91cU1aQ2JrZHcySU02clo4RDRjTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ29rellBN200LzNVZGM1QXI2THRoSm9IY0VHVU1YNk0rZjBac2ZzYUpXS04xVE5TNWorV1NvCm50d1lrOXRwcHVqYVBibWNmVFVXVlBEY0RKck55UDh4YWtZc3ZuK3V1ZERPd3VLd2M5K0hGQWRFNjdwZmxjZGIKUEdKcC9WbU5SQmlORzV4Qndla0FRRU9Icmk5NzVnMitWUWlzYzNhckdXSjhKZUt5dFE0M0wyR3QwVktzUGFDUgpWS0szTDZscmxzSXVjRUJqc3VVVGNwU0hhTHdHcUphK0NZTTE2UjRRaGY3K0pqeHZJcUMwMkw3Q0FjMWdQOXhtCkFoSDNieFNWVm5oYmk5TnlJODhnWTZmRFd4NUpaVzgwL3lkRDE2aDRYZWEvOTU1SlFQeEVoeTQ2dlZPdmZiSW8KVDllYVl0VUp5RzN6QklobTdYblJZeXRSNlhDVnl1UzYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURwekNDQW8rZ0F3SUJBZ0lRWVZ0bzdaU29DTzRIc2NrTFUxdXEwekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEUwV2hjTk1qWXhNVEl4TWpFMQpOVEUwV2pBcU1TZ3dKZ1lEVlFRREV4OWpiSFZ6ZEdWeWJXVnphQzFoY0dselpYSjJaWEl1WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBei95RVI2QVBMNEFOR1pFTTEwdVgKZVExa2tFS2lkNEhZZldCRUdLSm56a3FUWFJpNG53Wjl0OGVuWU9nakE1RzFCc3JiSWppS0kvNklIK0JBdWsrRgpBaFhicEZicXY4TkFTVVhBSTI2TEJRMStSZnBLR0NCV2NKSDBoQmx5VDJvMzZxMnVPamR2dGdtYWZHa004c1RJCnA3dk0xV0lzUWlPTUZubWRJZXdPRFJvamVpQVQ0b0Y2VTVXeXlQR1Q0YkJWVXpySU5PNzRIQWl0cmlwaVVaTmkKalBoSXNnaGRCRTBMZ3d5Uk1pcUVyQ1JBdk1WWUtvT0xUNXZMZDJ0a3dPblVHeGFaaUN6REdqQVRSYWNRb3FvMApvcGk0U2orUHJwSzBuSEgrYVRKMlVrb2s1VzI4UENKNTlFRzAyNDA5R1Z3QXRXRG9jMGR4cGxxVERVR0pDQjdQCm93SURBUUFCbzRIZU1JSGJNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JUc2Z6UlRvdjdxakdRbQo1SGNOaURPcTJmQStIREI3QmdOVkhSRUVkREJ5Z2g5amJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXVZMmxzCmFYVnRMbWx2Z2hBcUxtMWxjMmd1WTJsc2FYVnRMbWx2Z2lWamJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXUKYTNWaVpTMXplWE4wWlcwdWMzWmpod1IvQUFBQmh4QUFBQUFBQUFBQUFBQUFBQUFBQUFBQk1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUJ0Zk5QZ0dtTVNHenZIWGpQTmZNSGhsVFFsMEh2TFhIV3hGSjlqcDNCMXluMmRZTG9sCnN6SWZEeWVQa2NONGlPeVloVU1OdWVwcVVQZFBzc3JCOGhtbDVvS0dEbTd1STcyZjA0R1RwdjVhdjZMOExGTVgKSzNDUW4wa2Q5MVQxZ2NWVnhaZVBwYm9qOFlNeFR1dUw0WEZQTWN5VU95dWlqTG4yOXlLcnV6RkxTSEJGaEYvMgpmeVRIWkhxZEIrTEZ1a0hmQUc5VWZEbjhJYm8yeUtHUXl3cmNSY1hvYzg4T2xGb3QxelRRODlnQlVoci81Z09RCitsa0xWNGs5VTBIdi9TWThqbklLQVhXNGVDYWsvT04vTnZNTnIyVmN1K0t6R0ZzMnFLb25TMnM1bFBUZmJXWWEKSmtyWGJ2UGlFZVF6N05CUkN6TWNwSGtKMmZjSlc1c3lSWTFDCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBei95RVI2QVBMNEFOR1pFTTEwdVhlUTFra0VLaWQ0SFlmV0JFR0tKbnprcVRYUmk0Cm53Wjl0OGVuWU9nakE1RzFCc3JiSWppS0kvNklIK0JBdWsrRkFoWGJwRmJxdjhOQVNVWEFJMjZMQlExK1JmcEsKR0NCV2NKSDBoQmx5VDJvMzZxMnVPamR2dGdtYWZHa004c1RJcDd2TTFXSXNRaU9NRm5tZElld09EUm9qZWlBVAo0b0Y2VTVXeXlQR1Q0YkJWVXpySU5PNzRIQWl0cmlwaVVaTmlqUGhJc2doZEJFMExnd3lSTWlxRXJDUkF2TVZZCktvT0xUNXZMZDJ0a3dPblVHeGFaaUN6REdqQVRSYWNRb3FvMG9waTRTaitQcnBLMG5ISCthVEoyVWtvazVXMjgKUENKNTlFRzAyNDA5R1Z3QXRXRG9jMGR4cGxxVERVR0pDQjdQb3dJREFRQUJBb0lCQUVMREx2OEMzUDBGWUs4ZApSWDd5ajl2V3Rib3MrWlBkQlU0eGtZcEt6NEdEcE13VWZHYm5vWUZWd0YrMkJFOUgvVkVCMnRlZ1NJK0hTOURYCm5rOXY2U1VqT1E4R3EzSUV6ZVQzVTliTHpDcENDNCtRNlNuWGI0ZlJBaWxKTmMxU0xrTFJuNFNtZU9CNU1yTE8KMGM0MzVxVVkvb1pjYmhLSThKWGlVZE1xdjlQcVJOeGtrUnA2MmwxbjZtdHpXdFZUdUlWdWR2NS9OKzFyb2xoVgpmUUVvQzIwWFpmd01lcTFJOGd5cGRLSVgvbWZ5R0kyYjJnRkJzSWZkVytybXVoZ0NVcEpybitaTmp0SzNoNlpwCm4yZlhrb0x0cTZiQ2k2L0poU01CM1hiNC8zcktYR2tyVmlUQnM0THptOUtVdmJxQXBuUlFTc012NXk4MHlTcHQKMk9uUW8rRUNnWUVBNFVWWjRtaGRWVWNWYzhqY2wraFEzZ0lHWHBjdnpId0tJUGNPWnRPNE5QNHhRRENWcW9TZApCclJKengvckZVb1dXUVdWTEpuTTdPUXpNTThvSDFvdmxYdTdmTU1mc0J3K0NLRzkrK2tkUDhuNFQ3QkpqeXlOCklOcEVuWjBQTFBiTWE3RE8zeHcvNURGZnc5UkU4QkVLV0g2eXh1ODk2M3UwREEvanJMOWczakVDZ1lFQTdGdVQKZDNrTDUraVArSG51Nm9QeWVFbnp3TmdrdENSQXRCSUFlZXVJK3pBOUJmVDJpamplVGtQRnBwWS85dVhzamxBeQpXbWNQL2FYUEpLQnJCd09MZU5Ga2dNTjV4MVZ2d1dJbFM2bVBqbW5RS2ozMTdHekl5QmRTOEN6S2RaSHY4NldnCkU2MWRPOE5uaGhXcjZiR1Y3UWVwZ1htV2kraTRFZzRKdm5NazhoTUNnWUVBbGhBRnZXMjZadGx3YiszcERRU0UKQWpBbElCUGtrbm82b1JVU3NlcnR0ZGR5NVlpMzJweDJvZ1d0ZVYyUTAyREVIRTg4dlRaRExiY2lacXhJMVFIVgoydVZPMHVDRWxtTnA2NFFiTTlscFU1bnVZTjlWVVJ2amMzUVM2MCs1MFVFaWtjWjVPR1R3SnNuQk9vbUgxc2Z6Ck5WcEpLMzRwcUZtQ2FkcVgxdmF4eDdFQ2dZRUFwMjVEcTNsekJxZ0cvTFNibTBNM0N5RVA3QWJ4RVM4eEtwNHAKK2pQd2lFZm1vb2FoOHM1UUpFNzcvNE1sOHFkemlHaWxFc2M1VzZ3T2JkcTVsbkZiWm8ybVRWU3J1cG42SFpxQgo0dlJOZmt2VXEyZlRBdFVZOGkwYmtvbVlMZXJnZU05Vjh6cDI5alA0N05JRFF2dUt3aXNRVjJpalRaN2diZUhGCjQwUzc0a01DZ1lFQWgzZGlrMTVUMVo0NFJsekxGVk9hNXdHS0JpUmNhMThheDRyenpwRUdLTHVpR0xxWWlqSHgKQkZFSmJJRkY0VkpOOFZDMk1Zbmc0NGFnK0FsVUhGUEZua1A5RVZIOExmaFBOMjRDdU51MEpqM2NrYVo4LzNsVwo0b1ozVHMzcU1QRk1aWWZSV2o0eW1obkFLOWJycjNsUGxBRlhGS0s4RHZsT0tPblhkWmlpTjlvPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlxb281YXNENjdiSlphM0NEaGZNR0F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4TkZvWERUSTJNVEV5TVRJeApOVFV4TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1UHc2ZGE5dUQyRTJmZXhQaVlnRnBLTDJQM0RkNHhhZldqeDd6QlltQWVNUmVXZTAKV0VZVHlvd0VZRTZrT1U1bWN3emJkVldtY3RXbFRVVGlwWXQ0RXRGU0FzbVRIK3lVaWlUc3F1cmhkQ3dUemVRcApxZm5yYjdaZUFhOWJBQllLZ1dHWXlnTmlGdWxvcStESE1mS1pjWEFpaGJRUjVWZDZUaWUramRFUDhYMk42YlBkClJRWXVIcmpwS25PV1RjZ3BrUmlJTFV5VXh0dkU3bnBkT3dkVWY2aUl6azI1Q2MyT0ZncWorajcrNTUyNG1UbVQKczUyQmh4bUhTZDNxTmdYVzZocHdadVA0UXd2ZWsxRFp4MlJ5eDJ1dG9Ka2hQakw0c2Y4NW5aQ2tOSjZuZUFHbgowWndLRkl3RC8vaDVwc2o2SnVNbkZoV3lkeElzWGM5NUxqSFNEd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGT3gvTkZPaS91cU1aQ2JrZHcySU02clo4RDRjTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ29rellBN200LzNVZGM1QXI2THRoSm9IY0VHVU1YNk0rZjBac2ZzYUpXS04xVE5TNWorV1NvCm50d1lrOXRwcHVqYVBibWNmVFVXVlBEY0RKck55UDh4YWtZc3ZuK3V1ZERPd3VLd2M5K0hGQWRFNjdwZmxjZGIKUEdKcC9WbU5SQmlORzV4Qndla0FRRU9Icmk5NzVnMitWUWlzYzNhckdXSjhKZUt5dFE0M0wyR3QwVktzUGFDUgpWS0szTDZscmxzSXVjRUJqc3VVVGNwU0hhTHdHcUphK0NZTTE2UjRRaGY3K0pqeHZJcUMwMkw3Q0FjMWdQOXhtCkFoSDNieFNWVm5oYmk5TnlJODhnWTZmRFd4NUpaVzgwL3lkRDE2aDRYZWEvOTU1SlFQeEVoeTQ2dlZPdmZiSW8KVDllYVl0VUp5RzN6QklobTdYblJZeXRSNlhDVnl1UzYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRR0pLSDRHZVJHREVaemRZcHg2TnR4akFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeU1qRTFOVEUwV2hjTk1qWXhNVEl4TWpFMQpOVEUwV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEajVQOHpwTThLUTdRMmV5R0xiTUU5UGthaktFcU4KNVVJV2JLclpKVllpZG5xM1hoUFIvd280Y0E4VHdpYjdJQmZOT082akhhSlg5MFFGNUtpQklnbSs1bXVNKzhxUwpjMDNxb3FlQlNYSTBYK1FVU1ZxdkV2OTA3SUxOZkRyZ0tSRTFPQUFBbm8xY2MwNkFXWE0xanltaFVjdStpVXNqCnNXdTBXc0RGazNOSndiR3BCdk16L3VOMWkyUVdtOWtjUkpyeEVLVlE0eTN3VUk4eFkzdkZqaTk5RmZvQk9YZkUKcGt2eGdVNDcwbkJ1ankvZHY0QWpuRDVOc3AzaFk0RlFORGdYaHVhS1RHMm8vV2NCb0l0OUpoR29VbVc0S1dFLwovY012V2gvbTZybHRoTGFEUVhuMllRT3Vidm1TNXhJY3dPWGVFV25aSnFKZUZnZEVuS0lQOTdWVkFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZPeC9ORk9pL3VxTVpDYmtkdzJJTTZyWgo4RDRjTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFOcFF4VDNoZFlTOEo3d3lkRDFxNmVweGVpbURYWlQ3WXBYNHdSR2RnTFVMT2tiR2EKZDB1S1cvd0NEclZ2djZKMGI2VkYrcC9xMFF3S244NlVhVnA4MHNlWVZESTZkUERQdW1QZGQza2Jxa0txWU5VQwpocksvTk9OeTlJQnQ2S1pQSHozTm1ROTlZT0lPd2dFbEV1R2lCbXB5K2ora01vcytzMEV5U0Nmb0Y3NVpHbDkzCmNIVnNTT2ROc1JLMXVFelo3Z2ppeGZZYUxvY0pYVGZUbHlNZEswaElUNnd3Z3I1Y05aVzZ0bWhjODhQVTl6R0sKbFhjbmdGcGdPYld3d2lHMlpkampnZVZtVmpBMTU2azZpMGJLOG44RGdnWVFXVm8wb0NSeW4wNTRsemNWTTRTeApYU0J1bnYycFB4UWFNczBkQ3pDZ2lwZGROSTF3REZsalZFVjk1dz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNCtUL002VFBDa08wTm5zaGkyekJQVDVHb3loS2plVkNGbXlxMlNWV0luWjZ0MTRUCjBmOEtPSEFQRThJbSt5QVh6VGp1b3gyaVYvZEVCZVNvZ1NJSnZ1WnJqUHZLa25OTjZxS25nVWx5TkYva0ZFbGEKcnhML2RPeUN6WHc2NENrUk5UZ0FBSjZOWEhOT2dGbHpOWThwb1ZITHZvbExJN0ZydEZyQXhaTnpTY0d4cVFiegpNLzdqZFl0a0ZwdlpIRVNhOFJDbFVPTXQ4RkNQTVdON3hZNHZmUlg2QVRsM3hLWkw4WUZPTzlKd2JvOHYzYitBCkk1dytUYktkNFdPQlVEUTRGNGJtaWt4dHFQMW5BYUNMZlNZUnFGSmx1Q2xoUC8zREwxb2Y1dXE1YllTMmcwRjUKOW1FRHJtNzVrdWNTSE1EbDNoRnAyU2FpWGhZSFJKeWlEL2UxVlFJREFRQUJBb0lCQVFDSnpOSXpuQmhGRUtOTAp2akNPYWZoKzI4VkNxdjVKeHJLcmRKSHFNNVZkeVY1eXVrUXAycG1IZnRyZkM2c2VkazF1SGxyTjd3RlhSNEN1ClA1RlVaQXlZamlQQ1lBNGhkKzlKVFlrVHVDR0NZZWs4Q3c3MmhmcEo3U2s2cnorNmc1cVFINGlBMTE2SzVINDMKUmQ5UUozejR1c2tFTVdocDhNSTdrQlM0WTJ4Mno3QS9Na0ZRc281R3RqcC9qRWJzekNZQWdqR1NwdmhPakhBOApUcUVnbnZ3ZkJheG85Q2ZKczUrRkZ2VS9Bc0tpT0VGdjkvVWNWV3hINlk2WTdXR2k0Y1l1bSs3c29WQXhZWlZCCkhiRFIxQUlsRFUyUE5sandmYlRCV1k1UVpuVlp1Wk9ZQmxBU3cvdnRZOXB1Tm00MWJYVEdMM0I1amduSUVPUWIKYzJUYWV4c0JBb0dCQU95dE1zbHRlVERlWGpQay9yRFMyZWI1Y1hXS2RsRXhTTGVRMldiN0NyOVl2bzJLNmlKRgo3SVl4ekdZb0dUdEJRSWpQSHV3WGlzOVRibzZoTmpMY1RXZG1udTRZZWx2TTB1TkhBTElaZFBFMnNzdzdMKy91CkNHcUE0enRLR2pGc2ZCYWlUK09SanJqelJ6eFBTUVhJQzBQdFVPVUhLL1N5bXJsRjZPTGgrY21SQW9HQkFQYUEKUG9URUdCYnlOV3hxaGEycTVIaG1ycWJLUlo0WmQ0Z3diUE10ZXlvVGJpcTFHU1JjVDJma2FPVWs5WHVJcVBEYgpDbjJrUnV0Q3lhbmprTC9RQUJTRTlzUmZhN1lCa2tXeDN4RmpkRGltUE9ZR0hBcTNQRDZDNkpleSt3YjdidXIxCjFoRWczRzRGSXpGTXRTV05UVTBPckhtejFVcXdGdjNQYXVhbXk2MkZBb0dBWEJtZUhOSlVDZGRPczBVV2MzcnAKdnI4dERyOStBV1I3VnF1d1hpbXM2ZjgvejliUis5cFlDM1NQaE9WdnhDWkZWYmU3NGNYYmg0aUJDbEhqeEhFRQpVZ3VXSnpNeFVrM25kdmduWmljUDRkb1dRL0Y0V3hhM0FiTDhPaE5CRkNDU1BVQ1dkQWt0ai8xanFDMTJUaUNsCmVaNTlEMUwySVBmcnk5TlBxQktsNEhFQ2dZRUFvOSswTUcxeEdtZ2hiaGNQRWRxbmt3ZW9tb2VrYXF2QmxJK2wKRHJHd3pOTW9EVXBpRVpNdzB2KzlZSUVHbGY3UFdYZzFiRHUzVGhZVG5WY0ZWdzkvemlSckxUZkdrclJPdXZpNgpOSVFxc3JLSmo5NkY2L1hQSGp2SFIzcWNlaExUdFc2RHh0VlMxZTJpYk5ieklxaml1QlRHUXc1MEFQZzZBTGhRCitFL3cza1VDZ1lBMU1pQ1daTnJ4Q0dWaDUvcDJZUm1PbXhXdXJhK1YzMUE1MEpLU3cxa21mQ2poSm84aU41VjgKTStCTlZ1ajNGVW9TdG5nTEFpYkZLdnQzZWxPNXdENnRYQ2tJVzNSQXBQWFM0Yk1LbGYwZXF6a2lsRFp3OXZCYwpHY2Z2M0RTZlJTcGdiS1QvcUlFY1dzRnhWZ3cwYmVUOURQQWt6TmI0UDlFdzF0eUpYQkFVQUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlxb281YXNENjdiSlphM0NEaGZNR0F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4TkZvWERUSTJNVEV5TVRJeApOVFV4TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1UHc2ZGE5dUQyRTJmZXhQaVlnRnBLTDJQM0RkNHhhZldqeDd6QlltQWVNUmVXZTAKV0VZVHlvd0VZRTZrT1U1bWN3emJkVldtY3RXbFRVVGlwWXQ0RXRGU0FzbVRIK3lVaWlUc3F1cmhkQ3dUemVRcApxZm5yYjdaZUFhOWJBQllLZ1dHWXlnTmlGdWxvcStESE1mS1pjWEFpaGJRUjVWZDZUaWUramRFUDhYMk42YlBkClJRWXVIcmpwS25PV1RjZ3BrUmlJTFV5VXh0dkU3bnBkT3dkVWY2aUl6azI1Q2MyT0ZncWorajcrNTUyNG1UbVQKczUyQmh4bUhTZDNxTmdYVzZocHdadVA0UXd2ZWsxRFp4MlJ5eDJ1dG9Ka2hQakw0c2Y4NW5aQ2tOSjZuZUFHbgowWndLRkl3RC8vaDVwc2o2SnVNbkZoV3lkeElzWGM5NUxqSFNEd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGT3gvTkZPaS91cU1aQ2JrZHcySU02clo4RDRjTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ29rellBN200LzNVZGM1QXI2THRoSm9IY0VHVU1YNk0rZjBac2ZzYUpXS04xVE5TNWorV1NvCm50d1lrOXRwcHVqYVBibWNmVFVXVlBEY0RKck55UDh4YWtZc3ZuK3V1ZERPd3VLd2M5K0hGQWRFNjdwZmxjZGIKUEdKcC9WbU5SQmlORzV4Qndla0FRRU9Icmk5NzVnMitWUWlzYzNhckdXSjhKZUt5dFE0M0wyR3QwVktzUGFDUgpWS0szTDZscmxzSXVjRUJqc3VVVGNwU0hhTHdHcUphK0NZTTE2UjRRaGY3K0pqeHZJcUMwMkw3Q0FjMWdQOXhtCkFoSDNieFNWVm5oYmk5TnlJODhnWTZmRFd4NUpaVzgwL3lkRDE2aDRYZWEvOTU1SlFQeEVoeTQ2dlZPdmZiSW8KVDllYVl0VUp5RzN6QklobTdYblJZeXRSNlhDVnl1UzYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUekNDQWplZ0F3SUJBZ0lSQUplNlVnWkI3bVNpUmdRRUVqZUJZSW93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1qSXhOVFV4TkZvWERUSTJNVEV5TVRJeApOVFV4TkZvd0pqRWtNQ0lHQTFVRUF3d2JLaTVqTVRJdWFIVmlZbXhsTFdkeWNHTXVZMmxzYVhWdExtbHZNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE0MWkyT21qVXkvL1llTkxtSWtMTThYTnAKeFdxSnBCK1RJeWk4K1V2MjBkdVptZ2JDNHlDbmJVZ1YyOUNqdU1SNHdpaWxlRkFkNEt6RFZHL29hRWszbW1pKwoyQUIvcmRFR1MzM2oweE9SbEZNbDVETDdEQ3p0eU9iSEZRb3NPaFkvT0swbThCbDkxeDRNSjhkNTJZQWJBTm5LClRTVHB4cmMvbEM5V0tpTk5jUDMwdGlkaU5WQ1l4V2NXZmkzNWR2M2J1cWlwbXBkMnRCT3UvdW8zbG9zUThWMU4KUytsdHJGZ0JEN3VxazZwTjl0bHVZcGxHZ0VNY0Rhb1ZWQVNFNFBhRitUU2drbTd2MFlDeW5XOG95K3JQbGcxNwplMUZhQ00rYU90UkFPaS9SNlliamFuRGxkSksyYTVhQ0REakx1WjNtay85MnduQjFzaEpDSHlzU1h2ODJRd0lECkFRQUJvNEdKTUlHR01BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlRzZnpSVG92N3FqR1FtNUhjTgppRE9xMmZBK0hEQW1CZ05WSFJFRUh6QWRnaHNxTG1NeE1pNW9kV0ppYkdVdFozSndZeTVqYVd4cGRXMHVhVzh3CkRRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHYnl4QUtJbzNCTkhSc1h6L0xtZGZac2NrUXFwZzY3eGlNQ0h0d1IKbCs3Z3d4ai9zSE1LTWZhakNzOHRtbVRHWWtIYU1xeGttdXpzNnZ1Z0JUWXgxMmdqbUV2NGNDVnR1ZXZKMmRLTgpzeDJ1QmJkMUk0SUlTNUFSR2xKMUxWNnkvcGQwTzluSHpjWHg4dTJOdG5KMngzckFjZ1BqdzZlNzBDaG0zSDRmCnFMWEhGYU1iVzFHTjBBdDFlS1Z0ME0vY3VrQWZ6N1dVVjk1d0h2TUhIMVpxQnlMa0syeWhsUEN5U0RyT2EzZXYKTGY3YlFXL3k3Q1ZhT1dlQ0dndi9kdzl5YTk3Yzh0OHZzdU15UUp4cm52b1pWTXVLSVIyaUtCRXFESXpjSmNjUApKYXcxQy9QWmhXVHVDV0kzOE5wOUZ0SXBlZ1ZIZEQ3MGRTd01OblJ3aTAraFlWOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNDFpMk9talV5Ly9ZZU5MbUlrTE04WE5weFdxSnBCK1RJeWk4K1V2MjBkdVptZ2JDCjR5Q25iVWdWMjlDanVNUjR3aWlsZUZBZDRLekRWRy9vYUVrM21taSsyQUIvcmRFR1MzM2oweE9SbEZNbDVETDcKREN6dHlPYkhGUW9zT2hZL09LMG04Qmw5MXg0TUo4ZDUyWUFiQU5uS1RTVHB4cmMvbEM5V0tpTk5jUDMwdGlkaQpOVkNZeFdjV2ZpMzVkdjNidXFpcG1wZDJ0Qk91L3VvM2xvc1E4VjFOUytsdHJGZ0JEN3VxazZwTjl0bHVZcGxHCmdFTWNEYW9WVkFTRTRQYUYrVFNna203djBZQ3luVzhveStyUGxnMTdlMUZhQ00rYU90UkFPaS9SNlliamFuRGwKZEpLMmE1YUNERGpMdVozbWsvOTJ3bkIxc2hKQ0h5c1NYdjgyUXdJREFRQUJBb0lCQVFDLzcyaEJYYm14MUhqTQpZTGo3MmN1dVdOTEdZWkI4cUUrUFVsaGdXOXF3QjZiaEc2NHpGS0ZsS0lPVHhjeERORlFERDAvTGlGQUJHN240CnNsWFNuV1c5RFl0NVRzcDhVMGp1T1FVN2NYenBiVjFERUN0VWR5WDFBNmkxd1pYZklHTVZsVkdYU040dDIrZEYKT2lwTUR0UTlYcUZsaWJGNEc4TW9kdUpXeHVFZGJ5SUg4Zkl4MHRKY3NaR0xTUytXZWpWTlplZjB2OGVpSmxiYgpaZk5mNUV5M2RaYm5QK05TamM2WHZwbmFnUytOR3JHMGh3VjJwTjArbENlWndBY2hHYWN4bGlIaFhaVGpVNVRvCndyYjFoRmkrd0t6ZFoxNTdiRm5TQ3JOamJ0Mis1aER6THhnQmZZZ3FiU2E5OU9TcnQydTBibXc1K0FhT2FkNmEKL0dxMmhuNmhBb0dCQVB3a1dkZnJxTHdTTHVtTm9aalB3Q2c5ZUFCdk5VY0Z5c013Z0hRaERacDkzYjdvaU0ydgp4TjV3YUN4WmZmOVpINzl0c053RENaeTVXSVhEYUt0SVRqa1Y4bXROM1Y5SFZqWXFzdEpkWkxMa2gvSTZzYzZECnlNbEZhN3ovR1dnQkY3UmhBSzdTcUdCaW0rWk1Oc3NnT1UxTWJnNmdpVk4rYXVFSWRieVY0dHJUQW9HQkFPYlQKUEhXZTNUSDJMTmZlNXhqZWRZRytKVTRLVHFucDZvS0V2RnZacDI5UlVYUFJHL1dtcXNYeXdjYStZRnZ1VDNPUApmMWd1bys0RUVYOFEzemFQQ3paUkZ2ZkQ1SzBGN0ZyK2pWa3p3SUd2QXcwTVpPQjRTMVJzdGFzVTF6Ym9OVjM1CnJLVGcrUFExbW9hc2xNOWFSS2NrY0xKR3RDenJrZU1xSGpINVVURFJBb0dBUFdSSWI5ZFVSVDZVSjQreG1maHoKakJpellEK3psREJuMXpDM0JnK0tOV1NTR2txYURLTFFaMnl0SUtkRmsyZks0QnhBSk1Ha2xJRlllWEZEeWZpWAorelJKeXpDeFJ1S2lyaHVsWUswV3VLd0dJY2VDeFlxMjE3TE1jYjhYRzRpd2tkM1FnY0NPK0xEcHpxQWQ4MFZNClRuTGVsVGNuV0tuK01mNlNWREdXZzdzQ2dZRUFxUVE3M1JSNmV6NzdEd2FVeVV6N1ZnbFpYNCtFa2o1S0RWQU0KYkdVdmlQOU9XVFBnK1RzVkNPVDhwdjUzcUZrVHJGYUN0SnRTUmRLTXpUSVpmK1cySEF1OGVhZmpKaDZVTnZ6MQpteitkMGxmSU1DSEhLK1pwb21RSGtrSXNaSFFidjdnMmhuU0ZWcXg1ZmV1WSswdnB3VW1aaTdEaDlaSjR2SkgyCmtqa3hEa0VDZ1lBNG4wUG9zYnY4SFgwdjVCY1FZL0lHWEZ3dEFzamFaTjVOdkJFQzVDQSs2NmZIQ1ExMzZIbVQKMUJTU1huM243eEJrUjBGRVpGNWRaZWRzTXoyZWRSVEJtNWdvdEpzRmVHNjQ0UDZ5cWlnQ285anB0VHZoUno3TQpmOFQvK3lkL2I5TTBiUkhCOXZFcFJPdlErYitCN0NmMm5ZcFc0QnZtT3pFd282RzFaUWlQcFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: c12
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "112"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-wireguard: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "false"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  ipam-cilium-node-update-rate: "15s"
  cluster-pool-ipv4-cidr: "10.12.0.0/17"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  cnp-node-status-gc-interval: "0s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "true"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"

  external-envoy-proxy: "false"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: c12
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/clustermesh-apiserver/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumexternalworkloads/status
  - ciliumnodes
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumendpoints/status
  verbs:
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumexternalworkloads
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver-metrics
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/component: metrics
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: kvmesh-metrics
    port: 9964
    protocol: TCP
    targetPort: kvmesh-metrics
  selector:
    k8s-app: clustermesh-apiserver
---
# Source: cilium/templates/clustermesh-apiserver/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  type: NodePort
  selector:
    k8s-app: clustermesh-apiserver
  ports:
  - port: 2379
    nodePort: 32379
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.14.2@sha256:52f70250dea22e506959439a7c4ea31b10fe8375db62f5c27ab746e3a2af866d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/clustermesh-apiserver/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: clustermesh-apiserver
        k8s-app: clustermesh-apiserver
    spec:
      initContainers:
      - name: etcd-init
        image: "quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args:
        - |
          rm -rf /var/run/etcd/*;
          /usr/local/bin/etcd --data-dir=/var/run/etcd --name=clustermesh-apiserver --listen-client-urls=http://127.0.0.1:2379 --advertise-client-urls=http://127.0.0.1:2379 --initial-cluster-token=clustermesh-apiserver --initial-cluster-state=new --auto-compaction-retention=1 &

          # The following key needs to be created before that the cilium agents
          # have the possibility of connecting to etcd.
          etcdctl put cilium/.has-cluster-config true

          etcdctl user add root --no-password;
          etcdctl user grant-role root root;
          etcdctl user add admin-c12 --no-password;
          etcdctl user grant-role admin-c12 root;
          etcdctl user add externalworkload --no-password;
          etcdctl role add externalworkload;
          etcdctl role grant-permission externalworkload --from-key read '';
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/state/noderegister/v1/;
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/.initlock/;
          etcdctl user grant-role externalworkload externalworkload;
          etcdctl user add remote --no-password;
          etcdctl role add remote;
          etcdctl role grant-permission remote --from-key read '';
          etcdctl user grant-role remote remote;
          etcdctl auth enable;
          exit
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      containers:
      - name: etcd
        image: "quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/local/bin/etcd
        args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        # Surrounding the IPv4 address with brackets works in this case, since etcd
        # uses net.SplitHostPort() internally and it accepts the that format.
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=clustermesh-apiserver
        - --auto-compaction-retention=1
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - name: etcd
          containerPort: 2379
          protocol: TCP
        volumeMounts:
        - name: etcd-server-secrets
          mountPath: /var/lib/etcd-secrets
          readOnly: true
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      - name: apiserver
        image: "quay.io/cilium/clustermesh-apiserver:v1.14.2@sha256:0650beac6633a483261640b6539c9609f5a761f4ab4504fd1e6ffe7f2bb82e9a"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt
        - etcd.config=/var/lib/cilium/etcd-config.yaml
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: identity-allocation-mode
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: enable-k8s-endpoint-slice
              optional: true
        ports:
        - name: apiserv-metrics
          containerPort: 9962
          protocol: TCP
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: etcd-server-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-server-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-admin-client
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-admin-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-data-dir
        emptyDir: {}
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "clustermesh-apiserver"
      serviceAccountName: "clustermesh-apiserver"
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: clustermesh-apiserver
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.14.2@sha256:a89030b31f333e8fb1c10d2473250399a1a537c27d022cd8becc1a65d1bef1d6"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.12.0@sha256:1c876cfa1d5e35bc91e1025c9314f922041592a88b03313c22c1f97a5d2ba88f"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.12.0@sha256:8a79a1aad4fc9c2aa2b3e4379af0af872a89fcec9d99e117188190671c66fc2e"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.

# Only create the namespace if it's different from Ingress and Gateway API secret namespaces (if enabled).
