---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRT3ZBMW9XRUExVXRyUlQ1bkFxYjdDekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOek13V2hjTk1qY3dOakV4TVRreQpOek13V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzVuYjF0ODhCSjFhL0xWMk44Vlo2UGJwV0JNRmVnWGZkc2pGd1RLaDl2WmlGVmREajgKN0R2eXNNdTNhUm02bTlXT01nNnhGMVNUVGs3ZDlRUCtwWXpzaGN4T2lXYlRUMExOaDdYMnd4Z1ovMGFKK0lqeAo1TXQ3TlBzS1JiQTB0bjgreS9UMktGOENIVzBRbjRZNmNLeTllMy9odkxwcWF4aldhZnNaRzRFbHRiS3kvdlkwCjY0SmlrZkxwQ1VSK0w5N2NVbGVRSUQzN0Y3RVBvN3FWNUVkb0k0T1FuMTJBUTY3VUJtOTR0c01NSjlhRUdBeVQKQmRBaWpWdGJweXBGN1JUdUtielZDWGEvUkxxS3B3N0VzUDloenJwUFZsbTNMd2IyakwyNFplQmlCZ2gxRC85NwpKVThwVFV4QXYyclFYRURrNVBrTHJIdHUrWENhZlJwenlhUlRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVlWTNJRldyYm82VUZsR3pWbTRjRFUrQWhqNkF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGcjNEalpJVWM3MzIxNlNhUUEvZWMyK29GYUg0L3RTbDZONnNTWERYZC9XL3QxcjYxaVN1RTNXClBpTTgwdDh0dWY4Wm90enlLcnYxMC93NW5lR2VNVHJkVUQvYjBMWnIyN0t2aHNuNGRQN3ZycWNHeDEyR281R00KcDRhMEtLVDVQcVlucFQzZS9hRklQRTZRajVHNGgwWDZmMndOaFIrQWVWOG5jb0dyNC82V3BNMkpJR3B4TkFjUApJR3RJMGFmMzN2OVVxbHc2UzdnT1BUK1FpYkJQT2dhS2NXN01lMjYyTFV2YzNPWklSR05CZENtVjR6NE5uVU9yCjM1L1RJemRpVEF0WktIQjNIclQvdWl2WWExRkIybXpxdVRWNHpWdktIWHRhL2YxaVlYanZJSndFZjJoRzBvRHgKS2ozNmV2WWZtUnhUMWNEMGZFYkNaRUxoVDk1Q3hLcz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdVoyOWJmUEFTZFd2eTFkamZGV2VqMjZWZ1RCWG9GMzNiSXhjRXlvZmIyWWhWWFE0Ci9Pdzc4ckRMdDJrWnVwdlZqaklPc1JkVWswNU8zZlVEL3FXTTdJWE1Ub2xtMDA5Q3pZZTE5c01ZR2Y5R2lmaUkKOGVUTGV6VDdDa1d3TkxaL1BzdjA5aWhmQWgxdEVKK0dPbkNzdlh0LzRieTZhbXNZMW1uN0dSdUJKYld5c3Y3MgpOT3VDWXBIeTZRbEVmaS9lM0ZKWGtDQTkreGV4RDZPNmxlUkhhQ09Ea0o5ZGdFT3UxQVp2ZUxiRERDZldoQmdNCmt3WFFJbzFiVzZjcVJlMFU3aW04MVFsMnYwUzZpcWNPeExEL1ljNjZUMVpadHk4RzlveTl1R1hnWWdZSWRRLy8KZXlWUEtVMU1RTDlxMEZ4QTVPVDVDNng3YnZsd21uMGFjOG1rVXdJREFRQUJBb0lCQUY2U053VEJiNVJ1OG4ySgpEZUE0ZzJ3UzdNdUF4UFNwUzdvYm5ZSUtNVEFCK2pQZTNuWkhLcGdSYWdvTjI1VVBkdlJYSHRNdHp1S3F3RllvClV4dTRYNS9XMyt5WDV6TDhyRTJwdXBWNmUxb3JqVllZc2pXRTNBUHZUNFRCVXZEWWx1WjQ1bHRRNEc5a2JNQk8KZHdacGlDbVd0ZVplMFNBTlp2OC95amJWbzZ5QkVxdUZqdWIweEswYmN4cFk0OXc2Vm16SXlrcnJreU80Z2swdwpyM24zUmRITVJ0VUozK2pLVXQ5eVk1ZS9NT0V4Sit6MFBJd3NHQS9ZQlNyMTdzdFpjcEdwM05JeUpmK0VTdm5ZCmhSd0V6cXloa1p3UmNiSVY5clhhdXR3ZytpT0swQkVpeXhxSnFUc1JNQjFhblFzRlU3UWk2Qk1UTkt4d1YyM1YKdE5kbFQrRUNnWUVBeEVSUFJ0K1VxYW9VSjAyQ3hreHJYczlobUUxOGVnT2ZxYTNPbURyallTNzloWEtyazZEQgpLbDMwdDd3M3JhNU1uUXZUZHgxd3JOTVg4andtWnB4KzB0M1dxMUh3WGpJRktrQkJJQWphQkhhdmJmZEVkdCtxClRUMFVVNGpTQTVhbDdJUWltZEVNbTNQeFdHbVNDTFduM0F3emVIWktoSGZsdjdvdTYwR2w3aEVDZ1lFQThodWIKbGs0Z20zTDE5bEFUdWx5dk9GSFRDNnRTaFVmNjNvTmFCRUl3TG9VZ0FmeDlQdkpjVFNQSnJFL1Vhc2RmbFFadQpVMHJRQmpzZVAxYm80MXlUMVZkRzNlNEtwSUsyUTVHS3JBR0o2S2NscU9aUGQ1Wjc4T05YdTlLRkhnYld5Um80CnNMZ2c0R0owbjJjUmxLR0RnMDkrRUlUYjFGUmRtMkNYaE9qQW1DTUNnWUFUTENFYWFVamFjaFRaNmdaMlhJeTQKakVXYVhTZGx1K2ppNkdtZ0VWQ1k4OEFzUXhGanNIWnVMeE55eDE0aEJ6L1FyNUVPdDcrRUFuTDZaTW5UaUVJVApVenhmSy9meEc2M0pmTkZmMGIyS1poV3BCbGlYekMyVXNmekVWRDgvdm4yaTV4MkNMUnV3SzlsTnE3SnFTMlNFCmFHUzJ4Y2R0dlZDaU5BdlZTMnBzSVFLQmdCdWdGdExCdTJyQlpWdGpxN3lhRXN4RVdlWjg5LytKUlJEYXdBeTQKV0xNV01aN0lacW9tRVc0ajVVRXFJcnpFWHgyc0RDNm8zSys1VXl3N0NIdlk5bTFqZGd5Z3Vzb211QkZockFjUQpiZUlFSUlIek5hSVpvNjdLNGhubVhaWWRoYWlRdTJNK3YxR2JLbDk5N1QyZWFGazFXdGNic2RHNmhxdlNDN2Y0CnJ2RXRBb0dBSSs4Y2FqbHBrRlk1TTdxQ2h3aEhjZ1NLa2FKRDNWZG10RGZzVmxjUDVTOGRaK3RqQVJvZEpjSUoKbDVpVEVOL3FuemtrMTh0OXhWU2k5a3YxbnMvODNldE5UNjU0eUZ1Sm5KdWFPbWE0Um9mYXBOU0FoSGVrRWdvaQpoQVdIbEhTd3JQdjdTQmxNWnFlTzJDRjEveWJwVWFtcTk0ZTBubERCcWVnNTc3YWgxclk9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/admin-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRT3ZBMW9XRUExVXRyUlQ1bkFxYjdDekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOek13V2hjTk1qY3dOakV4TVRreQpOek13V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzVuYjF0ODhCSjFhL0xWMk44Vlo2UGJwV0JNRmVnWGZkc2pGd1RLaDl2WmlGVmREajgKN0R2eXNNdTNhUm02bTlXT01nNnhGMVNUVGs3ZDlRUCtwWXpzaGN4T2lXYlRUMExOaDdYMnd4Z1ovMGFKK0lqeAo1TXQ3TlBzS1JiQTB0bjgreS9UMktGOENIVzBRbjRZNmNLeTllMy9odkxwcWF4aldhZnNaRzRFbHRiS3kvdlkwCjY0SmlrZkxwQ1VSK0w5N2NVbGVRSUQzN0Y3RVBvN3FWNUVkb0k0T1FuMTJBUTY3VUJtOTR0c01NSjlhRUdBeVQKQmRBaWpWdGJweXBGN1JUdUtielZDWGEvUkxxS3B3N0VzUDloenJwUFZsbTNMd2IyakwyNFplQmlCZ2gxRC85NwpKVThwVFV4QXYyclFYRURrNVBrTHJIdHUrWENhZlJwenlhUlRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVlWTNJRldyYm82VUZsR3pWbTRjRFUrQWhqNkF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGcjNEalpJVWM3MzIxNlNhUUEvZWMyK29GYUg0L3RTbDZONnNTWERYZC9XL3QxcjYxaVN1RTNXClBpTTgwdDh0dWY4Wm90enlLcnYxMC93NW5lR2VNVHJkVUQvYjBMWnIyN0t2aHNuNGRQN3ZycWNHeDEyR281R00KcDRhMEtLVDVQcVlucFQzZS9hRklQRTZRajVHNGgwWDZmMndOaFIrQWVWOG5jb0dyNC82V3BNMkpJR3B4TkFjUApJR3RJMGFmMzN2OVVxbHc2UzdnT1BUK1FpYkJQT2dhS2NXN01lMjYyTFV2YzNPWklSR05CZENtVjR6NE5uVU9yCjM1L1RJemRpVEF0WktIQjNIclQvdWl2WWExRkIybXpxdVRWNHpWdktIWHRhL2YxaVlYanZJSndFZjJoRzBvRHgKS2ozNmV2WWZtUnhUMWNEMGZFYkNaRUxoVDk1Q3hLcz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRWTJ5eVBpQlNYd3VUN0c2TEQyNWFMekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOek13V2hjTk1qY3dOakV4TVRreQpOek13V2pBVE1SRXdEd1lEVlFRREV3aGhaRzFwYmkxak9UQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQCkFEQ0NBUW9DZ2dFQkFMSEdiN0wzZkpJYjR5bTBucmhnRXd1M29kRW0vaUJHVEMvRGFHc0xtbTJUandUWThnZUsKcVJKZTFuNFBLNWdDbS9QR204S01QbERkNFRaOHZsSmcyRzhTY01sei9WV0Qyby9MVWd5Q1NHNUgrSjFTQ1NkbQpIbElRWFk5dUVBREs3OUxvdWVqOEkvUzl4RE9nK3lQNENoN0tFeVdVLzBwd2E3ZFkrYjBIRXFRUld3M3h0YUdXCnZPc0JzR3hhMHl4NFR3cGFtWjZQTWZ4R3N0SDlvYTY0eW9iR05TNlZLbmI5YklXaVVtRG1KM0lES3FpcHBvRUIKMU1ERll5Y1pEakRvaDdRSU8xd2ttY2tuYWVwVmZlaGl6aFBOeDJDYXl6Y3JvTjJSUWQ1ckFmZFg3L0VMZUptRQpLZkV0bmU4N1cwM0FpRURWSnVVNXNEaDlZcFU3endMUWNTMENBd0VBQWFOMk1IUXdEZ1lEVlIwUEFRSC9CQVFECkFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUEKTUI4R0ExVWRJd1FZTUJhQUZIbU55QlZxMjZPbEJaUnMxWnVIQTFQZ0lZK2dNQlFHQTFVZEVRUU5NQXVDQ1d4dgpZMkZzYUc5emREQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFmU1NVNlNtRkpBR3VJWDh2Q2c2bXlCWHpWMWU2CldSSFd2a2dDQlhOSVBFL2RSOUlEaDh6amVBOWZkQjVycWhNVFdxODRyb2pTZ1RLREdINzJsMUM1bE8yT1JiRkIKTnRaRTlIN0RMaHFTT1VkUnR0MnRiOGd5OE1kZFArZjdiSkhua09lWFJVaE5jeHRyZHN3L0tFdnRqVElCbytrawpub2wvVyt2MDk2MkRsVGRZbEd4RjZVeXE5em84aW8waktxQ1VMT0dQZlFNTnQ4NlJoL0NCcW9MaUFxU2F5K3IrCnIreTJCRzdGTmNGbWlBRjVXTW1sWWFyVGloQmtlUFR6NzU4ZXBQampzUjYxdGwzNzRqeENIRDVuaWdSdElFM1EKYzJVNGlMWTh2NkF3UTN4aE5EV2ZSRm5TQ1Z5WStYRHVnS3g5SUFPUEd1TlhPMGRBRU82RG1rQVhIdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBc2NadnN2ZDhraHZqS2JTZXVHQVRDN2VoMFNiK0lFWk1MOE5vYXd1YWJaT1BCTmp5CkI0cXBFbDdXZmc4cm1BS2I4OGFid293K1VOM2hObnkrVW1EWWJ4Snd5WFA5VllQYWo4dFNESUpJYmtmNG5WSUoKSjJZZVVoQmRqMjRRQU1ydjB1aTU2UHdqOUwzRU02RDdJL2dLSHNvVEpaVC9TbkJydDFqNXZRY1NwQkZiRGZHMQpvWmE4NndHd2JGclRMSGhQQ2xxWm5vOHgvRWF5MGYyaHJyaktoc1kxTHBVcWR2MXNoYUpTWU9ZbmNnTXFxS21tCmdRSFV3TVZqSnhrT01PaUh0QWc3WENTWnlTZHA2bFY5NkdMT0U4M0hZSnJMTnl1ZzNaRkIzbXNCOTFmdjhRdDQKbVlRcDhTMmQ3enRiVGNDSVFOVW01VG13T0gxaWxUdlBBdEJ4TFFJREFRQUJBb0lCQUVsUGZheWQ1cDhTSlFHRAozSmhIOWxLMHJXUms0aE5KS2czZ1ZXVWZhZFdhTGpaZmlKK1hqTlZvaXFkOWRncS91TFEweVBMWGhyTXViTHRkCmdkYlMzUzRndXFZNDBOVzlCQnFjUy8rZ2ttSDRDQXhJVWtJUEdKM2E1ZHBLRnd0Y3BMMmkvMWVXOHZUd2RNS2QKdGpORkRGZGFHYjg3ekhOVUhQZUZGNmZlRE0vZk1DQWkzZUVVb3BjVCswZ3JwVWtnK3FRWGxUd1o0ckJWRlIzLwpLYU12d2tUVlVSSDJob3EzUlFjOG1qTk9NVW5HS2Erb0JiUmZUR2xNRGY1SEg4RWNSbFJ5K1RuQWpma3ZCOHRmCnV6WUJTK0hTWmZkZHgvTGsxVEFNcXdJaTNFbWRjQy9aeE1YVWI2dUdPREdqVEpOV3d1NnZiYjQ3WDhhcUxWbnYKeEFRNjM3a0NnWUVBeVVUVUlsc1A5RlZnamJob1BjdFVIeDlVUjhNeXFhNzc0K2p4UXovNmR4b3NYa0puMmRrdQpMRUIyQWpBQlR1VVdTQlAwSW91NG1XNTBWMmhuUThNTXdoamNZNXRaazVzNzg1S3U1TjJ2cTRoM3F5V1oyWDBaCm5SUURyZVlEZ3hUQUt0Y0ZENmVOdzBxTFZNdVp3ZDhMRVUzS3ZoMllkNjBVbmd3RGNxOXJ3S3NDZ1lFQTRoNGMKY0Q5STVPMnlzYU92S2hhU2l0ZXk3blQ1UEZUZlRWc3JMU3hLaFo5RFZyL1pwblpQeGtMc0U3aG0yNTZ1aGpCdgorYmI4ZjRrdEU1cVRSVDdiT2xGVTBzT0Y3M0s4aHVWd0F6WGpqd2UwcnkvWS93NjZGM0dPWWZMYXp1SlpZd2dWCnRoeGVSNVQ2ZnJkWkdJdWt5bXpRVzg1T2doWnRFV21nOUhPdmhZY0NnWUF2Nld1YVZoVWhNK1hOTnRYUnlBSloKZWtyRTNvbkQ3UHpYajA5SGxBWmFyZWRiOVBEbDRoWmt3RitYTzdoRUFMTGlLNlhWUjIrRlRzN3hNOUJKU0RoVQpTRGpHbVdla2hMS3IxQUpBUnltWGF1QVo1TlNQK29ETGJNVkhjMWJvc0ZyaWw5Y0RsLzVlTy9PWkZ2S2VQU3RVClRqRnlPbmRlSGR5bmx2S0hMWTA0Q3dLQmdEUExlZkFzVHVKQm9JRVlZWE5lb0VxMWhnTWhRRVlWbXVENVZUYVAKd3JKQS9RZk9BbWtqQ0xyOWNWNURDeXliZUphOFdhbjF4SGppVHpVQ1gyR3BPRVp2Z3VLVWJ3V2VYcGozeldTdQozMlZQK285MmdscEtZVTRsY052MjZUQWlvUjhTSndjRUVJU05GNlFYRTQyUHp6dWZHVXN1UXNXQnBaSXJnL2I2CjJPWFpBb0dBVUQzVEhpL2wwVElXWFFkbkpmWXN5SnFuNlU1cjRDR0xka3ErV2g2eXJRZjl3VURDQ1dJL05PSVQKN0VDMmd5bjlyK1FSRGgvOG9KUmRCNmFyTlcrb0VmZWNhSGo5U0JaSHpPVXdnVmlGeGJSeisvZExqZ05PbTJLSQpGNXo1MnF3TldGd0o0OUo1TVh3dzFhanIrTHRPamNzQkhhTU1FRzJxZ000WlhzVDZvKzA9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/remote-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRT3ZBMW9XRUExVXRyUlQ1bkFxYjdDekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOek13V2hjTk1qY3dOakV4TVRreQpOek13V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzVuYjF0ODhCSjFhL0xWMk44Vlo2UGJwV0JNRmVnWGZkc2pGd1RLaDl2WmlGVmREajgKN0R2eXNNdTNhUm02bTlXT01nNnhGMVNUVGs3ZDlRUCtwWXpzaGN4T2lXYlRUMExOaDdYMnd4Z1ovMGFKK0lqeAo1TXQ3TlBzS1JiQTB0bjgreS9UMktGOENIVzBRbjRZNmNLeTllMy9odkxwcWF4aldhZnNaRzRFbHRiS3kvdlkwCjY0SmlrZkxwQ1VSK0w5N2NVbGVRSUQzN0Y3RVBvN3FWNUVkb0k0T1FuMTJBUTY3VUJtOTR0c01NSjlhRUdBeVQKQmRBaWpWdGJweXBGN1JUdUtielZDWGEvUkxxS3B3N0VzUDloenJwUFZsbTNMd2IyakwyNFplQmlCZ2gxRC85NwpKVThwVFV4QXYyclFYRURrNVBrTHJIdHUrWENhZlJwenlhUlRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVlWTNJRldyYm82VUZsR3pWbTRjRFUrQWhqNkF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGcjNEalpJVWM3MzIxNlNhUUEvZWMyK29GYUg0L3RTbDZONnNTWERYZC9XL3QxcjYxaVN1RTNXClBpTTgwdDh0dWY4Wm90enlLcnYxMC93NW5lR2VNVHJkVUQvYjBMWnIyN0t2aHNuNGRQN3ZycWNHeDEyR281R00KcDRhMEtLVDVQcVlucFQzZS9hRklQRTZRajVHNGgwWDZmMndOaFIrQWVWOG5jb0dyNC82V3BNMkpJR3B4TkFjUApJR3RJMGFmMzN2OVVxbHc2UzdnT1BUK1FpYkJQT2dhS2NXN01lMjYyTFV2YzNPWklSR05CZENtVjR6NE5uVU9yCjM1L1RJemRpVEF0WktIQjNIclQvdWl2WWExRkIybXpxdVRWNHpWdktIWHRhL2YxaVlYanZJSndFZjJoRzBvRHgKS2ozNmV2WWZtUnhUMWNEMGZFYkNaRUxoVDk1Q3hLcz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRSVdVc0VOM2J6VmJMSzJteWhlSjR0akFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOek13V2hjTk1qY3dOakV4TVRreQpOek13V2pBUk1ROHdEUVlEVlFRREV3WnlaVzF2ZEdVd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFDWWx6RW10a294QlptQ2dWbjZVUFd5SGJKWjBCaytvd3lHaEIyRHc3bzE5M1RkZkxTQWZKZmwKL25LMmRmdnI5YU1MMzdXL1ZSYVcvdTFDODJBNG0zU2RtUWI5ajl3ZU1GWlVZY0VwTDFRSWx6amcvWmJBNDkyQwo3NmRDOS8rZGJPNVF5M3N6N0NVWWZtNHpKTXo0a2NvbFZ3M05WVXgzb3BYKzRKUi9UNDY5SE8zMUlVNUkwSWhXClh5a3A3T1R2RE9ldUJEN3NpNFBQQXU4QVA4WG04RzFQTEhod0pud2J5ZUF2UUU0bUg3TE95ckpiWElxR2NwWkwKVk1HcVk5TEgzQkdzNk9qRTlzM3RRWTNjQ2w0cG1uVTJpcjFBMEVFOWhDNkl4MDhhZlFLd0twWXhVZ0lqbk5qdQpDRjJCOURia1F3WVdzSmtzMDY4c05NL0ZRTzFjOWZvWkFnTUJBQUdqWURCZU1BNEdBMVVkRHdFQi93UUVBd0lGCm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWYKQmdOVkhTTUVHREFXZ0JSNWpjZ1ZhdHVqcFFXVWJOV2Jod05UNENHUG9EQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBa2EwaHZQbEovQTBGVzE0LzJIR2NnMGdlakFJYW5LaDdTWCtVNTBWMTdialM0RzlyRzBTT1pPT1VWa1lTCnp4dDhWUmhGMGtrOUdIRjhMTVdsUSs5MXBvNGdqandzZVJhQmhlZ21YKzJ5UHZIUCtYZjd4WlZEMmwvaytNbE0KRzR1TDhVMERFNGFKN0hkRFFQMEhUR3VrK3h6Q2w5dUgrZnBJUnczU1h1Z2tWZ1hqSFZyN3I0ck96am4xYUhOSgp5d3JTSXE1SDZTTXNydDJEdFRmZDMreGF4eGM1dlEzZWNUSktSdTY4WW5FOHJFcmdYdnB2N1h5dHFpNEt4eUZHClp4K1BFNjJZcVY3TXNQK2pOdGp3clFsd05XNWhIU1lOb0xjcGplMmNxS2xkQm5CZTZsYTl3QnJZWEZyL0l2QncKaXg1SkZCbndUcWswWnpNdHhORDVKSVJFYXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbUpjeEpyWktNUVdaZ29GWitsRDFzaDJ5V2RBWlBxTU1ob1FkZzhPNk5mZDAzWHkwCmdIeVg1ZjV5dG5YNzYvV2pDOSsxdjFVV2x2N3RRdk5nT0p0MG5aa0cvWS9jSGpCV1ZHSEJLUzlVQ0pjNDRQMlcKd09QZGd1K25RdmYvbld6dVVNdDdNK3dsR0g1dU15VE0rSkhLSlZjTnpWVk1kNktWL3VDVWYwK092Unp0OVNGTwpTTkNJVmw4cEtlems3d3pucmdRKzdJdUR6d0x2QUQvRjV2QnRUeXg0Y0NaOEc4bmdMMEJPSmgreXpzcXlXMXlLCmhuS1dTMVRCcW1QU3g5d1JyT2pveFBiTjdVR04zQXBlS1pwMU5vcTlRTkJCUFlRdWlNZFBHbjBDc0NxV01WSUMKSTV6WTdnaGRnZlEyNUVNR0ZyQ1pMTk92TERUUHhVRHRYUFg2R1FJREFRQUJBb0lCQUhqdGlWUm1yeEYrb0pQZQpzMUkvaXhmbmxRcThjdVZERHBBa2I4ZVcvQ0g4eEs4clAxbDhaRjB2Yy9YS055WmUreUpUM3BPTmVXT2RFS2M0CmZZOGZGQ0k1dm1LQStpOHFtNkF3QUljRkxSSEoxcGZvSU9zcEtzbXo1OWlZOWdqcTVVcytsNXNra0ptQ3lRN2IKSVYzMUhFRFBadTdOcE5aREVhQjJsdmoyTWVjSXB1eGFDRk11SjVLeVJpcURCeEdGL1RYZlprcnpLUmE0UGFpawptdWRwN2ZmVFdiRG9VeGdGYmZPMG5oMVFrMmh1bVFDWmkxRmZNM1NEd0E1RmN6TGJkVE5HWlN3c3poeVhRc243Cm5qelJpQktBZHlqVDRMcytKK0ZuK0F3VFdSUU9rSjc5SFAwQmpFK3MyM3UxZUNGR09FRzRIcElZd1NCSTZ5TC8KTXV4cHc2RUNnWUVBeWdkbEppMVFPRjgvVW5VQ2lWSFBtaWl5UE1ERWlkbVB3Q1dMZjUxUncwaDBmeGtzTHlJQgpmSjhhcjVGM0tMV29vZXBNaXBSTWNlY2sxNG9WUXk5b2padXdWdTJScml4OTVmdnN1cU1zMWlwWEltS1hGQlZNCmREeHJMVFlXdXN6bGh3RXF3RUlxZ2FyclRzSXpjR2YwK0l4SHJsOEdUdUdOZ1JZRTJxNVEyajBDZ1lFQXdWcS8KdGtnMFYvYzd5cDMxMnJDVjE4blplWnVSa09uY1B5b3Y3SzNaMHhObU53SnlNOUVPb3ZHZWYzMDdpWGpmZng3TwpNRlYzQUtOY1RVbHFzckFxaHhTR2ZvYmxQR216ekNWNzNwSmpFYVZLeitnMjBwRTRRU2dYNkpQOTF5ZmFYU1dKCnBqUTRpWmN5R1RtbXRqbnBBSFdqS29qQ3cxUXlIcEdIK0NxVnlRMENnWUVBamVlTjI3ZitYZXBCSHhrRE5CTWIKNEN0dnJvNjBQaU5yL2tvZzV2MUluZ041bUlERThVSlFpd2x5aEJtSCtqZEhBSndETVYrakptcDJEVk4zUmQ2NQo4S1dId2pkU21XVzA5T0wwVDlBbndUS3lTM3UycEt1bExRdjNPQ1dDNTZqZUcrcnM3V2hNVlJJS0FDTVdZSUVVCnA3Ulk4UmpiNUhJM281RWt6Ym1kSHYwQ2dZRUFySkJMYldtL25ZcC9pSE8xeWptelllVTUvTGlGRCtwSHNPLzcKMmFYSE5BU3FRd29oMW5FTU9ReWZRblVJUDhicTRNOGpnaXVraTZOQWE1SE1jakdib3ZjRW1jUFdyelkvUzBGZwo3ZUdFSFdtQi9VL29MY0dCalZVMUVWT1RSd1RBZEVWZU5rR0ErL3Mrc1JpczJ4R1FDK0x4ZnJLVDhEUWlqdm1mCmVqSzNmN2tDZ1lBME5DMkk4TmVWNVo5T0lKdUhGWXhlSnVGTS9Ea2lETFJ1WTVDbE4xL2M3TjR3L29URVBjVHoKSFg2NXFwelYxbkhkcWhVbkFiRFBQS1RLVTRkZG1uSU9LZlM0R01CMmZpdkxmYkJPUDc3STZnVzR5UXByekVwWQpjQ3FxUlIwMGlOeGRVbDczYllHOW1HeW16azhMWExRNzE5Zmk5UkJ1dC9vSmpZdTBwZmwrYnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRT3ZBMW9XRUExVXRyUlQ1bkFxYjdDekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOek13V2hjTk1qY3dOakV4TVRreQpOek13V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzVuYjF0ODhCSjFhL0xWMk44Vlo2UGJwV0JNRmVnWGZkc2pGd1RLaDl2WmlGVmREajgKN0R2eXNNdTNhUm02bTlXT01nNnhGMVNUVGs3ZDlRUCtwWXpzaGN4T2lXYlRUMExOaDdYMnd4Z1ovMGFKK0lqeAo1TXQ3TlBzS1JiQTB0bjgreS9UMktGOENIVzBRbjRZNmNLeTllMy9odkxwcWF4aldhZnNaRzRFbHRiS3kvdlkwCjY0SmlrZkxwQ1VSK0w5N2NVbGVRSUQzN0Y3RVBvN3FWNUVkb0k0T1FuMTJBUTY3VUJtOTR0c01NSjlhRUdBeVQKQmRBaWpWdGJweXBGN1JUdUtielZDWGEvUkxxS3B3N0VzUDloenJwUFZsbTNMd2IyakwyNFplQmlCZ2gxRC85NwpKVThwVFV4QXYyclFYRURrNVBrTHJIdHUrWENhZlJwenlhUlRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVlWTNJRldyYm82VUZsR3pWbTRjRFUrQWhqNkF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGcjNEalpJVWM3MzIxNlNhUUEvZWMyK29GYUg0L3RTbDZONnNTWERYZC9XL3QxcjYxaVN1RTNXClBpTTgwdDh0dWY4Wm90enlLcnYxMC93NW5lR2VNVHJkVUQvYjBMWnIyN0t2aHNuNGRQN3ZycWNHeDEyR281R00KcDRhMEtLVDVQcVlucFQzZS9hRklQRTZRajVHNGgwWDZmMndOaFIrQWVWOG5jb0dyNC82V3BNMkpJR3B4TkFjUApJR3RJMGFmMzN2OVVxbHc2UzdnT1BUK1FpYkJQT2dhS2NXN01lMjYyTFV2YzNPWklSR05CZENtVjR6NE5uVU9yCjM1L1RJemRpVEF0WktIQjNIclQvdWl2WWExRkIybXpxdVRWNHpWdktIWHRhL2YxaVlYanZJSndFZjJoRzBvRHgKS2ozNmV2WWZtUnhUMWNEMGZFYkNaRUxoVDk1Q3hLcz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURwekNDQW8rZ0F3SUJBZ0lRUk1JYyt6Zlc1V3h4L2YxRnI3Z2IxREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOek13V2hjTk1qY3dOakV4TVRreQpOek13V2pBcU1TZ3dKZ1lEVlFRREV4OWpiSFZ6ZEdWeWJXVnphQzFoY0dselpYSjJaWEl1WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeHNpOUcycEJsNlZoY2hpS0RuSGIKRGo5L1lMeHdqTUxFeG0xajVRVUdKenJFa3k2RHg5ZFh0UXhuK0VlWTcvdkpZcUxvV2lqTThyQWlsRnZSa0J1ago4REp6RndNQnppdmx6cVFHVlZ0NkxRdUdsQ0h6RDh6d2F6ZnVUVmhYWUtkaUlCSGRnZXF3NjNOeGpDZVR4U2xsCnU4Yk8zTndyTUZacDBQOXArR05kTjlRaVloVmx4R3ZwSUhRaFIwZXFUOUJLdUxhMDl6VUsvS2NDbUlZLzVwcWYKV0xxd0oyaE90cVhVS2ozaytpcm84T2Z1Y0hiNHlxcFdVVTR6UlV5R2FlbTFQRk41dDdzVERsNExzdUExNHFacgpUZDlKZTFMWlJMRFZGL3FKQ1lTclhBOE1lVW9DZ1h6VkFSN205ZEdsUmx1TGNsWWFOWlJFQk8yMkUzb1NJOTJsCnZRSURBUUFCbzRIZU1JSGJNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSNWpjZ1ZhdHVqcFFXVQpiTldiaHdOVDRDR1BvREI3QmdOVkhSRUVkREJ5Z2g5amJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXVZMmxzCmFYVnRMbWx2Z2hBcUxtMWxjMmd1WTJsc2FYVnRMbWx2Z2lWamJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXUKYTNWaVpTMXplWE4wWlcwdWMzWmpod1IvQUFBQmh4QUFBQUFBQUFBQUFBQUFBQUFBQUFBQk1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUFOYVNaV1BiMGpCd2xnSnc1OTVOem41Mi8vcGVzRDVtK1JRTjF4UUk3OHI1SmdBOWlUCnlFRFBha1ljQUVDbWc5VkhWRWVtOVBzVXlTTzhxZ3RBMnVyNWRONEs5cHRhMjA5OE9nbVEwT0ZMTXkxTWpCOFcKYUhadXNjQlRYNjFUdVpJbXBjT3ZhZytGcXg3VWR6MDErZGxRN0tRTlVYNTl5RkJMays5ckM1UzQ4enhLN2ZJaQpLaGlCMVVFeVdnWnVMalA2eHdmMDFlekhVY3ZlMjh6d1VtK21hNVBXamQvWDZndDdmdk9XaWZsVW1pVW5CMTIwCmtTVkR4Z0JhWGFsdy8vM3FqNWVMN1BMQzFpcUxqQ2ltNjErRzRWOXN5Q0VxaDBaSnNYVWI0WDY3Q0lSbWVsT04KNjM5akpkTTIwQnU0b2NNUW4rNFlGbUczQXNLU3Z2SkxLU0c3Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeHNpOUcycEJsNlZoY2hpS0RuSGJEajkvWUx4d2pNTEV4bTFqNVFVR0p6ckVreTZECng5ZFh0UXhuK0VlWTcvdkpZcUxvV2lqTThyQWlsRnZSa0J1ajhESnpGd01Ceml2bHpxUUdWVnQ2TFF1R2xDSHoKRDh6d2F6ZnVUVmhYWUtkaUlCSGRnZXF3NjNOeGpDZVR4U2xsdThiTzNOd3JNRlpwMFA5cCtHTmROOVFpWWhWbAp4R3ZwSUhRaFIwZXFUOUJLdUxhMDl6VUsvS2NDbUlZLzVwcWZXTHF3SjJoT3RxWFVLajNrK2lybzhPZnVjSGI0CnlxcFdVVTR6UlV5R2FlbTFQRk41dDdzVERsNExzdUExNHFaclRkOUplMUxaUkxEVkYvcUpDWVNyWEE4TWVVb0MKZ1h6VkFSN205ZEdsUmx1TGNsWWFOWlJFQk8yMkUzb1NJOTJsdlFJREFRQUJBb0lCQVFDTDZxVjQwM3loc2ExNgpNcDJSOXovWnNvWUUzLzVVaFk4ZG44ZU5YdERxOGVtRk0xdGNZVTJCeU42eG1pdWkxMVh6a0hqOVpQU0U2Y2NkCko5ZkVtRC8zQkh1UHVmVWVXaldpRWovRyt1RnZMVXFubjVISEVGZzFENlF6V3JmOTl6TVJJYUlKSE5rMGtRaGUKUDBrNm9KM1Q0dWFkL0hhRnluMG10M0N1ZmJvU1hZWmxTU3dFdmJNTTRNUGFnOEkrZUJuZkw2ZE8wK3p4WG1WZQp2a2dFbGVQdlQrejljNkJtZm4vV21KM3ZoRDc3NHBOZ05sNnhLaDhBRndaam81ZjJBSmtpR0VNcmtZbHRGL2VTCkthc2pxd1VSL2xnTmsyQTlad0J2Uk93TFV2RndNc2ZWdnAwaGR3TUVDMmFhN0VWRHA5czl0cWNGTmFuTm5jaVIKUXhjbjdaaGhBb0dCQU0wRmVVaVJYTEdNWUFjemQxMzl4KzhpSUREM0VteGRVNlg2d3JBcXdmWnJiVEdDMlVMcwpBYUhqenJ5a3p2S2RCbkc4MzFKSkR1dGJkeVNBWmVWQ0l4b0JLa2ZYdWpZZjk5U1ZZSHY3S0hyVkN6bm1CVndzCitxeW1KY0NMelhiTkswOXRlMDRSd3dBaS92V1lUckRNM21mMEw4RUN3VUpBMFpYQmlObGF2QVZGQW9HQkFQZzIKUElJcm01b3hUUjdaT21YVFRJQUZKcHFteTZ5cFRyMkkzeFAxNkVZUjRab3BWTEU0ZFdDdVNiU2Q2aFlKbzlXbApvdXdiYVVnRXZhSFBJUVp6TFFUWktFbnNMNzJ3VVpQM1BRQkN5MEl5Tk9zeHo4alJvbjJzdTdWRmNUVjJRN3NMCm11djBhV3QrL3U5NGxzaHBKUGpMem9QNTNVWVFhS2VybkNTdlNib1pBb0dCQUlyaERGazE3cDV1d3BYZUxSdkUKVDIwVHBzN0VidnhzODc3WmNJdzVTbzZNRXJtWk0yYjd5OWRJSThEeHV5WHBiSFliUlFQT2JZYk12SlpEUzhMUwozRWcvUmM3SXVXRDBvc0trTldtR3B0TWVBYTdFdkJqR2QwQUFoRTQ3NVlCMlZzSkZIV095OEc3bFJlUkR1ZnBWCnJNcXFSTGJ3RU0yNmJyNk5EUkIvUUNJcEFvR0FCeXRoNGd5cWFQREZubjk5elZVbUg0aUdqZThGY1E1TzVQQ2cKS081d2NCMnlHNGJZR0dwZUVaWFhNUzFpaHBKdXRnd2J3YUFsRVZ4NXNjUE8yMlhXUmc2VHVGYm5KaDZDckxoMgpmWnh3VEpBd3NSNTJOd0cvSk13cGU5bnVwREd2VVNiTHFjY2NpR3RacDhjZTY5a0ZwVjRWc0FBMm9RQjJWV21DCmtCaTBFM2tDZ1lBYS8xTXBHNU8yTlZQWlg5MGU5UzVrNTN1ZUJMTHFVTkhqNllUaVY2WWxYRXN0Ylc1cWM2VVkKL2xvdmNWdmJnUVNpdGZLYXc4TGpJTnd0aGNsbkVtSEdKYU8rMjJETmF0OCtuWjdMWm5HY04zL1huZG5LbnF6NwpRRzFldERjWVcrcnZuM3E4L0xDZlArQWVueWVRS1Rsa0xqYUNYZ1JxYnpPREN1VnpLSUl4TkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRT3ZBMW9XRUExVXRyUlQ1bkFxYjdDekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOek13V2hjTk1qY3dOakV4TVRreQpOek13V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzVuYjF0ODhCSjFhL0xWMk44Vlo2UGJwV0JNRmVnWGZkc2pGd1RLaDl2WmlGVmREajgKN0R2eXNNdTNhUm02bTlXT01nNnhGMVNUVGs3ZDlRUCtwWXpzaGN4T2lXYlRUMExOaDdYMnd4Z1ovMGFKK0lqeAo1TXQ3TlBzS1JiQTB0bjgreS9UMktGOENIVzBRbjRZNmNLeTllMy9odkxwcWF4aldhZnNaRzRFbHRiS3kvdlkwCjY0SmlrZkxwQ1VSK0w5N2NVbGVRSUQzN0Y3RVBvN3FWNUVkb0k0T1FuMTJBUTY3VUJtOTR0c01NSjlhRUdBeVQKQmRBaWpWdGJweXBGN1JUdUtielZDWGEvUkxxS3B3N0VzUDloenJwUFZsbTNMd2IyakwyNFplQmlCZ2gxRC85NwpKVThwVFV4QXYyclFYRURrNVBrTHJIdHUrWENhZlJwenlhUlRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVlWTNJRldyYm82VUZsR3pWbTRjRFUrQWhqNkF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGcjNEalpJVWM3MzIxNlNhUUEvZWMyK29GYUg0L3RTbDZONnNTWERYZC9XL3QxcjYxaVN1RTNXClBpTTgwdDh0dWY4Wm90enlLcnYxMC93NW5lR2VNVHJkVUQvYjBMWnIyN0t2aHNuNGRQN3ZycWNHeDEyR281R00KcDRhMEtLVDVQcVlucFQzZS9hRklQRTZRajVHNGgwWDZmMndOaFIrQWVWOG5jb0dyNC82V3BNMkpJR3B4TkFjUApJR3RJMGFmMzN2OVVxbHc2UzdnT1BUK1FpYkJQT2dhS2NXN01lMjYyTFV2YzNPWklSR05CZENtVjR6NE5uVU9yCjM1L1RJemRpVEF0WktIQjNIclQvdWl2WWExRkIybXpxdVRWNHpWdktIWHRhL2YxaVlYanZJSndFZjJoRzBvRHgKS2ozNmV2WWZtUnhUMWNEMGZFYkNaRUxoVDk1Q3hLcz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRVW1TSHppclVObHRHTTREL1grelg1REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOek13V2hjTk1qY3dOakV4TVRreQpOek13V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDMlkvNXY1NUc2NTJSa3BhVVpqam5vY21zWTh1QVkKQ1VDNnVBMG53cDhHajhsUGlOa21ySENDOGFTckpLL2RuNnZZYUdmUTRDSlJEd3NNRnRraGs0OEF0QkloMmVoSQoyZitzcE9MRFJCN1FnQndoY2srL0I2ZmNWVWNibEZtNzA3OTAwUitGZjhHVTkvUnpjZVBZalpta3l6SXp4aWY0CktNa0RjRmovcWJ0NlZUYjNMTDNUTUxlbWlBMmw5M3VHWTZUdXV0aVZwMUsvL0xZSzlzRXRmV3UzbFpYUjJCVEIKb1JTZk1ucDExVEVEbDdLRitReEJua1RjaE9RRFd1b2Q1NnlwUk5BN3lHM3NKU1c1WW92Y016TCs3dXJpTEFYOQpZN3UzeFk4NnJ0aW00ZU1wYW8rbkdFVGIyY0M0dHZoajBJTFhNMllBRGRzakRSbktjMFI4cFRkeEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZIbU55QlZxMjZPbEJaUnMxWnVIQTFQZwpJWStnTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFFb2hIZ2ZnWnhGeFlYeW5XYzVtVDVraUd3aU5NWkdMSXFmejhZYm9pS2pjaTA5cGwKcTBJUDVNV3plcVpiVEFRditJbG8yck4yc1FlNVMvbFJJeXNDOWJRTGRGZGhsVzVUbEt5c0RxZDJ6Y0p3a3J0UwpSMHNoejBwTzZKcGhhb0hmZXJDQi9aZmE1VjFUWEVuRGxPWjQwQU1rSTBMd3Y1SGdqQ3YzdXd6RU9ZdmMzUWZJCjV0ZmFtdXpGblUrSUc0WTRENUZmSjFKUG45bHVORGphQVlUODF2WHBMZitGMkxiRUgveCtYM1Z0MlZ5QW55L0cKeVFlS1pIRzkrZElOTjdiVndrVHZXNWxicG5MckRnU1JsTGF6UGVyQjRBTEQ3bEtkZEo3OTBaaDA0amhDS2hqZQp0RW92VW5SZU0vQnNIZ0lYUDRDT0ZFd0FBY0hSRzVzRklzM2Zsdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdG1QK2IrZVJ1dWRrWktXbEdZNDU2SEpyR1BMZ0dBbEF1cmdOSjhLZkJvL0pUNGpaCkpxeHdndkdrcXlTdjNaK3IyR2huME9BaVVROExEQmJaSVpPUEFMUVNJZG5vU05uL3JLVGl3MFFlMElBY0lYSlAKdndlbjNGVkhHNVJadTlPL2RORWZoWC9CbFBmMGMzSGoySTJacE1zeU04WW4rQ2pKQTNCWS82bTdlbFUyOXl5OQowekMzcG9nTnBmZDdobU9rN3JyWWxhZFN2L3kyQ3ZiQkxYMXJ0NVdWMGRnVXdhRVVueko2ZGRVeEE1ZXloZmtNClFaNUUzSVRrQTFycUhlZXNxVVRRTzhodDdDVWx1V0tMM0RNeS91N3E0aXdGL1dPN3Q4V1BPcTdZcHVIaktXcVAKcHhoRTI5bkF1TGI0WTlDQzF6Tm1BQTNiSXcwWnluTkVmS1UzY1FJREFRQUJBb0lCQUVpQzhwbjh2NFJHRURTdgpZamNKdzEzMWR6eWcrcFN6d1FjNnV3Z3VxTmlMKzZYaUt5cmo3WXN4bEp6eDVmVS9VS3Vsdm5oZFUyZFVpcmpRCnNKeFh0TWU3ejJXajQyUnJQdW1kV0FYM3BDU1NlaHlWL0x4ZXg4NmlITFlMUWEyWjNva0x4dk5sT2tvR1ZpbzcKZ2pFTEFxVnduMUhVR3ZuZkJTT1gyOW93MmJjbFU4WnlndHdyeTAyNDJjcHpsUzlNZGN5Y3RJK2x5Sy9kOTdEawpCVmY2VzdCK3dDaXpSM28xNmFNaDlLVnVBeW40dnRiNUdKVGhuVDZLMzI1Z3Q5YWxhNUlhdFRCRmUvaDREb0JlCk4zY1lKN1R4UmZnQjJ1MXVBOHd0Sis0eE1WNndyRmRJc29rRURFVThnVmR4ZnRyZlVhbXlWNW5aVndzTnh4VWwKRHI5c0xuMENnWUVBNG41dFFLUDRVaExCY25mTjRmVjN4OElRYlpscW1xaEZQcnZhdHA3cFJmbXNjTVFEM0NNbQpta3NMWE8wMlVXV01LamZSNmx4c3JXY1d5ckdXUDJDNnNjN05RSWlUS3RyVjFoTlVRWGYveWZCMldFZkJGUzl0CkJDT2NsUURzUUJCWDFXMkNEeEZTNkhucWh6SkNXeWpJRHZnSHhlL01Yd2pvUVRING8zVGJNWGNDZ1lFQXppYTUKRnZSaEt0c1R0ZXdJdWs0dVhIRVlMT2UzNm9lWi9vbDNHYmV1WCtaTzdkeEpBUGFlTkZLUXFXSmFxUEw4ZTFrdgorRVB5bVpiYTFpYVZrbU5jQlluSnh2TERBcDBZVnFaa2hRazJPTzVRRUVSVVgxWlBtdUNBN3QrNElHSzRTQjNsCmNFU1doOFRDbnlaR3ppMU9KZ1p6d3B1TTl0M0NTOWtVVnBHdDJGY0NnWUJwOTRpYUE1MDhtUFhVM21SKzRWK24KSUE2Ym1IbWQzamgzZjJCMnJLYXJUSUwzUjE0ZThuc3ZHUWs1OHVuRTcyUENwTmNiZFI2TGluM0pXNGpXSWlWMgo1ekIwanZGN3pXTGFnN1NaNU5EUjVDVWFiSWZUcDVxem93MnhVUHMzaGUzeU53ZndrTVJmYkJya0lnbVZxT0RnCnovNmpCdXh4VWpPSHZSOTlLa0ViUlFLQmdIblV3ckFCTHVlUDN6ODFSaGNzbXhPQXR1UGE4WU5HTGtrU1huT3gKYlBrNTk4MTAwU1FqbTIyYW1lbXd1Wmw5T0orQkh1dGU1S0hHV0lBVS8zSXJERGd0clRUSlJWeG5FUG9zamQxZAppMURyN2g4ZThxb0JMVHgvajFNY25nbHRyakRZa2o3ZUdnUVUwVndTMStlRE9Oc2FGeEdjc2hzM0JWdWo1L1FkClZoc3pBb0dCQU1vWmFmWWl2eEpBWE00b0pNUU1PWUptRGM0K3lzZFhReXJaTExWdzVRYmxuRnM2YnM4OFozcVkKNVA4TGcwWmxvYVNUUjhHc1FOMTRtUk5qVS9nV1Vzd2R0OUtmcTNmaUExeWhDc2tiMStGSUVZOFJza3doVW1MNQpqblU3RFBaNTJGR2lBQkVlbVpVNlFVUWVsM1VIRUdZb1NyenVwZEpPOU0xV0xadXVjNEZyCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRT3ZBMW9XRUExVXRyUlQ1bkFxYjdDekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOek13V2hjTk1qY3dOakV4TVRreQpOek13V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzVuYjF0ODhCSjFhL0xWMk44Vlo2UGJwV0JNRmVnWGZkc2pGd1RLaDl2WmlGVmREajgKN0R2eXNNdTNhUm02bTlXT01nNnhGMVNUVGs3ZDlRUCtwWXpzaGN4T2lXYlRUMExOaDdYMnd4Z1ovMGFKK0lqeAo1TXQ3TlBzS1JiQTB0bjgreS9UMktGOENIVzBRbjRZNmNLeTllMy9odkxwcWF4aldhZnNaRzRFbHRiS3kvdlkwCjY0SmlrZkxwQ1VSK0w5N2NVbGVRSUQzN0Y3RVBvN3FWNUVkb0k0T1FuMTJBUTY3VUJtOTR0c01NSjlhRUdBeVQKQmRBaWpWdGJweXBGN1JUdUtielZDWGEvUkxxS3B3N0VzUDloenJwUFZsbTNMd2IyakwyNFplQmlCZ2gxRC85NwpKVThwVFV4QXYyclFYRURrNVBrTHJIdHUrWENhZlJwenlhUlRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVlWTNJRldyYm82VUZsR3pWbTRjRFUrQWhqNkF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGcjNEalpJVWM3MzIxNlNhUUEvZWMyK29GYUg0L3RTbDZONnNTWERYZC9XL3QxcjYxaVN1RTNXClBpTTgwdDh0dWY4Wm90enlLcnYxMC93NW5lR2VNVHJkVUQvYjBMWnIyN0t2aHNuNGRQN3ZycWNHeDEyR281R00KcDRhMEtLVDVQcVlucFQzZS9hRklQRTZRajVHNGgwWDZmMndOaFIrQWVWOG5jb0dyNC82V3BNMkpJR3B4TkFjUApJR3RJMGFmMzN2OVVxbHc2UzdnT1BUK1FpYkJQT2dhS2NXN01lMjYyTFV2YzNPWklSR05CZENtVjR6NE5uVU9yCjM1L1RJemRpVEF0WktIQjNIclQvdWl2WWExRkIybXpxdVRWNHpWdktIWHRhL2YxaVlYanZJSndFZjJoRzBvRHgKS2ozNmV2WWZtUnhUMWNEMGZFYkNaRUxoVDk1Q3hLcz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRUkZRQWhYVkRMMHE2SUhnMThDd3JSREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOek13V2hjTk1qY3dOakV4TVRreQpOek13V2pBbE1TTXdJUVlEVlFRRERCb3FMbU01TG1oMVltSnNaUzFuY25CakxtTnBiR2wxYlM1cGJ6Q0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMbC94YzRGVlNzc25xOUttZ2hFK2txdDJyaWMKMC9penRRajMvUy8vcnRBaVZVYXhHSk8yaDBTRllJU3VwaHFCVFFLWW1TVERUbVEybWJwWUdadVBGaWtGNXIrVQpnMExsU2puYUJNb0c1c0xxS0VHcjdxZHFjR01TWU95S1V2K1F4ZHZzYmFGcy9YMnA3RHZWM2lPZjFJenpxcWxVCjQ2M1ZFbGFGMXdldTdJQ0wrdE91NTd4alRCMTNmRkdZREVTK2ViMnBVcjFhSHBSUlN2bm5QUDFrTGhFTFRON2cKUThubEZGMVpKYm84aG4wb1Z0dU1FY2U2NzN2TkRsblZ1MkVHZkpIQlhUWmh5Si82QUdlNHdrR0RFcWtlMjd3Vgo4VUpYZGg3OHg4Zng1eXYzMkVBem5kOGY3Q040emFiTkgzUjY3eExOTFFUamE3ajlLZzlteGl4Uk91TUNBd0VBCkFhT0JpRENCaFRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVVlWTNJRldyYm82VUZsR3pWbTRjRApVK0FoajZBd0pRWURWUjBSQkI0d0hJSWFLaTVqT1M1b2RXSmliR1V0WjNKd1l5NWphV3hwZFcwdWFXOHdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUlLUElobytkNTd6UURpcHJkQjFNeldqT3NWc0NpZTZBRThlRHpGd3Ftd2cKQms1ZDd1RndYaGRwTkFLVHA4S29mWHFDV3NtblgwR3JJU1YxWkNkZUJwL0MxRC9HcG44RmhzQkZLOElHaXpsagpKQkpSbFZIRW9tclptWlFpcDhzbTBoNFVBZ2tmK0dtZXF4Qys0R2M4ZzdIMVllcFlTUG5tUFMwNVdQTExwZGdPCng0RGFRUG1NeW5NU29YMUhkUzhTWTlBVXNFa1ZCR1dreEpRNkQxb3FpM2x5OXVhcUR4eXZET0phZTRpNlFWa3AKdmhBS3JZZUZJcFJPNzF1TXhmYWlTdGtyNnBjSkl6WEVibjlRTXIzUThpdE1ZelBDdHdkdThsWEgrNlFMci9vKwpMNVRZUHlHWTVJdlFMZDNDUnpzYkFxRFFEUk5TS1BFSHVBYzhjNWx0ZW5BPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdVgvRnpnVlZLeXllcjBxYUNFVDZTcTNhdUp6VCtMTzFDUGY5TC8rdTBDSlZSckVZCms3YUhSSVZnaEs2bUdvRk5BcGlaSk1OT1pEYVp1bGdabTQ4V0tRWG12NVNEUXVWS09kb0V5Z2Jtd3Vvb1FhdnUKcDJwd1l4Smc3SXBTLzVERjIreHRvV3o5ZmFuc085WGVJNS9ValBPcXFWVGpyZFVTVm9YWEI2N3NnSXY2MDY3bgp2R05NSFhkOFVaZ01STDU1dmFsU3ZWb2VsRkZLK2VjOC9XUXVFUXRNM3VCRHllVVVYVmtsdWp5R2ZTaFcyNHdSCng3cnZlODBPV2RXN1lRWjhrY0ZkTm1ISW4vb0FaN2pDUVlNU3FSN2J2Qlh4UWxkMkh2ekh4L0huSy9mWVFET2QKM3gvc0kzak5wczBmZEhydkVzMHRCT05ydVAwcUQyYkdMRkU2NHdJREFRQUJBb0lCQUFEcUMweUhwRExSUm5ydwpzQytvUDErTTJjNGRIOEpUQ0dwaDVvS05EUXlEanM0SlkyaWU5cTIweHBRQTFGcS9GbVVUNFhWWDdSUDdYT2laCk5JOGF0bTQvVkRMUGhaSVgxVFRSeVVKQnBIT0RlZTFRN3AwdW5oMHU0d0ZuY1I5SFZHSlFHUDQ1cmtvblF6M00KUVFzRjU2TkdOQ29mZS92SVdBM0xIUk14bm9MSHE2MXFSZHZnV2VpTkVqbVZyOGtRMlFGVFdXeGF0K1dLYXBRRwpTRXEvS2I5TVdNdzE0c3NENjZkSkg1dXJYS3RsR0hRTUU3NXVNWitGSUhmOWwxTTVYUXpHdlFWRkFtczZFWHduCmlYbU0rTDZ5WUltT0NMTkhab2U3WDZiczFSbk5zczdSTnF5djRKRFhVeEdpR2lRWTJtVVRKbWFrY3MxYTR4bGMKcm9YLzVZRUNnWUVBeGliRy8xQ3g1cnYwemtxNFExZTJGM0YzQTZmTGdwNmJpYkxqcjNobjZpckk0bG5TM1p4TAo5alpyejY5L1lCSGkyNzIwRjZ4TDVQWmRiMmx3eTJrN0oxeDQ3NUlNYkIzYTQ3ZTlySXVJYjFNMHRtVVNjZ05TCnhUWFlkWHMrNit4WUduQjdRdXJhS1VibnRPeTZ6UXNwVlZQRUVXdWV2WnhhVW9mL0dBOFhra0VDZ1lFQTc2ZGwKdFpQeWpxd0hOMm9EOHlEWE1EcDZvYjhPQTVURXVEV3dGUWFiTGlKcmpiNWVQUXJ6dTdYRU5Pc1BUd2hpN1NJdAp2WGcydWVmcHIzMXNuT1VFK1NqRkJjOGJ3QzlPNVFmd1NGMm1aREZjRnlDcWh1eUMzR1dteW9pTTZ1U2pPRUEvCmZyTFlMNnE0eStHUWhQcGRHV2cyc3lUaFFhK0IvSlVOYXYrUlBDTUNnWUJsZ3R3VFZCMnZYTDdQS0F3NXc2ZHYKWHh0ZmJnaWVBKzhlbmR4eXVqWlNDbFViVUhUc1B2UFRVSkh1dGJPRlhlUmdPbEVXaDVmaDFpeUx0UEtwNG1FQgppeWdSWXpxbDhLMkFWMUwrSUFWbk1yTWdkYXI3YWFSdmoyUXkyMDZpd2xOb1NCTjlkcDhJNG1BMW1ja2czZ1R3Cng1YjhiYXZHNjJDQ1ExVjExOVYxZ1FLQmdEODQwUHNpNllVNzJyZUNyMElQY3RWVlNBNnRnVHZ1bmlyZWR2SkYKQ09FVjBYdldNYlEyMUcrN2x1UkM4b250ODNNTlpqV3FwZjFMTWZuS3c4RnNKWEM1a2FoanA3VitoWGlrTEg1YQp2aytHT2Y0Yjd3Q2pHaTZjWG5EbHJ3ODBlOTZXREdvWE1qTDQvY0ZEWTBYQmFwZ09Sd2ZoZmM4L1JySmtlK0t6ClF4UXpBb0dCQUsxZXZXbUUrS201QXQ2Uk9kYzVFNDIxdC9vMW1QelJwQ3JubDZvVUN2ZjRRMC9BQjg1ZFREaDMKODZBR2VER25RZEp6bXQ5Y1lObDFOTzRsaEN0NlFMdnJIdnk4UmZVU2JnYWZzNytPWUFUczB2cVJVVSs5S1VhaAp3QnhYUWF3ZTJQTTMxbGZvVTNpWTM0MVJvaitDd09qUTl4Zy9DclhkaG1mM0d0alprbUhqCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  policy-cidr-match-mode: ""
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":9963"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: c9
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "19"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"
  service-no-backend-response: "reject"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-masquerade-to-route-source: "false"
  enable-wireguard: "true"
  wireguard-persistent-keepalive: "0s"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "false"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  enable-health-check-loadbalancer-ip: "false"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  bpf-lb-acceleration: "disabled"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  hubble-export-file-max-size-mb: "10"
  hubble-export-file-max-backups: "5"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  ipam-cilium-node-update-rate: "15s"
  cluster-pool-ipv4-cidr: "10.9.0.0/17"
  cluster-pool-ipv4-mask-size: "24"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "true"
  bgp-secrets-namespace: "kube-system"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"

  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  # default DNS proxy to transparent mode in non-chaining modes
  dnsproxy-enable-transparent-mode: "true"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-xff-num-trusted-hops-ingress: "0"
  proxy-xff-num-trusted-hops-egress: "0"
  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"
  proxy-idle-timeout-seconds: "60"

  external-envoy-proxy: "false"
  max-connected-clusters: "255"

# Extra config allows adding arbitrary properties to the cilium config.
# By putting it at the end of the ConfigMap, it's also possible to override existing properties.
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: c9
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n            return 200 'ok';\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/clustermesh-apiserver/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumexternalworkloads/status
  - ciliumnodes
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumendpoints/status
  verbs:
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumexternalworkloads
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-bgp-control-plane-secrets
  namespace: "kube-system"
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-bgp-control-plane-secrets
  namespace: "kube-system"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-bgp-control-plane-secrets
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver-metrics
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/component: metrics
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: etcd-metrics
    port: 9963
    protocol: TCP
    targetPort: etcd-metrics
  selector:
    k8s-app: clustermesh-apiserver
---
# Source: cilium/templates/clustermesh-apiserver/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  type: NodePort
  selector:
    k8s-app: clustermesh-apiserver
  ports:
  - port: 2379
    nodePort: 32379
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
              divisor: '1'
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                    set -o errexit
                    set -o pipefail
                    set -o nounset
                    
                    # When running in AWS ENI mode, it's likely that 'aws-node' has
                    # had a chance to install SNAT iptables rules. These can result
                    # in dropped traffic, so we should attempt to remove them.
                    # We do it using a 'postStart' hook since this may need to run
                    # for nodes which might have already been init'ed but may still
                    # have dangling rules. This is safe because there are no
                    # dependencies on anything that is part of the startup script
                    # itself, and can be safely run multiple times per node (e.g. in
                    # case of a restart).
                    if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                    then
                        echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                        iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                    fi
                    echo 'Done!'
                    
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: write-cni-conf-when-ready
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.15.6@sha256:5789f0935eef96ad571e4f5565a8800d3a8fbb05265cf6909300cd82fd513c3d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        ports:
        - name: prometheus
          containerPort: 9963
          hostPort: 9963
          protocol: TCP
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/clustermesh-apiserver/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: clustermesh-apiserver
        k8s-app: clustermesh-apiserver
    spec:
      initContainers:
      - name: etcd-init
        image: "quay.io/cilium/clustermesh-apiserver:v1.15.6@sha256:6365c2fe8a038fc7adcdeb7ffb8d7a8a2cd3ee524687f35fff9df76fafeeb029"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - etcdinit
        # These need to match the equivalent arguments to etcd in the main container.
        - --etcd-cluster-name=clustermesh-apiserver
        - --etcd-initial-cluster-token=$(INITIAL_CLUSTER_TOKEN)
        - --etcd-data-dir=/var/run/etcd
        env:
          # The Cilium cluster name (specified via the `CILIUM_CLUSTER_NAME` environment variable) and the etcd cluster
          # name (specified via the `--etcd-cluster-name` argument) are very different concepts. The Cilium cluster name
          # is the name of the overall Cilium cluster, and is used to set the admin account username. The etcd cluster
          # name is a concept that's only relevant for etcd itself. The etcd cluster name must be the same for both this
          # command and the actual invocation of etcd in the main containers of this Pod, but it's otherwise not
          # relevant to Cilium.
        - name: CILIUM_CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: INITIAL_CLUSTER_TOKEN
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      containers:
      - name: etcd
        # The clustermesh-apiserver container image includes an etcd binary.
        image: "quay.io/cilium/clustermesh-apiserver:v1.15.6@sha256:6365c2fe8a038fc7adcdeb7ffb8d7a8a2cd3ee524687f35fff9df76fafeeb029"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/etcd
        args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        # Surrounding the IPv4 address with brackets works in this case, since etcd
        # uses net.SplitHostPort() internally and it accepts the that format.
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=$(INITIAL_CLUSTER_TOKEN)
        - --auto-compaction-retention=1
        - --listen-metrics-urls=http://[$(HOSTNAME_IP)]:9963
        - --metrics=basic
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: INITIAL_CLUSTER_TOKEN
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        ports:
        - name: etcd
          containerPort: 2379
          protocol: TCP
        - name: etcd-metrics
          containerPort: 9963
          protocol: TCP
        volumeMounts:
        - name: etcd-server-secrets
          mountPath: /var/lib/etcd-secrets
          readOnly: true
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      - name: apiserver
        image: "quay.io/cilium/clustermesh-apiserver:v1.15.6@sha256:6365c2fe8a038fc7adcdeb7ffb8d7a8a2cd3ee524687f35fff9df76fafeeb029"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - clustermesh
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt
        - etcd.config=/var/lib/cilium/etcd-config.yaml
        - --max-connected-clusters=255
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        - --controller-group-metrics=all
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: identity-allocation-mode
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: enable-k8s-endpoint-slice
              optional: true
        ports:
        - name: apiserv-metrics
          containerPort: 9962
          protocol: TCP
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: etcd-server-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-server-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-admin-client
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-admin-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-data-dir
        emptyDir: {}
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "clustermesh-apiserver"
      serviceAccountName: "clustermesh-apiserver"
      terminationGracePeriodSeconds: 30
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: clustermesh-apiserver
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.15.6@sha256:a0863dd70d081b273b87b9b7ce7e2d3f99171c2f5e202cd57bc6691e51283e0c"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          livenessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          startupProbe:
            # give the relay one minute to start up
            grpc:
              port: 4222
            timeoutSeconds: 3
            failureThreshold: 20
            periodSeconds: 3
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.13.0@sha256:7d663dc16538dd6e29061abd1047013a645e6e69c115e008bee9ea9fef9a6666"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        readinessProbe:
          httpGet:
            path: /
            port: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.13.0@sha256:1e7657d997c5a48253bb8dc91ecee75b63018d16ff5e5797e5af367336bc8803"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
