---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQnBEbUovVnFhclhCR0NxMkNlMlZyakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOelF5V2hjTk1qY3dOakV4TVRreQpOelF5V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQyt1VjFWOElVT0hsV3FPVUJ4VzVxeUhaTm52dXVXeXpWYzgzYUZRQ1RTRi9MQlhjS0UKV25ndTNVdDlNTWIyVmxCVGtiOHB1QzFPMWRORXRSbWVMZi9KV1drTm1iYlVPdytHa2YvWGVEOWQ0aTgyZjBKUApnZUdacHZFNnlUTU12ZWdwQlpjTllFK0ZaZTg4YndNTnJkbVJnL1NPQnhLL1NiK2JOK2x0RUNyM0FZSVpGdmxLCjMxVS9RUVptY3hKMGZYbE4vbzNWV3ZDSG5mVEFHR1dJZ1haQldWRFpUbXBsbWJhUGJhMjIxVFpvMWIwMThTRkYKekZqSzI5YUUvSmFKUUhjbi9RR3pQTERQVHFXN2JXV3FCVHMzV2V4TzdPcVlHeGhsY0J6QTNEVDZDZ1NNejk4QwoxS3ltYnIwcVIydTcxdGNWSWRscFIzQklTbG5NVjcyenprTGJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU0a3V6TG5jVjZSREVaV0MwVXNsVDQxNHI4L013RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCYjR3Sm9xZHJLOXN6eEZWL2VMa1dGM3BOTURvQzNEL0RydUo4VlhFbWxyaUlnWmdXK2RQeEg5CjJEdWpNdEF5YjJPVmwzTVk1SXVBSnVHTzRrM1V3VVVTbTUzWG9DZEdmR1pxODFsM29YU1Y5MXV1ZDdNdEZ4SkMKSDQ0a1pWU1V4ZFI0T2xMYjVMODlLeWorL2dBNUZ0VUYrRkpCOEhpQ0tDRDBCSDQrS3N6U3cxTExVYU5FZDN5TwpUUUVJZ3h2L0hEWXoyZjREVmR5UUF4YzJSeCtpZVdxSElzRStHODNNQWVSamdXcU5SdS9nK2RYVGR1bEZJUklwCjJLcDJFQ08wdHI5T1BwYVRsKzVCR0Q2OHlRZVVkeWVCM0dkN3lhQjdaSGkxdXhCUFVnV3V5alQwMWpTTXJENzQKZU9sNmJPcU56cUxXeGl6MVhGYlRqUTg2UDJlVm8zYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdnJsZFZmQ0ZEaDVWcWpsQWNWdWFzaDJUWjc3cmxzczFYUE4yaFVBazBoZnl3VjNDCmhGcDRMdDFMZlRERzlsWlFVNUcvS2JndFR0WFRSTFVabmkzL3lWbHBEWm0yMURzUGhwSC8xM2cvWGVJdk5uOUMKVDRIaG1hYnhPc2t6REwzb0tRV1hEV0JQaFdYdlBHOEREYTNaa1lQMGpnY1N2MG0vbXpmcGJSQXE5d0dDR1JiNQpTdDlWUDBFR1puTVNkSDE1VGY2TjFWcndoNTMwd0JobGlJRjJRVmxRMlU1cVpabTJqMjJ0dHRVMmFOVzlOZkVoClJjeFl5dHZXaFB5V2lVQjNKLzBCc3p5d3owNmx1MjFscWdVN04xbnNUdXpxbUJzWVpYQWN3TncwK2dvRWpNL2YKQXRTc3BtNjlLa2RydTliWEZTSFphVWR3U0VwWnpGZTlzODVDMndJREFRQUJBb0lCQUV2cGNibjBDckdNNTJIaQplY0RreWhUYzZyL2ZZTnZiTS9rME9sZGRLWXFwMTRpWmJnUEtFbzNzck5BK2F1Sy9oaWROR241YmZVVWtuSHQ3CmJaL2xCU3M2T0RNZW5JT3Fva3BZc0RFdC9tSzYxVG5tdXhqMFJEd3BFMWpubmpjVEcyWEFnTmZsSHFHazZlenUKN3BNeVFDZklFcjI1R1FBa05XeHRlNjVhUWcrZnpTR2RqbGdMWkFSbUgwcmJTTVE1VWUzMlpzM2JSWVlsSENjRApGQVkxdDZTZENUNmtmUVU0clFLN1VTTUtkaWR6aUZPdTk0YmdTMnVSNFFPQ0pFV3JVckhvbVdqbUNXQmZXZ1Z6CjJwM1JqOE0vVDlZR2tOWlRIaXF2aTZ3ZXpNTHF0TjJUWThRSkFmeU9OcnhETU1DVnJwWlg5cW8wUUFKY2FtY00KMWw5cElTRUNnWUVBMlhzc2dWMUZpdFFsN3pGVk9FZ2xkU3diTEZXbWJmcFVrcGxNbmJmOW5CeUdGTkhDSm9GdAo3amJVNDBpbUhpVG93ZzJBSzZMeDFSNDFGdURkWFI5WXQ1b2VKQXNFTFNBTGNsQWNDWHdzOEU2ZGxOa2NPa3I2Ck93Y2twelRkajQ3ZTZ2K1p3SkJRblltdTlqcFRUOXRldFNyb0RWbk9vMU9jNmluOXJaRjJGQkVDZ1lFQTRJRC8KTkx3d2c3ck45SUZSTkFHWHh0STBXK21BQXNKQnZENVdjL1hVcHg0RWJ3NVZBV2RnMkZIRFZnV3dETHdTbHowaQo0SEIxeDZOZnh2OXpQcUw2WWJDdG5hQVBsa2M4Yk45bzM3aGphOFM4cWlqNkZmVGNiNnNwVUFCaWkzUVFyRE5TClk5R2R6UlpvUXg2d1dqZlBhc2krbkY5S1lNSnMzeU1YSllRK3BDc0NnWUErSHhEM1lzMGFlcjdiTkJ4RGwxZ2IKd0IyQzdIUTl0ZU95ZkZlR05hZ2JqNG85S0MxdEVrdDBYL1V2ZHZEOGEwNlJING9jN001bk1kbTRUMExyOXFoQQp5YVVTWnBNcTBKeDBhcTJYaUFET0k2YWZmZVN5UWZoNEkvSTBVTVY0M0RhUXFiSWhieGVYNkZ3eHVUZFMrRFoxClNXdy9aQWZDWDMvUzQydXl5SG9TQVFLQmdCa0FCR3RZOFlZWnpVbUhCUVhuajRGQ2N6WXhBR0pPUTRlMDRXZTAKWG1QbHdkU2tJZTh3RmViQTVDRzJMRzZlbXV0Z2tYdXd5a3phOHBWMGFONzJ3eThSdjZPbjZWUnd4bGZSWVJwWQpyQ21hRlBCVjg5TnlHd0lNYTJOUFI2b0QyTDkwVDU1eC8wS1JWamJ6T2V3eC90VURXY2FNRGZwTWJGZEV6eFVNCmJ2VlZBb0dBUkZoNlJqQ3dEeFRCNXpGVU9RNHpsaVNJaXVwU0h0OWZvUVJqblRHOGhTcE9xUUNLdm9wc2NmTWsKNmdxVnZQSmphL2ExVmVmUG1zUG5kVUNCN2dGeVpNM09sVGVEUHVINjRNclhMZzFiUGU4UGZhSHVRTCtrRDgxcgpIRnBHZXB5VzlQeUk1eENsUmtsUGVaTklwZVNEVzZlRVJpTWVwME1Ccmh0emwveW9hd2c9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/admin-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQnBEbUovVnFhclhCR0NxMkNlMlZyakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOelF5V2hjTk1qY3dOakV4TVRreQpOelF5V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQyt1VjFWOElVT0hsV3FPVUJ4VzVxeUhaTm52dXVXeXpWYzgzYUZRQ1RTRi9MQlhjS0UKV25ndTNVdDlNTWIyVmxCVGtiOHB1QzFPMWRORXRSbWVMZi9KV1drTm1iYlVPdytHa2YvWGVEOWQ0aTgyZjBKUApnZUdacHZFNnlUTU12ZWdwQlpjTllFK0ZaZTg4YndNTnJkbVJnL1NPQnhLL1NiK2JOK2x0RUNyM0FZSVpGdmxLCjMxVS9RUVptY3hKMGZYbE4vbzNWV3ZDSG5mVEFHR1dJZ1haQldWRFpUbXBsbWJhUGJhMjIxVFpvMWIwMThTRkYKekZqSzI5YUUvSmFKUUhjbi9RR3pQTERQVHFXN2JXV3FCVHMzV2V4TzdPcVlHeGhsY0J6QTNEVDZDZ1NNejk4QwoxS3ltYnIwcVIydTcxdGNWSWRscFIzQklTbG5NVjcyenprTGJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU0a3V6TG5jVjZSREVaV0MwVXNsVDQxNHI4L013RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCYjR3Sm9xZHJLOXN6eEZWL2VMa1dGM3BOTURvQzNEL0RydUo4VlhFbWxyaUlnWmdXK2RQeEg5CjJEdWpNdEF5YjJPVmwzTVk1SXVBSnVHTzRrM1V3VVVTbTUzWG9DZEdmR1pxODFsM29YU1Y5MXV1ZDdNdEZ4SkMKSDQ0a1pWU1V4ZFI0T2xMYjVMODlLeWorL2dBNUZ0VUYrRkpCOEhpQ0tDRDBCSDQrS3N6U3cxTExVYU5FZDN5TwpUUUVJZ3h2L0hEWXoyZjREVmR5UUF4YzJSeCtpZVdxSElzRStHODNNQWVSamdXcU5SdS9nK2RYVGR1bEZJUklwCjJLcDJFQ08wdHI5T1BwYVRsKzVCR0Q2OHlRZVVkeWVCM0dkN3lhQjdaSGkxdXhCUFVnV3V5alQwMWpTTXJENzQKZU9sNmJPcU56cUxXeGl6MVhGYlRqUTg2UDJlVm8zYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLVENDQWhHZ0F3SUJBZ0lSQUpzL0FGcHFVWjZDVXpNalZQLzV1Kzh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URTVNamMwTTFvWERUSTNNRFl4TVRFNQpNamMwTTFvd0ZERVNNQkFHQTFVRUF4TUpZV1J0YVc0dFl6SXdNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFxaHZaVFVsVTc2bDVJN1dqamh2aWUzQnBReHdZWTZlY25DUmxFYVVjUGtFMURsMHUKTmhjYTlSSXQ0VllvWTgrVDkwRkt3Z0RidjI2Y3ovVjNDbGErY05QRzFBYjNrbWxOQm4wWDl3bXRZTm5rS1RGUQpNTTg3bUZuclRMWk8yREhvVHBxcjRWNFQrQXh5MGIrbFptZHYxLzNQNERTcW1zdG5iekRMcVRHREFSS1pFdGJJClBqbGVnTThTTllIK2Vmejg2VzlJU01BT3RqNDhDREV0aFpTQUZsTXFreERrbHlqS0c3SjdBWCs0T2VlZmZYaUsKQTd5TVpNWHp2Y1BNcmJpYm1jTHNIN21ybWVyVWlOK2lYTnBLZmg4UVZlMVEvMnJWTnZWMmtUYkpmQk1FYzNQTAo2SEk4SjdpNHdYQTZRSzJ6RG5ld05ZcjExbEVQNkxVdUVpM1ZYUUlEQVFBQm8zWXdkREFPQmdOVkhROEJBZjhFCkJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUMKTUFBd0h3WURWUjBqQkJnd0ZvQVU0a3V6TG5jVjZSREVaV0MwVXNsVDQxNHI4L013RkFZRFZSMFJCQTB3QzRJSgpiRzlqWVd4b2IzTjBNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJZY0tEUlFBS2RpdmlKOWRXeEpOVE9oRVZECjlZY3FFeGVaTXNMWEdsdk9ORWorRGZ3Q3l0dUF3L2JGUGRYRW9xa0lQaFFZcnRndnZHY0paaXhnMldleDdIVEYKMHc3M1I3aURnbGJZVVFpODcxWnFuc3lwaDcrYWh2TUE5ekZpNUVjSjE1QlljRmJ4SG5hbzN5WWVHL3ZTM2tqTgp4YVhiRXhmdXM4UTVIUTVjd1pMSzlOVEFveWxFOEprK0t1UjcwVDQwc2tQMWQ2aU5TdW1OeVRJbVhKNVVhNDBFCmlISFlQMllkWVhPcGZwRklVZkkvQTlNcXhJaGthSkJKMjUybVg2SE5zZWdqS2t6S3VBUFZRSnl2MzZRdVB6REgKTnRzRy8rbitOMVBma1lFTjRLZVJMK3Vyc3ZxM3RHbnlQVGNkejRTci9PK3VCSFRCNmYxRmhmSldnN2R4Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBcWh2WlRVbFU3Nmw1STdXampodmllM0JwUXh3WVk2ZWNuQ1JsRWFVY1BrRTFEbDB1Ck5oY2E5Ukl0NFZZb1k4K1Q5MEZLd2dEYnYyNmN6L1YzQ2xhK2NOUEcxQWIza21sTkJuMFg5d210WU5ua0tURlEKTU04N21GbnJUTFpPMkRIb1RwcXI0VjRUK0F4eTBiK2xabWR2MS8zUDREU3Ftc3RuYnpETHFUR0RBUktaRXRiSQpQamxlZ004U05ZSCtlZno4Nlc5SVNNQU90ajQ4Q0RFdGhaU0FGbE1xa3hEa2x5aktHN0o3QVgrNE9lZWZmWGlLCkE3eU1aTVh6dmNQTXJiaWJtY0xzSDdtcm1lclVpTitpWE5wS2ZoOFFWZTFRLzJyVk52VjJrVGJKZkJNRWMzUEwKNkhJOEo3aTR3WEE2UUsyekRuZXdOWXIxMWxFUDZMVXVFaTNWWFFJREFRQUJBb0lCQVFDYjlIUkEreDQzcXpRNApuT3FaK3M2bFJPWDhkT0dYVzYrbEoyalJ5SUlnUVVBWEx5NlN3SlFpWXN4VmJ0d1F4ZHB1TVJvTXl5U3NXUWpEClQ5UVhVbmUra1NvVWNWN0FpSEhwcFA0M3FsT2VHNldtYm1PS25ET1M5YjFYMHp4dDBUT2QvUWZmMHBTVU1UV0QKUHlTd3dkdzBOYXBEYjRXSjdUbWpJeVZVdE9QYU1tZGFpR3lXODhCM1hNK25sTU03dkliZjJxd1c3c05icmpzWgpxSkxIa1VQVHA5Y3grbUxHbExsRTJ6OUpLaXlpbm9qaWVnNlU5OE9IcytJWVREYW1SbjJ1eEFUaEZNTWpNNktoCi9TYUVJN3orQWlRUjRDcTRMMm9MVytCVmpyVkY1bFlWQUN5dyt4RWhuZFZUZWFHU3YrTjB6QTFwbUNxS3UzU3MKWjVoOUpQK0JBb0dCQU42bUJDdFVMNXdCTjc0aHhxR3YxR3FDK0pvd3RkZ2IxT0tVM0k5NllMamdjRDdIMkxXcwp6WHRzNUJrSVFhajZYWTUzaVp6YVpMWU1wZnIvTXNrNVcxQ3UrK3BkODF1U1pLek1wS3hyS2VVVDJBdUVLaXVDCk1UV2ROWS9sdWRlYUZlVWcySWtRc2h0bzFISTc1YitYK0grTlJTdEV2U29hczJSTjZCTUNMcWFaQW9HQkFNT1gKRXFFa3UycWN4NjdjeUxxa2JUNUdmQlUyalNrVDY0S3h6NVJQektNL0NqRk52bHVxYm1WY0xqSmZETWY0eC9mVQpZSmp3cW5FUHBQTHk5cGZWN2Z4N0VsSU8xZElWVE1PbktwU1hFQll4VjFIblo5aDRvYWtIemNyUTJaZ3pjQ0NXCk1Fc1J6S0RhZ1dYS0pJWk1NWGZLMHdrOHA1b3hzbTVXSGhiZDV0TmxBb0dCQU5KeEtFK3I2clFSa3BaclprczgKM2hFdWFidVRmczBjd1VMSVlSQmNJeitiSTN5emQrbC93MWg5dTdyTlN3SmtZamxlVXZ1bWtMcGhpaUNMUlgxYwpjU3I1dWJIenl5a3FYVzNXbjI4NGV3akNrTm1SdWlvVmpGMllraC9JaXJkMk5HdTFkL1ZWaW9MTnVyK2VUYkdoCitvYlZDQ08xZlBabTlsaEFLcktNeFh0QkFvR0JBS3ZuM3c3VTJ3aVVMWWxLTWY2aFFBYnBLbXYybTFFTVdnVnYKeExObEE4WkRSUEVhbElHNnBQYmZjeGNBcFpvbzFaREVEL2E4S0FIaEx5ZjlWYkVUN096cE9xdjJzQVhLaE1LOQo3VlhXQStTTmoyTEVVV2hZZGpXN1R5dkFMazl3ZmsrVjBYSlpmWkd2R3VYZEtnY0Rkc01EK0VINUZwSVd0ZTMyCk1OSUdUTGRsQW9HQWZYeXRYVVVYcExxaHBXTncwNWppaEw5K1BQdHBVdHNLdlFmbncxcU5LbkZuK1hYczd1aXUKYmZYaUJuSm4ya1hCZHBDdG1OOGxiOC8yTlU4bmRpRmRiVW1aa0FtY2hrc0dFaVBQRTc3eHJ0dWVGV3I1L1BaZQptTTcrcnJiVWxGK0FQaFBBTWJXT2ZmRWZTWkFmSk9aZ3MrSHpjZnVQcUN0NGR0REJNd1k3YStrPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/remote-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQnBEbUovVnFhclhCR0NxMkNlMlZyakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOelF5V2hjTk1qY3dOakV4TVRreQpOelF5V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQyt1VjFWOElVT0hsV3FPVUJ4VzVxeUhaTm52dXVXeXpWYzgzYUZRQ1RTRi9MQlhjS0UKV25ndTNVdDlNTWIyVmxCVGtiOHB1QzFPMWRORXRSbWVMZi9KV1drTm1iYlVPdytHa2YvWGVEOWQ0aTgyZjBKUApnZUdacHZFNnlUTU12ZWdwQlpjTllFK0ZaZTg4YndNTnJkbVJnL1NPQnhLL1NiK2JOK2x0RUNyM0FZSVpGdmxLCjMxVS9RUVptY3hKMGZYbE4vbzNWV3ZDSG5mVEFHR1dJZ1haQldWRFpUbXBsbWJhUGJhMjIxVFpvMWIwMThTRkYKekZqSzI5YUUvSmFKUUhjbi9RR3pQTERQVHFXN2JXV3FCVHMzV2V4TzdPcVlHeGhsY0J6QTNEVDZDZ1NNejk4QwoxS3ltYnIwcVIydTcxdGNWSWRscFIzQklTbG5NVjcyenprTGJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU0a3V6TG5jVjZSREVaV0MwVXNsVDQxNHI4L013RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCYjR3Sm9xZHJLOXN6eEZWL2VMa1dGM3BOTURvQzNEL0RydUo4VlhFbWxyaUlnWmdXK2RQeEg5CjJEdWpNdEF5YjJPVmwzTVk1SXVBSnVHTzRrM1V3VVVTbTUzWG9DZEdmR1pxODFsM29YU1Y5MXV1ZDdNdEZ4SkMKSDQ0a1pWU1V4ZFI0T2xMYjVMODlLeWorL2dBNUZ0VUYrRkpCOEhpQ0tDRDBCSDQrS3N6U3cxTExVYU5FZDN5TwpUUUVJZ3h2L0hEWXoyZjREVmR5UUF4YzJSeCtpZVdxSElzRStHODNNQWVSamdXcU5SdS9nK2RYVGR1bEZJUklwCjJLcDJFQ08wdHI5T1BwYVRsKzVCR0Q2OHlRZVVkeWVCM0dkN3lhQjdaSGkxdXhCUFVnV3V5alQwMWpTTXJENzQKZU9sNmJPcU56cUxXeGl6MVhGYlRqUTg2UDJlVm8zYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQVA1bEl4U05DL0xXeThZMnhrL2llQzB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URTVNamMwTTFvWERUSTNNRFl4TVRFNQpNamMwTTFvd0VURVBNQTBHQTFVRUF4TUdjbVZ0YjNSbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBCk1JSUJDZ0tDQVFFQXZJOFhxUHB6VU5pRHdKSmI5M1VpVHNCbFpEc3BDNUpJaFBoakJiR0liZ3lVWG8yY01iQ0sKc3lOQmdkOS9WL2FVOXZPeTJrR3Y3VDNhck9hblIxajFpNTNab1g4cFlQaXk0b1c4YUMwZHRqOTBtcjh6bHV1WAo0MTVmU2hPeGVIYjRZVkRXeGJiQjNuc3FsTlVkdmR6dDVwSkJWY0FRTWZ4V20rbjBnUklyS1BYMG1uVGxWaEExCmt6dFVvVVRXMTdjSHBlSmFkcDVnRStZVFJkQU5CVUFFenVDZzYxdm42b1A3NVNwcmlsVjFWZTcxTklpanUvd2wKNEVoVlZ0NWl5RmYvNDNFNkhoWHFYNDMvMFR5bW5hYjZETzY5RjJuUUF4YXhqa0Jqd0crdngxT081OUJNaVg0Rwo3bktCdzhKeDExK3FicUJpYUQ4aGYySEZBUVJkczNyOERRSURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DCkJhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXcKSHdZRFZSMGpCQmd3Rm9BVTRrdXpMbmNWNlJERVpXQzBVc2xUNDE0cjgvTXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUZSWXhteVY3Y3BCR1Z6OTdyWE5hOVRlSWlTTm9rMzlibDB3cStzTFY0MW04UCtRd3VpTEd4dUR3RGFmCmp2UmMvWEJVRU8xWFczdVRCR3UxNGlWTzBxWm1YRFVwdit6ek9VMFpNNVlNSVUwa2l3b0VoVGJ0RWRPN25kck0KcHVsbkVoczcvd2hzMldEQ1FWQ3FCdmRkZ0VCa2c4V1lBUGQvR0pjdU51NWRPZ3FpaWN1L0pXVjNrOEsvYjNHdAoxcXRsWVE1b3lDU0VNVDJ3WnQyektadkZtbEE1L2g2Wmw5d3U4OWxFSmdHRjNvRmpNR1pVWm5LdzJCWFRRY3VGCncyTk82aktvSTVSN0wzK3V0MmNCUnNxNmRES0FIaHRoSnJtM0NqNE05azFSLzBXQ2dkQnJRcnJBcFdEWGdNd1EKOWZoc1E4bE1tK1p1T0NEakZrM1NhZVBXR25NPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdkk4WHFQcHpVTmlEd0pKYjkzVWlUc0JsWkRzcEM1SkloUGhqQmJHSWJneVVYbzJjCk1iQ0tzeU5CZ2Q5L1YvYVU5dk95MmtHdjdUM2FyT2FuUjFqMWk1M1pvWDhwWVBpeTRvVzhhQzBkdGo5MG1yOHoKbHV1WDQxNWZTaE94ZUhiNFlWRFd4YmJCM25zcWxOVWR2ZHp0NXBKQlZjQVFNZnhXbStuMGdSSXJLUFgwbW5UbApWaEExa3p0VW9VVFcxN2NIcGVKYWRwNWdFK1lUUmRBTkJVQUV6dUNnNjF2bjZvUDc1U3ByaWxWMVZlNzFOSWlqCnUvd2w0RWhWVnQ1aXlGZi80M0U2SGhYcVg0My8wVHltbmFiNkRPNjlGMm5RQXhheGprQmp3Ryt2eDFPTzU5Qk0KaVg0RzduS0J3OEp4MTErcWJxQmlhRDhoZjJIRkFRUmRzM3I4RFFJREFRQUJBb0lCQUhqY0l5YzllU0t0MVMxZQo0ckhuazVqMHUwaVdud1Y2dXg3MzhzaVlkY0ZNTU9HMlZSS0lmUzY3ZjJhV2NoSll6RHpLRWE3U0FjaklKOTFCCmJxRk54UDI3ck41V0dwaThjRFMvMGZiWVRENGZ5RWJVSFdZMEZrUTNuazVsOXhBbSthZXU0Q3NVcklsRld4TFEKMDJKNk5NYmdvaDRyb0hYWnIwMzZsSzBTanpXTjd0RDN5ekluUU8yL2ZrVTdGMkI3U0EvbHNDclY3Ui92ZzZoVwpaZTV5OXpoNVl1VmIybFF3VXZoblFmMUlxZDcveTBtcWpkdCswRTYwWVR4bWdMTk5SeTZlV2Z4NUlVbHpoWnJCCjhFWG00QTg4dlJLQXdjc1dzS1JuWjRVNW1jQ293ZjVrQVpPOXNCZzNCNEhjcVBCMDM5SHl0cTlSMWJDODZBQjYKeGNYcFBXVUNnWUVBekFjdXppWkdaakpjY1NxcWhCZnkxZ2xZeDQra2ZiN1dNT0hDQ2NBSmJhK21CVUxqcStWSQpzeURLZlVOdVNTaVkvSkd6YWprbG5wMXY5NDI5MFhYNW9JTzZ4RHd6cnhKSlRzT1d6SUZLOHlvNEdlTkVzd05GClJMV1pTWTR6ZWhHTlFOdk53ZzVCSDhkTWtTZ3JESUovT0wweDh4bEJSNCtJT3AySHhzbk9SMmNDZ1lFQTdKY28KZnZ2WndoWStqS2NjVWt6NzJWa0c4WnYva2Z5a3B5TTY2MkhIQ1orbnBsTVVOajRzQ1Jpb0RDS21qZmtmWUtBRQpzZ2xGdjhhWkc5SzRtdysvS2dVRDZJUUlNQnY2dTFheUxLQ2xWek5mSnk5T3BNTGZkam1JUmFtWWpMS0pGWjBPCityMFBXeERNeUhqTjl2Ym5xNUNkNlRrb3NBTGliWE51TjhEaFBHc0NnWUVBazV4eXdaVXhnOGpWMXM1T2xja1oKMkw3a2EyVkNWZk9XMWNEUCtPdm1KbVJaVWg4bHh2ell6emhmSjZkOGlCT0dNOTFhRi9VR2dhNVlEcHVQQkpjOQpKbU9INFdmSTROWHpFYmd5UnYwWDg3dk00UFhyZ3pSUGpqbHdrS1lBR2tYT2sya3pnVDE4NG5mM3JtR0lXOEdpCk43T3lDclp2NDAwMSsycHpqRi8vRE9zQ2dZQXBFVlFHTnRGbHoxYXNNNVhHODNZRUZHQVFNSFA4YzA1aGRNd1YKYjdPTkNCbWgxV244d0c0RVpqTkZaLzVoUm8wYnlLc0gvSFFQQmZvdHlqWWhOR3FLY0xSczkvNHoyNmQ2UFdKUQpQTkoyZ0lSVDJQSmR4elhpMzdtMzNlaU5BN0NuLzh0SjJ1ZC9kenNVMFdOdkt3eXJ5ejZkN1Q0U3oyMWVjbHIvCmNvdW1ZUUtCZ0hpZnN5cWkvQlpzQ2w5NGo0Rk10ZDdDK05haXNMN3dDY0lSOG5FQTJWRmMxY3NQeVJITElnUjgKeVhoeTV3SVorejRZVFNOdGcxeC9hb0FLQXphZ3NwNHBmci92aC81NGJQd2lhL1ZXV3BKZVhOcUxubytCYnh4TwpFd1R6NnlEWHBWL3ZhVS9ESVNTaTJRTkUzOHFsTUs5VFJ0c0tpOWJ4ckhBaXR0TFMvcDBhCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQnBEbUovVnFhclhCR0NxMkNlMlZyakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOelF5V2hjTk1qY3dOakV4TVRreQpOelF5V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQyt1VjFWOElVT0hsV3FPVUJ4VzVxeUhaTm52dXVXeXpWYzgzYUZRQ1RTRi9MQlhjS0UKV25ndTNVdDlNTWIyVmxCVGtiOHB1QzFPMWRORXRSbWVMZi9KV1drTm1iYlVPdytHa2YvWGVEOWQ0aTgyZjBKUApnZUdacHZFNnlUTU12ZWdwQlpjTllFK0ZaZTg4YndNTnJkbVJnL1NPQnhLL1NiK2JOK2x0RUNyM0FZSVpGdmxLCjMxVS9RUVptY3hKMGZYbE4vbzNWV3ZDSG5mVEFHR1dJZ1haQldWRFpUbXBsbWJhUGJhMjIxVFpvMWIwMThTRkYKekZqSzI5YUUvSmFKUUhjbi9RR3pQTERQVHFXN2JXV3FCVHMzV2V4TzdPcVlHeGhsY0J6QTNEVDZDZ1NNejk4QwoxS3ltYnIwcVIydTcxdGNWSWRscFIzQklTbG5NVjcyenprTGJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU0a3V6TG5jVjZSREVaV0MwVXNsVDQxNHI4L013RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCYjR3Sm9xZHJLOXN6eEZWL2VMa1dGM3BOTURvQzNEL0RydUo4VlhFbWxyaUlnWmdXK2RQeEg5CjJEdWpNdEF5YjJPVmwzTVk1SXVBSnVHTzRrM1V3VVVTbTUzWG9DZEdmR1pxODFsM29YU1Y5MXV1ZDdNdEZ4SkMKSDQ0a1pWU1V4ZFI0T2xMYjVMODlLeWorL2dBNUZ0VUYrRkpCOEhpQ0tDRDBCSDQrS3N6U3cxTExVYU5FZDN5TwpUUUVJZ3h2L0hEWXoyZjREVmR5UUF4YzJSeCtpZVdxSElzRStHODNNQWVSamdXcU5SdS9nK2RYVGR1bEZJUklwCjJLcDJFQ08wdHI5T1BwYVRsKzVCR0Q2OHlRZVVkeWVCM0dkN3lhQjdaSGkxdXhCUFVnV3V5alQwMWpTTXJENzQKZU9sNmJPcU56cUxXeGl6MVhGYlRqUTg2UDJlVm8zYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURwekNDQW8rZ0F3SUJBZ0lRVFN1NXExdTRpc0p6YVFUR2lsM0NVekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOelF6V2hjTk1qY3dOakV4TVRreQpOelF6V2pBcU1TZ3dKZ1lEVlFRREV4OWpiSFZ6ZEdWeWJXVnphQzFoY0dselpYSjJaWEl1WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeXY4ZGN2YWgrSWpnelV1a3hVZ0EKMldjK1hMcUxwclVYcEtTVDdPazRwbUd6VERYTVNUYmlkZFdwdXZFQnpzYldaYWVJZ0VOR1hLR0k4Q2RxZTJZMwp2TXpKZ2tPZnpNTXljSlhYcVhkNmxKanZXaVJlWmxNZ29uRU5ZTVI5VWtEcWQ1MzNLUU5OeWkrMVZ0dkV3WDFpCitwaXgwdDFwWG5ZaDBSdmltQ1RPZ0VXRnZVUlNjUFVlVVNFYTE1SmNYQUxtRHA0eVNtZFRsMk1keFRDa21NUVAKQkVhK2JXM05ZQVR5bEM4aFZUQU1BS3ZXMkRTTXUzNHBpU1liaUVHbHJOSDFSZ2hHMEJnRDk0Q29DOU5RZm1hQgpNVUVaK01wMEM4S2JOUC80RFdJK3Z2SWtkTHRMK3ppdmNDQ2FBY3hOTkp1OUpDMVdMS3BKME9wRllvbmUyREJmCmx3SURBUUFCbzRIZU1JSGJNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JUaVM3TXVkeFhwRU1SbApZTFJTeVZQalhpdno4ekI3QmdOVkhSRUVkREJ5Z2g5amJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXVZMmxzCmFYVnRMbWx2Z2hBcUxtMWxjMmd1WTJsc2FYVnRMbWx2Z2lWamJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXUKYTNWaVpTMXplWE4wWlcwdWMzWmpod1IvQUFBQmh4QUFBQUFBQUFBQUFBQUFBQUFBQUFBQk1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUJIU0VmZFR4YnVWYlQwRUlabjY0YUxMY1BhT1Y5aEFNWnd5Q0Vrd0tuekcrbGFod3pyCmorMzRNWGhNNlRaT0Zpd1R2WEZGaVdxODhDVHplVDdSazJDaGowd1hyNTMxVXNNdmQ5UnBLRkNOb3JzVWNjVnMKc3RadGFtYVluZ0JSZWFCZGgvOTE4elYvcmx2WXRPL0VoMk5kelZvMjRPWm9zUTdxQ1h5MmlxZE1MSzFsTXdLaAo5emlSR1hHRW0yM21tcHFRRHF5Z3gyNkptYjlFc2VuVjAwMHBST0pmTlVPUTRzc05uMXJvSWN6d3RpbWdSSFVuCklWQTBBVm4vS2ZtSHBhMmlMakNXUHdlSWRtWUhlK2xsZFhpWkVtdk5JYjNRWE5SZDhVNmhQSHpLaWZVcXEzTysKU20wQlpxczk0T3pISlhkeWx5Q1VxUU15VDUvdWlEZDFUYWxrCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeXY4ZGN2YWgrSWpnelV1a3hVZ0EyV2MrWExxTHByVVhwS1NUN09rNHBtR3pURFhNClNUYmlkZFdwdXZFQnpzYldaYWVJZ0VOR1hLR0k4Q2RxZTJZM3ZNekpna09mek1NeWNKWFhxWGQ2bEpqdldpUmUKWmxNZ29uRU5ZTVI5VWtEcWQ1MzNLUU5OeWkrMVZ0dkV3WDFpK3BpeDB0MXBYblloMFJ2aW1DVE9nRVdGdlVSUwpjUFVlVVNFYTE1SmNYQUxtRHA0eVNtZFRsMk1keFRDa21NUVBCRWErYlczTllBVHlsQzhoVlRBTUFLdlcyRFNNCnUzNHBpU1liaUVHbHJOSDFSZ2hHMEJnRDk0Q29DOU5RZm1hQk1VRVorTXAwQzhLYk5QLzREV0krdnZJa2RMdEwKK3ppdmNDQ2FBY3hOTkp1OUpDMVdMS3BKME9wRllvbmUyREJmbHdJREFRQUJBb0lCQUg2NDQ5bHd2WXc1WnB6QwpMQW83K011Kzk5OUxWUUtzNmlXTjJBcDlUVEFRcmExVnFFSE1VWExkL3ljRWJPeDRsRDdCWnlVcTJqSFpaWE1HCktDTUFuS3J2N0p1MU8zeklIaVRLWmVjVS95RGttQWJkelZCemRGdnoxelloYzFwMXkra0FZOXJtaFJsQ3p5RjUKOEVvWnpFQkVNajVBbWhhdUNFNVI2aEt3WjNrS3p3cUNmRldpS3FwMmkzTnVaRXpaTDEveXlYbG41ajFLbnI2Ywp3Y1F2dXJ4cGd3MERhNXN3Uys2NlEzRXJPZE9DVHJJQVltRkFZRVJZOWVzeHVmVHgza0VkeG44K1NXZlVkdzgvCmdqT1JRRXA4VEJsNUxHaHVvMUZ2WnZOcUdvQngzQWIzVG1QVTlDUFVvMEFYenZpY1RaTHhjQ2VwSGY0WEFNQkgKVmp5a1F3RUNnWUVBeTJ0OTlXdEpneEQ1aWZFc0diWmJZTXc4cHozMDNWcmVud3d4Y1E5L0dYeVhocFF4ZWh5QwpFWXhVRVJRdkJmNkNiVHV2d0pyS2l1SlFsQ2dIc0JCNmx3VGZsakJKNG9GalFyb3dGWXBLVkIwVHJicVkxa2dNCmxZd0hIRzNuSHh2UDNYQkF3cUdFakVaL0xML25WaTFEdWhlWHdpbDRIL09STGVNNWFMRDBNUjhDZ1lFQS8zZWMKRWk4SE5rRFpDWHFjazE4V1g4SWVBVStlQTk2enhuTHhZZndZTnFGalZTUmlIWndLWkxEcVJJc3pBMm5Pc1VTNAp1eGo1c1Q1MFFDcWRwTi9Zc3lLbDQ1cEUwTlFqYU9aZThQS1dNZWsvbWx4bGNMT2ZoYldyZzgxdG51dWtRSFJqCmszNGdIVE5qSEFoYm5CNlp3Qk5NWDM1N2c1L3g0TW1tbnkwdEtva0NnWUJETHd4WjJ3WmJlR2JDVFZvQVgvOE0KR0VoTUFDVjRXa08raWR0bWVQVEVhU2J1ZHRGa2dEZmhMZFN5RTFWNGlGZHhWazQwc2FzRmRidWhReHRPNWhKbgpBR0FNRFlUSmYyeFdKSUl2Q3c2RGUxcjlmT3h2a1RvK3hoR3ZMUWt4ZUJFT0ZMMyt5ak9wMUxxNS8rT2F6YlpaCnB1TWphR2paUEt1TldVZWpzUlhsaHdLQmdCek5nb1kyVVN6WHdPQ2x0MU9TUy9aOTcxNGNlT2RjeTQ0YlZZWEQKbzRNOVRQTERpR0JvUUcrNzFwM2x4OW1ocTFFbk8yQzAzeW9SclkreWZsV2hlMUF2SHQ3N2ZMakN3ajlJZ2ZuTwprQXFPanNJN21xQkxVRGdHRkpGbXJ1NVZDUTdQVUk3SGtKMWFOdGxwUTlMbFRGWndscExKc3VsVE5qVXU1eDlaCk81ZHBBb0dCQUp6QWJXS1VXaC8wdUlZYy94ODFJQjZoQngwMXkxTEFLUmJ5R2NsUDNMKzg4UExIWmRqQUZoU0UKNmlOUFBNL0FLMm9UUTdXWVh4VTQ5RkE0UHQvN2pDSnp5M3BHMm85QnVkQzFSRzZEUmo3dDlRQk9OVnhOTFdJbwpidTBrcExNWTgxc0FodUlIeEdRVkdZbXhybFFGSlVUamNIZUlJazRJeGNhU1djZWVmMVU1Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQnBEbUovVnFhclhCR0NxMkNlMlZyakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOelF5V2hjTk1qY3dOakV4TVRreQpOelF5V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQyt1VjFWOElVT0hsV3FPVUJ4VzVxeUhaTm52dXVXeXpWYzgzYUZRQ1RTRi9MQlhjS0UKV25ndTNVdDlNTWIyVmxCVGtiOHB1QzFPMWRORXRSbWVMZi9KV1drTm1iYlVPdytHa2YvWGVEOWQ0aTgyZjBKUApnZUdacHZFNnlUTU12ZWdwQlpjTllFK0ZaZTg4YndNTnJkbVJnL1NPQnhLL1NiK2JOK2x0RUNyM0FZSVpGdmxLCjMxVS9RUVptY3hKMGZYbE4vbzNWV3ZDSG5mVEFHR1dJZ1haQldWRFpUbXBsbWJhUGJhMjIxVFpvMWIwMThTRkYKekZqSzI5YUUvSmFKUUhjbi9RR3pQTERQVHFXN2JXV3FCVHMzV2V4TzdPcVlHeGhsY0J6QTNEVDZDZ1NNejk4QwoxS3ltYnIwcVIydTcxdGNWSWRscFIzQklTbG5NVjcyenprTGJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU0a3V6TG5jVjZSREVaV0MwVXNsVDQxNHI4L013RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCYjR3Sm9xZHJLOXN6eEZWL2VMa1dGM3BOTURvQzNEL0RydUo4VlhFbWxyaUlnWmdXK2RQeEg5CjJEdWpNdEF5YjJPVmwzTVk1SXVBSnVHTzRrM1V3VVVTbTUzWG9DZEdmR1pxODFsM29YU1Y5MXV1ZDdNdEZ4SkMKSDQ0a1pWU1V4ZFI0T2xMYjVMODlLeWorL2dBNUZ0VUYrRkpCOEhpQ0tDRDBCSDQrS3N6U3cxTExVYU5FZDN5TwpUUUVJZ3h2L0hEWXoyZjREVmR5UUF4YzJSeCtpZVdxSElzRStHODNNQWVSamdXcU5SdS9nK2RYVGR1bEZJUklwCjJLcDJFQ08wdHI5T1BwYVRsKzVCR0Q2OHlRZVVkeWVCM0dkN3lhQjdaSGkxdXhCUFVnV3V5alQwMWpTTXJENzQKZU9sNmJPcU56cUxXeGl6MVhGYlRqUTg2UDJlVm8zYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRUWQ5TDU4UXVIQjN1UHlUVGJpRHR1REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOelF5V2hjTk1qY3dOakV4TVRreQpOelF5V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEV2hWN2dtYThHdStldUhpSW5WN2x1emZjaWliWSsKUGRFemNlSnRSai8yR0NtaENGb0dFZ2hzS2RyYWxFZ0Fzc1M0WVVLSW1EOVFVZjFaMHZFVU5pZUpvbHZNbFNucgozM0FiUnhZRUlwNkZJR3BISElicUJhVmFDbUJ3bXFxTi9KZWdBTUtCbzlZMmJHaVdZcVdhak02a3JnUDIrc1FPCmNuUi81RWRCY0tPa1Myems2aUNDQWk4MlJmLzdRK0l3Uk9MWnR2akg0U3VpWG03bENGVEJBcTNjUFJaQzB1dU0KZG5LRU5VdlFPZ2EzcGIvQi9OTTBQMzZNQ0RFSmVRTDNuVVNHMkFSOG5sVGloT21CeFVkWnpvTW1zbjBtVk8yegozd2krZ0s2SlhKY0dXb0hZblVhWSt0TGhES3RuVGp0eVZpRHlRb0RwTXUxeGJ0UVA2aHN4cGhRWkFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZPSkxzeTUzRmVrUXhHVmd0RkxKVStOZQpLL1B6TUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFJYkhkc2FpYllVa2RGWkdjaEJTZ3o5RGhCajBOOStUOVNkeGQ5ZlZ5VWlMa2J2NVkKOG5iOFhvaEhEcEt6dDFya281WG1qa0xmUkpibjc4NXVpMWxJWWIvaG1XazdMcUUxOFZxTDlVcnNKVUdHZGlsRQozbWw1ZXVFb0IzdmRxY3BwV2pTak1oY3BOcnFhTjdvRm9Qb3ZOc1FKcHZMSXpJNC9QYVlGQ05nOVRVODF3SDFRCm5jOTBUWm9leG5LSktRSXRvd000UDE1RE50VHNPNDE3a1ZHSlJ0Q1dlcU1EdHY3UnAzM1hvemVYRVZJbGRmTkoKUEFvMmU5WDc1blEvTFFsdXk2S1ovenNRS1VsMGRDbkJ3dVFWckl5NGVMQXpBcG1FVGhOYkRhdDA4V2FhVjhFUwp5Q1JjUEhJMXY1SzgyY2J2b0c3S1lWLyswTmlFZE9nZzBsbkJsQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBMW9WZTRKbXZCcnZucmg0aUoxZTViczMzSW9tMlBqM1JNM0hpYlVZLzloZ3BvUWhhCkJoSUliQ25hMnBSSUFMTEV1R0ZDaUpnL1VGSDlXZEx4RkRZbmlhSmJ6SlVwNjk5d0cwY1dCQ0tlaFNCcVJ4eUcKNmdXbFdncGdjSnFxamZ5WG9BRENnYVBXTm14b2xtS2xtb3pPcEs0RDl2ckVEbkowZitSSFFYQ2pwRXRzNU9vZwpnZ0l2TmtYLyswUGlNRVRpMmJiNHgrRXJvbDV1NVFoVXdRS3QzRDBXUXRMcmpIWnloRFZMMERvR3Q2Vy93ZnpUCk5EOStqQWd4Q1hrQzk1MUVodGdFZko1VTRvVHBnY1ZIV2M2REpySjlKbFR0czk4SXZvQ3VpVnlYQmxxQjJKMUcKbVByUzRReXJaMDQ3Y2xZZzhrS0E2VEx0Y1c3VUQrb2JNYVlVR1FJREFRQUJBb0lCQVFDWSt1TitLQnE1SXFkRgpkQmZIRnJnV1hLc3c1aVFnbnRUaGF3V2VCOHIxSktZTFFIbHllc21tMlBKSmpoVUs2bkYvUzF5M0xGdDZXLzNnCllKMnJYRE0xNDZLemNteEMyVVNKTDFoeitud3hVN3gybWRGY2NrcEl1NzJxajZHeFA4Q2hTZWxycWZySk5PWWcKMkpoZ2JxbXVwcW9OSnlkSlpqWE9QbXpTTGhHRXh6YlB0ZmI4cDU0dWVZSm9QdGp5U0tadExuS25pb0o4VlNqbApXSmZ4VEJzSTVBdzVnZEpNR056R0tMNnFxTmRDVWJnVjlOSHV5dWxHUlJhMFpxcmxxYVRja3ZMb3N4RVp4aTJpCnc1M3hNcWplTXJXMFFVN01xVVFXQThMOFNPWUtLTVpEU1UwOVV3dElTRTBIYk5jOFk4WHdmakRhdjBxTDRnSnEKRmdqd2dtQUJBb0dCQU95Z1NwMmNSVkFaSE1lbHFjNjRiSDBiUC9xMWFQbVhURktVRUdjQVZ6WmdENFdYSjJsagovTnFHdW5WVEtPV3pGcXQ0Vys2TlhYNG9wZFNMRG5zMW81TEJqbWUvSDY2RTE4S2pOTUsvN2tYZkcrYmROajdmClFBRlJpTHNTeUdMVk80OWMwOEpJcHpYcnZvUUVhNGhGV1dGQk9UK09qMHRzV1RGUVN5ZmwxRC9aQW9HQkFPZ1YKd0xET202OE5tenlJRTRwTnJsNmM5WXdiRXVvNlJIbkZuRnZHbTNMUURqL0toOFlYYVZUY3dtb094ZXdiNlBFdwpaNTdJTkNvdnhjTlZKc21ZcStZbFl4NWlxbXF6RmpGc3pLTFBtTUd6YVVGU3VOTzlGdFNaQWxTK3BINE9nbFI4Cjdjd2tyZ0wvaWlpeno5MUgxVFc0alBrQVI4R0NiaW1tVlgyTzVBNUJBb0dCQU9qSDU1K1ZsRHB2K2ZnTjZUY00KQnU0c1dJeHkyb3B2WlEzM3l3c0pNc0t6VFpIR1dXYzhqZ3NNYjNIc0ZWZWpEckl3L1g5NFlua3gwN0Y3K3dzSwpnWmhtQVluZVkzUjBDeTNYRUpobDZDbWtpdlphdUhxeGRXM1dvQVFwUGlpOFRKT0VabTNDdTN3NEpud0pQU0FaCjJRdnI5ajJvS1IreHZ5emNLSk5mYmFaQkFvR0JBTEViU0h5a2JqSGNGRWJSSVBnOTUzN1VFSjNtV3p6YlVqNEwKQ3hNT01Mb2hBMzZ5czRIN2c2bjYvWEdwN0dnTnRHbTZJcGtNOXFIcTZ1UHhLelJVaVhtTHRtUU5yemJWaTI0VQpOT1ZadnB5eXFQUHNpSmNzaVN1YnlDZWJoRE9lSnQ4S3B2MU9VR3lCVFpGYUJwbzZvdjNuNDh4dzVsRkprMys5Ckt5Z3h6dDhCQW9HQkFLUWRORkJoSzVUaktCRGpiSFI4VmdOWWRqQk1DbTFZREdSNmNTZ2ZSOUpRRFZxMnVlTTEKZnBoTnc4VC8yeUJoMDlYVG00MW5laS9Va2NKcmRNNVVjdEhTeDdTZExZNWllVGQvanB1SDFGUHErRlZzYjJ0MApNMnc0WmR2T21DaXFNMHNXdFhhTC96TFdraFpiMFRoWVpselZEMExHM1BwaWt1eGhjaWdNQVJoaAotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQnBEbUovVnFhclhCR0NxMkNlMlZyakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOelF5V2hjTk1qY3dOakV4TVRreQpOelF5V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQyt1VjFWOElVT0hsV3FPVUJ4VzVxeUhaTm52dXVXeXpWYzgzYUZRQ1RTRi9MQlhjS0UKV25ndTNVdDlNTWIyVmxCVGtiOHB1QzFPMWRORXRSbWVMZi9KV1drTm1iYlVPdytHa2YvWGVEOWQ0aTgyZjBKUApnZUdacHZFNnlUTU12ZWdwQlpjTllFK0ZaZTg4YndNTnJkbVJnL1NPQnhLL1NiK2JOK2x0RUNyM0FZSVpGdmxLCjMxVS9RUVptY3hKMGZYbE4vbzNWV3ZDSG5mVEFHR1dJZ1haQldWRFpUbXBsbWJhUGJhMjIxVFpvMWIwMThTRkYKekZqSzI5YUUvSmFKUUhjbi9RR3pQTERQVHFXN2JXV3FCVHMzV2V4TzdPcVlHeGhsY0J6QTNEVDZDZ1NNejk4QwoxS3ltYnIwcVIydTcxdGNWSWRscFIzQklTbG5NVjcyenprTGJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU0a3V6TG5jVjZSREVaV0MwVXNsVDQxNHI4L013RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCYjR3Sm9xZHJLOXN6eEZWL2VMa1dGM3BOTURvQzNEL0RydUo4VlhFbWxyaUlnWmdXK2RQeEg5CjJEdWpNdEF5YjJPVmwzTVk1SXVBSnVHTzRrM1V3VVVTbTUzWG9DZEdmR1pxODFsM29YU1Y5MXV1ZDdNdEZ4SkMKSDQ0a1pWU1V4ZFI0T2xMYjVMODlLeWorL2dBNUZ0VUYrRkpCOEhpQ0tDRDBCSDQrS3N6U3cxTExVYU5FZDN5TwpUUUVJZ3h2L0hEWXoyZjREVmR5UUF4YzJSeCtpZVdxSElzRStHODNNQWVSamdXcU5SdS9nK2RYVGR1bEZJUklwCjJLcDJFQ08wdHI5T1BwYVRsKzVCR0Q2OHlRZVVkeWVCM0dkN3lhQjdaSGkxdXhCUFVnV3V5alQwMWpTTXJENzQKZU9sNmJPcU56cUxXeGl6MVhGYlRqUTg2UDJlVm8zYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUakNDQWphZ0F3SUJBZ0lRSnZlUkFzQXp2Nm5aYlFyT2NDdVpCakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpFeE1Ua3lOelF5V2hjTk1qY3dOakV4TVRreQpOelF5V2pBbU1TUXdJZ1lEVlFRRERCc3FMbU15TUM1b2RXSmliR1V0WjNKd1l5NWphV3hwZFcwdWFXOHdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3E3ZjFBd1BzMWxKcHh5NTFlYWtsZ0paSisKTExhWlZtVHVJUjhXOE83bEpVYy9zWTNlTCt5V0h0WjdpWHRQMWRsdU1rb2dWZkVwNHNGUXhrWk9EUkxHM2ZzUwphOVI4TElkNENmT3A0T0dVUk5XNUNJeVY1TzhtclpqczE4SzBYemJKMUhqZit4THQyY3NOVWNSV2dLY2xleGIwCmU5TktMQlNuV01kV1ZUZjl4RGd2eUFZOTU3OGxlcTZNek51SjhvbmxST0dTbk9mYmdQMkJrMXFRdmVjVXlnb1kKMmpyT1FtVmV4UEI2ZFdzWllSZithUjE0YUM5NnR6QUd3S0tFT2lMVWdjM2VoUmluUDdPNGY0WDhOUW5TNUc3MgpIbVluN1VwWFJuQWpzNHZEbFJpcGlQYUxqdlVkbExRb08wR2E4a25CTGlIc1pqTXdDamU4VjdydXR5SXJBZ01CCkFBR2pnWWt3Z1lZd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGT0pMc3k1M0Zla1F4R1ZndEZMSgpVK05lSy9Qek1DWUdBMVVkRVFRZk1CMkNHeW91WXpJd0xtaDFZbUpzWlMxbmNuQmpMbU5wYkdsMWJTNXBiekFOCkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQU1nb2lCdEZ5aXUraVIwbktUVW5RbVNjbFBaQm50Q2lKWStJUktCeUMKWlBWYlRpYmU5cktmUVFVZ3Zrd1JDZHlSejVZVmxVNlQvTXAreXdRSlBPUjkrajFqYTNiMkZFNE5yWGFOTVV1cwpMUDVHZUVwWDN6amFoS0JMOUE4RzluTzlVakF3bFBLUGN4SFJvNUlwRnAwZm16VG1OUDlScFZQbnFvdVliN1JqClhUdnpKbVZ1OHg0ZTJBdjF6T1RFREhIVERNUkNpVzVVTk81UmFaakRFbU9VbDd6UnlTNGVKcy9xakpyWnBBbjgKR2JWYm96clllS2phc05rWlFkSXljblYwMThIc3Q3djJIcnFsQW1wT05XSjVuRWtBeHdYUkhIaU9aVDRVd2cxZAo5ZEVncnZoYnFCdVIreVc5L2VudXlpekdPR2ZPVm1lanBIYzk5N0h6N1hJY0RRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcXUzOVFNRDdOWlNhY2N1ZFhtcEpZQ1dTZml5Mm1WWms3aUVmRnZEdTVTVkhQN0dOCjNpL3NsaDdXZTRsN1Q5WFpiakpLSUZYeEtlTEJVTVpHVGcwU3h0MzdFbXZVZkN5SGVBbnpxZURobEVUVnVRaU0KbGVUdkpxMlk3TmZDdEY4MnlkUjQzL3NTN2RuTERWSEVWb0NuSlhzVzlIdlRTaXdVcDFqSFZsVTMvY1E0TDhnRwpQZWUvSlhxdWpNemJpZktKNVVUaGtwem4yNEQ5Z1pOYWtMM25GTW9LR05vNnprSmxYc1R3ZW5WckdXRVgvbWtkCmVHZ3ZlcmN3QnNDaWhEb2kxSUhOM29VWXB6K3p1SCtGL0RVSjB1UnU5aDVtSisxS1YwWndJN09MdzVVWXFZajIKaTQ3MUhaUzBLRHRCbXZKSndTNGg3R1l6TUFvM3ZGZTY3cmNpS3dJREFRQUJBb0lCQUg0bk1kL0Z6bUlJTUVqRwpYM29jZGRVNVJicEw0K1NkNTlYOHFnWnpnYzJyU3IrT21zY2VsYjFpT3lob0dwT2NvR0g5U2NvOXc4VUhMMmdmClBpcEM2ZFhPWll4OSt4QStpU2ttSnlqODZXQlZ3V3RVRFBaZ1JjVkZJSFhFOUZYTlpCRm4rR0pPMnZTaTVvTUoKRXlCSXlaUVhHYVVOY3E3dWc3dlRBU1FOdDBwWmY5cno4R1FnWU5EV0ZFZVNFbmtzZXM4OW1oY2g1eUoxRDVsOAo5SDE3cGxPSkRMSXdzcFVXNXMrdkY4SkE4THA0K0hLaWFvZHJpRkVQN21HbEJCOUtSMm5Pa1BYRVR1ZXRlYktZCmdtTDRoSFlndXJEMjVpZVdQSU8vZW1DUExaK3NHdXN4YUVnWldOR0prRjBJOGgxS0hTUm5kZUp5MWJWNkY3UjQKZUJwNDV4RUNnWUVBMGVUMGt1YU1UMUhHV0REN0Y1cXFtUFlOZElORVFwUVRReDZzaGVpTTdPTHN6N1MveTJLVQpIZmNJWmpKVG9UK3ZYWXlEQ3Q1aXV2dkdBZVNKZ3h4U2U2dUc2d0pGZTlEckdIa1JZQlBaY2ovTGluSnl1MW9lCkhnTXZNY0xNMG5UNUJ0T0VWbER0YnVwWWhTSjAzRU54djlDTUlSRXROYkRwU2c3ZlRrejdnVk1DZ1lFQTBIbnIKeU1rT0ZjbVBHbHVZWWR4VUM2YzM3VlFoS1ZGcmpCVlhIcDAyc0dpMXVsUXlZQVVvMzMzWmc5cks5Um1GRmRNVgpRQjB0bEh0QjBtaTNjRmJqRE1paC8xYWJsYTZBVm12ODZ0UWVoSmpZRXhZQStvNW11NXNVd3NDd254Zm9BcjYrCm5MME41dlNqRHEvRjdJMUNJQ3RDOWphYlg5ZklFRjR3NFc5OENNa0NnWUIrZGhJZGlDYTFpN0dUWlQrRHd6NVMKRnIyWW01WSsvdlIwRmtFZ0ZUTURidDM3YncyM3Z0YzdEcUhTNFRPZURiN2RBRkhiOUkxTDEzSS9wYkJzZkYzKwpBU1N5NTVWeHVqaExjSFpWaXVBU2cvbGdtd0FoZlhSejVMdEVvZmZDUFpQazF2LysrWmQwb21GZkpabC9OR3VPCmhGcEplZzNoTVl2OWdPUnVTdGVsM1FLQmdELzRpWDl0SW1OUkhCWk1jTy9tZWV1eGZoblhMTzNPekIrS0ZOZVMKQ2t3TGRXZ2RtZStZNWJmZW1EWTdsdmVxd3dtMVlkbndtaUhyeUlEV0hTUGRwWUl3dG5UeGtJQlhzWTNUU1NLTgp3R2VUdHduMFFJeWgwYWhUcUFVeXQzKzZDRGwvYW1JU0tRZnJuWFZPUG4rZHdPSzZJNndGaVp2WlRNeW8rbnJTCmlNN3hBb0dCQUpFbnNZUGcwMGtwb3U4bzRBQzZvU1U1dXFnS1ZVOHJ0UFVkL1ZCcWtNSUFkTndPSC90U00yL1AKM2pEalpOeUxUdXJTSWJsMnBrQUJEQnRIL09QYXNlYWZYUDQ1K3NucGNHK2I4bUROWHltNW5ZaHlOd2hueGhZZAp4US9Ic2NLUVpXbmlxUEd1RU9uOTViWC9XUmtRTjdjWlJSR0tWeEdQVy9VWTAwdGROVXZ3Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  policy-cidr-match-mode: ""
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":9963"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: c20
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "120"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"
  service-no-backend-response: "reject"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-masquerade-to-route-source: "false"
  enable-wireguard: "true"
  wireguard-persistent-keepalive: "0s"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "false"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  enable-health-check-loadbalancer-ip: "false"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  bpf-lb-acceleration: "disabled"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  hubble-export-file-max-size-mb: "10"
  hubble-export-file-max-backups: "5"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  ipam-cilium-node-update-rate: "15s"
  cluster-pool-ipv4-cidr: "10.20.0.0/17"
  cluster-pool-ipv4-mask-size: "24"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "true"
  bgp-secrets-namespace: "kube-system"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"

  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  # default DNS proxy to transparent mode in non-chaining modes
  dnsproxy-enable-transparent-mode: "true"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-xff-num-trusted-hops-ingress: "0"
  proxy-xff-num-trusted-hops-egress: "0"
  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"
  proxy-idle-timeout-seconds: "60"

  external-envoy-proxy: "false"
  max-connected-clusters: "255"

# Extra config allows adding arbitrary properties to the cilium config.
# By putting it at the end of the ConfigMap, it's also possible to override existing properties.
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: c20
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n            return 200 'ok';\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/clustermesh-apiserver/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumexternalworkloads/status
  - ciliumnodes
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumendpoints/status
  verbs:
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumexternalworkloads
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-bgp-control-plane-secrets
  namespace: "kube-system"
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-bgp-control-plane-secrets
  namespace: "kube-system"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-bgp-control-plane-secrets
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver-metrics
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/component: metrics
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: etcd-metrics
    port: 9963
    protocol: TCP
    targetPort: etcd-metrics
  selector:
    k8s-app: clustermesh-apiserver
---
# Source: cilium/templates/clustermesh-apiserver/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  type: NodePort
  selector:
    k8s-app: clustermesh-apiserver
  ports:
  - port: 2379
    nodePort: 32379
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
              divisor: '1'
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                    set -o errexit
                    set -o pipefail
                    set -o nounset
                    
                    # When running in AWS ENI mode, it's likely that 'aws-node' has
                    # had a chance to install SNAT iptables rules. These can result
                    # in dropped traffic, so we should attempt to remove them.
                    # We do it using a 'postStart' hook since this may need to run
                    # for nodes which might have already been init'ed but may still
                    # have dangling rules. This is safe because there are no
                    # dependencies on anything that is part of the startup script
                    # itself, and can be safely run multiple times per node (e.g. in
                    # case of a restart).
                    if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                    then
                        echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                        iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                    fi
                    echo 'Done!'
                    
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: write-cni-conf-when-ready
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.15.6@sha256:5789f0935eef96ad571e4f5565a8800d3a8fbb05265cf6909300cd82fd513c3d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        ports:
        - name: prometheus
          containerPort: 9963
          hostPort: 9963
          protocol: TCP
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/clustermesh-apiserver/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: clustermesh-apiserver
        k8s-app: clustermesh-apiserver
    spec:
      initContainers:
      - name: etcd-init
        image: "quay.io/cilium/clustermesh-apiserver:v1.15.6@sha256:6365c2fe8a038fc7adcdeb7ffb8d7a8a2cd3ee524687f35fff9df76fafeeb029"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - etcdinit
        # These need to match the equivalent arguments to etcd in the main container.
        - --etcd-cluster-name=clustermesh-apiserver
        - --etcd-initial-cluster-token=$(INITIAL_CLUSTER_TOKEN)
        - --etcd-data-dir=/var/run/etcd
        env:
          # The Cilium cluster name (specified via the `CILIUM_CLUSTER_NAME` environment variable) and the etcd cluster
          # name (specified via the `--etcd-cluster-name` argument) are very different concepts. The Cilium cluster name
          # is the name of the overall Cilium cluster, and is used to set the admin account username. The etcd cluster
          # name is a concept that's only relevant for etcd itself. The etcd cluster name must be the same for both this
          # command and the actual invocation of etcd in the main containers of this Pod, but it's otherwise not
          # relevant to Cilium.
        - name: CILIUM_CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: INITIAL_CLUSTER_TOKEN
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      containers:
      - name: etcd
        # The clustermesh-apiserver container image includes an etcd binary.
        image: "quay.io/cilium/clustermesh-apiserver:v1.15.6@sha256:6365c2fe8a038fc7adcdeb7ffb8d7a8a2cd3ee524687f35fff9df76fafeeb029"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/etcd
        args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        # Surrounding the IPv4 address with brackets works in this case, since etcd
        # uses net.SplitHostPort() internally and it accepts the that format.
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=$(INITIAL_CLUSTER_TOKEN)
        - --auto-compaction-retention=1
        - --listen-metrics-urls=http://[$(HOSTNAME_IP)]:9963
        - --metrics=basic
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: INITIAL_CLUSTER_TOKEN
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        ports:
        - name: etcd
          containerPort: 2379
          protocol: TCP
        - name: etcd-metrics
          containerPort: 9963
          protocol: TCP
        volumeMounts:
        - name: etcd-server-secrets
          mountPath: /var/lib/etcd-secrets
          readOnly: true
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      - name: apiserver
        image: "quay.io/cilium/clustermesh-apiserver:v1.15.6@sha256:6365c2fe8a038fc7adcdeb7ffb8d7a8a2cd3ee524687f35fff9df76fafeeb029"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - clustermesh
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt
        - etcd.config=/var/lib/cilium/etcd-config.yaml
        - --max-connected-clusters=255
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        - --controller-group-metrics=all
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: identity-allocation-mode
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: enable-k8s-endpoint-slice
              optional: true
        ports:
        - name: apiserv-metrics
          containerPort: 9962
          protocol: TCP
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: etcd-server-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-server-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-admin-client
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-admin-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-data-dir
        emptyDir: {}
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "clustermesh-apiserver"
      serviceAccountName: "clustermesh-apiserver"
      terminationGracePeriodSeconds: 30
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: clustermesh-apiserver
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.15.6@sha256:a0863dd70d081b273b87b9b7ce7e2d3f99171c2f5e202cd57bc6691e51283e0c"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          livenessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          startupProbe:
            # give the relay one minute to start up
            grpc:
              port: 4222
            timeoutSeconds: 3
            failureThreshold: 20
            periodSeconds: 3
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.13.0@sha256:7d663dc16538dd6e29061abd1047013a645e6e69c115e008bee9ea9fef9a6666"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        readinessProbe:
          httpGet:
            path: /
            port: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.13.0@sha256:1e7657d997c5a48253bb8dc91ecee75b63018d16ff5e5797e5af367336bc8803"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
